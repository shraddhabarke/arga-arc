{
  "exceljet2modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0\n              (+ (str.indexof _arg_0 \".\" 0) 1)\n              (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))\n)",
      "(define-fun f ((x String)) String\n    (str.substr x (+ (str.indexof x \".\" (+ 1 (str.indexof x \".\"))) 1) (str.len x)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \".\" 0) 1) (str.len s)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0))\n)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0\n              (+ (str.indexof _arg_0 \".\" 0) 1)\n              (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \".\" (+ 1 (str.indexof s \".\"))) 1) (str.len s)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \".\" (+ 1 (str.indexof x \".\"))) 1) (str.len x)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \".\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \".\" (+ 1 (str.indexof s \".\"))) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ]
    ],
    "all_constants": [
      ".",
      1,
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))",
      0
    ],
    "time_diff_ms": 1049.252
  },
  "31753108modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 11 (- (str.indexof _arg_0 \" \") 11))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 11 8))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 11 (- (str.indexof _arg_0 \" \" 0) 11))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 12 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 11 (- (str.indexof _arg_0 \" \") 11)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 11 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 11 (- (str.indexof _arg_0 \" \" 0) 11)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 12 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))"
    ],
    "constants": [
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        11
      ],
      [
        1,
        " "
      ],
      [
        8,
        11
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        11
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        12
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      8,
      11,
      12,
      " "
    ],
    "time_diff_ms": 2450.65
  },
  "find-nth-occurrence-of-charactermodified.sl": {
    "completions": [
      "(ite (str.contains _arg_0 \",\")\n     (str.indexof _arg_0 \", \" _arg_1)\n     -1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(ite (= (str.at _arg_0 0) \"_\")\n     (str.to.int (str.at (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \"_\") 1))))) -1)",
      "(+ (str.indexof _arg_0 \", \" 0) 11 (_arg_1))",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(str.indexof _arg_0 \", \" _arg_1))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(str.indexof _arg_0 \", \" (+ (int.to.str _arg_1) 1))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" (- _arg_1 1))",
      "(str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(ite (= (_arg_1 1) 1) (str.indexof _arg_0 \",\" 0) (ite (= (_arg_1 2) 1) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1))))))",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" _arg_1))))",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" 0) 0) 0) 1)",
      "(ite\n  (= _arg_1 1)\n  (str.indexof _arg_0 \",\" 0)\n  (ite\n    (= _arg_1 2)\n    (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1))\n    (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)\n  )\n)",
      "(ite (= (str.indexof _arg_0 \", \" _arg_1) -1) -1 (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" -1) -1)) -1))",
      "(str.indexof _arg_0 \", \" (_arg_1 - 1))",
      "(str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1)))))",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(str.indexof _arg_0 \", \" (+ 1 (* 2 _arg_1)))",
      "(str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" 0) 1)) 1))",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(ite (= (str.indexof _arg_0 \",\" _arg_1) -1) -1 (str.indexof _arg_0 \",\" _arg_1))",
      "(+ (str.indexof _arg_0 \", \" 0) 1)",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" -1) 1)) 1))",
      "(str.indexof _arg_0 \",\" _arg_1)",
      "(str.indexof _arg_0 \",\" _arg_1)",
      "(ite (= _arg_1 1) 12 (ite (= _arg_1 2) 18 33))",
      "(ite (= (str.indexof _arg_0 \", \" _arg_1) -1) -1 (+ (str.indexof _arg_0 \", \" _arg_1) 2))",
      "(str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" -1) 1)) (- _arg_1 1)))",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(str.indexof _arg_0 \",\" (+ 1 _arg_1))",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(str.indexof _arg_0 \",\" (+ 1 _arg_1))",
      "(str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" -1) 1)) _arg_1))",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(ite (= (_arg_1 Int) 1) (str.indexof _arg_0 \",\" 0) (ite (= (_arg_1 Int) 2) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1))))",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", _\" _arg_1))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(str.indexof _arg_0 \", \" _arg_1))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (str.contains _arg_0 \",\") (str.indexof _arg_0 \", \" _arg_1) -1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (str.at _arg_0 0) \"_\") (str.to.int (str.at (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \"_\") 1))))) -1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 11 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ (int.to.str _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) (str.indexof _arg_0 \",\" 0) (ite (= (_arg_1 2) 1) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" _arg_1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" 0) 0) 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (str.indexof _arg_0 \", \" _arg_1) -1) -1 (+ (str.indexof _arg_0 \", \" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" -1) -1)) -1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (_arg_1 - 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* 2 _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" 0) 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (str.indexof _arg_0 \",\" _arg_1) -1) -1 (str.indexof _arg_0 \",\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" -1) 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= _arg_1 1) 12 (ite (= _arg_1 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (str.indexof _arg_0 \", \" _arg_1) -1) -1 (+ (str.indexof _arg_0 \", \" _arg_1) 2)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" -1) 1)) (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" -1) 1)) _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 Int) 1) (str.indexof _arg_0 \",\" 0) (ite (= (_arg_1 Int) 2) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", _\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))"
    ],
    "constants": [
      [
        ",",
        -1,
        ", "
      ],
      [
        ", "
      ],
      [
        0,
        1,
        2,
        ",",
        "_",
        -1
      ],
      [
        0,
        11,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        1,
        ","
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        ", "
      ],
      [
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        1,
        -1,
        ", "
      ],
      [
        -1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        ","
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        2,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        ","
      ],
      [
        ",",
        -1
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        ", "
      ],
      [
        1,
        -1,
        ", "
      ],
      [
        ","
      ],
      [
        ","
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        2,
        -1,
        ", "
      ],
      [
        1,
        ",",
        -1
      ],
      [
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        ","
      ],
      [
        1,
        ",",
        -1
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ", "
      ],
      [
        ", "
      ],
      [
        ", _"
      ],
      [
        ", "
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        ", "
      ]
    ],
    "all_constants": [
      0,
      ",",
      1,
      2,
      33,
      11,
      12,
      18,
      ", ",
      ", _",
      "_",
      -1
    ],
    "time_diff_ms": 1765.326
  },
  "clean-and-reformat-telephone-numbersmodified.sl": {
    "completions": [
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(define-fun f ((phone String)) String\n  (str.replace (str.replace (str.replace phone \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\"<\\\" \\\"\\\") \\\".\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\"<\\\" \\\"\\\") \\\".\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\" \">\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\"<\\\" \\\"\\\") \\\".\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\"<\\\" \\\"\\\") \\\".\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace phone \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\"<\\\" \\\"\\\") \\\".\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\"<\\\" \\\"\\\") \\\".\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\" \">\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\"<\\\" \\\"\\\") \\\".\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\"<\\\" \\\"\\\") \\\".\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))"
    ],
    "constants": [
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "<",
        "-",
        ".",
        ">"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ]
    ],
    "all_constants": [
      "",
      ".",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")",
      "-",
      ">",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\")",
      "<"
    ],
    "time_diff_ms": 501.62500000000006
  },
  "17212077modified.sl": {
    "completions": [
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 5)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 6))",
      "(str.replace _arg_0 \"/[0-9]+/20[0-9][0-9]\" \"/\")",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 5)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 6)",
      "\"(str.substr _arg_0 0 6)\"",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.++ (str.substr _arg_0 0 3) (str.at _arg_0 3) (str.substr _arg_0 3 4))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 5))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/[0-9]+/20[0-9][0-9]\" \"/\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 5))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 6)\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 3) (str.at _arg_0 3) (str.substr _arg_0 3 4)))"
    ],
    "constants": [
      [
        0,
        6
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        6
      ],
      [
        0,
        5
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        6
      ],
      [
        "/",
        "/[0-9]+/20[0-9][0-9]"
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        5
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        6
      ],
      [
        "(str.substr _arg_0 0 6)"
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        3,
        4
      ]
    ],
    "all_constants": [
      0,
      "/",
      3,
      4,
      5,
      6,
      "/[0-9]+/20[0-9][0-9]",
      "(str.substr _arg_0 0 6)"
    ],
    "time_diff_ms": 1672.7999999999997
  },
  "11604909modified.sl": {
    "completions": [
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 1)\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\"",
      "(ite (str.contains _arg_0 \"AIX\") (str.substr _arg_0 4 3)\n     (ite (str.contains _arg_0 \"VMware ESX Server\") (str.substr _arg_0 18 3)\n          (ite (str.contains _arg_0 \"Linux\") (str.substr _arg_0 6 3)\n               (ite (str.contains _arg_0 \"Red Hat Enterprise AS\") (str.substr _arg_0 19 3)\n                    (ite (str.contains _arg_0 \"Microsoft Windows\") (str.substr _arg_0 26 3)\n                         \"\")))))",
      "(ite (str.contains _arg_0 \"AIX\") (str.substr _arg_0 4 3) (ite (str.contains _arg_0 \"VMware ESX Server\") (str.substr _arg_0 19 3) (ite (str.contains _arg_0 \"Linux\") (str.substr _arg_0 6 3) (ite (str.contains _arg_0 \"Red Hat Enterprise AS\") (str.substr _arg_0 28 3) (ite (str.contains _arg_0 \"Microsoft Windows\") (str.substr _arg_0 20 3) \"\")))))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (+ (str.indexof _arg_0 \\\" \\\") 4))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 1)\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0\n            (+ (str.indexof _arg_0 \" \") 1)\n            (str.indexof _arg_0 \" \"))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 0)\"",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 \n            (+ (str.indexof _arg_0 \" \" 0) 1) \n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\" 0) (str.indexof _arg_0 \\\" \\\" (+ 1 (str.indexof _arg_0 \\\" \\\" 0))))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (- (str.indexof _arg_0 \\\" \\\") 1))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len \" \") (str.indexof _arg_0 \" \" 1))) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len _arg_0) 1)) 1))",
      "(str.substr _arg_0\n            (+ (str.indexof _arg_0 \" \" 0) 1)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len \" \") (str.indexof _arg_0 \" \"))) 1))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 0)\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (- (str.indexof (str.++ _arg_0 \\\" \\\") \\\" \\\") (str.indexof _arg_0 \\\" \\\")))\"",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(ite (str.contains _arg_0 \"Windows\")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \"Windows\") 8) 3)\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\"",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \".\")))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.indexof _arg_0 \".\") 1)) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                _arg_0 \"Microsoft \" \"\")\n                                                                                                                                            \"Windows \" \"\")\n                                                                                                                                          \"Mac \" \"\")\n                                                                                                                                        \"Apple \" \"\")\n                                                                                                                                      \"Linux \" \"\")\n                                                                                                                                    \"VMware ESX Server \" \"\")\n                                                                                                                                  \"AIX \" \"\")\n                                                                                                                                \"Red Hat Enterprise AS \" \"\")\n                                                                                                                              \"Red Hat Enterprise Linux \" \"\")\n                                                                                                                            \"Red Hat Linux \" \"\")\n                                                                                                                          \"Red Hat \" \"\")\n                                                                                                                        \"Windows \" \"\")\n                                                                                                                      \"Enterprise \" \"\")\n                                                                                                                    \"Server \" \"\")\n                                                                                                                  \"Advanced \" \"\")\n                                                                                                                \"Win\" \"\")\n                                                                                                              \"build-\" \"\")\n                                                                                                            \"LLC \" \"\")\n                                                                                                          \"Inc \" \"\")\n                                                                                                        \"Corporation \" \"\")\n                                                                                                      \"Enterprises \" \"\")\n                                                                                                    \"Company \" \"\")\n                                                                                                  \"R \" \"\")\n                                                                                                \"<\" \"\")\n                                                                                              \">\" \"\")\n                                                                                            \"(\" \"\")\n                                                                                          \")\" \"\")\n                                                                                        \"+\" \"\")\n                                                                                      \"name\" \"\")\n                                                                                    \"BRD\" \"\")\n                                                                                  \"DRS\" \"\")\n                                                                                \"LDS\" \"\")\n                                                                              \"Branding\" \"\")\n                                                                            \"Direct Response\" \"\")\n                                                                          \"Leads\" \"\")\n                                                                        \"=\" \"\")\n                                                                      \"/\" \"\")\n                                                                    \"in\" \"\")\n                                                                  \"_\" \"\")\n                                                                \"9\" \"\")\n                                                              \".\" \"\")\n                                                            \"microsoft\" \"\")\n                                                          \"windows\" \"\")\n                                                        \"apple\" \"\")\n                                                      \"mac\" \"\")\n                                                    \"-\" \"\")\n                                                  \"1\" \"\")\n                                                \"2\" \"\")\n                                              \"3\" \"\")\n                                            \"4\" \"\")\n                                          \"5\" \"\")\n                                        \"6\" \"\")\n                                      \"7\" \"\")\n                                    \"8\" \"\")\n                                  \"0\" \"\")\n                                \",\" \"\")\n                              \"<\" \"\")\n                            \">\" \"\")\n                          \"/n\" \"\")\n                        \"%\" \"\")\n                      \"b\" \"\")\n                    \"apple\" \"\")\n                  \"bananas\" \"\")\n                \"strawberries\" \"\")\n              \"oranges\" \"\")\n            \"LLC\" \"\")\n          \"Inc\" \"\")\n        \"Corporation\" \"\")\n      \"Enterprises\" \"\")\n    \"Company\" \"\") 0 (+ (str.indexof _arg_0 \" \" 0) 1))) 0 (str.indexof _arg_0 \" \" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len _arg_0) 1)) 1))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1))))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 (str.to.str (str.len _arg_0)) 0) (str.to.int (str.indexof _arg_0 \\\" \\\")))\".",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 0)\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) 3))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 1)\""
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 1)\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"AIX\") (str.substr _arg_0 4 3) (ite (str.contains _arg_0 \"VMware ESX Server\") (str.substr _arg_0 18 3) (ite (str.contains _arg_0 \"Linux\") (str.substr _arg_0 6 3) (ite (str.contains _arg_0 \"Red Hat Enterprise AS\") (str.substr _arg_0 19 3) (ite (str.contains _arg_0 \"Microsoft Windows\") (str.substr _arg_0 26 3) \"\"))))))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"AIX\") (str.substr _arg_0 4 3) (ite (str.contains _arg_0 \"VMware ESX Server\") (str.substr _arg_0 19 3) (ite (str.contains _arg_0 \"Linux\") (str.substr _arg_0 6 3) (ite (str.contains _arg_0 \"Red Hat Enterprise AS\") (str.substr _arg_0 28 3) (ite (str.contains _arg_0 \"Microsoft Windows\") (str.substr _arg_0 20 3) \"\"))))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (+ (str.indexof _arg_0 \\\" \\\") 4))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 1)\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 0)\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\" 0) (str.indexof _arg_0 \\\" \\\" (+ 1 (str.indexof _arg_0 \\\" \\\" 0))))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (- (str.indexof _arg_0 \\\" \\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len \" \") (str.indexof _arg_0 \" \" 1))) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len \" \") (str.indexof _arg_0 \" \"))) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 0)\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (- (str.indexof (str.++ _arg_0 \\\" \\\") \\\" \\\") (str.indexof _arg_0 \\\" \\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"Windows\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"Windows\") 8) 3) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \".\"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.indexof _arg_0 \".\") 1)) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \")))))",
      "(define-fun f (_arg_0 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"Microsoft \" \"\") \"Windows \" \"\") \"Mac \" \"\") \"Apple \" \"\") \"Linux \" \"\") \"VMware ESX Server \" \"\") \"AIX \" \"\") \"Red Hat Enterprise AS \" \"\") \"Red Hat Enterprise Linux \" \"\") \"Red Hat Linux \" \"\") \"Red Hat \" \"\") \"Windows \" \"\") \"Enterprise \" \"\") \"Server \" \"\") \"Advanced \" \"\") \"Win\" \"\") \"build-\" \"\") \"LLC \" \"\") \"Inc \" \"\") \"Corporation \" \"\") \"Enterprises \" \"\") \"Company \" \"\") \"R \" \"\") \"<\" \"\") \">\" \"\") \"(\" \"\") \")\" \"\") \"+\" \"\") \"name\" \"\") \"BRD\" \"\") \"DRS\" \"\") \"LDS\" \"\") \"Branding\" \"\") \"Direct Response\" \"\") \"Leads\" \"\") \"=\" \"\") \"/\" \"\") \"in\" \"\") \"_\" \"\") \"9\" \"\") \".\" \"\") \"microsoft\" \"\") \"windows\" \"\") \"apple\" \"\") \"mac\" \"\") \"-\" \"\") \"1\" \"\") \"2\" \"\") \"3\" \"\") \"4\" \"\") \"5\" \"\") \"6\" \"\") \"7\" \"\") \"8\" \"\") \"0\" \"\") \",\" \"\") \"<\" \"\") \">\" \"\") \"/n\" \"\") \"%\" \"\") \"b\" \"\") \"apple\" \"\") \"bananas\" \"\") \"strawberries\" \"\") \"oranges\" \"\") \"LLC\" \"\") \"Inc\" \"\") \"Corporation\" \"\") \"Enterprises\" \"\") \"Company\" \"\") 0 (+ (str.indexof _arg_0 \" \" 0) 1))) 0 (str.indexof _arg_0 \" \" 0)))))))))))))))))))))))))))))))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 (str.to.str (str.len _arg_0)) 0) (str.to.int (str.indexof _arg_0 \\\" \\\")))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 0)\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) 3))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 1)\")"
    ],
    "constants": [
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") 1)"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) (- (str.indexof _arg_0 \".\") 1))"
      ],
      [
        "",
        "Microsoft Windows",
        3,
        4,
        "Linux",
        6,
        "Red Hat Enterprise AS",
        18,
        19,
        "VMware ESX Server",
        26,
        "AIX"
      ],
      [
        "",
        "Microsoft Windows",
        3,
        4,
        "Linux",
        6,
        "Red Hat Enterprise AS",
        28,
        19,
        20,
        "VMware ESX Server",
        "AIX"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (+ (str.indexof _arg_0 \" \") 4))"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") 1)"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") 0)"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") 1))"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) (- (str.indexof _arg_0 \".\") 1))"
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") 0)"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof (str.++ _arg_0 \" \") \" \") (str.indexof _arg_0 \" \")))"
      ],
      [
        0,
        " "
      ],
      [
        1,
        3,
        "Windows",
        8,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) (- (str.indexof _arg_0 \".\") 1))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        "."
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        "."
      ],
      [
        "",
        "Corporation",
        0,
        "AIX ",
        1,
        "Advanced ",
        "Red Hat ",
        " ",
        "2",
        "Server ",
        "4",
        "b",
        "Enterprises",
        "bananas",
        "Win",
        "/",
        "8",
        "Direct Response",
        "-",
        "mac",
        "Branding",
        "7",
        ",",
        "/n",
        "LDS",
        "microsoft",
        "VMware ESX Server ",
        "Leads",
        "build-",
        "Enterprises ",
        ")",
        "apple",
        "Company",
        "Apple ",
        "6",
        "9",
        "R ",
        "5",
        "name",
        "Enterprise ",
        "3",
        "Mac ",
        "Windows ",
        "1",
        "%",
        "oranges",
        "0",
        "=",
        "windows",
        "Inc",
        "<",
        "Company ",
        "BRD",
        "strawberries",
        "+",
        ".",
        "Microsoft ",
        "Red Hat Linux ",
        "DRS",
        "in",
        "Inc ",
        "Corporation ",
        "(",
        "_",
        ">",
        "Linux ",
        "LLC ",
        "LLC",
        "Red Hat Enterprise Linux ",
        "Red Hat Enterprise AS "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) (- (str.indexof _arg_0 \".\") 1))"
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 (str.to.str (str.len _arg_0)) 0) (str.to.int (str.indexof _arg_0 \" \")))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") 0)"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) (- (str.indexof _arg_0 \".\") 1))"
      ],
      [
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") 1)"
      ]
    ],
    "all_constants": [
      "",
      1,
      0,
      3,
      4,
      6,
      8,
      "7",
      "AIX ",
      "Enterprises ",
      18,
      19,
      20,
      "Windows ",
      "Red Hat Enterprise Linux ",
      "(",
      26,
      28,
      ">",
      "Microsoft ",
      "_",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof (str.++ _arg_0 \" \") \" \") (str.indexof _arg_0 \" \")))",
      "Server ",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) (- (str.indexof _arg_0 \".\") 1))",
      "Inc ",
      "5",
      "-",
      "Linux",
      "Corporation ",
      "%",
      "Windows",
      ".",
      "LDS",
      "Leads",
      "mac",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))",
      "build-",
      "Enterprise ",
      "(str.substr _arg_0 (str.indexof _arg_0 ",
      "9",
      "Red Hat Enterprise AS ",
      "b",
      "Corporation",
      "Mac ",
      "2",
      "Linux ",
      "name",
      "/n",
      "Direct Response",
      "6",
      "+",
      ",",
      "Enterprises",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.str (str.len _arg_0)) 0) (str.to.int (str.indexof _arg_0 \" \")))",
      "3",
      "=",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (+ (str.indexof _arg_0 \" \") 4))",
      "Win",
      "BRD",
      "LLC",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") 0)",
      "Red Hat Linux ",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") 1)",
      "oranges",
      "Microsoft Windows",
      "4",
      "Advanced ",
      "windows",
      " ",
      "LLC ",
      "microsoft",
      "Red Hat ",
      "VMware ESX Server",
      "in",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))",
      "Branding",
      "bananas",
      ")",
      "strawberries",
      "R ",
      "8",
      "DRS",
      "<",
      "1",
      "Company",
      "/",
      "Apple ",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") 1))",
      "Inc",
      "Red Hat Enterprise AS",
      "VMware ESX Server ",
      "AIX",
      "Company ",
      "apple",
      "0"
    ],
    "time_diff_ms": 1682.911
  },
  "stackoverflow4modified.sl": {
    "completions": [
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0))))))",
      "(str.replace _arg_0 \"<\" \" \")",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" 2))))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 2) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 2) 1))))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2))))",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\",\\\" \\\" \\\") \\\"<\\\" \\\"\\\") \\\">\\\" \\\"\\\")\"",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 3))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (+ (str.indexof _arg_0 \",\" 0) 1))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)))))))",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\",\\\" \\\" \\\") \\\"<\\\" \\\" \\\") \\\">\\\" \\\" \\\"))\"",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.++ \"R/V \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))))",
      "\"(str.++ (str.++ (str.++ (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 1)) \" \" (str.substr _arg_0 6 1)) \" \" (str.substr _arg_0 8 2))\"",
      "(str.replace _arg_0 \"<\" \" \")",
      "\"(str.++ (str.++ (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))\"",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\" 0)) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 4 (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0))) (str.len _arg_0))))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (str.indexof _arg_0 \",\")))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\"))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1 (+ (str.indexof _arg_0 \",\") 1) (+ (str.indexof _arg_0 \",\") 1))))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \",\" \" \") \">\" \" \")",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \") \" \")",
      "(str.++ \"R/V \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1))))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1)) 1))))) )",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))",
      "(str.++ \"R/V \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \"))",
      "\"(str.++ (str.substr _arg_0 3 3) (str.substr _arg_0 7 3) (str.substr _arg_0 11 3))\"",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\" 0)) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0))))))",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\",\\\" \\\" \\\") \\\"<\\\" \\\"\\\") \\\">\\\" \\\"\\\")\"",
      "(str.replace _arg_0 \"<\" \" \")",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1))))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1)) 1))))) )",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.len _arg_0) 1))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" 2) (+ 3 (str.indexof _arg_0 \",\" 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ 6 (str.indexof _arg_0 \",\" 1)))))))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 (str.indexof _arg_0 \",\" 2)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 2) 1) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 2) 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 2) 1)) 1) (str.len _arg_0)))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)))))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" 2))))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 2) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 2) 1)))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2)))))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\",\\\" \\\" \\\") \\\"<\\\" \\\"\\\") \\\">\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (+ (str.indexof _arg_0 \",\" 0) 1))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1))))))))))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\",\\\" \\\" \\\") \\\"<\\\" \\\" \\\") \\\">\\\" \\\" \\\"))\")",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/V \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2)))))",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.++ (str.++ (str.substr _arg_0 0 3) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \" \"))",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.++ (str.++ \")",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\" 0)) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 4 (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0))) (str.len _arg_0)))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (str.indexof _arg_0 \",\")))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\"))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1 (+ (str.indexof _arg_0 \",\") 1) (+ (str.indexof _arg_0 \",\") 1))))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \",\" \" \") \">\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \") \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/V \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1))))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1)) 1))))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/V \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \")))",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 3 3) (str.substr _arg_0 7 3) (str.substr _arg_0 11 3))\")",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\" 0)) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)))))))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\",\\\" \\\" \\\") \\\"<\\\" \\\"\\\") \\\">\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1))))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\") 1)) 1))))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.len _arg_0) 1))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" 2) (+ 3 (str.indexof _arg_0 \",\" 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ 6 (str.indexof _arg_0 \",\" 1)))))))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 (str.indexof _arg_0 \",\" 2)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 2) 1) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 2) 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 2) 1)) 1) (str.len _arg_0)))))))"
    ],
    "constants": [
      [
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        0,
        1,
        " ",
        ",",
        "R/"
      ],
      [
        " ",
        "<"
      ],
      [
        1,
        2,
        " ",
        ",",
        "R/"
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        12,
        "R/"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")"
      ],
      [
        3,
        4,
        8,
        " ",
        12,
        "R/"
      ],
      [
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        0,
        1,
        " ",
        ",",
        "R/"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \" \") \">\" \" \"))"
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        12,
        "R/"
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        12,
        "R/"
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        13,
        "R/V "
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        1,
        2,
        3,
        5,
        9,
        " ",
        "R/"
      ],
      [
        "(str.++ (str.++ (str.++ (str.substr _arg_0 0 3) "
      ],
      [
        " ",
        "<"
      ],
      [
        "(str.++ (str.++ (str.++ "
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        2,
        3,
        4,
        8,
        " ",
        12,
        "R/"
      ],
      [
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        0,
        2,
        3,
        4,
        " ",
        ",",
        "R/"
      ],
      [
        2,
        3,
        4,
        8,
        " ",
        12,
        "R/"
      ],
      [
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        "R/",
        " ",
        ",",
        1
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        ">",
        " ",
        ",",
        "<"
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        13,
        "R/V "
      ],
      [
        "R/",
        " ",
        ",",
        1
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        2,
        3,
        5,
        9,
        " ",
        13,
        "R/V "
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        "(str.++ (str.substr _arg_0 3 3) (str.substr _arg_0 7 3) (str.substr _arg_0 11 3))"
      ],
      [
        0,
        2,
        3,
        " ",
        ",",
        "R/"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")"
      ],
      [
        " ",
        "<"
      ],
      [
        "R/",
        " ",
        ",",
        1
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        1,
        2,
        3,
        6,
        " ",
        ",",
        "R/"
      ],
      [
        1,
        2,
        " ",
        ",",
        "R/"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      5,
      "",
      6,
      8,
      9,
      12,
      13,
      "R/",
      "(str.++ (str.substr _arg_0 3 3) (str.substr _arg_0 7 3) (str.substr _arg_0 11 3))",
      "<",
      "(str.++ (str.++ (str.++ ",
      ",",
      "(str.++ (str.++ (str.++ (str.substr _arg_0 0 3) ",
      ">",
      "R/V ",
      " ",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \" \") \">\" \" \"))"
    ],
    "time_diff_ms": 1840.866
  },
  "remove-text-by-positionmodified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/dave/"
      ],
      [
        1,
        "/",
        "/users/dave/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/dave/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/dave/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        "/",
        -1
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/dave/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      "/users/",
      "/users/dave/",
      -1
    ],
    "time_diff_ms": 1975.219
  },
  "44789427modified.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 1) _arg_1)) (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 1) _arg_1)))",
      "(ite (str.contains _arg_0 \"-\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") 1) (str.len _arg_0)) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" (_arg_1))))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" (+ _arg_1 1)) (- (str.indexof _arg_0 \\\"-\\\" _arg_1) (str.indexof _arg_0 \\\"-\\\" (+ _arg_1 1))))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (ite (= (str.indexof _arg_0 \\\"-\\\" _arg_1) -1) (str.len _arg_0) (str.indexof _arg_0 \\\"-\\\" _arg_1)))\"",
      "(ite (str.contains _arg_0 \"-\") (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 _arg_1 (+ _arg_1 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1)))",
      "(ite (str.contains _arg_0 \"-\") (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))) (ite (= _arg_1 1) _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1)) (str.indexof _arg_0 \"-\" (+ (_arg_1 1) 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\") _arg_1)) (+ (str.indexof _arg_0 \"-\") _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (+ (str.indexof _arg_0 \\\"-\\\" _arg_1) 1))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ 1 _arg_1)) (str.indexof _arg_0 \"-\" (+ 1 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n  (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(ite (str.contains _arg_0 \"-\")\n     (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))\n     _arg_0)",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\"/\\\" 1) 1) (str.indexof _arg_0 \\\"-\\\" 1))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) 10))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (int.to.str _arg_1) 1)) (str.indexof _arg_0 \"-\" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\",\\\" _arg_1))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (+ (str.indexof _arg_0 \"-\" _arg_1) 1)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" (+ _arg_1 2)))\"",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1)) (str.indexof _arg_0 \"-\" (_arg_1 2))) )",
      "(ite (str.contains _arg_0 \"/\")\n     (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))\n     (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.len _arg_0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (- (str.len _arg_0) _arg_1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\") _arg_1)) (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\") _arg_1)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ 1 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \"-\" 0)))) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"-\" 0))))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" (+ _arg_1 2)))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) 10)\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (+ (str.indexof _arg_0 \\\"-\\\" _arg_1) 1))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (int.to.str _arg_1) 1)) (str.indexof _arg_0 \"-\" (+ (int.to.str _arg_1) 1)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))\"",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \"-\" (+ _arg_1 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (- (str.len _arg_0) (str.indexof _arg_0 \"-\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 0) _arg_1)) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 1) _arg_1)) (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 1) _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (str.contains _arg_0 \"-\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") 1) (str.len _arg_0)) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" (_arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" (+ _arg_1 1)) (- (str.indexof _arg_0 \\\"-\\\" _arg_1) (str.indexof _arg_0 \\\"-\\\" (+ _arg_1 1))))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (ite (= (str.indexof _arg_0 \\\"-\\\" _arg_1) -1) (str.len _arg_0) (str.indexof _arg_0 \\\"-\\\" _arg_1)))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (str.contains _arg_0 \"-\") (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 _arg_1 (+ _arg_1 8)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (str.contains _arg_0 \"-\") (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))) (ite (= _arg_1 1) _arg_0 \"\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1)) (str.indexof _arg_0 \"-\" (+ (_arg_1 1) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\") _arg_1)) (+ (str.indexof _arg_0 \"-\") _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (+ (str.indexof _arg_0 \\\"-\\\" _arg_1) 1))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ 1 _arg_1)) (str.indexof _arg_0 \"-\" (+ 1 _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (str.contains _arg_0 \"-\") (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))) _arg_0))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\"/\\\" 1) 1) (str.indexof _arg_0 \\\"-\\\" 1))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) 10))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (int.to.str _arg_1) 1)) (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\",\\\" _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (+ (str.indexof _arg_0 \"-\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1)) (str.indexof _arg_0 \"-\" (_arg_1 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (str.contains _arg_0 \"/\") (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (- (str.len _arg_0) _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\") _arg_1)) (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\") _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) 10)\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (+ (str.indexof _arg_0 \\\"-\\\" _arg_1) 1))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (int.to.str _arg_1) 1)) (str.indexof _arg_0 \"-\" (+ (int.to.str _arg_1) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \"-\" (+ _arg_1 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (- (str.len _arg_0) (str.indexof _arg_0 \"-\" 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 0) _arg_1)) (str.len _arg_0)))"
    ],
    "constants": [
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        "-",
        "/",
        1
      ],
      [
        0,
        "-"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (ite (= (str.indexof _arg_0 \"-\" _arg_1) -1) (str.len _arg_0) (str.indexof _arg_0 \"-\" _arg_1)))"
      ],
      [
        0,
        "-"
      ],
      [
        8
      ],
      [
        0,
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-",
        1,
        ""
      ],
      [
        "-",
        1
      ],
      [
        "-"
      ],
      [
        "-",
        1
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1))"
      ],
      [
        0,
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 1) 1) (str.indexof _arg_0 \"-\" 1))"
      ],
      [
        0,
        "-",
        1
      ],
      [
        "-",
        10,
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \",\" _arg_1))"
      ],
      [
        "-",
        1
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        "-",
        2,
        1
      ],
      [
        0,
        "-",
        "/",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        "-"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        "-",
        1
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) 10)"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1))"
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        "-"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      "",
      2,
      "-",
      8,
      10,
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 1) 1) (str.indexof _arg_0 \"-\" 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \",\" _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 ",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (ite (= (str.indexof _arg_0 \"-\" _arg_1) -1) (str.len _arg_0) (str.indexof _arg_0 \"-\" _arg_1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) 10)",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1))"
    ],
    "time_diff_ms": 2353.1639999999998
  },
  "stackoverflow11modified.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.len _arg_0))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"[A-Za-z]+[0-9]+\\\" 0) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (str.replace (str.replace _arg_0 (str.to.int (str.replace _arg_0 (str.at _arg_0 0) \"\")) \"\") \"\")))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)))\"",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \"-\" \"\")) (+ (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \"-\" \"\"))) (str.to.int (str.replace (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \"-\" \"\"))) (- (str.len _arg_0) (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \"-\" \"\"))))) \"\"))))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 ntInt ntInt) ntInt)\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(ite (str.contains _arg_0 \" \")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))\n     (ite (str.contains _arg_0 \"_\")\n          (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\") 1) (str.len _arg_0))\n          (ite (str.contains _arg_0 \"-\")\n               (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") 1) (str.len _arg_0))\n               \"\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int 0) 0))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \"_\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (str.replace _arg_0 (str.to.int (str.replace _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) \"\")) \"\") 0))\"",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 ntInt) (str.indexof _arg_0 ntInt))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \"_\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(ite (str.contains _arg_0 \" \")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))\n     (ite (str.contains _arg_0 \"_\")\n          (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\") 1) (str.len _arg_0))\n          (ite (str.contains _arg_0 \"-\")\n               (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") 1) (str.len _arg_0))\n               \"\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0\n              (str.indexof _arg_0 \" \" 0)\n              (- (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" 0))\n  )\n)",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" (+ 1 (str.indexof _arg_0 \\\" \\\" (+ 1 (str.indexof _arg_0 \\\" \\\" 0)))))))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(ite (str.contains _arg_0 \" \")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))\n     (ite (str.contains _arg_0 \"_\")\n          (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\") 1) (str.len _arg_0))\n          (ite (str.contains _arg_0 \" \")\n               (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))\n               _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \"-\" \"\")) (str.len _arg_0)))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 ntInt (str.to.int (str.replace _arg_0 ntString \"\"))) (str.len _arg_0))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0)) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"[A-Za-z]+[0-9]+\\\" 0) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (str.replace (str.replace _arg_0 (str.to.int (str.replace _arg_0 (str.at _arg_0 0) \")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 ntInt ntInt) ntInt)\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"_\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"-\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") 1) (str.len _arg_0)) \"\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int 0) 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (str.replace _arg_0 (str.to.int (str.replace _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) \")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 ntInt) (str.indexof _arg_0 ntInt))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \"_\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"_\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"-\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") 1) (str.len _arg_0)) \"\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" (+ 1 (str.indexof _arg_0 \\\" \\\" (+ 1 (str.indexof _arg_0 \\\" \\\" 0)))))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"_\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 ntInt (str.to.int (str.replace _arg_0 ntString \")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0)) (str.len _arg_0)))"
    ],
    "constants": [
      [
        "0"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"[A-Za-z]+[0-9]+\" 0) (str.len _arg_0))"
      ],
      [
        1,
        " "
      ],
      [
        0,
        "_"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (str.replace (str.replace _arg_0 (str.to.int (str.replace _arg_0 (str.at _arg_0 0) "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)))"
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 ntInt ntInt) ntInt)"
      ],
      [
        0,
        " "
      ],
      [
        "",
        1,
        "-",
        " ",
        "_"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "0",
        0
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int 0) 0))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (str.replace _arg_0 (str.to.int (str.replace _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 ntInt) (str.indexof _arg_0 ntInt))"
      ],
      [
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        1,
        "-",
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " ",
        "_"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 ntInt (str.to.int (str.replace _arg_0 ntString "
      ],
      [
        "0"
      ]
    ],
    "all_constants": [
      0,
      1,
      "(str.substr _arg_0 0 (str.indexof _arg_0 (str.replace (str.replace _arg_0 (str.to.int (str.replace _arg_0 (str.at _arg_0 0) ",
      "",
      "(str.substr _arg_0 (str.indexof _arg_0 ntInt (str.to.int (str.replace _arg_0 ntString ",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (str.replace _arg_0 (str.to.int (str.replace _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) ",
      "-",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 ",
      "0",
      "(str.substr _arg_0 (str.indexof _arg_0 \"[A-Za-z]+[0-9]+\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int 0) 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 ",
      "(str.substr _arg_0 (str.indexof _arg_0 ntInt) (str.indexof _arg_0 ntInt))",
      " ",
      "(str.substr _arg_0 (str.indexof _arg_0 ntInt ntInt) ntInt)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))",
      "_",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)))"
    ],
    "time_diff_ms": 1872.8870000000002
  },
  "stackoverflow3modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\")) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" 9)) (str.len (str.to.int 9))))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr (str.replace _arg_0 \" \" \"\") (- (str.len (str.replace _arg_0 \" \" \"\")) 1) 1))) -1)) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof (_arg_0 \"0123456789\") (_arg_0 \"1234567890\")) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) _arg_0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"0\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (_arg_0 \"0123456789\") (_arg_0 \"0123456789\") 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr (_arg_0) (- (str.len (_arg_0)) 1) 1))) 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.to.int 0) (str.to.int 1))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" -1)))))))))))))))))))))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"1\" (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"1\" 0))) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.replace _arg_0 \" \" \"\"))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\") 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 0)))))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.len _arg_0))) 1)))))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1))) _arg_0)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"0\"))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 1) (str.len _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\")) 999)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 0)))))",
      "(str.substr _arg_0 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") (str.to.int (str.indexof (str.replace _arg_0 \" \" \"/n\") (str.to.int (str.indexof (str.replace _arg_0 \" \" \"/n\") -1)) 1)) (str.len _arg_0))))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 \n              (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)\n              (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" 0)))))))))))))))))))))) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.len _arg_0) 1)",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"n\" (- (str.len (str.replace _arg_0 \" \" \"/n\")) 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 9 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 10) -1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) _arg_0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr (_arg_0) (- (str.len (_arg_0)) 1) 1))) 0)) (str.len (_arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.indexof (str.replace _arg_0 \" \" \"\") \" \"))) 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.len (str.replace _arg_0 \" \" \"\")))))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)))))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \" 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str (- 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"0\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str 9) (+ 1 (str.indexof _arg_0 (int.to.str 9) 0))) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" -1)))))))))))))))))))))) (str.len _arg_0))))",
      "(define-fun f (s String) String\n  (str.substr s\n              (str.indexof s (int.to.str (str.to.int (str.substr s 0 (str.len s)))) 0)\n              (str.len s)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\")) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" 9)) (str.len (str.to.int 9)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr (str.replace _arg_0 \" \" \"\") (- (str.len (str.replace _arg_0 \" \" \"\")) 1) 1))) -1)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (_arg_0 \"0123456789\") (_arg_0 \"1234567890\")) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"0\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (_arg_0 \"0123456789\") (_arg_0 \"0123456789\") 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr (_arg_0) (- (str.len (_arg_0)) 1) 1))) 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.to.int 0) (str.to.int 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" -1))))))))))))))))))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"1\" (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"1\" 0))) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.replace _arg_0 \" \" \"\"))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\") 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.len _arg_0))) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1))) _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"0\"))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\")) 999)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") (str.to.int (str.indexof (str.replace _arg_0 \" \" \"/n\") (str.to.int (str.indexof (str.replace _arg_0 \" \" \"/n\") -1)) 1)) (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" 0))))))))))))))))))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"n\" (- (str.len (str.replace _arg_0 \" \" \"/n\")) 1)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 9 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 10) -1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr (_arg_0) (- (str.len (_arg_0)) 1) 1))) 0)) (str.len (_arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.indexof (str.replace _arg_0 \" \" \"\") \" \"))) 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.len (str.replace _arg_0 \" \" \"\")))))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str (- 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"0\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str 9) (+ 1 (str.indexof _arg_0 (int.to.str 9) 0))) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" -1))))))))))))))))))))))",
      "(define-fun f (_arg_0 String) String (str.substr s (str.indexof s (int.to.str (str.to.int (str.substr s 0 (str.len s)))) 0) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)) (str.len _arg_0)))"
    ],
    "constants": [
      [
        "",
        1,
        " ",
        9
      ],
      [
        1,
        " ",
        9
      ],
      [
        1,
        "0123456789"
      ],
      [
        "",
        1,
        " ",
        -1
      ],
      [
        0,
        1
      ],
      [
        1,
        "0123456789",
        "1234567890"
      ],
      [
        1,
        9
      ],
      [
        "0",
        1
      ],
      [
        0,
        1,
        "0123456789"
      ],
      [
        0,
        1
      ],
      [
        0,
        1,
        9
      ],
      [
        "0",
        1,
        "8",
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1",
        -1
      ],
      [
        0,
        1,
        " ",
        "/n",
        "1"
      ],
      [
        "",
        0,
        " "
      ],
      [
        "",
        1,
        0,
        9,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        9
      ],
      [
        "",
        1,
        " ",
        0
      ],
      [
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        1
      ],
      [
        "0",
        0,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        999,
        9,
        " "
      ],
      [
        0,
        9
      ],
      [
        "",
        1,
        " ",
        0
      ],
      [
        1,
        " ",
        "/n",
        -1
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        "0",
        1,
        "8",
        0,
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        1
      ],
      [
        1,
        "0123456789"
      ],
      [
        "",
        1,
        " ",
        0
      ],
      [
        1,
        " ",
        "/n",
        "n"
      ],
      [
        "",
        1,
        9,
        " ",
        10,
        -1
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        "",
        1,
        " ",
        0
      ],
      [
        "",
        1,
        " "
      ],
      [
        0,
        "",
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        "0",
        1
      ],
      [
        0,
        1,
        9
      ],
      [
        "0",
        1,
        "8",
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1",
        -1
      ],
      [
        0
      ],
      [
        "",
        1,
        " ",
        0
      ]
    ],
    "all_constants": [
      "",
      1,
      0,
      "/n",
      "0123456789",
      9,
      10,
      "8",
      "7",
      "6",
      "1234567890",
      "3",
      "1",
      "n",
      "4",
      " ",
      "9",
      "5",
      999,
      "0",
      "2",
      -1
    ],
    "time_diff_ms": 1881.4250000000002
  },
  "initials-longmodified.sl": {
    "completions": [
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) (- (str.len name) (str.indexof name \" \" 0))) 0 1)\n    \".\"\n  )\n)",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\")\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(ite (str.contains name \" \")\n     (str.++ (str.substr name 0 1) \". \" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) (- (str.len name) (+ (str.indexof name \" \" 0) 1))) 0 1) \".\")\n     (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name 1 (- (str.len name) 1)) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \") 1) 1) 0 1) \".\") name)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "\"(str.++ (str.substr name 0 1) \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1)\n    \".\"\n  )\n)",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \") 1) (- (str.len name) (str.indexof name \" \"))) 0 1)) (str.++ (str.substr name 0 1) \".\"))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\")\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\" \n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)\n    \".\"))",
      "(ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) 0 1)) name)",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (+ 2 (str.indexof name \" \" 0)) 1) \".\"))",
      "(ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) 0 1)) name)",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ 1 (str.indexof name \" \")) 1) 0 1) \".\"))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (- (str.len name) (str.indexof name \" \" 0))) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.++ (str.substr name 0 1) \". \" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) (- (str.len name) (+ (str.indexof name \" \" 0) 1))) 0 1) \".\") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name 1 (- (str.len name) 1)) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \") 1) 1) 0 1) \".\") name))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\")\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \") 1) (- (str.len name) (str.indexof name \" \"))) 0 1)) (str.++ (str.substr name 0 1) \".\")))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\"))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) 0 1)) name))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ 2 (str.indexof name \" \" 0)) 1) \".\"))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) 0 1)) name))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ 1 (str.indexof name \" \")) 1) 0 1) \".\"))"
    ],
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\")"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        ".",
        ". "
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\")"
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\")"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      ".",
      "",
      2,
      ". ",
      " ",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))"
    ],
    "time_diff_ms": 1199.975
  },
  "phone-7modified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "\"(str.substr (str.substr name 7 3) 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f ((name String)) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f ((name String)) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr (str.substr name 7 3) 0 3))",
      "\"(str.substr name 6 3))\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String \"(str.substr (str.substr name 7 3) 1 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr (str.substr name 7 3) 0 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")"
    ],
    "constants": [
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "(str.substr (str.substr name 7 3) 1 3))"
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        8,
        3
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        0,
        3,
        7
      ],
      [
        "(str.substr name 6 3))"
      ]
    ],
    "all_constants": [
      0,
      3,
      5,
      6,
      7,
      "(str.substr (str.substr name 7 3) 1 3))",
      8,
      "(str.substr name 6 3))"
    ],
    "time_diff_ms": 1305.557
  },
  "43606446modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1))",
      "(define-fun f ((x String)) String\n  (str.substr x (+ (str.indexof x \"<\") 1) (- (str.indexof x \",\") (+ (str.indexof x \"<\") 1))))",
      "(define-fun f ((s String)) String\n    (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (+ (str.indexof s \",\") 1))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0\n              (+ (str.indexof _arg_0 \"<\") 1)\n              (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\" 1))))",
      "(define-fun f ((x String)) String\n    (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (+ (str.indexof x \",\") 1))))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 \n              (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15)\n              (- (str.indexof _arg_0 \">\", (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "\"(str.substr _arg_0 (- (str.indexof _arg_0 \\\"<\\\") 1) (- (str.indexof _arg_0 \\\",\\\") (str.indexof _arg_0 \\\"<\\\")))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\" 0) (str.indexof _arg_0 \",\")))",
      "(define-fun f ((x String)) String\n  (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (+ (str.indexof x \",\") 1))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16) (- (str.indexof _arg_0 \"<IDEALPRO,CASH,\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0\n              (+ (str.indexof _arg_0 \"<\") 1)\n              (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" (+ (str.indexof _arg_0 \"<\") 1)))))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\"<IDEALPRO,CASH,\\\") 14) (- (str.indexof _arg_0 \\\">\\\" (str.indexof _arg_0 \\\"<IDEALPRO,CASH,\\\")) (str.indexof _arg_0 \\\"<IDEALPRO,CASH,\\\") 14)))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1))",
      "(define-fun f (x String) String\n  (str.substr x (+ (str.indexof x \"<\") 1) (- (str.indexof x \",\") (+ (str.indexof x \"<\") 1))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "\"(str.substr _arg_0 (- (str.indexof _arg_0 \\\"<\\\") 1) (- (str.indexof _arg_0 \\\",\\\") (str.indexof _arg_0 \\\"<\\\")))\"",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (str.indexof s \",\") 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1))",
      "(define-fun f ((x String)) String\n  (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof (str.substr x (+ (str.indexof x \",\") 1) (str.len x)) \",\") 1)))",
      "(define-fun f (x String) String\n  (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (str.indexof x \",\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 14) (- (str.indexof _arg_0 \">\", (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 14))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 17) (- (str.indexof _arg_0 \">\", (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 17))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1))",
      "(define-fun f ((s String)) String\n    (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (str.indexof s \",\") 1))\n)",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\", (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \"<\") 1) (- (str.indexof x \",\") (+ (str.indexof x \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (+ (str.indexof s \",\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (+ (str.indexof x \",\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\" \\, (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (- (str.indexof _arg_0 \\\"<\\\") 1) (- (str.indexof _arg_0 \\\",\\\") (str.indexof _arg_0 \\\"<\\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\" 0) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (+ (str.indexof x \",\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16) (- (str.indexof _arg_0 \"<IDEALPRO,CASH,\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" (+ (str.indexof _arg_0 \"<\") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\"<IDEALPRO,CASH,\\\") 14) (- (str.indexof _arg_0 \\\">\\\" (str.indexof _arg_0 \\\"<IDEALPRO,CASH,\\\")) (str.indexof _arg_0 \\\"<IDEALPRO,CASH,\\\") 14)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \"<\") 1) (- (str.indexof x \",\") (+ (str.indexof x \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (- (str.indexof _arg_0 \\\"<\\\") 1) (- (str.indexof _arg_0 \\\",\\\") (str.indexof _arg_0 \\\"<\\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (str.indexof s \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof (str.substr x (+ (str.indexof x \",\") 1) (str.len x)) \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (str.indexof x \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 14) (- (str.indexof _arg_0 \">\" \\, (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 14)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 17) (- (str.indexof _arg_0 \">\" \\, (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 17)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (str.indexof s \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\" \\, (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15)))))"
    ],
    "constants": [
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        ">",
        "<IDEALPRO,CASH,",
        15
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\")))"
      ],
      [
        0,
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        16,
        "<IDEALPRO,CASH,"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 14) (- (str.indexof _arg_0 \">\" (str.indexof _arg_0 \"<IDEALPRO,CASH,\")) (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 14)))"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\")))"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ","
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        ">",
        "<IDEALPRO,CASH,",
        14
      ],
      [
        16,
        ">",
        "<IDEALPRO,CASH,"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        17,
        "<IDEALPRO,CASH,",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        ">",
        "<IDEALPRO,CASH,",
        15
      ]
    ],
    "all_constants": [
      0,
      1,
      ",",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\")))",
      ">",
      14,
      "<IDEALPRO,CASH,",
      15,
      16,
      17,
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 14) (- (str.indexof _arg_0 \">\" (str.indexof _arg_0 \"<IDEALPRO,CASH,\")) (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 14)))",
      "<"
    ],
    "time_diff_ms": 960.7749999999999
  },
  "extract-nth-word-from-text-stringmodified.sl": {
    "completions": [
      "(str.++ \"you\" \" \" (str.substr _arg_0 (int.to.str (str.indexof _arg_0 \" \" 0)) (int.to.str (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))))",
      "(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))\n      (ite (= _arg_1 2) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \" (str.indexof _arg_0 \" \"))) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \"))\n            (ite (= _arg_1 3) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \" (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \"))) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \"))\n                  (ite (= _arg_1 4) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \") 1)) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \"))) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \"))))))))))",
      "(str.substr _arg_0\n           (+ (str.indexof _arg_0 \" \" 0) 1)\n           (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.len _arg_0)) \" \" 0)) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.len _arg_0)) \" \" 0)) (str.len _arg_0)) \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ 1 (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (str.indexof _arg_0 \" \" (+ _arg_1 1)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.len \" \")) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (str.len \" \")))",
      "(str.++ \"you\" \"can\" \"do\" \"anything\" \"but\" \"you\" \"cant\" \"do\" \"everything.\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.at _arg_0 _arg_1)",
      "(str.at _arg_0 _arg_1))",
      "(str.++ \"you\" \" \" (str.++ \"can\" \" \" (str.++ \"do\" \" \" \"anything\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0))",
      "\"(str.at _arg_0 _arg_1)\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" _arg_1)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1))))",
      "(str.++ \"Extract-nth-word-from-text-string\" (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 \n            (+\n              1 \n              (-\n                (str.indexof _arg_0 \" \" 0) \n                1)\n              (* \n                (-\n                  _arg_1 \n                  1) \n                (+ \n                  1 \n                  (str.len \" \")))) \n            (+\n              1 \n              (str.indexof \n                _arg_0 \" \" \n                (+\n                  1 \n                  (-\n                    (str.indexof _arg_0 \" \" 0) \n                    1) \n                  (* \n                    (-\n                      _arg_1 \n                      1) \n                    (+ \n                      1 \n                      (str.len \" \")))))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0))",
      "(str.++ \"you\" \" \" \"can\" \" \" \"do\" \" \" \"anything\" \" \" \"but\" \" \" \"you\" \" \" \"cant\" \" \" \"do\" \" \" \"everything.\" (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0)))",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \" \" 0) (ite (= _arg_1 3) (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (ite (= _arg_1 2) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" 0)) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (+ (str.indexof _arg_0 \" \" 0) 1)) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (- (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0))",
      "(str.++ \"you\" \" \" (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (str.indexof (str.replace _arg_0 \" \" \"\") \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" _arg_1)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1))))",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \" \" 0) (ite (= _arg_1 3) (+ (str.indexof _arg_0 \" \" 0) 1) (+ (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (ite (= _arg_1 2) (+ (str.indexof _arg_0 \" \" 0) 1) (+ (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ (str.indexof _arg_0 \" \" _arg_1) 1))",
      "(str.++ \"you\" \" can\" \" do\" \" anything\" \" but\" \" you\" \" cant\" \" do\" \" everything.\")",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)) 0))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 2) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 3) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 4) 0 (str.len _arg_0)) 1)) 1)) 1)) 1)) (ite (= _arg_1 4) (str.len _arg_0) (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 3) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 2) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 1) 0 1)) 1)) 1)) 1)) 1)))",
      "(str.++ \"you\" \" can\" \" do\" \" anything\" \" but\" \" you\" \" cant\" \" do\" \" everything.\" (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (ite (= _arg_1 1) (- (str.indexof _arg_0 \" \") 1) (ite (= _arg_1 2) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (ite (= _arg_1 3) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))))))))))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof (+ \" \" _arg_0) \" \" (+ (int.to.str _arg_1) 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \") (str.indexof (+ \" \" _arg_0) \" \" (+ (int.to.str _arg_1) 1))))))",
      "(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))\n      (ite (= _arg_1 2) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) 0 (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0) ) \" \"))\n      (ite (= _arg_1 3) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0) ) \" \") 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0) ) \" \"))))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"you\" \" \" (str.substr _arg_0 (int.to.str (str.indexof _arg_0 \" \" 0)) (int.to.str (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) (ite (= _arg_1 2) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \" (str.indexof _arg_0 \" \"))) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \")) (ite (= _arg_1 3) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \" (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \"))) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \")) (ite (= _arg_1 4) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \") 1)) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \"))) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \"))))))))))))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.len _arg_0)) \" \" 0)) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.len _arg_0)) \" \" 0)) (str.len _arg_0)) \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ 1 (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (str.indexof _arg_0 \" \" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.len \" \")) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (str.len \" \"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"you\" \"can\" \"do\" \"anything\" \"but\" \"you\" \"cant\" \"do\" \"everything.\"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"you\" \" \" (str.++ \"can\" \" \" (str.++ \"do\" \" \" \"anything\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.at _arg_0 _arg_1)\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" _arg_1)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"Extract-nth-word-from-text-string\" (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (- (str.indexof _arg_0 \" \" 0) 1) (* (- _arg_1 1) (+ 1 (str.len \" \")))) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (- (str.indexof _arg_0 \" \" 0) 1) (* (- _arg_1 1) (+ 1 (str.len \" \"))))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"you\" \" \" \"can\" \" \" \"do\" \" \" \"anything\" \" \" \"but\" \" \" \"you\" \" \" \"cant\" \" \" \"do\" \" \" \"everything.\" (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \" \" 0) (ite (= _arg_1 3) (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (ite (= _arg_1 2) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" 0)) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (+ (str.indexof _arg_0 \" \" 0) 1)) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (- (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (- (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"you\" \" \" (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (str.indexof (str.replace _arg_0 \" \" \"\") \" \"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" _arg_1)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \" \" 0) (ite (= _arg_1 3) (+ (str.indexof _arg_0 \" \" 0) 1) (+ (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ (str.indexof _arg_0 \" \" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"you\" \" can\" \" do\" \" anything\" \" but\" \" you\" \" cant\" \" do\" \" everything.\"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)) 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 2) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 3) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 4) 0 (str.len _arg_0)) 1)) 1)) 1)) 1)) (ite (= _arg_1 4) (str.len _arg_0) (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 3) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 2) 0 (str.indexof _arg_0 \" \" 0 (+ (ite (= _arg_1 1) 0 1)) 1)) 1)) 1)) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"you\" \" can\" \" do\" \" anything\" \" but\" \" you\" \" cant\" \" do\" \" everything.\" (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (ite (= _arg_1 1) (- (str.indexof _arg_0 \" \") 1) (ite (= _arg_1 2) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (ite (= _arg_1 3) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))))))))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof (+ \" \" _arg_0) \" \" (+ (int.to.str _arg_1) 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \") (str.indexof (+ \" \" _arg_0) \" \" (+ (int.to.str _arg_1) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) (ite (= _arg_1 2) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) 0 (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \" \")) (ite (= _arg_1 3) (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \" \") 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \" \"))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))"
    ],
    "constants": [
      [
        "you",
        0,
        " "
      ],
      [
        0,
        1,
        2,
        3,
        4,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "you",
        "but",
        "anything",
        "cant",
        "everything.",
        "do",
        "can"
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [],
      [
        "you",
        "anything",
        " ",
        "do",
        "can"
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.at _arg_0 _arg_1)"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        "Extract-nth-word-from-text-string",
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "you",
        "but",
        1,
        "anything",
        0,
        " ",
        "cant",
        "everything.",
        "do",
        "can"
      ],
      [
        0,
        1,
        2,
        3,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "you",
        1,
        " ",
        ""
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        1,
        " "
      ],
      [
        0,
        1,
        2,
        3,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "you",
        " do",
        " cant",
        " but",
        " anything",
        " you",
        " can",
        " everything."
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        2,
        3,
        4,
        " "
      ],
      [
        "you",
        1,
        2,
        3,
        " do",
        " cant",
        " ",
        " but",
        " anything",
        " you",
        " can",
        " everything."
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        2,
        3,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      "",
      "you",
      "everything.",
      "Extract-nth-word-from-text-string",
      " anything",
      "do",
      " can",
      " everything.",
      " do",
      " you",
      "but",
      "cant",
      " ",
      " cant",
      "(str.at _arg_0 _arg_1)",
      "anything",
      " but",
      "can"
    ],
    "time_diff_ms": 1587.798
  },
  "remove-leading-and-trailing-spaces-from-textmodified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String\n  (str.++ \n    (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n    (str.substr \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace _arg_0 (str.++ \" \" \" \") \" \") \n              (str.++ \" \" \" \") \" \") \n            (str.++ \" \" \" \") \" \") \n          (str.++ \" \" \" \") \" \") \n        (str.++ \" \" \" \") \" \") \n      1 \n      (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String\n(str.++\n(ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0))\n(str.substr\n(str.replace\n(str.replace\n(str.replace\n(str.replace\n(str.replace\n_arg_0\n(str.++ \" \" \" \")\n\" \")\n(str.++ \" \" \" \")\n\" \")\n(str.++ \" \" \" \")\n\" \")\n(str.++ \" \" \" \")\n\" \")\n(str.++ \" \" \" \")\n\" \")\n1\n(str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "\"(str.++ (ite (str.prefixof \\\" \\\" _arg_0) \\\"\\\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") 1 (str.len _arg_0)))\"",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "\"(str.++ (ite (str.prefixof \\\" \\\" _arg_0) \\\"\\\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") 1 (str.len _arg_0)))\""
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String \"(str.++ (ite (str.prefixof \\\" \\\" _arg_0) \\\"\\\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") 1 (str.len _arg_0)))\")",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String \"(str.++ (ite (str.prefixof \\\" \\\" _arg_0) \\\"\\\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") 1 (str.len _arg_0)))\")"
    ],
    "constants": [
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))"
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))"
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      " "
    ],
    "time_diff_ms": 1766.4679999999998
  },
  "phone-5-long-repeatmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(+106 769-858-438 -> \"106\")",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "\"(ite (str.prefixof name \\\"+\\\") (str.substr name 1 3) (str.substr name 0 2))\"",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n    (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String (str.to.int (str.substr name 1 3)))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n    (str.substr name 1 3))",
      "(ite (str.prefixof name \"+\") (str.substr name 1 2) (str.substr name 0 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3)\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (106 769-858-438 -> \"106\"))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(ite (str.prefixof name \\\"+\\\") (str.substr name 1 3) (str.substr name 0 2))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.to.int (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+\") (str.substr name 1 2) (str.substr name 0 2)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))"
    ],
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        106,
        "106"
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(ite (str.prefixof name \"+\") (str.substr name 1 3) (str.substr name 0 2))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        0,
        1,
        2,
        "+"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      "+",
      "(str.substr name 1 3)",
      106,
      "(str.substr name 1 3))",
      " ",
      "(ite (str.prefixof name \"+\") (str.substr name 1 3) (str.substr name 0 2))",
      "106"
    ],
    "time_diff_ms": 2331.52
  },
  "count-total-words-in-a-cellmodified.sl": {
    "completions": [
      "(str.len _arg_0))",
      "(str.len (str.replace _arg_0 \" \" \"/n\"))",
      "\"(str.len _arg_0)\"",
      "(str.len _arg_0)",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) Int (str.len _arg_0))",
      "\"(str.len _arg_0)\"",
      "(str.len _arg_0))",
      "(str.len (str.replace _arg_0 \" \" \" \")))",
      "(define-fun f ((_arg_0 String)) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(ite (= (_arg_0 \" \") \"\") 0 (+ 1 (str.len (str.replace _arg_0 \" \" \" \"))))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(str.len (str.replace _arg_0 \" \" \"BRD\"))",
      "(str.len _arg_0)",
      "(ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (str.replace _arg_0 \" \" \" \"))))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "\"(str.len _arg_0)\"",
      "(ite (= (_arg_0 \" \") \"\") 0 (+ 1 (str.to.int (str.replace (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \" \" \"\"))))",
      "\"(str.len _arg_0)\"",
      "(ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (ite (str.contains \" \" _arg_0) (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) _arg_0))))",
      "(str.len (str.replace _arg_0 \" \" \"BRD\"))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "\"(str.len _arg_0)\"",
      "\"(str.len _arg_0)\"",
      "(ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(str.len _arg_0)",
      "(ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (str.replace (str.replace _arg_0 \",\" \" \") \".\" \" \"))))",
      "\"(str.to.int (str.len _arg_0))\"",
      "\"(str.len _arg_0)\"",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len (str.replace _arg_0 \" \" \"BRD\")))",
      "(str.len _arg_0)",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(str.len (str.replace _arg_0 \" \" \"BRD\"))",
      "(ite (= (_arg_0 \"\") true) 0 (+ 1 (str.len (str.replace _arg_0 \" \" \" \"))))",
      "\"(str.len _arg_0)\"",
      "(ite (= (_arg_0 \"\") 0) 0 (+ 1 (str.len (_arg_0))))",
      "(ite (= (_arg_0 \" \") \"\") 0 (+ 1 (str.len _arg_0)))",
      "(str.len (str.replace _arg_0 \" \" \"/n\"))",
      "(str.len _arg_0)",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (ite (str.contains _arg_0 \" \") (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))))",
      "(str.len _arg_0)"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"/n\")))",
      "(define-fun f (_arg_0 String) Int \"(str.len _arg_0)\")",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int \"(str.len _arg_0)\")",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \" \")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (ite (= (_arg_0 \" \") \"\") 0 (+ 1 (str.len (str.replace _arg_0 \" \" \" \")))))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"BRD\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (str.replace _arg_0 \" \" \" \")))))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int \"(str.len _arg_0)\")",
      "(define-fun f (_arg_0 String) Int (ite (= (_arg_0 \" \") \"\") 0 (+ 1 (str.to.int (str.replace (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \" \" \"\")))))",
      "(define-fun f (_arg_0 String) Int \"(str.len _arg_0)\")",
      "(define-fun f (_arg_0 String) Int (ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (ite (str.contains \" \" _arg_0) (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) _arg_0)))))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"BRD\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int \"(str.len _arg_0)\")",
      "(define-fun f (_arg_0 String) Int \"(str.len _arg_0)\")",
      "(define-fun f (_arg_0 String) Int (ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) \" \" \"\")))))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (str.replace (str.replace _arg_0 \",\" \" \") \".\" \" \")))))",
      "(define-fun f (_arg_0 String) Int \"(str.to.int (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) Int \"(str.len _arg_0)\")",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"BRD\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"BRD\")))",
      "(define-fun f (_arg_0 String) Int (ite (= (_arg_0 \"\") true) 0 (+ 1 (str.len (str.replace _arg_0 \" \" \" \")))))",
      "(define-fun f (_arg_0 String) Int \"(str.len _arg_0)\")",
      "(define-fun f (_arg_0 String) Int (ite (= (_arg_0 \"\") 0) 0 (+ 1 (str.len (_arg_0)))))",
      "(define-fun f (_arg_0 String) Int (ite (= (_arg_0 \" \") \"\") 0 (+ 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"/n\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (ite (= (str.len _arg_0) 0) 0 (+ 1 (str.to.int (ite (str.contains _arg_0 \" \") (str.indexof _arg_0 \" \" 0) (str.len _arg_0))))))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))"
    ],
    "constants": [
      [],
      [
        " ",
        "/n"
      ],
      [
        "(str.len _arg_0)"
      ],
      [],
      [],
      [],
      [
        "(str.len _arg_0)"
      ],
      [],
      [
        " "
      ],
      [],
      [],
      [
        "",
        0,
        " ",
        1
      ],
      [],
      [
        "BRD",
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [],
      [],
      [
        "(str.len _arg_0)"
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "(str.len _arg_0)"
      ],
      [
        0,
        1,
        " "
      ],
      [
        "BRD",
        " "
      ],
      [],
      [],
      [
        "(str.len _arg_0)"
      ],
      [
        "(str.len _arg_0)"
      ],
      [
        0,
        1,
        " ",
        ""
      ],
      [],
      [],
      [
        0,
        1,
        " ",
        ",",
        "."
      ],
      [
        "(str.to.int (str.len _arg_0))"
      ],
      [
        "(str.len _arg_0)"
      ],
      [],
      [],
      [],
      [
        "BRD",
        " "
      ],
      [],
      [],
      [
        "BRD",
        " "
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "(str.len _arg_0)"
      ],
      [
        "",
        0,
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        " ",
        "/n"
      ],
      [],
      [],
      [],
      [
        0,
        1,
        " "
      ],
      []
    ],
    "all_constants": [
      "(str.len _arg_0)",
      "",
      0,
      "/n",
      1,
      ",",
      ".",
      "(str.to.int (str.len _arg_0))",
      " ",
      "BRD"
    ],
    "time_diff_ms": 1158.603
  },
  "stackoverflow8modified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") (str.len \"Excel/\") 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0)))) (+ 1 (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" (str.len _arg_0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" (str.len _arg_0)))) (str.len _arg_0)))",
      "(define-fun f ((x String)) String (str.substr x (- (str.indexof x \"/\" (+ (str.indexof x \"/\" 0) 1)) 1) (- (str.len x) (str.indexof x \"/\" (+ (str.indexof x \"/\" 0) 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (str.indexof s \"/\" (+ 1 (str.indexof s \"/\" 0))) (str.len s)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) (- (str.len _arg_0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(ite (str.contains _arg_0 \"/\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)) _arg_0)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") (str.len \"Excel/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0)))) (+ 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" (str.len _arg_0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" (str.len _arg_0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr x (- (str.indexof x \"/\" (+ (str.indexof x \"/\" 0) 1)) 1) (- (str.len x) (str.indexof x \"/\" (+ (str.indexof x \"/\" 0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (str.indexof s \"/\" (+ 1 (str.indexof s \"/\" 0))) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"/\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (str.len _arg_0)))"
    ],
    "constants": [
      [
        1,
        "/",
        "Excel/",
        "home/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/",
        "home/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/",
        -1
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      "Excel/",
      "home/",
      -1
    ],
    "time_diff_ms": 1063.079
  },
  "strip-numeric-characters-from-cellmodified.sl": {
    "completions": [
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str 0) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \") )",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \" \"+\" \"name\" \",\" \"apple\" \" \" \"bananas\" \" \" \"strawberries\" \" \" \"oranges\" \" \" \"LLC\" \" \" \"Inc\" \" \" \"Corporation\" \" \" \"Enterprises\" \" \" \"Company\" \" \" \"(\" \" \" \")\" \" \" \"microsoft\" \" \" \"windows\" \" \" \"apple\" \" \" \"mac\" \" \" \"-\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"0\" \" \" \",\" \" \" \"<\" \" \" \">\" \" \" \"/n\" \" \" \"%\" \" \" \"b\" \" \" \"in\" \" \" \"_\" \" \") )",
      "(str.replace _arg_0 \"0\" \"\" \"1\" \"\" \"2\" \"\" \"3\" \"\" \"4\" \"\" \"5\" \"\" \"6\" \"\" \"7\" \"\" \"8\" \"\" \"9\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\"))",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\" \"1\" \"\" \"2\" \"\" \"3\" \"\" \"4\" \"\" \"5\" \"\" \"6\" \"\" \"7\" \"\" \"8\" \"\" \"9\" \"\"))",
      "(str.replace _arg_0 \"0\" \"\" \"1\" \"\" \"2\" \"\" \"3\" \"\" \"4\" \"\" \"5\" \"\" \"6\" \"\" \"7\" \"\" \"8\" \"\" \"9\" \"\"))",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\"))",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "\"(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 \" \" \"\"))) \"\")\"",
      "\"(str.replace _arg_0 (int.to.str 0) \\\"\\\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 \"\" \" \"))) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \") ",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str 0) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \" \"+\" \"name\" \",\" \"apple\" \" \" \"bananas\" \" \" \"strawberries\" \" \" \"oranges\" \" \" \"LLC\" \" \" \"Inc\" \" \" \"Corporation\" \" \" \"Enterprises\" \" \" \"Company\" \" \" \"(\" \" \" \")\" \" \" \"microsoft\" \" \" \"windows\" \" \" \"apple\" \" \" \"mac\" \" \" \"-\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"0\" \" \" \",\" \" \" \"<\" \" \" \">\" \" \" \"/n\" \" \" \"%\" \" \" \"b\" \" \" \"in\" \" \" \"_\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\" \"1\" \"\" \"2\" \"\" \"3\" \"\" \"4\" \"\" \"5\" \"\" \"6\" \"\" \"7\" \"\" \"8\" \"\" \"9\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\" \"1\" \"\" \"2\" \"\" \"3\" \"\" \"4\" \"\" \"5\" \"\" \"6\" \"\" \"7\" \"\" \"8\" \"\" \"9\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\" \"1\" \"\" \"2\" \"\" \"3\" \"\" \"4\" \"\" \"5\" \"\" \"6\" \"\" \"7\" \"\" \"8\" \"\" \"9\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 \")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str 0) \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))"
    ],
    "constants": [
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        0,
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str 0) "
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        "8",
        "6",
        "9",
        " ",
        "2",
        "5",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        ""
      ],
      [
        "Corporation",
        " ",
        "2",
        "4",
        "b",
        "Enterprises",
        "bananas",
        "8",
        "-",
        "/n",
        "7",
        ",",
        "microsoft",
        "Company",
        ")",
        "apple",
        "6",
        "9",
        "5",
        "name",
        "3",
        "oranges",
        "1",
        "%",
        "0",
        "Inc",
        "windows",
        "<",
        "strawberries",
        "+",
        "in",
        "_",
        "(",
        ">",
        "mac",
        "LLC"
      ],
      [
        "0",
        "",
        "8",
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        "8",
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        "",
        "8",
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        "0",
        "",
        "8",
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 "
      ],
      [
        "(str.replace _arg_0 (int.to.str 0) \"\")"
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 "
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        "8",
        "6",
        "9",
        " ",
        "2",
        "5",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "0",
        ""
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "0",
        ""
      ]
    ],
    "all_constants": [
      "",
      0,
      "/n",
      "8",
      "7",
      "6",
      "(str.replace _arg_0 (int.to.str 0) ",
      "(",
      "+",
      "<",
      "mac",
      ",",
      "Enterprises",
      ">",
      "3",
      "1",
      "Company",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "LLC",
      "_",
      "oranges",
      "Inc",
      "4",
      "windows",
      "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) ",
      "(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 ",
      "9",
      " ",
      "microsoft",
      "5",
      "in",
      "b",
      "apple",
      "-",
      "Corporation",
      "0",
      "%",
      "2",
      "bananas",
      ")",
      "strawberries",
      "name"
    ],
    "time_diff_ms": 2375.434
  },
  "phone-9modified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace name \" \" \"\")\n        \"-\"\n        \".\")\n      \".\"\n      \".\")\n    \".\"\n    \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \"\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"BRD\" \"Brand.\") \"DRS\" \"DirectResponse\") \"LDS\" \"Leads\") \"apple\" \"app.\") \"microsoft\" \"MS\") \"windows\" \"Win.\") \"mac\" \"Mac.\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \"\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 2 3) \".\" (str.substr name 6 3) \".\" (str.substr name 10 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 1 3) \".\"\n    (str.substr name 5 3) \".\"\n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f ((name String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-1\" \"1\") \"-2\" \"2\") \"-3\" \"3\") \"-4\" \"4\") \"-5\" \"5\") \"-6\" \"6\") \"-7\" \"7\") \"-8\" \"8\") \"-0\" \"0\") \"-\" \".\") \" \" \".\") \" \") \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \".\" \".\") \".\" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \"\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"BRD\" \"Brand.\") \"DRS\" \"DirectResponse\") \"LDS\" \"Leads\") \"apple\" \"app.\") \"microsoft\" \"MS\") \"windows\" \"Win.\") \"mac\" \"Mac.\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \"\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 2 3) \".\" (str.substr name 6 3) \".\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \" \" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-1\" \"1\") \"-2\" \"2\") \"-3\" \"3\") \"-4\" \"4\") \"-5\" \"5\") \"-6\" \"6\") \"-7\" \"7\") \"-8\" \"8\") \"-0\" \"0\") \"-\" \".\") \" \" \".\") \" \") \".\"))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))"
    ],
    "constants": [
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        " "
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "apple",
        "windows",
        "Brand.",
        "MS",
        "BRD",
        "-",
        " ",
        "DirectResponse",
        "Mac.",
        ".",
        "LDS",
        "app.",
        "DRS",
        "microsoft",
        "mac",
        "Leads",
        "Win."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "+"
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        2,
        3,
        6,
        10,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        " ",
        "2",
        "-6",
        "-5",
        "4",
        "-0",
        "8",
        "-",
        "7",
        "-3",
        "-7",
        "-2",
        "6",
        "5",
        "3",
        "1",
        "-8",
        "0",
        "-1",
        ".",
        "-4"
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "",
      ".",
      "Brand.",
      "Mac.",
      2,
      3,
      6,
      1,
      5,
      9,
      10,
      0,
      "LDS",
      4,
      "MS",
      8,
      "8",
      "Leads",
      "7",
      "-0",
      "DRS",
      "6",
      "-2",
      "+",
      "mac",
      "-8",
      "3",
      "Win.",
      "1",
      "-4",
      "-6",
      "-7",
      "BRD",
      "-1",
      "4",
      "-3",
      "windows",
      " ",
      "microsoft",
      "5",
      "apple",
      "-",
      "-5",
      "0",
      "2",
      "app.",
      "DirectResponse"
    ],
    "time_diff_ms": 2334.737
  },
  "initialsmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1)\n          \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1)\n  )\n)",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.substr name (+ (str.indexof name \" \" 0) 1) 1)\n      0\n      1\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.substr name (+ (str.indexof name \" \" 0) 1) 1)\n      0\n      1\n    )\n  )\n)",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\")) )",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \") 1) 1) 0 1)))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\")\"",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\")",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr \n      (str.substr name (str.indexof name \" \" 0) (str.len name)) \n      1 \n      1\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.substr name 0 1) 0 1)\n    \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1) 0 1))\"",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr \n      (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \n      0 \n      1\n    )\n  )\n)",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\" \n    (str.++ \n      (str.substr \n        (str.substr name 1 (str.indexof name \" \" 0)) \n        0 \n        1) \n      \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.substr name (+ (str.indexof name \" \" 0) 1) 1)\n      0\n      1\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1) 0 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1) 0 1))\"",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1) 0 1))\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\")\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.replace name \\\" \\\" \\\".\\\") 0 1))\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr \n      (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \n      0 \n      1\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)\n  )\n)",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)\n    \".\"))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \") 1) 1) 0 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\")\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.substr name 0 1) 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1) 0 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name 1 (str.indexof name \" \" 0)) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1) 0 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1) 0 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1) 0 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr (str.replace name \\\" \\\" \\\".\\\") 0 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1) \".\"))"
    ],
    "constants": [
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\")"
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))"
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\")"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \".\") 0 1))"
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      ".",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \".\") 0 1))",
      "",
      " ",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.substr name 0 1) \".\")"
    ],
    "time_diff_ms": 1641.9699999999998
  },
  "phone-10-long-repeatmodified.sl": {
    "completions": [
      "(str.++ \"+\"\n          (str.substr name 0 3)\n          \" (\"\n          (str.substr name 3 3)\n          \") \"\n          (str.substr name 6 3)\n          \"-\"\n          (str.substr name 9 3))",
      "(str.++ \"+106 (769) 858-438\" str.++ \"+106 (769) 858-438\" str.++ \"+106 (769) 858-438\" str.++ \"+83 (973) 757-831\" str.++ \"+83 (973) 757-831\" str.++ \"+83 (973) 757-831\" str.++ \"+62 (647) 787-775\" str.++ \"+62 (647) 787-775\" str.++ \"+62 (647) 787-775\" str.++ \"+172 (027) 507-632\" str.++ \"+172 (027) 507-632\" str.++ \"+172 (027) 507-632\" str.++ \"+72 (001) 050-856\" str.++ \"+72 (001) 050-856\" str.++ \"+72 (001) 050-856\" str.++ \"+95 (310) 537-401\" str.++ \"+95 (310) 537-401\" str.++ \"+95 (310) 537-401\" str.++ \"+6 (775) 969-238\" str.++ \"+6 (775) 969-238\" str.++ \"+6 (775) 969-238\" str.++ \"+174 (594) 539-946\" str.++ \"+174 (594) 539-946\" str.++ \"+174 (594) 539-946\" str.++ \"+155 (927) 275-860\" str.++ \"+155 (927) 275-860\" str.++ \"+155 (927) 275-860\" str.++ \"+167 (405) 461-331\" str.++ \"+167 (405) 461-331\" str.++ \"+167 (405) 461-331\" str.++ \"+10 (538) 347-401\" str.++ \"+10 (538) 347-401\" str.++ \"+10 (538) 347-401\" str.++ \"+60 (971) 986-103\" str.++ \"+60 (971) 986-103\" str.++ \"+60 (971) 986-103\" str.++ \"+13 (258) 276-941\" str.++ \"+13 (258) 276-941\" str.++ \"+13 (258) 276-941\" str.++ \"+2 (604) 746-137\" str.++ \"+2 (604) 746-137\" str.++ \"+2 (604) 746-137\" str.++ \"+25 (998) 898-180\" str.++ \"+25 (998) 898-180\" str.++ \"+25 (998) 898-180\" str.++ \"+151 (862) 946-541\" str.++ \"+151 (862) 946-541\" str.++ \"+151 (862) 946-541\" str.++ \"+118 (165) 041-038\" str.++ \"+118 (165) 041-038\" str.++ \"+118 (165) 041-038\" str.++ \"+144 (170) 592-272\" str.++ \"+144 (170) 592-272\" str.++ \"+144 (170) 592-272\" str.++ \"+94 (462) 008-482\" str.++ \"+94 (462) 008-482\" str.++ \"+94 (462) 008-482\" str.++ \"+82 (685) 122-086\" str.++ \"+82 (685) 122-086\" str.++ \"+82 (685) 122-086\" str.++ \"+82 (675) 366-472\" str.++ \"+82 (675) 366-472\" str.++ \"+82 (675) 366-472\" str.++ \"+80 (066) 433-096\" str.++ \"+80 (066) 433-096\" str.++ \"+80 (066) 433-096\" str.++ \"+163 (039) 436-166\" str.++ \"+163 (039) 436-166\" str.++ \"+163 (039) 436-166\" str.++ \"+138 (808) 083-074\" str.++ \"+138 (808) 083-074\" str.++ \"+138 (808) 083-074\" str.++ \"+42 (643) 245-738\" str.++ \"+42 (643) 245-738\" str.++ \"+42 (643) 245-738\" str.++ \"+169 (822) 542-726\" str.++ \"+169 (822) 542-726\" str.++ \"+169 (822) 542-726\" str.++ \"+176 (767) 782-369\" str.++ \"+176 (767) 782-369\" str.++ \"+176 (767) 782-369\" str.++ \"+47 (414) 369-343\" str.++ \"+47 (414) 369-343\" str.++ \"+47 (414) 369-343\" str.++ \"+138 (885) 618-512\" str.++ \"+138 (885) 618-512\" str.++ \"+138 (885) 618-512\" str.++ \"+104 (158) 671-355\" str.++ \"+104 (158) 671-355\" str.++ \"+104 (158) 671-355\" str.++ \"+188 (280) 087-526\" str.++ \"+188 (280) 087-526\" str.++ \"+188 (280) 087-526\" str.++ \"+50 (268) 571-336\" str.++ \"+50 (268) 571-336\" str.++ \"+50 (268) 571-336\" str.++ \"+183 (225) 960-024\" str.++ \"+183 (225) 960-024\" str.++ \"+183 (225) 960-024\" str.++ \"+58 (191) 982-491\" str.++ \"+58 (191) 982-491\" str.++ \"+58 (191) 982-491\" str.++ \"+9 (507) 092-535\" str.++ \"+9 (507) 092-535\" str.++ \"+9 (507) 092-535\" str.++ \"+64 (061) 601-398\" str.++ \"+64 (061) 601-398\" str.++ \"+64 (061) 601-398\" str.++ \"+189 (831) 591-877\" str.++ \"+189 (831) 591-877\" str.++ \"+189 (831) 591-877\" str.++ \"+129 (425) 765-844\" str.++ \"+129 (425) 765-844\" str.++ \"+129 (425) 765-844\" str.++ \"+94 (856) 734-046\" str.++ \"+94 (856) 734-046\" str.++ \"+94 (856) 734-046\" str.++ \"+35 (082) 845-261\" str.++ \"+35 (082) 845-261\" str.++ \"+35 (082) 845-261\" str.++ \"+185 (394) 622-272\" str.++ \"+185 (394) 622-272\" str.++ \"+185 (394) 622-272\" str.++ \"+163 (905) 707-740\" str.++ \"+163 (905) 707-740\" str.++ \"+163 (905) 707-740\" str.++ \"+23 (448) 213-807\" str.++ \"+23 (448) 213-807\" str.++ \"+23 (448) 213-807\" str.++ \"+42 (634) 077-089\" str.++ \"+42 (634) 077-089\" str.++ \"+42 (634) 077-089\" str.++ \"+18 (051) 287-382\" str.++ \"+18 (051) 287-382\" str.++ \"+18 (051) 287-382\" str.++ \"+29 (773) 545-520\" str.++ \"+29 (773) 545-520\" str.++ \"+29 (773) 545-520\" str.++ \"+43 (249) 097-743\" str.++ \"+43 (249) 097-743\" str.++ \"+43 (249) 097-743\" str.++ \"+158 (674) 736-891\" str.++ \"+158 (674) 736-891\" str.++ \"+158 (674) 736-891\" str.++ \"+45 (124) 771-454\" str.++ \"+45 (124) 771-454\" str.++ \"+45 (124) 771-454\" str.++ \"+180 (029) 457-654\" str.++ \"+180 (029) 457-654\" str.++ \"+180 (029) 457-654\" str.++ \"+75 (227) 250-652\" str.++ \"+75 (227) 250-652\" str.++ \"+75 (227) 250-652\" str.++ \"+5 (528) 317-854\" str.++ \"+5 (528) 317-854\" str.++ \"+5 (528) 317-854\" str.++ \"+81 (849) 629-290\" str.++ \"+81 (849) 629-290\" str.++ \"+81 (849) 629-290\" str.++ \"+46 (005) 119-176\" str.++ \"+46 (005) 119-176\" str.++ \"+46 (005) 119-176\" str.++ \"+108 (150) 380-705\" str.++ \"+108 (150) 380-705\" str.++ \"+108 (150) 380-705\" str.++ \"+40 (122) 224-247\" str.++ \"+40 (122) 224-247\" str.++ \"+40 (122) 224-247\" str.++ \"+68 (890) 680-027\" str.++ \"+68 (890) 680-027\" str.++ \"+68 (890) 680-027\" str.++ \"+169 (060) 204-504\" str.++ \"+169 (060) 204-504\" str.++ \"+169 (060) 204-504\" str.++ \"+95 (620) 820-945\" str.++ \"+95 (620) 820-945\" str.++ \"+95 (620) 820-945\" str.++ \"+43 (592) 938-846\" str.++ \"+43 (592) 938-846\" str.++ \"+43 (592) 938-846\" str.++ \"+7 (023) 296-647\" str.++ \"+7 (023) 296-647\" str.++ \"+7 (023) 296-647\" str.++ \"+20 (541) 401-396\" str.++ \"+20 (541) 401-396\" str.++ \"+20 (541) 401-396\" str.++ \"+64 (751) 365-934\" str.++ \"+64 (751) 365-934\" str.++ \"+64 (751) 365-934\" str.++ \"+163 (546) 119-476\" str.++ \"+163 (546) 119-476\" str.++ \"+163 (546) 119-476\" str.++ \"+198 (557) 666-779\" str.++ \"+198 (557) 666-779\" str.++ \"+198 (557) 666-779\" str.++ \"+14 (673) 759-017\" str.++ \"+14 (673) 759-017\" str.++ \"+14 (673) 759-017\" str.++ \"+161 (086) 020-168\" str.++ \"+161 (086) 020-168\" str.++ \"+161 (086) 020-168\" str.++ \"+65 (970) 575-488\" str.++ \"+65 (970) 575-488\" str.++ \"+65 (970) 575-488\" str.++ \"+2 (455) 126-377\" str.++ \"+2 (455) 126-377\" str.++ \"+2 (455) 126-377\" str.++ \"+196 (728) 585-376\" str.++ \"+196 (728) 585-376\" str.++ \"+196 (728) 585-376\" str.++ \"+33 (117) 430-125\" str.++ \"+33 (117) 430-125\" str.++ \"+33 (117) 430-125\" str.++ \"+195 (488) 831-768\" str.++ \"+195 (488) 831-768\" str.++ \"+195 (488) 831-768\" str.++ \"+86 (468) 718-108\" str.++ \"+86 (468) 718-108\" str.++ \"+86 (468) 718-108\" str.++ \"+194 (278) 716-950\" str.++ \"+194 (278) 716-950\" str.++ \"+194 (278) 716-950\" str.++ \"+43 (730) 685-847\" str.++ \"+43 (730) 685-847\" str.++ \"+43 (730) 685-847\" str.++ \"+140 (794) 289-551\" str.++ \"+140 (794) 289-551\" str.++ \"+140 (794) 289-551\" str.++ \"+21 (679) 740-834\" str.++ \"+21 (679) 740-834\" str.++ \"+21 (679) 740-834\" str.++ \"+98 (717) 997-323\" str.++ \"+98 (717) 997-323\" str.++ \"+98 (717) 997-323\" str.++ \"+47 (401) 100-231\" str.++ \"+47 (401) 100-231\" str.++ \"+47 (401) 100-231\" str.++ \"+143 (726) 462-368\" str.++ \"+143 (726) 462-368\" str.++ \"+143 (726) 462-368\" str.++ \"+147 (864) 005-968\" str.++ \"+147 (864) 005-968\" str.++ \"+147 (864) 005-968\" str.++ \"+130 (590) 757-665\" str.++ \"+130 (590) 757-665\" str.++ \"+130 (590) 757-665\" str.++ \"+197 (700) 858-976\" str.++ \"+197 (700) 858-976\" str.++ \"+197 (700) 858-976\" str.++ \"+158 (344) 541-946\" str.++ \"+158 (344) 541-946\" str.++ \"+158 (344) 541-946\" str.++ \"+56 (242) 901-234\" str.++ \"+56 (242) 901-234\" str.++ \"+56 (242) 901-234\" str.++ \"+132 (313) 075-754\" str.++ \"+132 (313) 075-754\" str.++ \"+132 (313) 075-754\" str.++ \"+130 (517) 953-149\" str.++ \"+130 (517) 953-149\" str.++ \"+130 (517) 953-149\" str.++ \"+158 (684) 878-743\" str.++ \"+158 (684) 878-743\" str.++ \"+158 (684) 878-743\" str.++ \"+52 (836) 582-035\" str.++ \"+52 (836) 582-035\" str.++ \"+52 (836) 582-035\" str.++ \"+138 (117) 484-671\" str.++ \"+138 (117) 484-671\" str.++ \"+138 (117) 484-671\" str.++ \"+50 (012) 148-873\" str.++ \"+50 (012) 148-873\" str.++ \"+50 (012) 148-873\" str.++ \"+105 (048) 919-483\" str.++ \"+105 (048) 919-483\" str.++ \"+105 (048) 919-483\" str.++ \"+18 (209) 851-997\" str.++ \"+18 (209) 851-997\" str.++ \"+18 (209) 851-997\" str.++ \"+176 (938) 056-084\" str.++ \"+176 (938) 056-084\" str.++ \"+176 (938) 056-084\" str.++ \"+141 (018) 132-973\" str.++ \"+141 (018) 132-973\" str.++ \"+141 (018) 132-973\" str.++ \"+199 (936) 162-415\" str.++ \"+199 (936) 162-415\" str.++ \"+199 (936) 162-415\" str.++ \"+33 (547) 051-264\" str.++ \"+33 (547) 051-264\" str.++ \"+33 (547) 051-264\" str.++ \"+161 (233) 981-513\" str.++ \"+161 (233) 981-513\" str.++ \"+161 (233) 981-513\" str.++ \"+115 (101) 728-328\" str.++ \"+115 (101) 728-328\" str.++ \"+115 (101) 728-328\" str.++ \"+45 (095) 746-635\" str.++ \"+45 (095) 746-635\" str.++ \"+45 (095) 746-635\" str.++ \"+106 (769) 858-438\" str.++ \"+83 (973) 757-831\" str.++ \"+62 (647) 787-775\" str.++ \"+172 (027) 507-632\" str.++ \"+72 (001) 050-856\" str.++ \"+95 (310) 537-401\" str.++ \"+6 (775) 969-238\" str.++ \"+174 (594) 539-946\" str.++ \"+155 (927) 275-860\" str.++ \"+167 (405) 461-331\" str.++ \"+10 (538) 347-401\" str.++ \"+60 (971) 986-103\" str.++ \"+13 (258) 276-941\" str.++ \"+2 (604) 746-137\" str.++ \"+25 (998) 898-180\" str",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\")",
      "(+ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\"\n(str.substr name 0 3)\n\" (\"\n(str.substr name 3 3)\n\") \"\n(str.substr name 6 3)\n\"-\"\n(str.substr name 9 3))",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\" \" \" \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+83 973-757-831\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+62 647-787-775\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+172 027-507-632\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+72 001-050-856\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+95 310-537-401\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+6 775-969-238\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+174 594-539-946\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+155 927-275-860\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+167 405-461-331\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+10 538-347-401\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+60 971-986-103\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+13 258-276-941\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+2 604-746-137\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+25 998-898-180\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+151 862-946-541\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+118 165-041-038\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+144 170-592-272\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+94 462-008-482\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 685-122-086\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+82 675-366-472\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+80 066-433-096\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+163 039-436-166\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+138 808-083-074\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+42 643-245-738\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+169 822-542-726\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+176 767-782-369\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+47 414-369-343\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+138 885-618-512\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+104 158-671-355\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+188 280-087-526\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+50 268-571-336\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+183 225-960-024\" \" \" \"+183 (225) 960-024\" \" \"",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "(str.++ \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\")",
      "(str.++ \"+106 \" \"(769) 858-438\"))",
      "(str.replace name \"-\" \" \")",
      "(str.++ \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\")",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\")",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\")",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\"",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 11 3))\"",
      "(str.++ \"+106 (769) 858-438\" \"\")",
      "(str.++ \"+106 (769) 858-438\" \"\")",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\")",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"",
      "(str.++ \"+106 (769) 858-438\" \"\\n\" \"+83 (973) 757-831\" \"\\n\" \"+62 (647) 787-775\" \"\\n\" \"+172 (027) 507-632\" \"\\n\" \"+72 (001) 050-856\" \"\\n\" \"+95 (310) 537-401\" \"\\n\" \"+6 (775) 969-238\" \"\\n\" \"+174 (594) 539-946\" \"\\n\" \"+155 (927) 275-860\" \"\\n\" \"+167 (405) 461-331\" \"\\n\" \"+10 (538) 347-401\" \"\\n\" \"+60 (971) 986-103\" \"\\n\" \"+13 (258) 276-941\" \"\\n\" \"+2 (604) 746-137\" \"\\n\" \"+25 (998) 898-180\" \"\\n\" \"+151 (862) 946-541\" \"\\n\" \"+118 (165) 041-038\" \"\\n\" \"+144 (170) 592-272\" \"\\n\" \"+94 (462) 008-482\" \"\\n\" \"+82 (685) 122-086\" \"\\n\" \"+82 (675) 366-472\" \"\\n\" \"+80 (066) 433-096\" \"\\n\" \"+163 (039) 436-166\" \"\\n\" \"+138 (808) 083-074\" \"\\n\" \"+42 (643) 245-738\" \"\\n\" \"+169 (822) 542-726\" \"\\n\" \"+176 (767) 782-369\" \"\\n\" \"+47 (414) 369-343\" \"\\n\" \"+138 (885) 618-512\" \"\\n\" \"+104 (158) 671-355\" \"\\n\" \"+188 (280) 087-526\" \"\\n\" \"+50 (268) 571-336\" \"\\n\" \"+183 (225) 960-024\" \"\\n\" \"+58 (191) 982-491\" \"\\n\" \"+9 (507) 092-535\" \"\\n\" \"+64 (061) 601-398\" \"\\n\" \"+189 (831) 591-877\" \"\\n\" \"+129 (425) 765-844\" \"\\n\" \"+94 (856) 734-046\" \"\\n\" \"+35 (082) 845-261\" \"\\n\" \"+185 (394) 622-272\" \"\\n\" \"+163 (905) 707-740\" \"\\n\" \"+23 (448) 213-807\" \"\\n\" \"+42 (634) 077-089\" \"\\n\" \"+18 (051) 287-382\" \"\\n\" \"+29 (773) 545-520\" \"\\n\" \"+43 (249) 097-743\" \"\\n\" \"+158 (674) 736-891\" \"\\n\" \"+45 (124) 771-454\" \"\\n\" \"+180 (029) 457-654\" \"\\n\" \"+75 (227) 250-652\" \"\\n\" \"+5 (528) 317-854\" \"\\n\" \"+81 (849) 629-290\" \"\\n\" \"+46 (005) 119-176\" \"\\n\" \"+108 (150) 380-705\" \"\\n\" \"+40 (122) 224-247\" \"\\n\" \"+68 (890) 680-027\" \"\\n\" \"+169 (060) 204-504\" \"\\n\" \"+95 (620) 820-945\" \"\\n\" \"+43 (592) 938-846\" \"\\n\" \"+7 (023) 296-647\" \"\\n\" \"+20 (541) 401-396\" \"\\n\" \"+64 (751) 365-934\" \"\\n\" \"+163 (546) 119-476\" \"\\n\" \"+198 (557) 666-779\" \"\\n\" \"+14 (673) 759-017\" \"\\n\" \"+161 (086) 020-168\" \"\\n\" \"+65 (970) 575-488\" \"\\n\" \"+2 (455) 126-377\" \"\\n\" \"+196 (728) 585-376\" \"\\n\" \"+33 (117) 430-125\" \"\\n\" \"+195 (488) 831-768\" \"\\n\" \"+86 (468) 718-108\" \"\\n\" \"+194 (278) 716-950\" \"\\n\" \"+43 (730) 685-847\" \"\\n\" \"+140 (794) 289-551\" \"\\n\" \"+21 (679) 740-834\" \"\\n\" \"+98 (717) 997-323\" \"\\n\" \"+47 (401) 100-231\" \"\\n\" \"+143 (726) 462-368\" \"\\n\" \"+147 (864) 005-968\" \"\\n\" \"+130 (590) 757-665\" \"\\n\" \"+197 (700) 858-976\" \"\\n\" \"+158 (344) 541-946\" \"\\n\" \"+56 (242) 901-234\" \"\\n\" \"+132 (313) 075-754\" \"\\n\" \"+130 (517) 953-149\" \"\\n\" \"+158 (684) 878-743\" \"\\n\" \"+52 (836) 582-035\" \"\\n\" \"+138 (117) 484-671\" \"\\n\" \"+50 (012) 148-873\" \"\\n\" \"+105 (048) 919-483\" \"\\n\" \"+18 (209) 851-997\" \"\\n\" \"+176 (938) 056-084\" \"\\n\" \"+141 (018) 132-973\" \"\\n\" \"+199 (936) 162-415\" \"\\n\" \"+33 (547) 051-264\" \"\\n\" \"+161 (233) 981-513\" \"\\n\" \"+115 (101) 728-328\" \"\\n\" \"+45 (095) 746-635\")",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\")\\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\"",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "(str.++ \"+106 \" \"(769) 858-438\"))",
      "(+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(define-fun f (name String) String (str.++ \"+106 (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "(str.++ \"+106 (769) 858-438\" \"\")",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"",
      "(str.++ \"+106 \" \"(769) 858-438\" \" +83 \" \"(973) 757-831\" \" +62 \" \"(647) 787-775\" \" +172 \" \"(027) 507-632\" \" +72 \" \"(001) 050-856\" \" +95 \" \"(310) 537-401\" \" +6 \" \"(775) 969-238\" \" +174 \" \"(594) 539-946\" \" +155 \" \"(927) 275-860\" \" +167 \" \"(405) 461-331\" \" +10 \" \"(538) 347-401\" \" +60 \" \"(971) 986-103\" \" +13 \" \"(258) 276-941\" \" +2 \" \"(604) 746-137\" \" +25 \" \"(998) 898-180\" \" +151 \" \"(862) 946-541\" \" +118 \" \"(165) 041-038\" \" +144 \" \"(170) 592-272\" \" +94 \" \"(462) 008-482\" \" +82 \" \"(685) 122-086\" \" +82 \" \"(675) 366-472\" \" +80 \" \"(066) 433-096\" \" +163 \" \"(039) 436-166\" \" +138 \" \"(808) 083-074\" \" +42 \" \"(643) 245-738\" \" +169 \" \"(822) 542-726\" \" +176 \" \"(767) 782-369\" \" +47 \" \"(414) 369-343\" \" +138 \" \"(885) 618-512\" \" +104 \" \"(158) 671-355\" \" +188 \" \"(280) 087-526\" \" +50 \" \"(268) 571-336\" \" +183 \" \"(225) 960-024\" \" +58 \" \"(191) 982-491\" \" +9 \" \"(507) 092-535\" \" +64 \" \"(061) 601-398\" \" +189 \" \"(831) 591-877\" \" +129 \" \"(425) 765-844\" \" +94 \" \"(856) 734-046\" \" +35 \" \"(082) 845-261\" \" +185 \" \"(394) 622-272\" \" +163 \" \"(905) 707-740\" \" +23 \" \"(448) 213-807\" \" +42 \" \"(634) 077-089\" \" +18 \" \"(051) 287-382\" \" +29 \" \"(773) 545-520\" \" +43 \" \"(249) 097-743\" \" +158 \" \"(674) 736-891\" \" +45 \" \"(124) 771-454\" \" +180 \" \"(029) 457-654\" \" +75 \" \"(227) 250-652\" \" +5 \" \"(528) 317-854\" \" +81 \" \"(849) 629-290\" \" +46 \" \"(005) 119-176\" \" +108 \" \"(150) 380-705\" \" +40 \" \"(122) 224-247\" \" +68 \" \"(890) 680-027\" \" +169 \" \"(060) 204-504\" \" +95 \" \"(620) 820-945\" \" +43 \" \"(592) 938-846\" \" +7 \" \"(023) 296-647\" \" +20 \" \"(541) 401-396\" \" +64 \" \"(751) 365-934\" \" +163 \" \"(546) 119-476\" \" +198 \" \"(557) 666-779\" \" +14 \" \"(673) 759-017\" \" +161 \" \"(086) 020-168\" \" +65 \" \"(970) 575-488\" \" +2 \" \"(455) 126-377\" \" +196 \" \"(728) 585-376\" \" +33 \" \"(117) 430-125\" \" +195 \" \"(488) 831-768\" \" +86 \" \"(468) 718-108\" \" +194 \" \"(278) 716-950\" \" +43 \" \"(730) 685-847\" \" +140 \" \"(794) 289-551\" \" +21 \" \"(679) 740-834\" \" +98 \" \"(717) 997-323\" \" +47 \" \"(401) 100-231\" \" +143 \" \"(726) 462-368\" \" +147 \" \"(864) 005-968\" \" +130 \" \"(590) 757-665\" \" +197 \" \"(700) 858-976\" \" +158 \" \"(344) 541-946\" \" +56 \" \"(242) 901-234\" \" +132 \" \"(313) 075-754\" \" +130 \" \"(517) 953-149\" \" +158 \" \"(684) 878-743\" \" +52 \" \"(836) 582-035\" \" +138 \" \"(117) 484-671\" \" +50 \" \"(012) 148-873\" \" +105 \" \"(048) 919-483\" \" +18 \" \"(209) 851-997\" \" +176 \" \"(938) 056-084\" \" +141 \" \"(018) 132-973\" \" +199 \" \"(936) 162-415\" \" +33 \" \"(547) 051-264\" \" +161 \" \"(233) 981-513\" \" +115 \" \"(101) 728-328\" \" +45 \" \"(095) 746-635\" \" +106 \" \"(769) 858-438\" \" +83 \" \"(973) 757-831\" \" +62 \" \"(647) 787-775\" \" +172 \" \"(027) 507-632\" \" +72 \" \"(001) 050-856\" \" +95 \" \"(310) 537-401\" \" +6 \" \"(775) 969-238\" \" +174 \" \"(594) 539-946\" \" +155 \" \"(927) 275-860\" \" +167 \" \"(405) 461-331\" \" +10 \" \"(538) 347-401\" \" +60 \" \"(971) 986-103\" \" +13 \" \"(258) 276-941\" \" +2 \" \"(604) 746-137\" \" +25 \" \"(998) 898-180\" \" +151 \" \"(862) 946-541\" \" +118 \" \"(165) 041-038\" \" +144 \" \"(170) 592-272\" \" +94 \" \"(462) 008-482\" \" +82 \" \"(685) 122-086\" \" +82 \" \"(675) 366-472\" \" +80 \" \"(066) 433-096\" \" +163 \" \"(039) 436-166\" \" +138 \" \"(808) 083-074\" \" +42 \" \"(643) 245-738\" \" +169 \" \"(822) 542-726\" \" +176 \" \"(767) 782-369\" \" +47 \" \"(414) 369-343\" \" +138 \" \"(885) 618-512\" \" +104 \" \"(158) 671-355\" \" +188 \" \"(280) 087-526\" \" +50 \" \"(268) 571-336\" \" +183 \" \"(225) 960-024\" \" +58 \" \"(191) 982-491\" \" +9 \" \"(507) 092-535\" \" +64 \" \"(061) 601-398\" \" +189 \" \"(831) 591-877\" \" +129 \" \"(425) 765-844\" \" +94 \" \"(856) 734-046\" \" +35 \" \"(082) 845-261\" \" +185 \" \"(394) 622-272\" \" +163 \" \"(905) 707-740\" \" +23 \" \"(448) 213-807\" \" +42 \" \"(634) 077-089\" \" +18 \" \"(051) 287-382\" \" +29 \" \"(773) 545-520\" \" +43 \" \"(249) 097-743\" \" +158 \" \"(674) 736-891\" \" +45 \" \"(124) 771-454\" \" +180 \" \"(029) 457-654\" \" +75 \" \"(227) 250-652\" \" +5 \" \"(528) 317-854\" \" +81 \" \"(849) 629-290\" \" +46 \" \"(005) 119-176\" \" +108 \" \"(150) 380-705\" \" +40 \" \"(122) 224-247\" \" +68 \" \"(890) 680-027\" \" +169 \" \"(060) 204-504\" \" +95 \" \"(620) 820-945\" \" +43 \" \"(592) 938-846\" \" +7 \" \"(023) 296-647\" \" +20 \" \"(541) 401-396\" \" +64 \" \"(751) 365-934\" \" +163 \" \"(546) 119-476\" \" +198 \" \"(557) 666-779\" \" +14 \" \"(673) 759-017\" \" +161 \" \"(086) 020-168\" \" +65 \" \"(970) 575-488\" \" +2 \" \"(455) 126-377\" \" +196 \" \"(728) 585-376\" \" +33 \" \"(117) 430-125\" \" +195 \" \"(488) 831-768\" \" +86 \" \"(468) 718-108\" \" +194 \" \"(278) 716-950\" \" +43 \" \"(730) 685-847\" \" +140 \" \"(794) 289-551\" \" +21 \" \"(679) 740-834\" \" +98 \" \"(717) 997-323\" \" +47 \" \"(401) 100-231\" \" +143 \" \"(726) 462-368\" \" +147 \" \"(864) 005-968\" \" +130 \" \"(590) 757-665\" \" +197 \" \"(700) 858-976\" \" +158 \" \"(344) 541-946\" \" +56 \" \"(242) 901-234\" \" +132 \" \"(313) 075-754\" \" +130 \" \"(517) 953-149\" \" +158 \" \"(684) 878-743\" \" +52 \" \"(836) 582-035\" \" +138 \" \"(117) 484-671\" \" +50 \" \"(012) 148-873\" \" +105 \" \"(048) 919-483\" \" +18 \" \"(209) 851-997\" \" +176 \" \"(938) 056-084\" \" +141 \" \"(018) 132-973\" \" +199 \" \"(936) 162-415\" \" +33 \" \"(547) 051-264\" \" +161 \" \"(233) 981-513\" \" +115 \" \"(101) 728-328\" \" +45 \" \"(095) 746-635\")",
      "\"(str.replace (str.replace (str.replace name \" \" \") \") \"(\") \"-\")\"",
      "(str.++ \"+106 (769) 858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\")",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\")",
      "(str.++ \"+106 (769) 858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"",
      "(str.++ \"+106 (769) 858-438\" str.++ \"+83 (973) 757-831\" str.++ \"+62 (647) 787-775\" str.++ \"+172 (027) 507-632\" str.++ \"+72 (001) 050-856\" str.++ \"+95 (310) 537-401\" str.++ \"+6 (775) 969-238\" str.++ \"+174 (594) 539-946\" str.++ \"+155 (927) 275-860\" str.++ \"+167 (405) 461-331\" str.++ \"+10 (538) 347-401\" str.++ \"+60 (971) 986-103\" str.++ \"+13 (258) 276-941\" str.++ \"+2 (604) 746-137\" str.++ \"+25 (998) 898-180\" str.++ \"+151 (862) 946-541\" str.++ \"+118 (165) 041-038\" str.++ \"+144 (170) 592-272\" str.++ \"+94 (462) 008-482\" str.++ \"+82 (685) 122-086\" str.++ \"+82 (675) 366-472\" str.++ \"+80 (066) 433-096\" str.++ \"+163 (039) 436-166\" str.++ \"+138 (808) 083-074\" str.++ \"+42 (643) 245-738\" str.++ \"+169 (822) 542-726\" str.++ \"+176 (767) 782-369\" str.++ \"+47 (414) 369-343\" str.++ \"+138 (885) 618-512\" str.++ \"+104 (158) 671-355\" str.++ \"+188 (280) 087-526\" str.++ \"+50 (268) 571-336\" str.++ \"+183 (225) 960-024\" str.++ \"+58 (191) 982-491\" str.++ \"+9 (507) 092-535\" str.++ \"+64 (061) 601-398\" str.++ \"+189 (831) 591-877\" str.++ \"+129 (425) 765-844\" str.++ \"+95 (620) 820-945\" str.++ \"+43 (592) 938-846\" str.++ \"+7 (023) 296-647\" str.++ \"+20 (541) 401-396\" str.++ \"+64 (751) 365-934\" str.++ \"+163 (546) 119-476\" str.++ \"+198 (557) 666-779\" str.++ \"+14 (673) 759-017\" str.++ \"+161 (086) 020-168\" str.++ \"+65 (970) 575-488\" str.++ \"+2 (455) 126-377\" str.++ \"+196 (728) 585-376\" str.++ \"+33 (117) 430-125\" str.++ \"+195 (488) 831-768\" str.++ \"+86 (468) 718-108\" str.++ \"+194 (278) 716-950\" str.++ \"+43 (730) 685-847\" str.++ \"+140 (794) 289-551\" str.++ \"+21 (679) 740-834\" str.++ \"+98 (717) 997-323\" str.++ \"+47 (401) 100-231\" str.++ \"+143 (726) 462-368\" str.++ \"+147 (864) 005-968\" str.++ \"+130 (590) 757-665\" str.++ \"+197 (700) 858-976\" str.++ \"+158 (344) 541-946\" str.++ \"+56 (242) 901-234\" str.++ \"+132 (313) 075-754\" str.++ \"+130 (517) 953-149\" str.++ \"+158 (684) 878-743\" str.++ \"+52 (836) 582-035\" str.++ \"+138 (117) 484-671\" str.++ \"+50 (012) 148-873\" str.++ \"+105 (048) 919-483\" str.++ \"+18 (209) 851-997\" str.++ \"+176 (938) 056-084\" str.++ \"+141 (018) 132-973\" str.++ \"+199 (936) 162-415\" str.++ \"+33 (547) 051-264\" str.++ \"+161 (233) 981-513\" str.++ \"+115 (101) 728-328\" str.++ \"+45 (095) 746-635\")",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "(str.++ \"+\"\n        (str.substr name 0 3)\n        \" (\"\n        (str.substr name 3 3)\n        \") \"\n        (str.substr name 6 3)\n        \"-\"\n        (str.substr name 9 3))",
      "(str.++ \"+106 \" \"(769) 858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"",
      "(str.++ \"+106 (769) 858-438\" \" \" \"BRD\" \"DRS\" \"LDS\" \"Branding\" \"Direct Response\" \"Leads\" \"=\" \"/\" \"in\" \"_\" \"9\" \".\" \"microsoft\" \"windows\" \"apple\" \"mac\" \"-\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"0\" \",\" \"<\" \">\" \"/n\" \"%\" \"b\" \"apple\" \"bananas\" \"strawberries\" \"oranges\" \"LLC\" \"Inc\" \"Corporation\" \"Enterprises\" \"Company\" \"(\" \")\" \"+\" \"name\" \",\" (int.to.str (str.len name)) \" \" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3) )",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"",
      "(str.++ \"+106 \" \"(769) 858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\")"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" str.++ \"+106 (769) 858-438\" str.++ \"+106 (769) 858-438\" str.++ \"+83 (973) 757-831\" str.++ \"+83 (973) 757-831\" str.++ \"+83 (973) 757-831\" str.++ \"+62 (647) 787-775\" str.++ \"+62 (647) 787-775\" str.++ \"+62 (647) 787-775\" str.++ \"+172 (027) 507-632\" str.++ \"+172 (027) 507-632\" str.++ \"+172 (027) 507-632\" str.++ \"+72 (001) 050-856\" str.++ \"+72 (001) 050-856\" str.++ \"+72 (001) 050-856\" str.++ \"+95 (310) 537-401\" str.++ \"+95 (310) 537-401\" str.++ \"+95 (310) 537-401\" str.++ \"+6 (775) 969-238\" str.++ \"+6 (775) 969-238\" str.++ \"+6 (775) 969-238\" str.++ \"+174 (594) 539-946\" str.++ \"+174 (594) 539-946\" str.++ \"+174 (594) 539-946\" str.++ \"+155 (927) 275-860\" str.++ \"+155 (927) 275-860\" str.++ \"+155 (927) 275-860\" str.++ \"+167 (405) 461-331\" str.++ \"+167 (405) 461-331\" str.++ \"+167 (405) 461-331\" str.++ \"+10 (538) 347-401\" str.++ \"+10 (538) 347-401\" str.++ \"+10 (538) 347-401\" str.++ \"+60 (971) 986-103\" str.++ \"+60 (971) 986-103\" str.++ \"+60 (971) 986-103\" str.++ \"+13 (258) 276-941\" str.++ \"+13 (258) 276-941\" str.++ \"+13 (258) 276-941\" str.++ \"+2 (604) 746-137\" str.++ \"+2 (604) 746-137\" str.++ \"+2 (604) 746-137\" str.++ \"+25 (998) 898-180\" str.++ \"+25 (998) 898-180\" str.++ \"+25 (998) 898-180\" str.++ \"+151 (862) 946-541\" str.++ \"+151 (862) 946-541\" str.++ \"+151 (862) 946-541\" str.++ \"+118 (165) 041-038\" str.++ \"+118 (165) 041-038\" str.++ \"+118 (165) 041-038\" str.++ \"+144 (170) 592-272\" str.++ \"+144 (170) 592-272\" str.++ \"+144 (170) 592-272\" str.++ \"+94 (462) 008-482\" str.++ \"+94 (462) 008-482\" str.++ \"+94 (462) 008-482\" str.++ \"+82 (685) 122-086\" str.++ \"+82 (685) 122-086\" str.++ \"+82 (685) 122-086\" str.++ \"+82 (675) 366-472\" str.++ \"+82 (675) 366-472\" str.++ \"+82 (675) 366-472\" str.++ \"+80 (066) 433-096\" str.++ \"+80 (066) 433-096\" str.++ \"+80 (066) 433-096\" str.++ \"+163 (039) 436-166\" str.++ \"+163 (039) 436-166\" str.++ \"+163 (039) 436-166\" str.++ \"+138 (808) 083-074\" str.++ \"+138 (808) 083-074\" str.++ \"+138 (808) 083-074\" str.++ \"+42 (643) 245-738\" str.++ \"+42 (643) 245-738\" str.++ \"+42 (643) 245-738\" str.++ \"+169 (822) 542-726\" str.++ \"+169 (822) 542-726\" str.++ \"+169 (822) 542-726\" str.++ \"+176 (767) 782-369\" str.++ \"+176 (767) 782-369\" str.++ \"+176 (767) 782-369\" str.++ \"+47 (414) 369-343\" str.++ \"+47 (414) 369-343\" str.++ \"+47 (414) 369-343\" str.++ \"+138 (885) 618-512\" str.++ \"+138 (885) 618-512\" str.++ \"+138 (885) 618-512\" str.++ \"+104 (158) 671-355\" str.++ \"+104 (158) 671-355\" str.++ \"+104 (158) 671-355\" str.++ \"+188 (280) 087-526\" str.++ \"+188 (280) 087-526\" str.++ \"+188 (280) 087-526\" str.++ \"+50 (268) 571-336\" str.++ \"+50 (268) 571-336\" str.++ \"+50 (268) 571-336\" str.++ \"+183 (225) 960-024\" str.++ \"+183 (225) 960-024\" str.++ \"+183 (225) 960-024\" str.++ \"+58 (191) 982-491\" str.++ \"+58 (191) 982-491\" str.++ \"+58 (191) 982-491\" str.++ \"+9 (507) 092-535\" str.++ \"+9 (507) 092-535\" str.++ \"+9 (507) 092-535\" str.++ \"+64 (061) 601-398\" str.++ \"+64 (061) 601-398\" str.++ \"+64 (061) 601-398\" str.++ \"+189 (831) 591-877\" str.++ \"+189 (831) 591-877\" str.++ \"+189 (831) 591-877\" str.++ \"+129 (425) 765-844\" str.++ \"+129 (425) 765-844\" str.++ \"+129 (425) 765-844\" str.++ \"+94 (856) 734-046\" str.++ \"+94 (856) 734-046\" str.++ \"+94 (856) 734-046\" str.++ \"+35 (082) 845-261\" str.++ \"+35 (082) 845-261\" str.++ \"+35 (082) 845-261\" str.++ \"+185 (394) 622-272\" str.++ \"+185 (394) 622-272\" str.++ \"+185 (394) 622-272\" str.++ \"+163 (905) 707-740\" str.++ \"+163 (905) 707-740\" str.++ \"+163 (905) 707-740\" str.++ \"+23 (448) 213-807\" str.++ \"+23 (448) 213-807\" str.++ \"+23 (448) 213-807\" str.++ \"+42 (634) 077-089\" str.++ \"+42 (634) 077-089\" str.++ \"+42 (634) 077-089\" str.++ \"+18 (051) 287-382\" str.++ \"+18 (051) 287-382\" str.++ \"+18 (051) 287-382\" str.++ \"+29 (773) 545-520\" str.++ \"+29 (773) 545-520\" str.++ \"+29 (773) 545-520\" str.++ \"+43 (249) 097-743\" str.++ \"+43 (249) 097-743\" str.++ \"+43 (249) 097-743\" str.++ \"+158 (674) 736-891\" str.++ \"+158 (674) 736-891\" str.++ \"+158 (674) 736-891\" str.++ \"+45 (124) 771-454\" str.++ \"+45 (124) 771-454\" str.++ \"+45 (124) 771-454\" str.++ \"+180 (029) 457-654\" str.++ \"+180 (029) 457-654\" str.++ \"+180 (029) 457-654\" str.++ \"+75 (227) 250-652\" str.++ \"+75 (227) 250-652\" str.++ \"+75 (227) 250-652\" str.++ \"+5 (528) 317-854\" str.++ \"+5 (528) 317-854\" str.++ \"+5 (528) 317-854\" str.++ \"+81 (849) 629-290\" str.++ \"+81 (849) 629-290\" str.++ \"+81 (849) 629-290\" str.++ \"+46 (005) 119-176\" str.++ \"+46 (005) 119-176\" str.++ \"+46 (005) 119-176\" str.++ \"+108 (150) 380-705\" str.++ \"+108 (150) 380-705\" str.++ \"+108 (150) 380-705\" str.++ \"+40 (122) 224-247\" str.++ \"+40 (122) 224-247\" str.++ \"+40 (122) 224-247\" str.++ \"+68 (890) 680-027\" str.++ \"+68 (890) 680-027\" str.++ \"+68 (890) 680-027\" str.++ \"+169 (060) 204-504\" str.++ \"+169 (060) 204-504\" str.++ \"+169 (060) 204-504\" str.++ \"+95 (620) 820-945\" str.++ \"+95 (620) 820-945\" str.++ \"+95 (620) 820-945\" str.++ \"+43 (592) 938-846\" str.++ \"+43 (592) 938-846\" str.++ \"+43 (592) 938-846\" str.++ \"+7 (023) 296-647\" str.++ \"+7 (023) 296-647\" str.++ \"+7 (023) 296-647\" str.++ \"+20 (541) 401-396\" str.++ \"+20 (541) 401-396\" str.++ \"+20 (541) 401-396\" str.++ \"+64 (751) 365-934\" str.++ \"+64 (751) 365-934\" str.++ \"+64 (751) 365-934\" str.++ \"+163 (546) 119-476\" str.++ \"+163 (546) 119-476\" str.++ \"+163 (546) 119-476\" str.++ \"+198 (557) 666-779\" str.++ \"+198 (557) 666-779\" str.++ \"+198 (557) 666-779\" str.++ \"+14 (673) 759-017\" str.++ \"+14 (673) 759-017\" str.++ \"+14 (673) 759-017\" str.++ \"+161 (086) 020-168\" str.++ \"+161 (086) 020-168\" str.++ \"+161 (086) 020-168\" str.++ \"+65 (970) 575-488\" str.++ \"+65 (970) 575-488\" str.++ \"+65 (970) 575-488\" str.++ \"+2 (455) 126-377\" str.++ \"+2 (455) 126-377\" str.++ \"+2 (455) 126-377\" str.++ \"+196 (728) 585-376\" str.++ \"+196 (728) 585-376\" str.++ \"+196 (728) 585-376\" str.++ \"+33 (117) 430-125\" str.++ \"+33 (117) 430-125\" str.++ \"+33 (117) 430-125\" str.++ \"+195 (488) 831-768\" str.++ \"+195 (488) 831-768\" str.++ \"+195 (488) 831-768\" str.++ \"+86 (468) 718-108\" str.++ \"+86 (468) 718-108\" str.++ \"+86 (468) 718-108\" str.++ \"+194 (278) 716-950\" str.++ \"+194 (278) 716-950\" str.++ \"+194 (278) 716-950\" str.++ \"+43 (730) 685-847\" str.++ \"+43 (730) 685-847\" str.++ \"+43 (730) 685-847\" str.++ \"+140 (794) 289-551\" str.++ \"+140 (794) 289-551\" str.++ \"+140 (794) 289-551\" str.++ \"+21 (679) 740-834\" str.++ \"+21 (679) 740-834\" str.++ \"+21 (679) 740-834\" str.++ \"+98 (717) 997-323\" str.++ \"+98 (717) 997-323\" str.++ \"+98 (717) 997-323\" str.++ \"+47 (401) 100-231\" str.++ \"+47 (401) 100-231\" str.++ \"+47 (401) 100-231\" str.++ \"+143 (726) 462-368\" str.++ \"+143 (726) 462-368\" str.++ \"+143 (726) 462-368\" str.++ \"+147 (864) 005-968\" str.++ \"+147 (864) 005-968\" str.++ \"+147 (864) 005-968\" str.++ \"+130 (590) 757-665\" str.++ \"+130 (590) 757-665\" str.++ \"+130 (590) 757-665\" str.++ \"+197 (700) 858-976\" str.++ \"+197 (700) 858-976\" str.++ \"+197 (700) 858-976\" str.++ \"+158 (344) 541-946\" str.++ \"+158 (344) 541-946\" str.++ \"+158 (344) 541-946\" str.++ \"+56 (242) 901-234\" str.++ \"+56 (242) 901-234\" str.++ \"+56 (242) 901-234\" str.++ \"+132 (313) 075-754\" str.++ \"+132 (313) 075-754\" str.++ \"+132 (313) 075-754\" str.++ \"+130 (517) 953-149\" str.++ \"+130 (517) 953-149\" str.++ \"+130 (517) 953-149\" str.++ \"+158 (684) 878-743\" str.++ \"+158 (684) 878-743\" str.++ \"+158 (684) 878-743\" str.++ \"+52 (836) 582-035\" str.++ \"+52 (836) 582-035\" str.++ \"+52 (836) 582-035\" str.++ \"+138 (117) 484-671\" str.++ \"+138 (117) 484-671\" str.++ \"+138 (117) 484-671\" str.++ \"+50 (012) 148-873\" str.++ \"+50 (012) 148-873\" str.++ \"+50 (012) 148-873\" str.++ \"+105 (048) 919-483\" str.++ \"+105 (048) 919-483\" str.++ \"+105 (048) 919-483\" str.++ \"+18 (209) 851-997\" str.++ \"+18 (209) 851-997\" str.++ \"+18 (209) 851-997\" str.++ \"+176 (938) 056-084\" str.++ \"+176 (938) 056-084\" str.++ \"+176 (938) 056-084\" str.++ \"+141 (018) 132-973\" str.++ \"+141 (018) 132-973\" str.++ \"+141 (018) 132-973\" str.++ \"+199 (936) 162-415\" str.++ \"+199 (936) 162-415\" str.++ \"+199 (936) 162-415\" str.++ \"+33 (547) 051-264\" str.++ \"+33 (547) 051-264\" str.++ \"+33 (547) 051-264\" str.++ \"+161 (233) 981-513\" str.++ \"+161 (233) 981-513\" str.++ \"+161 (233) 981-513\" str.++ \"+115 (101) 728-328\" str.++ \"+115 (101) 728-328\" str.++ \"+115 (101) 728-328\" str.++ \"+45 (095) 746-635\" str.++ \"+45 (095) 746-635\" str.++ \"+45 (095) 746-635\" str.++ \"+106 (769) 858-438\" str.++ \"+83 (973) 757-831\" str.++ \"+62 (647) 787-775\" str.++ \"+172 (027) 507-632\" str.++ \"+72 (001) 050-856\" str.++ \"+95 (310) 537-401\" str.++ \"+6 (775) 969-238\" str.++ \"+174 (594) 539-946\" str.++ \"+155 (927) 275-860\" str.++ \"+167 (405) 461-331\" str.++ \"+10 (538) 347-401\" str.++ \"+60 (971) 986-103\" str.++ \"+13 (258) 276-941\" str.++ \"+2 (604) 746-137\" str.++ \"+25 (998) 898-180\" str))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (+ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\" \" \" \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+83 973-757-831\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+62 647-787-775\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+172 027-507-632\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+72 001-050-856\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+95 310-537-401\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+6 775-969-238\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+174 594-539-946\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+155 927-275-860\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+167 405-461-331\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+10 538-347-401\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+60 971-986-103\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+13 258-276-941\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+2 604-746-137\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+25 998-898-180\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+151 862-946-541\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+118 165-041-038\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+144 170-592-272\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+94 462-008-482\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 685-122-086\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+82 675-366-472\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+80 066-433-096\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+163 039-436-166\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+138 808-083-074\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+42 643-245-738\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+169 822-542-726\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+176 767-782-369\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+47 414-369-343\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+138 885-618-512\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+104 158-671-355\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+188 280-087-526\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+50 268-571-336\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+183 225-960-024\" \" \" \"+183 (225) 960-024\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\"))",
      "(define-fun f (name String) String (str.++ \"+106 \" \"(769) 858-438\"))",
      "(define-fun f (name String) String (str.replace name \"-\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\")",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 11 3))\")",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \"\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \"\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \"\\n\" \"+83 (973) 757-831\" \"\\n\" \"+62 (647) 787-775\" \"\\n\" \"+172 (027) 507-632\" \"\\n\" \"+72 (001) 050-856\" \"\\n\" \"+95 (310) 537-401\" \"\\n\" \"+6 (775) 969-238\" \"\\n\" \"+174 (594) 539-946\" \"\\n\" \"+155 (927) 275-860\" \"\\n\" \"+167 (405) 461-331\" \"\\n\" \"+10 (538) 347-401\" \"\\n\" \"+60 (971) 986-103\" \"\\n\" \"+13 (258) 276-941\" \"\\n\" \"+2 (604) 746-137\" \"\\n\" \"+25 (998) 898-180\" \"\\n\" \"+151 (862) 946-541\" \"\\n\" \"+118 (165) 041-038\" \"\\n\" \"+144 (170) 592-272\" \"\\n\" \"+94 (462) 008-482\" \"\\n\" \"+82 (685) 122-086\" \"\\n\" \"+82 (675) 366-472\" \"\\n\" \"+80 (066) 433-096\" \"\\n\" \"+163 (039) 436-166\" \"\\n\" \"+138 (808) 083-074\" \"\\n\" \"+42 (643) 245-738\" \"\\n\" \"+169 (822) 542-726\" \"\\n\" \"+176 (767) 782-369\" \"\\n\" \"+47 (414) 369-343\" \"\\n\" \"+138 (885) 618-512\" \"\\n\" \"+104 (158) 671-355\" \"\\n\" \"+188 (280) 087-526\" \"\\n\" \"+50 (268) 571-336\" \"\\n\" \"+183 (225) 960-024\" \"\\n\" \"+58 (191) 982-491\" \"\\n\" \"+9 (507) 092-535\" \"\\n\" \"+64 (061) 601-398\" \"\\n\" \"+189 (831) 591-877\" \"\\n\" \"+129 (425) 765-844\" \"\\n\" \"+94 (856) 734-046\" \"\\n\" \"+35 (082) 845-261\" \"\\n\" \"+185 (394) 622-272\" \"\\n\" \"+163 (905) 707-740\" \"\\n\" \"+23 (448) 213-807\" \"\\n\" \"+42 (634) 077-089\" \"\\n\" \"+18 (051) 287-382\" \"\\n\" \"+29 (773) 545-520\" \"\\n\" \"+43 (249) 097-743\" \"\\n\" \"+158 (674) 736-891\" \"\\n\" \"+45 (124) 771-454\" \"\\n\" \"+180 (029) 457-654\" \"\\n\" \"+75 (227) 250-652\" \"\\n\" \"+5 (528) 317-854\" \"\\n\" \"+81 (849) 629-290\" \"\\n\" \"+46 (005) 119-176\" \"\\n\" \"+108 (150) 380-705\" \"\\n\" \"+40 (122) 224-247\" \"\\n\" \"+68 (890) 680-027\" \"\\n\" \"+169 (060) 204-504\" \"\\n\" \"+95 (620) 820-945\" \"\\n\" \"+43 (592) 938-846\" \"\\n\" \"+7 (023) 296-647\" \"\\n\" \"+20 (541) 401-396\" \"\\n\" \"+64 (751) 365-934\" \"\\n\" \"+163 (546) 119-476\" \"\\n\" \"+198 (557) 666-779\" \"\\n\" \"+14 (673) 759-017\" \"\\n\" \"+161 (086) 020-168\" \"\\n\" \"+65 (970) 575-488\" \"\\n\" \"+2 (455) 126-377\" \"\\n\" \"+196 (728) 585-376\" \"\\n\" \"+33 (117) 430-125\" \"\\n\" \"+195 (488) 831-768\" \"\\n\" \"+86 (468) 718-108\" \"\\n\" \"+194 (278) 716-950\" \"\\n\" \"+43 (730) 685-847\" \"\\n\" \"+140 (794) 289-551\" \"\\n\" \"+21 (679) 740-834\" \"\\n\" \"+98 (717) 997-323\" \"\\n\" \"+47 (401) 100-231\" \"\\n\" \"+143 (726) 462-368\" \"\\n\" \"+147 (864) 005-968\" \"\\n\" \"+130 (590) 757-665\" \"\\n\" \"+197 (700) 858-976\" \"\\n\" \"+158 (344) 541-946\" \"\\n\" \"+56 (242) 901-234\" \"\\n\" \"+132 (313) 075-754\" \"\\n\" \"+130 (517) 953-149\" \"\\n\" \"+158 (684) 878-743\" \"\\n\" \"+52 (836) 582-035\" \"\\n\" \"+138 (117) 484-671\" \"\\n\" \"+50 (012) 148-873\" \"\\n\" \"+105 (048) 919-483\" \"\\n\" \"+18 (209) 851-997\" \"\\n\" \"+176 (938) 056-084\" \"\\n\" \"+141 (018) 132-973\" \"\\n\" \"+199 (936) 162-415\" \"\\n\" \"+33 (547) 051-264\" \"\\n\" \"+161 (233) 981-513\" \"\\n\" \"+115 (101) 728-328\" \"\\n\" \"+45 (095) 746-635\"))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\")\\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\")",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 \" \"(769) 858-438\"))",
      "(define-fun f (name String) String (+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \"\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 \" \"(769) 858-438\" \" +83 \" \"(973) 757-831\" \" +62 \" \"(647) 787-775\" \" +172 \" \"(027) 507-632\" \" +72 \" \"(001) 050-856\" \" +95 \" \"(310) 537-401\" \" +6 \" \"(775) 969-238\" \" +174 \" \"(594) 539-946\" \" +155 \" \"(927) 275-860\" \" +167 \" \"(405) 461-331\" \" +10 \" \"(538) 347-401\" \" +60 \" \"(971) 986-103\" \" +13 \" \"(258) 276-941\" \" +2 \" \"(604) 746-137\" \" +25 \" \"(998) 898-180\" \" +151 \" \"(862) 946-541\" \" +118 \" \"(165) 041-038\" \" +144 \" \"(170) 592-272\" \" +94 \" \"(462) 008-482\" \" +82 \" \"(685) 122-086\" \" +82 \" \"(675) 366-472\" \" +80 \" \"(066) 433-096\" \" +163 \" \"(039) 436-166\" \" +138 \" \"(808) 083-074\" \" +42 \" \"(643) 245-738\" \" +169 \" \"(822) 542-726\" \" +176 \" \"(767) 782-369\" \" +47 \" \"(414) 369-343\" \" +138 \" \"(885) 618-512\" \" +104 \" \"(158) 671-355\" \" +188 \" \"(280) 087-526\" \" +50 \" \"(268) 571-336\" \" +183 \" \"(225) 960-024\" \" +58 \" \"(191) 982-491\" \" +9 \" \"(507) 092-535\" \" +64 \" \"(061) 601-398\" \" +189 \" \"(831) 591-877\" \" +129 \" \"(425) 765-844\" \" +94 \" \"(856) 734-046\" \" +35 \" \"(082) 845-261\" \" +185 \" \"(394) 622-272\" \" +163 \" \"(905) 707-740\" \" +23 \" \"(448) 213-807\" \" +42 \" \"(634) 077-089\" \" +18 \" \"(051) 287-382\" \" +29 \" \"(773) 545-520\" \" +43 \" \"(249) 097-743\" \" +158 \" \"(674) 736-891\" \" +45 \" \"(124) 771-454\" \" +180 \" \"(029) 457-654\" \" +75 \" \"(227) 250-652\" \" +5 \" \"(528) 317-854\" \" +81 \" \"(849) 629-290\" \" +46 \" \"(005) 119-176\" \" +108 \" \"(150) 380-705\" \" +40 \" \"(122) 224-247\" \" +68 \" \"(890) 680-027\" \" +169 \" \"(060) 204-504\" \" +95 \" \"(620) 820-945\" \" +43 \" \"(592) 938-846\" \" +7 \" \"(023) 296-647\" \" +20 \" \"(541) 401-396\" \" +64 \" \"(751) 365-934\" \" +163 \" \"(546) 119-476\" \" +198 \" \"(557) 666-779\" \" +14 \" \"(673) 759-017\" \" +161 \" \"(086) 020-168\" \" +65 \" \"(970) 575-488\" \" +2 \" \"(455) 126-377\" \" +196 \" \"(728) 585-376\" \" +33 \" \"(117) 430-125\" \" +195 \" \"(488) 831-768\" \" +86 \" \"(468) 718-108\" \" +194 \" \"(278) 716-950\" \" +43 \" \"(730) 685-847\" \" +140 \" \"(794) 289-551\" \" +21 \" \"(679) 740-834\" \" +98 \" \"(717) 997-323\" \" +47 \" \"(401) 100-231\" \" +143 \" \"(726) 462-368\" \" +147 \" \"(864) 005-968\" \" +130 \" \"(590) 757-665\" \" +197 \" \"(700) 858-976\" \" +158 \" \"(344) 541-946\" \" +56 \" \"(242) 901-234\" \" +132 \" \"(313) 075-754\" \" +130 \" \"(517) 953-149\" \" +158 \" \"(684) 878-743\" \" +52 \" \"(836) 582-035\" \" +138 \" \"(117) 484-671\" \" +50 \" \"(012) 148-873\" \" +105 \" \"(048) 919-483\" \" +18 \" \"(209) 851-997\" \" +176 \" \"(938) 056-084\" \" +141 \" \"(018) 132-973\" \" +199 \" \"(936) 162-415\" \" +33 \" \"(547) 051-264\" \" +161 \" \"(233) 981-513\" \" +115 \" \"(101) 728-328\" \" +45 \" \"(095) 746-635\" \" +106 \" \"(769) 858-438\" \" +83 \" \"(973) 757-831\" \" +62 \" \"(647) 787-775\" \" +172 \" \"(027) 507-632\" \" +72 \" \"(001) 050-856\" \" +95 \" \"(310) 537-401\" \" +6 \" \"(775) 969-238\" \" +174 \" \"(594) 539-946\" \" +155 \" \"(927) 275-860\" \" +167 \" \"(405) 461-331\" \" +10 \" \"(538) 347-401\" \" +60 \" \"(971) 986-103\" \" +13 \" \"(258) 276-941\" \" +2 \" \"(604) 746-137\" \" +25 \" \"(998) 898-180\" \" +151 \" \"(862) 946-541\" \" +118 \" \"(165) 041-038\" \" +144 \" \"(170) 592-272\" \" +94 \" \"(462) 008-482\" \" +82 \" \"(685) 122-086\" \" +82 \" \"(675) 366-472\" \" +80 \" \"(066) 433-096\" \" +163 \" \"(039) 436-166\" \" +138 \" \"(808) 083-074\" \" +42 \" \"(643) 245-738\" \" +169 \" \"(822) 542-726\" \" +176 \" \"(767) 782-369\" \" +47 \" \"(414) 369-343\" \" +138 \" \"(885) 618-512\" \" +104 \" \"(158) 671-355\" \" +188 \" \"(280) 087-526\" \" +50 \" \"(268) 571-336\" \" +183 \" \"(225) 960-024\" \" +58 \" \"(191) 982-491\" \" +9 \" \"(507) 092-535\" \" +64 \" \"(061) 601-398\" \" +189 \" \"(831) 591-877\" \" +129 \" \"(425) 765-844\" \" +94 \" \"(856) 734-046\" \" +35 \" \"(082) 845-261\" \" +185 \" \"(394) 622-272\" \" +163 \" \"(905) 707-740\" \" +23 \" \"(448) 213-807\" \" +42 \" \"(634) 077-089\" \" +18 \" \"(051) 287-382\" \" +29 \" \"(773) 545-520\" \" +43 \" \"(249) 097-743\" \" +158 \" \"(674) 736-891\" \" +45 \" \"(124) 771-454\" \" +180 \" \"(029) 457-654\" \" +75 \" \"(227) 250-652\" \" +5 \" \"(528) 317-854\" \" +81 \" \"(849) 629-290\" \" +46 \" \"(005) 119-176\" \" +108 \" \"(150) 380-705\" \" +40 \" \"(122) 224-247\" \" +68 \" \"(890) 680-027\" \" +169 \" \"(060) 204-504\" \" +95 \" \"(620) 820-945\" \" +43 \" \"(592) 938-846\" \" +7 \" \"(023) 296-647\" \" +20 \" \"(541) 401-396\" \" +64 \" \"(751) 365-934\" \" +163 \" \"(546) 119-476\" \" +198 \" \"(557) 666-779\" \" +14 \" \"(673) 759-017\" \" +161 \" \"(086) 020-168\" \" +65 \" \"(970) 575-488\" \" +2 \" \"(455) 126-377\" \" +196 \" \"(728) 585-376\" \" +33 \" \"(117) 430-125\" \" +195 \" \"(488) 831-768\" \" +86 \" \"(468) 718-108\" \" +194 \" \"(278) 716-950\" \" +43 \" \"(730) 685-847\" \" +140 \" \"(794) 289-551\" \" +21 \" \"(679) 740-834\" \" +98 \" \"(717) 997-323\" \" +47 \" \"(401) 100-231\" \" +143 \" \"(726) 462-368\" \" +147 \" \"(864) 005-968\" \" +130 \" \"(590) 757-665\" \" +197 \" \"(700) 858-976\" \" +158 \" \"(344) 541-946\" \" +56 \" \"(242) 901-234\" \" +132 \" \"(313) 075-754\" \" +130 \" \"(517) 953-149\" \" +158 \" \"(684) 878-743\" \" +52 \" \"(836) 582-035\" \" +138 \" \"(117) 484-671\" \" +50 \" \"(012) 148-873\" \" +105 \" \"(048) 919-483\" \" +18 \" \"(209) 851-997\" \" +176 \" \"(938) 056-084\" \" +141 \" \"(018) 132-973\" \" +199 \" \"(936) 162-415\" \" +33 \" \"(547) 051-264\" \" +161 \" \"(233) 981-513\" \" +115 \" \"(101) 728-328\" \" +45 \" \"(095) 746-635\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" str.++ \"+83 (973) 757-831\" str.++ \"+62 (647) 787-775\" str.++ \"+172 (027) 507-632\" str.++ \"+72 (001) 050-856\" str.++ \"+95 (310) 537-401\" str.++ \"+6 (775) 969-238\" str.++ \"+174 (594) 539-946\" str.++ \"+155 (927) 275-860\" str.++ \"+167 (405) 461-331\" str.++ \"+10 (538) 347-401\" str.++ \"+60 (971) 986-103\" str.++ \"+13 (258) 276-941\" str.++ \"+2 (604) 746-137\" str.++ \"+25 (998) 898-180\" str.++ \"+151 (862) 946-541\" str.++ \"+118 (165) 041-038\" str.++ \"+144 (170) 592-272\" str.++ \"+94 (462) 008-482\" str.++ \"+82 (685) 122-086\" str.++ \"+82 (675) 366-472\" str.++ \"+80 (066) 433-096\" str.++ \"+163 (039) 436-166\" str.++ \"+138 (808) 083-074\" str.++ \"+42 (643) 245-738\" str.++ \"+169 (822) 542-726\" str.++ \"+176 (767) 782-369\" str.++ \"+47 (414) 369-343\" str.++ \"+138 (885) 618-512\" str.++ \"+104 (158) 671-355\" str.++ \"+188 (280) 087-526\" str.++ \"+50 (268) 571-336\" str.++ \"+183 (225) 960-024\" str.++ \"+58 (191) 982-491\" str.++ \"+9 (507) 092-535\" str.++ \"+64 (061) 601-398\" str.++ \"+189 (831) 591-877\" str.++ \"+129 (425) 765-844\" str.++ \"+95 (620) 820-945\" str.++ \"+43 (592) 938-846\" str.++ \"+7 (023) 296-647\" str.++ \"+20 (541) 401-396\" str.++ \"+64 (751) 365-934\" str.++ \"+163 (546) 119-476\" str.++ \"+198 (557) 666-779\" str.++ \"+14 (673) 759-017\" str.++ \"+161 (086) 020-168\" str.++ \"+65 (970) 575-488\" str.++ \"+2 (455) 126-377\" str.++ \"+196 (728) 585-376\" str.++ \"+33 (117) 430-125\" str.++ \"+195 (488) 831-768\" str.++ \"+86 (468) 718-108\" str.++ \"+194 (278) 716-950\" str.++ \"+43 (730) 685-847\" str.++ \"+140 (794) 289-551\" str.++ \"+21 (679) 740-834\" str.++ \"+98 (717) 997-323\" str.++ \"+47 (401) 100-231\" str.++ \"+143 (726) 462-368\" str.++ \"+147 (864) 005-968\" str.++ \"+130 (590) 757-665\" str.++ \"+197 (700) 858-976\" str.++ \"+158 (344) 541-946\" str.++ \"+56 (242) 901-234\" str.++ \"+132 (313) 075-754\" str.++ \"+130 (517) 953-149\" str.++ \"+158 (684) 878-743\" str.++ \"+52 (836) 582-035\" str.++ \"+138 (117) 484-671\" str.++ \"+50 (012) 148-873\" str.++ \"+105 (048) 919-483\" str.++ \"+18 (209) 851-997\" str.++ \"+176 (938) 056-084\" str.++ \"+141 (018) 132-973\" str.++ \"+199 (936) 162-415\" str.++ \"+33 (547) 051-264\" str.++ \"+161 (233) 981-513\" str.++ \"+115 (101) 728-328\" str.++ \"+45 (095) 746-635\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+106 \" \"(769) 858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"BRD\" \"DRS\" \"LDS\" \"Branding\" \"Direct Response\" \"Leads\" \"=\" \"/\" \"in\" \"_\" \"9\" \".\" \"microsoft\" \"windows\" \"apple\" \"mac\" \"-\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"0\" \",\" \"<\" \">\" \"/n\" \"%\" \"b\" \"apple\" \"bananas\" \"strawberries\" \"oranges\" \"LLC\" \"Inc\" \"Corporation\" \"Enterprises\" \"Company\" \"(\" \")\" \"+\" \"name\" \",\" (int.to.str (str.len name)) \" \" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+83 (973) 757-831\" \" \" \"+62 (647) 787-775\" \" \" \"+172 (027) 507-632\" \" \" \"+72 (001) 050-856\" \" \" \"+95 (310) 537-401\" \" \" \"+6 (775) 969-238\" \" \" \"+174 (594) 539-946\" \" \" \"+155 (927) 275-860\" \" \" \"+167 (405) 461-331\" \" \" \"+10 (538) 347-401\" \" \" \"+60 (971) 986-103\" \" \" \"+13 (258) 276-941\" \" \" \"+2 (604) 746-137\" \" \" \"+25 (998) 898-180\" \" \" \"+151 (862) 946-541\" \" \" \"+118 (165) 041-038\" \" \" \"+144 (170) 592-272\" \" \" \"+94 (462) 008-482\" \" \" \"+82 (685) 122-086\" \" \" \"+82 (675) 366-472\" \" \" \"+80 (066) 433-096\" \" \" \"+163 (039) 436-166\" \" \" \"+138 (808) 083-074\" \" \" \"+42 (643) 245-738\" \" \" \"+169 (822) 542-726\" \" \" \"+176 (767) 782-369\" \" \" \"+47 (414) 369-343\" \" \" \"+138 (885) 618-512\" \" \" \"+104 (158) 671-355\" \" \" \"+188 (280) 087-526\" \" \" \"+50 (268) 571-336\" \" \" \"+183 (225) 960-024\" \" \" \"+58 (191) 982-491\" \" \" \"+9 (507) 092-535\" \" \" \"+64 (061) 601-398\" \" \" \"+189 (831) 591-877\" \" \" \"+129 (425) 765-844\" \" \" \"+94 (856) 734-046\" \" \" \"+35 (082) 845-261\" \" \" \"+185 (394) 622-272\" \" \" \"+163 (905) 707-740\" \" \" \"+23 (448) 213-807\" \" \" \"+42 (634) 077-089\" \" \" \"+18 (051) 287-382\" \" \" \"+29 (773) 545-520\" \" \" \"+43 (249) 097-743\" \" \" \"+158 (674) 736-891\" \" \" \"+45 (124) 771-454\" \" \" \"+180 (029) 457-654\" \" \" \"+75 (227) 250-652\" \" \" \"+5 (528) 317-854\" \" \" \"+81 (849) 629-290\" \" \" \"+46 (005) 119-176\" \" \" \"+108 (150) 380-705\" \" \" \"+40 (122) 224-247\" \" \" \"+68 (890) 680-027\" \" \" \"+169 (060) 204-504\" \" \" \"+95 (620) 820-945\" \" \" \"+43 (592) 938-846\" \" \" \"+7 (023) 296-647\" \" \" \"+20 (541) 401-396\" \" \" \"+64 (751) 365-934\" \" \" \"+163 (546) 119-476\" \" \" \"+198 (557) 666-779\" \" \" \"+14 (673) 759-017\" \" \" \"+161 (086) 020-168\" \" \" \"+65 (970) 575-488\" \" \" \"+2 (455) 126-377\" \" \" \"+196 (728) 585-376\" \" \" \"+33 (117) 430-125\" \" \" \"+195 (488) 831-768\" \" \" \"+86 (468) 718-108\" \" \" \"+194 (278) 716-950\" \" \" \"+43 (730) 685-847\" \" \" \"+140 (794) 289-551\" \" \" \"+21 (679) 740-834\" \" \" \"+98 (717) 997-323\" \" \" \"+47 (401) 100-231\" \" \" \"+143 (726) 462-368\" \" \" \"+147 (864) 005-968\" \" \" \"+130 (590) 757-665\" \" \" \"+197 (700) 858-976\" \" \" \"+158 (344) 541-946\" \" \" \"+56 (242) 901-234\" \" \" \"+132 (313) 075-754\" \" \" \"+130 (517) 953-149\" \" \" \"+158 (684) 878-743\" \" \" \"+52 (836) 582-035\" \" \" \"+138 (117) 484-671\" \" \" \"+50 (012) 148-873\" \" \" \"+105 (048) 919-483\" \" \" \"+18 (209) 851-997\" \" \" \"+176 (938) 056-084\" \" \" \"+141 (018) 132-973\" \" \" \"+199 (936) 162-415\" \" \" \"+33 (547) 051-264\" \" \" \"+161 (233) 981-513\" \" \" \"+115 (101) 728-328\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 \" \"(769) 858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))"
    ],
    "constants": [
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+45 (095) 746-635",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "+106 (769) 858-438",
        " "
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        "+60 971-986-103",
        "+80 (066) 433-096",
        "+82 685-122-086",
        "+50 268-571-336",
        " ",
        "+60 (971) 986-103",
        "+183 225-960-024",
        "+172 (027) 507-632",
        "+174 594-539-946",
        "+83 973-757-831",
        "+42 (643) 245-738",
        "+95 (310) 537-401",
        "+13 258-276-941",
        "+155 927-275-860",
        "+151 862-946-541",
        "+151 (862) 946-541",
        "+94 462-008-482",
        "+106 769-858-438",
        "+80 066-433-096",
        "+138 808-083-074",
        "+50 (268) 571-336",
        "+138 (808) 083-074",
        "+118 165-041-038",
        "+2 604-746-137",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+174 (594) 539-946",
        "+167 (405) 461-331",
        "+118 (165) 041-038",
        "+188 280-087-526",
        "+183 (225) 960-024",
        "+106 (769) 858-438",
        "+62 (647) 787-775",
        "+138 (885) 618-512",
        "+163 039-436-166",
        "+155 (927) 275-860",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+144 (170) 592-272",
        "+167 405-461-331",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+176 767-782-369",
        "+72 001-050-856",
        "+6 775-969-238",
        "+138 885-618-512",
        "+82 (685) 122-086",
        "+10 538-347-401",
        "+83 (973) 757-831",
        "+47 (414) 369-343",
        "+62 647-787-775",
        "+144 170-592-272",
        "+176 (767) 782-369",
        "+25 998-898-180",
        "+169 822-542-726",
        "+47 414-369-343",
        "+42 643-245-738",
        "+104 158-671-355",
        "+104 (158) 671-355",
        "+188 (280) 087-526",
        "+10 (538) 347-401",
        "+94 (462) 008-482",
        "+82 (675) 366-472",
        "+82 675-366-472",
        "+172 027-507-632",
        "+25 (998) 898-180",
        "+95 310-537-401"
      ],
      [
        "+106 (769) 858-438",
        " "
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+45 (095) 746-635",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "+106 ",
        "(769) 858-438"
      ],
      [
        "-",
        " "
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+45 (095) 746-635",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))"
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        " ",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ],
      [
        "+106 (769) 858-438",
        " "
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3))"
      ],
      [
        "",
        "+106 (769) 858-438"
      ],
      [
        "",
        "+106 (769) 858-438"
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        " ",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+45 (095) 746-635",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "\n",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \")\" (str.substr name 6 3) \"-\" (str.substr name 9 3))"
      ],
      [
        "+106 (769) 858-438",
        " "
      ],
      [
        "+106 ",
        "(769) 858-438"
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        "+106 (",
        ") "
      ],
      [
        "+106 (769) 858-438",
        " "
      ],
      [
        "",
        "+106 (769) 858-438"
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        " ",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "(647) 787-775",
        " +104 ",
        " +106 ",
        " +75 ",
        " +158 ",
        "(674) 736-891",
        " +98 ",
        "(769) 858-438",
        "(541) 401-396",
        " +176 ",
        " +197 ",
        " +167 ",
        " +5 ",
        "(538) 347-401",
        " +23 ",
        " +65 ",
        "(936) 162-415",
        "(547) 051-264",
        " +33 ",
        "(885) 618-512",
        "(278) 716-950",
        " +6 ",
        "(414) 369-343",
        "(170) 592-272",
        "(280) 087-526",
        " +25 ",
        " +196 ",
        "(590) 757-665",
        " +138 ",
        " +180 ",
        " +9 ",
        "(773) 545-520",
        "(425) 765-844",
        "(233) 981-513",
        "(973) 757-831",
        "(557) 666-779",
        " +172 ",
        " +35 ",
        "(592) 938-846",
        "(700) 858-976",
        " +132 ",
        "(401) 100-231",
        "(039) 436-166",
        "(082) 845-261",
        "(258) 276-941",
        "(027) 507-632",
        "(191) 982-491",
        "(905) 707-740",
        "(970) 575-488",
        " +62 ",
        "(268) 571-336",
        "(124) 771-454",
        " +81 ",
        " +58 ",
        " +169 ",
        "(448) 213-807",
        "(066) 433-096",
        "(029) 457-654",
        "(684) 878-743",
        " +60 ",
        " +50 ",
        "(751) 365-934",
        " +118 ",
        " +80 ",
        "(455) 126-377",
        "(150) 380-705",
        "(864) 005-968",
        " +183 ",
        " +189 ",
        "(685) 122-086",
        "(726) 462-368",
        "(249) 097-743",
        "(001) 050-856",
        "(117) 430-125",
        " +46 ",
        " +43 ",
        " +82 ",
        "(938) 056-084",
        "(242) 901-234",
        "(604) 746-137",
        " +72 ",
        " +40 ",
        "(310) 537-401",
        "(808) 083-074",
        "(971) 986-103",
        " +199 ",
        " +105 ",
        " +29 ",
        "(023) 296-647",
        " +140 ",
        "(048) 919-483",
        " +161 ",
        "(462) 008-482",
        "(862) 946-541",
        "(394) 622-272",
        "(849) 629-290",
        "(209) 851-997",
        "(594) 539-946",
        " +143 ",
        "+106 ",
        " +95 ",
        " +151 ",
        "(822) 542-726",
        " +144 ",
        " +13 ",
        " +94 ",
        " +163 ",
        "(061) 601-398",
        " +195 ",
        " +188 ",
        "(122) 224-247",
        "(517) 953-149",
        "(086) 020-168",
        "(546) 119-476",
        "(794) 289-551",
        " +115 ",
        " +2 ",
        " +18 ",
        " +10 ",
        "(775) 969-238",
        " +68 ",
        "(620) 820-945",
        "(679) 740-834",
        "(767) 782-369",
        "(095) 746-635",
        "(728) 585-376",
        "(060) 204-504",
        " +185 ",
        "(927) 275-860",
        "(856) 734-046",
        "(507) 092-535",
        "(634) 077-089",
        " +83 ",
        "(018) 132-973",
        "(405) 461-331",
        " +130 ",
        " +64 ",
        "(675) 366-472",
        "(051) 287-382",
        " +7 ",
        "(528) 317-854",
        " +194 ",
        " +47 ",
        "(005) 119-176",
        " +155 ",
        "(225) 960-024",
        "(836) 582-035",
        "(165) 041-038",
        " +52 ",
        "(890) 680-027",
        " +147 ",
        " +56 ",
        "(012) 148-873",
        "(831) 591-877",
        "(717) 997-323",
        "(643) 245-738",
        " +129 ",
        " +14 ",
        "(117) 484-671",
        " +198 ",
        " +108 ",
        " +45 ",
        "(344) 541-946",
        " +20 ",
        " +174 ",
        "(730) 685-847",
        " +141 ",
        "(158) 671-355",
        " +86 ",
        "(227) 250-652",
        "(313) 075-754",
        "(673) 759-017",
        " +21 ",
        "(488) 831-768",
        " +42 ",
        "(998) 898-180",
        "(101) 728-328",
        "(468) 718-108"
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "+106 (769) 858-438"
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ],
      [
        "+106 (769) 858-438"
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        " ",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+45 (095) 746-635",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+62 (647) 787-775",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+43 (730) 685-847",
        "+14 (673) 759-017",
        "+176 (938) 056-084",
        "+82 (675) 366-472",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+7 (023) 296-647"
      ],
      [
        "+106 (769) 858-438",
        " "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        "+106 ",
        "(769) 858-438"
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        " ",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "Corporation",
        0,
        3,
        6,
        " ",
        "2",
        "4",
        "b",
        "Enterprises",
        "bananas",
        "/",
        "8",
        "Direct Response",
        "-",
        "Branding",
        "7",
        ",",
        "/n",
        "LDS",
        "microsoft",
        "+106 (769) 858-438",
        "Leads",
        "Company",
        ")",
        "apple",
        "6",
        "9",
        "5",
        "name",
        "3",
        "1",
        "%",
        "oranges",
        ") ",
        "0",
        "=",
        "windows",
        "Inc",
        "<",
        "BRD",
        "strawberries",
        "+",
        ".",
        "DRS",
        "in",
        "_",
        "(",
        ">",
        "mac",
        "LLC"
      ],
      [
        "+9 (507) 092-535",
        "+172 (027) 507-632",
        "+68 (890) 680-027",
        "+47 (401) 100-231",
        "+98 (717) 997-323",
        "+95 (310) 537-401",
        "+161 (233) 981-513",
        "+46 (005) 119-176",
        "+155 (927) 275-860",
        "+50 (012) 148-873",
        "+144 (170) 592-272",
        "+169 (822) 542-726",
        "+2 (604) 746-137",
        "+64 (751) 365-934",
        "+130 (517) 953-149",
        "+130 (590) 757-665",
        "+10 (538) 347-401",
        "+138 (117) 484-671",
        "+183 (225) 960-024",
        "+108 (150) 380-705",
        "+129 (425) 765-844",
        "+50 (268) 571-336",
        "+158 (684) 878-743",
        "+2 (455) 126-377",
        "+118 (165) 041-038",
        "+56 (242) 901-234",
        "+147 (864) 005-968",
        "+75 (227) 250-652",
        "+106 (769) 858-438",
        "+138 (885) 618-512",
        "+198 (557) 666-779",
        "+199 (936) 162-415",
        "+72 (001) 050-856",
        "+163 (039) 436-166",
        "+64 (061) 601-398",
        "+20 (541) 401-396",
        "+82 (685) 122-086",
        "+163 (546) 119-476",
        "+47 (414) 369-343",
        "+176 (767) 782-369",
        "+180 (029) 457-654",
        "+104 (158) 671-355",
        "+33 (547) 051-264",
        "+141 (018) 132-973",
        "+140 (794) 289-551",
        "+195 (488) 831-768",
        "+25 (998) 898-180",
        "+80 (066) 433-096",
        "+194 (278) 716-950",
        " ",
        "+105 (048) 919-483",
        "+138 (808) 083-074",
        "+196 (728) 585-376",
        "+45 (124) 771-454",
        "+13 (258) 276-941",
        "+6 (775) 969-238",
        "+167 (405) 461-331",
        "+35 (082) 845-261",
        "+62 (647) 787-775",
        "+158 (674) 736-891",
        "+40 (122) 224-247",
        "+161 (086) 020-168",
        "+21 (679) 740-834",
        "+115 (101) 728-328",
        "+23 (448) 213-807",
        "+43 (730) 685-847",
        "+5 (528) 317-854",
        "+14 (673) 759-017",
        "+18 (051) 287-382",
        "+29 (773) 545-520",
        "+169 (060) 204-504",
        "+82 (675) 366-472",
        "+176 (938) 056-084",
        "+94 (856) 734-046",
        "+189 (831) 591-877",
        "+143 (726) 462-368",
        "+60 (971) 986-103",
        "+33 (117) 430-125",
        "+42 (643) 245-738",
        "+18 (209) 851-997",
        "+95 (620) 820-945",
        "+151 (862) 946-541",
        "+132 (313) 075-754",
        "+174 (594) 539-946",
        "+197 (700) 858-976",
        "+42 (634) 077-089",
        "+58 (191) 982-491",
        "+43 (592) 938-846",
        "+83 (973) 757-831",
        "+158 (344) 541-946",
        "+52 (836) 582-035",
        "+65 (970) 575-488",
        "+86 (468) 718-108",
        "+163 (905) 707-740",
        "+185 (394) 622-272",
        "+81 (849) 629-290",
        "+188 (280) 087-526",
        "+94 (462) 008-482",
        "+43 (249) 097-743",
        "+7 (023) 296-647"
      ],
      [
        "+106 ",
        "(769) 858-438"
      ],
      [
        "+106 (769) 858-438",
        " ",
        "+106 769-858-438"
      ]
    ],
    "all_constants": [
      0,
      "",
      3,
      4,
      "(280) 087-526",
      6,
      7,
      8,
      9,
      "(547) 051-264",
      "+68 (890) 680-027",
      "(973) 757-831",
      "(488) 831-768",
      "(970) 575-488",
      "+25 (998) 898-180",
      "(191) 982-491",
      " +140 ",
      "(394) 622-272",
      "+65 (970) 575-488",
      "+188 (280) 087-526",
      "+82 675-366-472",
      " +167 ",
      "+172 (027) 507-632",
      "5",
      " +65 ",
      "(344) 541-946",
      "+138 885-618-512",
      "+130 (517) 953-149",
      "(775) 969-238",
      ".",
      " +56 ",
      "+163 (039) 436-166",
      "(685) 122-086",
      "mac",
      " +194 ",
      "+5 (528) 317-854",
      " +155 ",
      "(227) 250-652",
      " +141 ",
      "+105 (048) 919-483",
      "(233) 981-513",
      " +198 ",
      "(313) 075-754",
      "(001) 050-856",
      "(751) 365-934",
      "Corporation",
      "+2 604-746-137",
      "+95 (310) 537-401",
      " +176 ",
      " +196 ",
      "Direct Response",
      "+180 (029) 457-654",
      "(905) 707-740",
      "+6 (775) 969-238",
      "(679) 740-834",
      "(856) 734-046",
      "(117) 484-671",
      "Enterprises",
      "3",
      "+80 066-433-096",
      "=",
      " +104 ",
      "+138 (117) 484-671",
      "oranges",
      "4",
      "+174 594-539-946",
      "+108 (150) 380-705",
      "in",
      ") ",
      ")",
      "+29 (773) 545-520",
      " +132 ",
      "(462) 008-482",
      "+35 (082) 845-261",
      "+14 (673) 759-017",
      " +188 ",
      "<",
      "(018) 132-973",
      "+47 (401) 100-231",
      "+82 (675) 366-472",
      "+47 414-369-343",
      "Inc",
      "+62 (647) 787-775",
      "(643) 245-738",
      "+86 (468) 718-108",
      "+185 (394) 622-272",
      "(060) 204-504",
      "0",
      "+169 822-542-726",
      "(849) 629-290",
      " +195 ",
      "(414) 369-343",
      "+25 998-898-180",
      "7",
      "(674) 736-891",
      "+40 (122) 224-247",
      ">",
      "+197 (700) 858-976",
      "(557) 666-779",
      "(538) 347-401",
      "+198 (557) 666-779",
      " +14 ",
      " +75 ",
      "+72 (001) 050-856",
      "(066) 433-096",
      "(836) 582-035",
      "%",
      "(278) 716-950",
      "+50 268-571-336",
      "+140 (794) 289-551",
      "+56 (242) 901-234",
      "+10 (538) 347-401",
      "(546) 119-476",
      "Leads",
      "(101) 728-328",
      "(048) 919-483",
      " +10 ",
      "(831) 591-877",
      "+33 (547) 051-264",
      "+94 (856) 734-046",
      "+83 (973) 757-831",
      " +197 ",
      " +13 ",
      "+183 (225) 960-024",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \")\" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      " +161 ",
      " +169 ",
      "(209) 851-997",
      "(122) 224-247",
      "(634) 077-089",
      "(728) 585-376",
      " +174 ",
      "+43 (730) 685-847",
      "(517) 953-149",
      " +47 ",
      "+151 862-946-541",
      "+196 (728) 585-376",
      "(029) 457-654",
      "+83 973-757-831",
      "+",
      " +40 ",
      "+163 (905) 707-740",
      "(051) 287-382",
      "BRD",
      "+6 775-969-238",
      "+2 (604) 746-137",
      "+138 (885) 618-512",
      "(061) 601-398",
      "LLC",
      "(027) 507-632",
      "+81 (849) 629-290",
      "windows",
      "microsoft",
      " +46 ",
      "(528) 317-854",
      "+144 170-592-272",
      "+144 (170) 592-272",
      "+82 685-122-086",
      " +199 ",
      " +18 ",
      "bananas",
      "strawberries",
      "(620) 820-945",
      "+106 (769) 858-438",
      " +25 ",
      "(808) 083-074",
      " +183 ",
      "+75 (227) 250-652",
      "(717) 997-323",
      "(864) 005-968",
      " +52 ",
      " +64 ",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "+9 (507) 092-535",
      "(150) 380-705",
      " +163 ",
      "(890) 680-027",
      "+167 405-461-331",
      "(448) 213-807",
      "(971) 986-103",
      "(117) 430-125",
      "+106 (",
      "+130 (590) 757-665",
      " +95 ",
      "(927) 275-860",
      "+106 ",
      "+158 (674) 736-891",
      "+42 (643) 245-738",
      "+2 (455) 126-377",
      "(124) 771-454",
      "(998) 898-180",
      "+167 (405) 461-331",
      "+58 (191) 982-491",
      " (",
      "+155 927-275-860",
      "+199 (936) 162-415",
      "(675) 366-472",
      " +62 ",
      "(095) 746-635",
      "+72 001-050-856",
      " +81 ",
      "+21 (679) 740-834",
      "(767) 782-369",
      " +45 ",
      " +58 ",
      " +118 ",
      "(726) 462-368",
      "-",
      "+195 (488) 831-768",
      "+161 (233) 981-513",
      "+42 643-245-738",
      "(468) 718-108",
      " +144 ",
      " +130 ",
      " +98 ",
      "+169 (822) 542-726",
      "LDS",
      "+118 (165) 041-038",
      "(158) 671-355",
      "+20 (541) 401-396",
      "+95 310-537-401",
      " +72 ",
      "(862) 946-541",
      " +6 ",
      " +129 ",
      "(082) 845-261",
      "b",
      "(242) 901-234",
      "(647) 787-775",
      "name",
      "+50 (268) 571-336",
      " +23 ",
      "+43 (249) 097-743",
      "+18 (051) 287-382",
      "(012) 148-873",
      ",",
      "+118 165-041-038",
      "+62 647-787-775",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3))",
      "+13 (258) 276-941",
      " +9 ",
      "+64 (061) 601-398",
      "(249) 097-743",
      "(604) 746-137",
      "(455) 126-377",
      "+176 (767) 782-369",
      "(794) 289-551",
      " +43 ",
      " +86 ",
      "+147 (864) 005-968",
      "+33 (117) 430-125",
      " +138 ",
      "+50 (012) 148-873",
      "Branding",
      " +185 ",
      "(170) 592-272",
      " +35 ",
      "+60 971-986-103",
      "+158 (344) 541-946",
      " +80 ",
      "1",
      "+143 (726) 462-368",
      "(592) 938-846",
      " +94 ",
      "Company",
      "+104 158-671-355",
      "/",
      "(023) 296-647",
      "(165) 041-038",
      "(310) 537-401",
      "(673) 759-017",
      "+138 808-083-074",
      " +115 ",
      "+80 (066) 433-096",
      "+47 (414) 369-343",
      " +68 ",
      "(594) 539-946",
      "+141 (018) 132-973",
      "(039) 436-166",
      "(str.replace (str.replace (str.replace name ",
      "\n",
      "+169 (060) 204-504",
      "(268) 571-336",
      "(",
      "+189 (831) 591-877",
      "+94 (462) 008-482",
      " +42 ",
      "+163 (546) 119-476",
      " +2 ",
      " +106 ",
      "_",
      "+94 462-008-482",
      " +180 ",
      "(401) 100-231",
      " +108 ",
      "(507) 092-535",
      "+106 769-858-438",
      "+23 (448) 213-807",
      "+52 (836) 582-035",
      "+138 (808) 083-074",
      "+43 (592) 938-846",
      "+64 (751) 365-934",
      "(936) 162-415",
      " +29 ",
      "(086) 020-168",
      "+188 280-087-526",
      "+45 (095) 746-635",
      " +21 ",
      "+161 (086) 020-168",
      " +60 ",
      "+194 (278) 716-950",
      " +151 ",
      "+98 (717) 997-323",
      "+115 (101) 728-328",
      "(730) 685-847",
      "(700) 858-976",
      "+7 (023) 296-647",
      "9",
      " +158 ",
      "(885) 618-512",
      "+82 (685) 122-086",
      " +105 ",
      "+42 (634) 077-089",
      "2",
      " +82 ",
      " +147 ",
      "(773) 545-520",
      "/n",
      "+60 (971) 986-103",
      "(769) 858-438",
      "+176 (938) 056-084",
      " +143 ",
      "6",
      "(225) 960-024",
      "(005) 119-176",
      " +189 ",
      "+183 225-960-024",
      "+45 (124) 771-454",
      "+46 (005) 119-176",
      "+176 767-782-369",
      "+104 (158) 671-355",
      " +33 ",
      " ",
      "+10 538-347-401",
      "+129 (425) 765-844",
      "(405) 461-331",
      "(590) 757-665",
      "+174 (594) 539-946",
      "(541) 401-396",
      "+151 (862) 946-541",
      "(822) 542-726",
      "8",
      "DRS",
      " +50 ",
      "+18 (209) 851-997",
      " +7 ",
      "+95 (620) 820-945",
      "+13 258-276-941",
      "+172 027-507-632",
      "(684) 878-743",
      " +172 ",
      "+163 039-436-166",
      " +20 ",
      " +83 ",
      "+158 (684) 878-743",
      "+132 (313) 075-754",
      " +5 ",
      "(425) 765-844",
      "apple",
      "+155 (927) 275-860",
      "(938) 056-084",
      "(258) 276-941"
    ],
    "time_diff_ms": 1091.771
  },
  "39060015modified.sl": {
    "completions": [
      "(str.++ (str.replace _arg_0 \"delete words in the area \" \"\") \"keep this part\")",
      "(str.++ (str.replace _arg_0 \" words in the area \" \"\"))",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\")) (str.substr _arg_0 (str.indexof _arg_0 \"/keep\") (str.len _arg_0)))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"/ -> \" 0) 5) (str.len _arg_0)))",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 0))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\")))",
      "(str.replace _arg_0 \"delete words in the area \" \"\")",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\")",
      "(str.++ (str.replace _arg_0 \" in the area \" \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\")",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/delete words in the area /\" 0) 1))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\")) (str.substr _arg_0 (str.indexof _arg_0 \"/keep\") (str.len _arg_0)))",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /keep this part\" \"\") \"keep this part\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.++ (str.replace _arg_0 \"delete words in the area \" \"\") \"keep this part\")",
      "(str.++ (str.replace _arg_0 \"/delete words in the area /\" \"\") \"keep this part\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\" 0)) (str.substr _arg_0 (str.indexof _arg_0 \"->\" 0) (str.len _arg_0)))",
      "\"(str.replace _arg_0 \\\"/delete words in the area /\\\" \\\"\\\")\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\")",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\")",
      "(str.++ (str.replace _arg_0 \" /\" \"\") \"keep this part\")",
      "(str.++ (str.replace _arg_0 \" words in the area \" \"\") \" keep this part\")",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area \" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" words in the area \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\")) (str.substr _arg_0 (str.indexof _arg_0 \"/keep\") (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"/ -> \" 0) 5) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 0)))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" in the area \" \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/delete words in the area /\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\")) (str.substr _arg_0 (str.indexof _arg_0 \"/keep\") (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /keep this part\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area \" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"/delete words in the area /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\" 0)) (str.substr _arg_0 (str.indexof _arg_0 \"->\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"/delete words in the area /\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" words in the area \" \"\") \" keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))"
    ],
    "constants": [
      [
        "",
        "delete words in the area ",
        "keep this part"
      ],
      [
        "",
        " words in the area "
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "This is a line. ",
        0,
        " /"
      ],
      [
        0,
        "/"
      ],
      [
        0,
        "/"
      ],
      [
        0,
        "/keep",
        "/delete"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /",
        "keep this part"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        0,
        "/"
      ],
      [
        0,
        "/"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        0,
        5,
        "/ -> ",
        " /"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        0,
        " /"
      ],
      [
        "This is a line. ",
        0
      ],
      [
        "This is a line. ",
        0,
        " /"
      ],
      [
        "",
        "delete words in the area "
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /",
        "keep this part"
      ],
      [
        " in the area ",
        " "
      ],
      [
        0,
        "/"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /",
        "keep this part"
      ],
      [
        0,
        1,
        "/delete words in the area /"
      ],
      [
        "This is a line. ",
        0,
        "/"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        0,
        "/keep",
        "/delete"
      ],
      [
        "",
        " /delete words in the area /",
        "keep this part"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        " /delete words in the area /keep this part",
        "keep this part"
      ],
      [
        0,
        "/"
      ],
      [
        "",
        "delete words in the area ",
        "keep this part"
      ],
      [
        "",
        "/delete words in the area /",
        "keep this part"
      ],
      [
        0,
        "->",
        "/delete"
      ],
      [
        "(str.replace _arg_0 \"/delete words in the area /\" \"\")"
      ],
      [
        0,
        "/"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /",
        "keep this part"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        0,
        "/"
      ],
      [
        "",
        "delete words in the area",
        "keep this part"
      ],
      [
        "",
        "keep this part",
        " /"
      ],
      [
        "",
        " keep this part",
        " words in the area "
      ],
      [
        "This is a line. ",
        0,
        "/"
      ],
      [
        "",
        " /delete words in the area /"
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      5,
      "This is a line. ",
      "/keep",
      " /delete words in the area /",
      "/ -> ",
      " in the area ",
      "/",
      " /",
      "delete words in the area ",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "keep this part",
      "/delete words in the area /",
      "->",
      " ",
      "delete words in the area",
      " keep this part",
      " words in the area ",
      "/delete",
      " /delete words in the area /keep this part"
    ],
    "time_diff_ms": 1758.177
  },
  "phone-7-long-repeatmodified.sl": {
    "completions": [
      "\"(str.substr name 7 3))\"",
      "```lisp\n  (str.substr name 7 3)\n```",
      "```lisp\n(str.substr name 7 3)\n```",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "\"(str.substr name 7 3))\"",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 7 3))\"",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "\"(str.substr name 7 3))\"",
      "\"(str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "\"(str.substr name 8 3))\"",
      "\"(str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 6 3)\n)",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "(define-fun f (name String) String\n    (str.substr name 6 3)\n)",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n    (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "\"(str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String \"(str.substr name 8 3))\")",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))"
    ],
    "constants": [
      [
        "(str.substr name 7 3))"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "(str.substr name 7 3))"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 7 3))"
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        "(str.substr name 7 3))"
      ],
      [
        "(str.substr name 7 3))"
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        "(str.substr name 8 3))"
      ],
      [
        "(str.substr name 7 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        8,
        3
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "(str.substr name 7 3))"
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ]
    ],
    "all_constants": [
      3,
      6,
      7,
      8,
      "(str.substr name 8 3))",
      "(str.substr name 7 3))"
    ],
    "time_diff_ms": 1679.3360000000002
  },
  "stackoverflow6modified.sl": {
    "completions": [
      "(str.substr _arg_0 44 (- (str.len _arg_0) 44))",
      "(str.substr _arg_0 38 (- (str.len _arg_0) 38))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 29 (- (str.len _arg_0) 29))",
      "(str.substr _arg_0 27 (- (str.len _arg_0) 27))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(str.substr _arg_0 27 (str.len _arg_0))",
      "(str.substr _arg_0 30 (- (str.len _arg_0) 30))",
      "(str.substr _arg_0 33 (- (str.len _arg_0) 33))",
      "(str.substr _arg_0 29 (- (str.len _arg_0) 29))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31))",
      "(str.substr _arg_0 28 (- (str.len _arg_0) 28))",
      "(str.substr _arg_0 29 (- (str.len _arg_0) 29))",
      "(str.substr _arg_0 25 (- (str.len _arg_0) 25)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 41 (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 39 (- (str.len _arg_0) 39))",
      "(str.substr _arg_0 26 (- (str.len _arg_0) 26))",
      "(str.substr _arg_0 36 (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 27 (- (str.len _arg_0) 27))",
      "(str.replace _arg_0 \" - +91 90000 80000\" \"\")",
      "(str.substr _arg_0 21 (- (str.len _arg_0) 21))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.replace _arg_0 \" - +91 90000 80000\" \"\")",
      "(str.replace _arg_0 \" - +91 90000 80000\" \"\")",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 32 (- (str.len _arg_0) 32))",
      "(str.substr _arg_0 34 (- (str.len _arg_0) 34))",
      "(str.substr _arg_0 33 (str.len _arg_0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 32 (str.len _arg_0))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31))",
      "(str.substr _arg_0 32 (- (str.len _arg_0) 32))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 32))",
      "(str.substr _arg_0 32 (- (str.len _arg_0) 32))",
      "(str.substr _arg_0 24 (- (str.len _arg_0) 24)))",
      "(str.substr _arg_0 29 (str.len _arg_0))",
      "(str.substr _arg_0 30 (- (str.len _arg_0) 30))",
      "(str.substr _arg_0 31 (str.len _arg_0))",
      "\"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"=\\\" 0) 1))\"",
      "(str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.replace _arg_0 \" - +91 90000 80000\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 44 (- (str.len _arg_0) 44)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 38 (- (str.len _arg_0) 38)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (- (str.len _arg_0) 29)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 27 (- (str.len _arg_0) 27)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 27 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 30 (- (str.len _arg_0) 30)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 33 (- (str.len _arg_0) 33)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (- (str.len _arg_0) 29)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (- (str.len _arg_0) 29)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 25 (- (str.len _arg_0) 25)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 41 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 39 (- (str.len _arg_0) 39)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 26 (- (str.len _arg_0) 26)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 36 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 27 (- (str.len _arg_0) 27)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" - +91 90000 80000\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 21 (- (str.len _arg_0) 21)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" - +91 90000 80000\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" - +91 90000 80000\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 34 (- (str.len _arg_0) 34)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 33 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 24 (- (str.len _arg_0) 24)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 30 (- (str.len _arg_0) 30)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"=\\\" 0) 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" - +91 90000 80000\" \"\"))"
    ],
    "constants": [
      [
        44
      ],
      [
        38
      ],
      [
        0,
        "=",
        1
      ],
      [
        29
      ],
      [
        27
      ],
      [
        0,
        "=",
        1
      ],
      [
        31
      ],
      [
        27
      ],
      [
        30
      ],
      [
        33
      ],
      [
        29
      ],
      [
        31
      ],
      [
        28
      ],
      [
        29
      ],
      [
        25
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        41
      ],
      [
        0,
        "="
      ],
      [
        39
      ],
      [
        26
      ],
      [
        36
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        27
      ],
      [
        " - +91 90000 80000",
        ""
      ],
      [
        21
      ],
      [
        0,
        "="
      ],
      [
        " - +91 90000 80000",
        ""
      ],
      [
        " - +91 90000 80000",
        ""
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        32
      ],
      [
        34
      ],
      [
        33
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        32
      ],
      [
        31
      ],
      [
        32
      ],
      [
        32,
        31
      ],
      [
        32
      ],
      [
        24
      ],
      [
        29
      ],
      [
        30
      ],
      [
        31
      ],
      [
        "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))"
      ],
      [
        32
      ],
      [
        0,
        "=",
        1
      ],
      [
        " - +91 90000 80000",
        ""
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      21,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      36,
      38,
      39,
      41,
      44,
      "=",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      " - +91 90000 80000"
    ],
    "time_diff_ms": 1667.419
  },
  "strip-non-numeric-charactersmodified.sl": {
    "completions": [
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String\n  (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String\n  (str.to.int\n    (str.replace\n      (str.replace _arg_0 \" \" \"\")\n      \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"% \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "\"(str.to.int (str.replace _arg_0 \\\"%\\\" \\\"\\\"))\"",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\"\"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f ((input String)) String\n  (str.to.int (str.replace input \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace (str.replace _arg_0 \" \" \"\") \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"% \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String \"(str.to.int (str.replace _arg_0 \\\"%\\\" \\\"\\\"))\")",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace input \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))"
    ],
    "constants": [
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " ",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "% "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "(str.to.int (str.replace _arg_0 \"%\" \"\"))"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ]
    ],
    "all_constants": [
      "",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "%",
      " ",
      "% "
    ],
    "time_diff_ms": 2514.9480000000003
  },
  "stackoverflow1modified.sl": {
    "completions": [
      "(str.replace _arg_0 \", LLC\" \"\")",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \" Inc.\" \"\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.replace _arg_0 \" Inc.\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))))",
      "(str.replace _arg_0 \", LLC\" \"\")",
      "(str.replace _arg_0 \" Inc.\" \"\")))",
      "(str.replace _arg_0 \" Inc.\" \"\")))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.replace _arg_0 \" Inc.\" \"\") )",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.replace _arg_0 \" Inc.\" \"\")))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(str.replace _arg_0 \", LLC\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.replace _arg_0 \", LLC\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(str.replace _arg_0 \" Inc\" \"\")",
      "(str.replace _arg_0 \", LLC\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(str.replace _arg_0 \" Inc.\" \"\")))",
      "(str.replace _arg_0 \" Inc.\" \"\")",
      "(str.replace _arg_0 \" Inc.\" \"\")))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.replace _arg_0 \" Inc.\" \"\")",
      "(str.replace _arg_0 \", LLC\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(str.replace _arg_0 \" Inc.\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.replace _arg_0 \" Inc.\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))))",
      "(str.replace _arg_0 \" Inc.\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))"
    ],
    "constants": [
      [
        "",
        ", LLC"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        " Inc",
        ""
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        "",
        ", LLC"
      ],
      [
        "",
        " Inc."
      ],
      [
        "",
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        "",
        ", LLC"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        " Inc",
        ""
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        "",
        ", LLC"
      ],
      [
        " Inc",
        ""
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        " Inc",
        ""
      ],
      [
        " Inc",
        ""
      ],
      [
        "",
        ", LLC"
      ],
      [
        "",
        ", LLC"
      ],
      [
        "",
        " Inc."
      ],
      [
        "",
        " Inc."
      ],
      [
        "",
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        "",
        ", LLC"
      ],
      [
        "",
        ", LLC"
      ],
      [
        "",
        " Inc."
      ],
      [
        " Inc",
        ""
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        " Inc",
        ""
      ],
      [
        0,
        " Inc"
      ],
      [
        "",
        " Inc."
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      " Inc.",
      ", LLC",
      " Inc"
    ],
    "time_diff_ms": 1715.6570000000002
  },
  "get-last-wordmodified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\")))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \")) (str.len _arg_0)))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)) _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1) 1)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s\n              (+ 1 (str.indexof (str.replace s \" \" \"/\") \"/\" (- (str.len s) 1)))\n              (- (str.len s) (+ 1 (str.indexof (str.replace s \" \" \"/\") \"/\" (- (str.len s) 1))))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(ite (str.contains _arg_0 \" \")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0))\n     (ite (str.contains _arg_0 \"-\")\n          (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" -1) 1) (str.len _arg_0))\n          (str.substr _arg_0 0 (str.len _arg_0))\n     )\n)",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \" \" (+ 1 (str.indexof s \" \"))) 1) (str.len s)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f ((x String)) String (str.substr x (+ 1 (str.indexof x \" \"))))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"BRD\") \"BRD\" 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\" (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f ((x String)) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\" (- 0 (str.len (str.replace _arg_0 \" \" \"/\"))))) (- (str.len _arg_0) (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\" (- 0 (str.len (str.replace _arg_0 \" \" \"/\")))))))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)) _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace (str.replace _arg_0 \" \" \"/n\") \"/\" \" \") \"/n\") (ite (str.contains _arg_0 \" \") (str.len _arg_0) 0)) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"_\") \"_\" (- (str.len (str.replace _arg_0 \" \" \"_\")) 1))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \\\" \\\" \\\"/n\\\") \\\"/n\\\" 0)) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\" (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"BRD\") \"BRD\")) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f ((x String)) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ 1 (str.indexof (str.replace s \" \" \"/\") \"/\" (- (str.len s) 1))) (- (str.len s) (+ 1 (str.indexof (str.replace s \" \" \"/\") \"/\" (- (str.len s) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"-\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" -1) 1) (str.len _arg_0)) (str.substr _arg_0 0 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \" \" (+ 1 (str.indexof s \" \"))) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ 1 (str.indexof x \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"BRD\") \"BRD\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\" (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\" (- 0 (str.len (str.replace _arg_0 \" \" \"/\"))))) (- (str.len _arg_0) (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\" (- 0 (str.len (str.replace _arg_0 \" \" \"/\"))))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace (str.replace _arg_0 \" \" \"/n\") \"/\" \" \") \"/n\") (ite (str.contains _arg_0 \" \") (str.len _arg_0) 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"_\") \"_\" (- (str.len (str.replace _arg_0 \" \" \"_\")) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \\\" \\\" \\\"/n\\\") \\\"/n\\\" 0)) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\" (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/\") \"/\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"BRD\") \"BRD\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))"
    ],
    "constants": [
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        "/",
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        "-",
        " ",
        -1
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        "BRD",
        1,
        " ",
        0
      ],
      [
        "/",
        1,
        " "
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        "/",
        1,
        " ",
        0
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        "/",
        " ",
        "/n"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        "_"
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0))"
      ],
      [
        "/",
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "BRD",
        1,
        " "
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " ",
        "/n"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      "/n",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0)) (str.len _arg_0))",
      "-",
      " ",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "BRD",
      "_",
      -1
    ],
    "time_diff_ms": 1249.008
  },
  "phone-5modified.sl": {
    "completions": [
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \"-\" 0))\n)",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \"-\" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 2)\"",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 2)\")",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))"
    ],
    "constants": [
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        0,
        1,
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 2)"
      ],
      [
        0,
        1,
        " ",
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      "(str.substr name 1 2)",
      "-",
      " "
    ],
    "time_diff_ms": 1483.769
  },
  "phone-6-long-repeatmodified.sl": {
    "completions": [
      "(define-fun f ((name String)) String name)",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f ((name String)) String name)",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 4 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String name)",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String name)",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 4 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))"
    ],
    "constants": [
      [],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 4 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ]
    ],
    "all_constants": [
      3,
      4,
      5,
      "(str.substr name 5 3))",
      "(str.substr name 4 3))"
    ],
    "time_diff_ms": 2409.6349999999998
  },
  "get-last-line-in-cellmodified.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (+ (str.len _arg_0) -1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\"))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\"))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0)))))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/n\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"n\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"n\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 3))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 3))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -3)) (+ (str.len _arg_0) -1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\") 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\") 2))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" 0) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\"))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\") 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\") 2))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len \"/n\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (+ (str.len _arg_0) -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0)))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"n\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"n\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 3))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\"))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 3))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -3)) (+ (str.len _arg_0) -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\") 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\") 2)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\") 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\") 2)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len \"/n\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))"
    ],
    "constants": [
      [
        2,
        "/n"
      ],
      [
        "/n",
        -4,
        -1
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        "/n",
        -3
      ],
      [
        1,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        "/n",
        -3
      ],
      [
        1,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "n"
      ],
      [
        3,
        "/n"
      ],
      [
        "/n",
        -4
      ],
      [
        "/n",
        -4
      ],
      [
        2,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        "/n",
        -4
      ],
      [
        1,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        3,
        "/n"
      ],
      [
        "/n",
        -3,
        -1
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "/n",
      3,
      "n",
      -4,
      -3,
      -1
    ],
    "time_diff_ms": 898.0
  },
  "phone-9-shortmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace name \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 1 3) \".\"\n    (str.substr name 5 3) \".\"\n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    name\n                                    \" \" \"\")\n                                  \"+ \" \".\")\n                                \"- \" \".\")\n                              \"BRD\" \"Branding\")\n                            \"DRS\" \"Direct Response\")\n                          \"LDS\" \"Leads\")\n                        \"=\" \"/\")\n                      \"in\" \"_\")\n                    \"microsoft\" \"windows\")\n                  \"apple\" \"mac\")\n                \"-\" \"\")\n              \"1\" \"\")\n            \"2\" \"\")\n          \"3\" \"\")\n        \"4\" \"\")\n      \"5\" \"\")\n    \"6\" \"\")\n  \"7\" \"\")",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    name\n                    \" \" \"\")\n                  \"-\")\n                \"-\")\n              \"-\")\n            \" \")\n          \" \")\n        \" \")\n      \" \")\n    \" \"\n    \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace name \" \" \"\")\n        \"-\"\n        \".\")\n      \".\"\n      \".\")\n    \".\"\n    \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 1 3) \".\" \n    (str.substr name 5 3) \".\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(str.replace name \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 1 3) \".\" \n    (str.substr name 5 3) \".\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f ((name String)) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\"))",
      "(ite (str.contains name \" \")\n     (str.replace name \" \" \".\")\n     name)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f ((name String)) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace name \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"+ \" \".\") \"- \" \".\") \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\") \"=\" \"/\") \"in\" \"_\") \"microsoft\" \"windows\") \"apple\" \"mac\") \"-\" \"\") \"1\" \"\") \"2\" \"\") \"3\" \"\") \"4\" \"\") \"5\" \"\") \"6\" \"\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\") \"-\") \"-\") \" \") \" \") \" \") \" \") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \".\" \".\") \".\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\"))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.replace name \" \" \".\") name))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))"
    ],
    "constants": [
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "",
        " ",
        "2",
        "+ ",
        "4",
        "/",
        "Direct Response",
        "-",
        "Branding",
        "LDS",
        "microsoft",
        "- ",
        "Leads",
        "apple",
        "6",
        "5",
        "3",
        "1",
        "=",
        "windows",
        "BRD",
        ".",
        "DRS",
        "in",
        "_",
        "mac"
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        " ",
        "."
      ]
    ],
    "all_constants": [
      "",
      1,
      ".",
      3,
      0,
      5,
      4,
      8,
      9,
      "Direct Response",
      "LDS",
      "Leads",
      "DRS",
      "- ",
      "6",
      "mac",
      "3",
      "1",
      "=",
      "BRD",
      "_",
      "/",
      "4",
      "+ ",
      "windows",
      " ",
      "microsoft",
      "5",
      "in",
      "apple",
      "-",
      "Branding",
      "(str.replace (str.replace (str.replace (str.replace name ",
      "2",
      "(str.replace (str.replace (str.replace name "
    ],
    "time_diff_ms": 1362.116
  },
  "38871714modified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") \" \" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \"<\" \"\")\n  (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "\"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\"",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "\"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\"",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "\"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\"",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \"<\" \"\")\n  (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \"<\" \"\")\n  (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((input String)) String\n  (str.replace input \"<\" \"\")\n  (str.replace (str.replace input \">\" \"\") \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \"<\" \"\")\n  )",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((s String)) String\n  (str.replace s \"<\" \"\")\n  )",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace input \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))"
    ],
    "constants": [
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "(str.replace _arg_0 \"<\" \"\")"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "(str.replace _arg_0 \"<\" \"\")"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "(str.replace _arg_0 \"<\" \"\")"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ]
    ],
    "all_constants": [
      "",
      "(str.replace _arg_0 \"<\" \"\")",
      "<"
    ],
    "time_diff_ms": 1132.452
  },
  "phone-5-shortmodified.sl": {
    "completions": [
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f ((name String)) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f ((name String)) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \"-\" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f ((name String)) String (str.substr name 1 2))",
      "(define-fun f ((name String)) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(ite (str.contains name \" \")\n     (str.substr name 1 (- (str.indexof name \" \" 0) 1))\n     (str.substr name 1 (- (str.indexof name \"-\" 0) 1)))",
      "(ite (str.contains name \" \")\n     (str.substr name 1 (str.indexof name \" \" 0))\n     (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (- (str.indexof name \" \" 0) 1)) (str.substr name 1 (- (str.indexof name \"-\" 0) 1))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))"
    ],
    "constants": [
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " ",
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        0,
        1,
        "-"
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " ",
        "-"
      ],
      [
        0,
        1,
        " ",
        "-"
      ],
      [
        0,
        1,
        " ",
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " ",
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      "-",
      " "
    ],
    "time_diff_ms": 2106.547
  },
  "initials_smallmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr (str.replace name \" \" \"\") 0 1)\n    \".\"))",
      "(str.++ (str.substr (str.at name 0) 0 1) \".\" (str.at name (+ (str.indexof name \" \" 0) 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\")\"",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1)))",
      "(define-fun f (name String) String\n    (str.++ \n        (str.substr name 0 1) \n        \".\"\n        (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)\n        \".\"\n    )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.++\n      (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)\n      \".\")) )",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)\n    \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr name (- (str.indexof name \" \" 0) 1) 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "\"(str.++ (str.substr (str.at name 0) 0 1) \\\".\\\")\"",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 999) 1 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)\n  )\n)"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.at name 0) 0 1) \".\" (str.at name (+ (str.indexof name \" \" 0) 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\")\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr (str.at name 0) 0 1) \\\".\\\")\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 999) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))"
    ],
    "constants": [
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\")"
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr (str.at name 0) 0 1) \".\")"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        999,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      ".",
      "",
      2,
      999,
      " ",
      "(str.++ (str.substr (str.at name 0) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\")"
    ],
    "time_diff_ms": 1817.668
  },
  "get-domain-name-from-urlmodified.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"://\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f ((url String)) String\n  (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.len \"http=//\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.len \"http://\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f ((url String)) String\n  (str.substr url 0 (str.indexof url \"/\" (+ 1 (str.indexof url \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.len \"http://\"))))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 8 (str.indexof _arg_0 \\\"/\\\" 0)))))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f ((url String)) String\n  (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 8) 1)))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.len \"http=//\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f ((url String)) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 5 (str.indexof _arg_0 \"/\")))))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\"",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \".*\\/\" \"\"))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ (str.indexof _arg_0 \\\"/\\\" 0) 2)))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f ((url String)) String\n    (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\" 0)))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"://\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.len \"http=//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.len \"http://\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 1 (str.indexof url \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.len \"http://\")))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 8 (str.indexof _arg_0 \\\"/\\\" 0)))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 8) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 8) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.len \"http=//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 5 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*\\\\/\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ (str.indexof _arg_0 \\\"/\\\" 0) 2)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\" 0)))))"
    ],
    "constants": [
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "://"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/",
        "http=//"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "http://"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        "http://"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        "/",
        5
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))"
      ],
      [
        "",
        ".*\\/"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2)))"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ]
    ],
    "all_constants": [
      0,
      "/",
      1,
      "",
      ".*\\/",
      5,
      8,
      "://",
      "//",
      "http://",
      "http=//",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2)))"
    ],
    "time_diff_ms": 1189.268
  },
  "get-middle-name-from-full-namemodified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \" 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0\n              (+ (str.indexof _arg_0 \" \" 0) 1)\n              (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))\n                 (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 2))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 2))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (str.indexof _arg_0 \\\" \\\" (+ (str.indexof _arg_0 \\\" \\\") 1)))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (str.indexof _arg_0 \\\" \\\" (+ (str.indexof _arg_0 \\\" \\\") 1)))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (+ 1 (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (str.indexof _arg_0 \\\" \\\" (+ (str.indexof _arg_0 \\\" \\\") 1)))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (+ (str.indexof _arg_0 \" \") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \" 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0\n              (+ (str.indexof _arg_0 \" \" 0) 1)\n              (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))\n                 (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" 2)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (str.indexof _arg_0 \\\" \\\" (+ (str.indexof _arg_0 \\\" \\\") 1)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (str.indexof _arg_0 \\\" \\\" (+ (str.indexof _arg_0 \\\" \\\") 1)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (+ 1 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (str.indexof _arg_0 \\\" \\\" (+ (str.indexof _arg_0 \\\" \\\") 1)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" 2)))"
    ],
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        2
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))",
      " "
    ],
    "time_diff_ms": 670.847
  },
  "35744094modified.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\")) (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://\")) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" (+ 7 (str.indexof _arg_0 \".\" (+ 7 (str.indexof _arg_0 \"/\"))))) (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \".\" (+ 7 (str.indexof _arg_0 \"/\"))))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7)))",
      "(str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ (str.len \"://www.\") (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0) 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"https=//www.\") 15) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0)) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ 7 (str.indexof _arg_0 \"/\" 0))) (str.indexof _arg_0 \"/\" 0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\" 0) 3) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://\" 0) 3))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\" 0) 3) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://\" 0) 3))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ (str.len \"://www.\") (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") (str.len \"://www.\"))))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\" 0) 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ 7 (str.indexof _arg_0 \"/\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 7 (- (str.indexof _arg_0 \"://\" 0) 1))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 2 (str.indexof _arg_0 \"/\"))) (- (str.indexof _arg_0 \"/\") (+ 2 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ (str.len \"://www.\") (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 8) (+ 8 (str.len \"://www.\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" (+ 7 (str.indexof _arg_0 \"://www.\"))) (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"://www.\"))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7) (+ 7 (str.indexof _arg_0 \"://www.\" 0 7))))",
      "(define-fun f ((_arg_0 String)) String (ite (str.contains _arg_0 \"mac\") \"mac\" (ite (str.contains _arg_0 \"windows\") \"windows\" (ite (str.contains _arg_0 \"microsoft\") \"microsoft\" \"\"))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\"))",
      "(define-fun f ((x String)) String (str.substr x 8 (- (str.indexof x \"/\" 8) 8)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 7 (- (str.indexof _arg_0 \" \" 8) 7)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 8) (+ (str.indexof _arg_0 \"://www.\" 0 8) 8)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ (str.indexof _arg_0 \"/\" 0) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 7) (str.indexof _arg_0 \"/\" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ (str.len \"://\") 1)) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://\" (+ (str.len \"://\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 1))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 8 (- (str.indexof _arg_0 \"://\" 0) 1)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\")) (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://\")) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" (+ 7 (str.indexof _arg_0 \".\" (+ 7 (str.indexof _arg_0 \"/\"))))) (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \".\" (+ 7 (str.indexof _arg_0 \"/\")))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ (str.len \"://www.\") (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0) 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"https=//www.\") 15) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ 7 (str.indexof _arg_0 \"/\" 0))) (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\" 0) 3) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://\" 0) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\" 0) 3) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://\" 0) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ (str.len \"://www.\") (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") (str.len \"://www.\")))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\" 0) 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ 7 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (- (str.indexof _arg_0 \"://\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 2 (str.indexof _arg_0 \"/\"))) (- (str.indexof _arg_0 \"/\") (+ 2 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ (str.len \"://www.\") (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 8) (+ 8 (str.len \"://www.\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" (+ 7 (str.indexof _arg_0 \"://www.\"))) (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"://www.\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7) (+ 7 (str.indexof _arg_0 \"://www.\" 0 7)))))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"mac\") \"mac\" (ite (str.contains _arg_0 \"windows\") \"windows\" (ite (str.contains _arg_0 \"microsoft\") \"microsoft\" \"\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr x 8 (- (str.indexof x \"/\" 8) 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (- (str.indexof _arg_0 \" \" 8) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 8) (+ (str.indexof _arg_0 \"://www.\" 0 8) 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ (str.indexof _arg_0 \"/\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 7) (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ (str.len \"://\") 1)) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://\" (+ (str.len \"://\") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 8 (- (str.indexof _arg_0 \"://\" 0) 1)))"
    ],
    "constants": [
      [
        0,
        1,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        1,
        "/",
        "://"
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        "/",
        "://www.",
        7,
        8,
        "."
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        8,
        "/",
        7
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        "https=//www.",
        "/",
        15
      ],
      [
        0,
        1,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        3,
        "://"
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        0,
        "/",
        3,
        "://"
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        0,
        8,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        1,
        "://",
        7
      ],
      [
        "/",
        2
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        8,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www.",
        7
      ],
      [
        8,
        1,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        "microsoft",
        "",
        "mac",
        "windows"
      ],
      [
        "/",
        "www.",
        4
      ],
      [
        8,
        "/"
      ],
      [
        8,
        " ",
        7
      ],
      [
        "https=//www.",
        "/",
        1
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        8,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        2,
        "/",
        "://www."
      ],
      [
        0,
        1,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        1,
        "/",
        "://"
      ],
      [
        1,
        "/",
        "://www.",
        7
      ],
      [
        8,
        0,
        "://",
        1
      ]
    ],
    "all_constants": [
      0,
      1,
      ".",
      3,
      2,
      "",
      4,
      7,
      8,
      "www.",
      15,
      "mac",
      "https=//www.",
      "/",
      "://",
      "windows",
      " ",
      "microsoft",
      "://www."
    ],
    "time_diff_ms": 1750.638
  },
  "extract-text-between-parenthesesmodified.sl": {
    "completions": [
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (+ 1 (str.indexof _arg_0 \">\" 0) (str.indexof _arg_0 \"<\" 0))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(ite (str.contains _arg_0 \"<\")\n     (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1))))\n     -1)",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") 1)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\") 6)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(ite (str.contains _arg_0 \"<\")\n     (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1))))\n     -1)",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(ite (str.contains _arg_0 \"<\")\n     (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1))))\n     -1)",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\") 6)))",
      "(ite (str.contains _arg_0 \"<\")\n     (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1))))\n     -1)",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"<\" 0)) 2)) -1)",
      "(ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))) -1)",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(ite (str.contains _arg_0 \"<\")\n     (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1))))\n     -1)",
      "(ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1)",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int\n    (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\") 6)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1)",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (+ 1 (str.indexof _arg_0 \">\" 0) (str.indexof _arg_0 \"<\" 0)))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (str.indexof _arg_0 \"<\" 0) 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\") 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\") 6))))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"<\" 0)) 2)) -1))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) 1)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\") 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))"
    ],
    "constants": [
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<",
        ">",
        -1
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        0,
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        ">",
        6
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<",
        ">",
        -1
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<",
        ">",
        -1
      ],
      [
        ">",
        6
      ],
      [
        0,
        1,
        "<",
        ">",
        -1
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        2,
        "<",
        6,
        -1
      ],
      [
        1,
        "<",
        ">",
        -1
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<",
        ">",
        -1
      ],
      [
        0,
        1,
        "<",
        ">",
        -1
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        ">",
        6
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        0,
        1,
        "<",
        ">",
        -1
      ],
      [
        1,
        "<",
        ">"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      6,
      ">",
      -1,
      "<"
    ],
    "time_diff_ms": 553.31
  },
  "phone-5-longmodified.sl": {
    "completions": [
      "\"(str.substr name 1 3)\"",
      "\"(str.substr name 1 3)\"",
      "\"(str.substr name 1 3))\"",
      "\"(ite (str.prefixof name \\\"+\\\") (str.substr name 1 2) (str.substr name 1 3))\"",
      "(define-fun f (name String) String\n    (str.substr name 1 3))",
      "\"(ite (str.contains name \\\"-\\\") (str.substr name 1 3) (str.substr name 1 2))\"",
      "\"(str.substr name 1 3)\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3)\n)",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3)\"",
      "\"(ite (str.contains name \\\" \\\") (str.substr name 1 3) (str.substr name 1 2))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(ite (str.contains name \\\" \\\") (str.substr name 1 3) (str.substr name 1 2))\"",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "\"(str.substr name 1 3)\"",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3)\"",
      "\"(ite (str.contains name \\\" \\\") (str.substr name 1 (str.indexof name \\\" \\\")) (str.substr name 1 2))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 2))\"",
      "(define-fun f (name String) String\n\t(str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(ite (str.contains name \\\" \\\") (str.substr name 1 (str.indexof name \\\" \\\" 0)) (str.substr name 1 (str.indexof name \\\"-\\\" 0)))\"",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3)\"",
      "\"(str.substr name 1 3)\"",
      "\"(str.substr name 1 3)\"",
      "\"(ite (str.contains name \\\" \\\") (str.substr name 1 (str.indexof name \\\" \\\" 0)) (str.substr name 1 (str.indexof name \\\"-\\\" 0)))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3)\"",
      "\"(str.substr name 1 3)\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3)\""
    ],
    "solutions": [
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(ite (str.prefixof name \\\"+\\\") (str.substr name 1 2) (str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(ite (str.contains name \\\"-\\\") (str.substr name 1 3) (str.substr name 1 2))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(ite (str.contains name \\\" \\\") (str.substr name 1 3) (str.substr name 1 2))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(ite (str.contains name \\\" \\\") (str.substr name 1 3) (str.substr name 1 2))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(ite (str.contains name \\\" \\\") (str.substr name 1 (str.indexof name \\\" \\\")) (str.substr name 1 2))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 2))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(ite (str.contains name \\\" \\\") (str.substr name 1 (str.indexof name \\\" \\\" 0)) (str.substr name 1 (str.indexof name \\\"-\\\" 0)))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(ite (str.contains name \\\" \\\") (str.substr name 1 (str.indexof name \\\" \\\" 0)) (str.substr name 1 (str.indexof name \\\"-\\\" 0)))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")"
    ],
    "constants": [
      [
        "(str.substr name 1 3)"
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(ite (str.prefixof name \"+\") (str.substr name 1 2) (str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        "(ite (str.contains name \"-\") (str.substr name 1 3) (str.substr name 1 2))"
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        "(ite (str.contains name \" \") (str.substr name 1 3) (str.substr name 1 2))"
      ],
      [
        1,
        3
      ],
      [
        "(ite (str.contains name \" \") (str.substr name 1 3) (str.substr name 1 2))"
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) (str.substr name 1 2))"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 2))"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        "(str.substr name 1 3)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3)"
      ]
    ],
    "all_constants": [
      0,
      1,
      3,
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) (str.substr name 1 2))",
      "(ite (str.prefixof name \"+\") (str.substr name 1 2) (str.substr name 1 3))",
      "(str.substr name 1 3)",
      "(str.substr name 1 3))",
      "(str.substr name 1 2))",
      " ",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(ite (str.contains name \" \") (str.substr name 1 3) (str.substr name 1 2))",
      "(ite (str.contains name \"-\") (str.substr name 1 3) (str.substr name 1 2))"
    ],
    "time_diff_ms": 976.3030000000001
  },
  "phone-9-long-repeatmodified.sl": {
    "completions": [
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"/\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\") \"-\" \".\"))",
      "(str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace \n    (str.replace \n      (str.replace \n        (str.replace name \" \" \".\") \n        \"-\" \".\") \n      \"-\" \".\")))",
      "\"(str.replace name \\\"-\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(ite (str.prefixof name \"+\")\n     (str.replace name \" \" \".\")\n     (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          name \" \" \".\")\n        \"-\" \".\")\n      \"-\" \".\")\n    \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace \n    (str.replace \n      (str.replace \n        (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3) \".\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \" \" \"\") \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace name \" \" \".\")\n        \"-\"\n        \".\")\n      \"-\"\n      \".\")\n    \"-\"\n    \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \" \" \"\") \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\""
    ],
    "solutions": [
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"/\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace name \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+\") (str.replace name \" \" \".\") (str.replace name \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3) \".\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \" \" \"\") \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \" \" \"\") \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")"
    ],
    "constants": [
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"-\" \".\")"
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \"/\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \".\" \".\")"
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \" \" \".\")"
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \" \" \".\")"
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace name \"-\" \".\")"
      ],
      [
        " ",
        "."
      ],
      [
        "-",
        " ",
        "+",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \"\") \".\" \".\")"
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        1,
        3,
        5,
        9,
        13,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \" \" \".\")"
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"-\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\")"
      ]
    ],
    "all_constants": [
      ".",
      "",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      1,
      3,
      5,
      9,
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")",
      13,
      "+",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \"\") \".\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))",
      "(str.replace name \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \".\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"+\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \"/\" \".\")",
      " ",
      "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \".\")",
      "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")",
      "-",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \" \" \".\") \"+\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \".\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\")"
    ],
    "time_diff_ms": 1438.385
  },
  "exceljet1modified.sl": {
    "completions": [
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "`(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))`",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\".\\\") 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (str.indexof _arg_1 \\\"_\\\" 0) (str.len _arg_1))\"",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\"",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\" 0) 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" (+ 1 (str.indexof _arg_1 \"_\"))) 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (str.indexof _arg_1 \\\"_\\\" (+ (str.indexof _arg_1 \\\".\\\" 0) 1)) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" (+ (str.indexof _arg_1 \\\".\\\" 0) 1)) 1) (str.len _arg_1))\"",
      "`(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))`",
      "\"(str.substr _arg_1 (str.indexof _arg_1 \".\" 0) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\" (str.indexof _arg_1 \".\" 0)) 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\".\\\") 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\"",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\"",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\"",
      "\"(str.substr _arg_1 (str.indexof _arg_1 \\\"_\\\" (+ (str.len _arg_0) 2)) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "\"(str.substr _arg_1 (str.indexof _arg_1 \\\"_\\\" (+ (str.indexof _arg_1 \\\".\\\" 0) 1)) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\""
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\".\\\") 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (str.indexof _arg_1 \\\"_\\\" 0) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\" 0) 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" (+ 1 (str.indexof _arg_1 \"_\"))) 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (str.indexof _arg_1 \\\"_\\\" (+ (str.indexof _arg_1 \\\".\\\" 0) 1)) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" (+ (str.indexof _arg_1 \\\".\\\" 0) 1)) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (str.indexof _arg_1 \")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\" (str.indexof _arg_1 \".\" 0)) 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\".\\\") 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (str.indexof _arg_1 \\\"_\\\" (+ (str.len _arg_0) 2)) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (str.indexof _arg_1 \\\"_\\\" (+ (str.indexof _arg_1 \\\".\\\" 0) 1)) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\") 1) (str.len _arg_1))\")"
    ],
    "constants": [
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (str.indexof _arg_1 \"_\" 0) (str.len _arg_1))"
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 "
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
      ],
      [
        0,
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (str.indexof _arg_1 \"_\" (+ (str.indexof _arg_1 \".\" 0) 1)) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" (+ (str.indexof _arg_1 \".\" 0) 1)) 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (str.indexof _arg_1 "
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))"
      ],
      [
        0,
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))"
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
      ],
      [
        "(str.substr _arg_1 (str.indexof _arg_1 \"_\" (+ (str.len _arg_0) 2)) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (str.indexof _arg_1 \"_\" (+ (str.indexof _arg_1 \".\" 0) 1)) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))"
      ]
    ],
    "all_constants": [
      ".",
      1,
      0,
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" (+ (str.indexof _arg_1 \".\" 0) 1)) 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (str.indexof _arg_1 ",
      "(str.substr _arg_1 (str.indexof _arg_1 \"_\" (+ (str.indexof _arg_1 \".\" 0) 1)) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 ",
      "(str.substr _arg_1 (str.indexof _arg_1 \"_\" 0) (str.len _arg_1))",
      "(str.substr _arg_1 (str.indexof _arg_1 \"_\" (+ (str.len _arg_0) 2)) (str.len _arg_1))",
      "_"
    ],
    "time_diff_ms": 1047.104
  },
  "phone-7-shortmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(str.substr name 6 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))"
    ],
    "constants": [
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ]
    ],
    "all_constants": [
      3,
      5,
      6,
      7,
      "(str.substr name 6 3))"
    ],
    "time_diff_ms": 1550.725
  },
  "extract-word-containing-specific-textmodified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" for\") (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(define-fun f ((x String)) String (str.substr x 0 (str.indexof x \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0\n            (+ (str.indexof _arg_0 \" \" 0) 1)\n            (- (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \")\n            (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" for\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr x 0 (str.indexof x \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))"
    ],
    "constants": [
      [
        1,
        " "
      ],
      [
        " for",
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      " for"
    ],
    "time_diff_ms": 1968.7230000000002
  },
  "stackoverflow7modified.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(str.replace _arg_1 _arg_0 \"\")",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String\n  (str.replace _arg_1 _arg_0 \"\"))",
      "(str.replace _arg_1 _arg_0 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.++ (str.substr _arg_0 0 (- (str.indexof _arg_0 _arg_1 0) 1)) _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_1 _arg_0 \"\")",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_1 0 (str.indexof _arg_1 _arg_0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(str.replace _arg_1 _arg_0 \"\")",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_0 _arg_1 \"\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.++ (str.substr _arg_0 0 (- (str.indexof _arg_0 _arg_1 0) 1)) _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(str.substr _arg_1 0 (str.indexof _arg_1 _arg_0 0))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_1 0 (str.indexof _arg_1 \",\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String\n  (str.replace _arg_1 _arg_0 \"\"))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.++ (str.substr _arg_0 0 (- (str.indexof _arg_0 _arg_1 0) 1)) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 0 (str.indexof _arg_1 _arg_0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.++ (str.substr _arg_0 0 (- (str.indexof _arg_0 _arg_1 0) 1)) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 0 (str.indexof _arg_1 _arg_0 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 0 (str.indexof _arg_1 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))"
    ],
    "constants": [
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0,
        1
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0,
        1
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0,
        ","
      ],
      [
        0
      ],
      [
        ""
      ]
    ],
    "all_constants": [
      0,
      "",
      1,
      ","
    ],
    "time_diff_ms": 1105.577
  },
  "phone-6-shortmodified.sl": {
    "completions": [
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name (+ 1 (str.indexof name \" \")) 4))",
      "\"(str.substr name 6 3))\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 5 3)\"",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name 1 3))",
      "(ite (str.contains name \" \") (str.substr name 5 3) (str.substr name 3 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name 2 3) (str.substr name 3 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name 1 3) (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(ite (= (str.indexof name \" \") -1) name (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr (str.substr name 5 3) 1 3))\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 4 3))",
      "(str.substr name 4 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(str.substr name 5 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 1 (str.indexof name \" \")) 4)))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 5 3) (str.substr name 3 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 2 3) (str.substr name 3 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name 1 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) name (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr (str.substr name 5 3) 1 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 4 3)))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))"
    ],
    "constants": [
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        1,
        " ",
        3,
        4
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 5 3)"
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        " ",
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        3,
        " ",
        2
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3,
        -1
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3,
        -1
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        "(str.substr (str.substr name 5 3) 1 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        3,
        5
      ]
    ],
    "all_constants": [
      1,
      2,
      3,
      4,
      5,
      6,
      "(str.substr (str.substr name 5 3) 1 3))",
      "(str.substr name 6 3))",
      "(str.substr name 5 3)",
      " ",
      -1
    ],
    "time_diff_ms": 1444.228
  },
  "43120683modified.sl": {
    "completions": [
      "\"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\"",
      "(ite (str.= _arg_0 \"one\") \"one apple\" (ite (str.= _arg_0 \"two\") \"two bananas\" (ite (str.= _arg_0 \"three\") \"three strawberries\" (ite (str.= _arg_0 \"four\") \"four oranges\" \"\"))))",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(define-fun f ((_arg_0 String)) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\"",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.++ _arg_0\n            (ite (= _arg_0 \\\"one\\\") \\\" apple\\\"\n                 (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\"\n                      (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\"\n                           (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\")))))\"",
      "(define-fun f ((_arg_0 String)) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\"",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "\"(str.replace _arg_0 'one' 'apple')\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(ite (str.= _arg_0 \"one\") \"one apple\" (ite (str.= _arg_0 \"two\") \"two bananas\" (ite (str.= _arg_0 \"three\") \"three strawberries\" (ite (str.= _arg_0 \"four\") \"four oranges\" \"\"))))",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(define-fun f ((_arg_0 String)) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\"",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(ite (= _arg_0 \"one\") \"one apple\" (ite (= _arg_0 \"two\") \"two bananas\" (ite (= _arg_0 \"three\") \"three strawberries\" (ite (= _arg_0 \"four\") \"four oranges\" \"\"))))",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\"",
      "(define-fun f ((_arg_0 String)) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(define-fun f ((_arg_0 String)) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(define-fun f ((_arg_0 String)) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "\"(str.++ _arg_0 (str.substr \\\"apple bananas strawberries oranges\\\" 5 5))\"",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\"",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\""
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\")",
      "(define-fun f (_arg_0 String) String (ite (str.= _arg_0 \"one\") \"one apple\" (ite (str.= _arg_0 \"two\") \"two bananas\" (ite (str.= _arg_0 \"three\") \"three strawberries\" (ite (str.= _arg_0 \"four\") \"four oranges\" \"\")))))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0\\n            (ite (= _arg_0 \\\"one\\\") \\\" apple\\\"\\n                 (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\"\\n                      (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\"\\n                           (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\")))))\")",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 'one' 'apple')\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (ite (str.= _arg_0 \"one\") \"one apple\" (ite (str.= _arg_0 \"two\") \"two bananas\" (ite (str.= _arg_0 \"three\") \"three strawberries\" (ite (str.= _arg_0 \"four\") \"four oranges\" \"\")))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (ite (= _arg_0 \"one\") \"one apple\" (ite (= _arg_0 \"two\") \"two bananas\" (ite (= _arg_0 \"three\") \"three strawberries\" (ite (= _arg_0 \"four\") \"four oranges\" \"\")))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\")",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \" \" (ite (= _arg_0 \"one\") \"apple\" (ite (= _arg_0 \"two\") \"bananas\" (ite (= _arg_0 \"three\") \"strawberries\" (ite (= _arg_0 \"four\") \"oranges\" \"\"))))))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (str.substr \\\"apple bananas strawberries oranges\\\" 5 5))\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"one apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\")"
    ],
    "constants": [
      [
        "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))"
      ],
      [
        "",
        "three strawberries",
        "one",
        "one apple",
        "four",
        "three",
        "four oranges",
        "two bananas",
        "two"
      ],
      [
        "(str.replace _arg_0 \"one\" \"apple\")"
      ],
      [
        "one",
        "apple"
      ],
      [
        "",
        "apple",
        "one",
        " ",
        "strawberries",
        "four",
        "three",
        "oranges",
        "bananas",
        "two"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.replace _arg_0 \"one\" \"one apple\")"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.replace _arg_0 \"one\" \"one apple\")"
      ],
      [
        "1",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.++ _arg_0\n            (ite (= _arg_0 \"one\") \" apple\"\n                 (ite (= _arg_0 \"two\") \" bananas\"\n                      (ite (= _arg_0 \"three\") \" strawberries\"\n                           (ite (= _arg_0 \"four\") \" oranges\")))))"
      ],
      [
        "",
        "apple",
        "one",
        " ",
        "strawberries",
        "four",
        "three",
        "oranges",
        "bananas",
        "two"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.replace _arg_0 \"one\" \"one apple\")"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.replace _arg_0 \"one\" \"apple\")"
      ],
      [
        "1",
        "apple"
      ],
      [
        "(str.replace _arg_0 'one' 'apple')"
      ],
      [
        "one",
        "apple"
      ],
      [
        "",
        "three strawberries",
        "one",
        "one apple",
        "four",
        "three",
        "four oranges",
        "two bananas",
        "two"
      ],
      [
        "one",
        "apple"
      ],
      [
        "",
        "apple",
        "one",
        " ",
        "strawberries",
        "four",
        "three",
        "oranges",
        "bananas",
        "two"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.replace _arg_0 \"one\" \"one apple\")"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "",
        "three strawberries",
        "one",
        "one apple",
        "four",
        "three",
        "four oranges",
        "two bananas",
        "two"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))"
      ],
      [
        "",
        "apple",
        "one",
        " ",
        "strawberries",
        "four",
        "three",
        "oranges",
        "bananas",
        "two"
      ],
      [
        "(str.replace _arg_0 \"one\" \"apple\")"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "",
        "apple",
        "one",
        " ",
        "strawberries",
        "four",
        "three",
        "oranges",
        "bananas",
        "two"
      ],
      [
        "",
        "apple",
        "one",
        " ",
        "strawberries",
        "four",
        "three",
        "oranges",
        "bananas",
        "two"
      ],
      [
        "(str.++ _arg_0 (str.substr \"apple bananas strawberries oranges\" 5 5))"
      ],
      [
        "(str.replace _arg_0 \"one\" \"one apple\")"
      ],
      [
        "1",
        "apple"
      ],
      [
        "(str.replace _arg_0 \"one\" \"apple\")"
      ]
    ],
    "all_constants": [
      "",
      "(str.replace _arg_0 'one' 'apple')",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "1",
      "(str.++ _arg_0 (str.substr \"apple bananas strawberries oranges\" 5 5))",
      "two bananas",
      "(str.replace _arg_0 \"one\" \"one apple\")",
      "one",
      "(str.++ _arg_0\n            (ite (= _arg_0 \"one\") \" apple\"\n                 (ite (= _arg_0 \"two\") \" bananas\"\n                      (ite (= _arg_0 \"three\") \" strawberries\"\n                           (ite (= _arg_0 \"four\") \" oranges\")))))",
      "strawberries",
      "four oranges",
      "oranges",
      "two",
      " ",
      "one apple",
      "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))",
      "apple",
      "three",
      "bananas",
      "three strawberries",
      "four"
    ],
    "time_diff_ms": 1424.2169999999999
  },
  "split-text-string-at-specific-charactermodified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \".\")))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \",\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 _arg_1)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (int.to.str _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n    (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f ((s String) (i Int)) String\n  (str.substr s 0 (str.indexof s \"_\" i))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((s String) (i Int)) String\n  (str.substr s 0 (str.indexof s \"_\" i))\n)",
      "(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\" 0) 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f ((s String) (n Int)) String\n  (str.substr s 0 (str.indexof s \".\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (+ _arg_1 1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(define-fun f ((s String) (n Int)) String\n  (str.substr s 0 (str.indexof s \"_\" n)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(str.substr _arg_0 0 (_arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0))\n)",
      "(define-fun f ((s String) (n Int)) String\n    (str.substr s 0 (str.indexof s \"_\" n)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (+ _arg_1 1))))",
      "(define-fun f ((s String) (i Int)) String\n  (str.substr s 0 (str.indexof s \"_\" i)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(define-fun f ((s String) (n Int)) String\n  (str.substr s 0 (str.indexof s \"_\" n)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f ((s String) (n Int)) String\n  (str.substr s 0 (str.indexof s \"_\" n)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \".\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \".\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (int.to.str _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" i)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" i)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \".\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" n)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" n)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" i)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" n)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" n)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \".\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))"
    ],
    "constants": [
      [
        0,
        "."
      ],
      [
        0
      ],
      [
        0,
        ","
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        " "
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        ","
      ],
      [
        0,
        "_"
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "."
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "."
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ]
    ],
    "all_constants": [
      0,
      ",",
      ".",
      1,
      2,
      " ",
      "_"
    ],
    "time_diff_ms": 2067.919
  },
  "phone-7-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(ite (= (str.len name) 14) (str.substr name 5 3) (str.substr name 8 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n    (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 7 3))\"",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3)\"",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 6 3)\"",
      "\"(str.substr name 7 3))\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (= (str.len name) 14) (str.substr name 5 3) (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3)\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3)\")",
      "(define-fun f (name String) String \"(str.substr name 7 3))\")"
    ],
    "constants": [
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 7 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        8,
        3,
        5,
        14
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 7 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3)"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 6 3)"
      ],
      [
        "(str.substr name 7 3))"
      ]
    ],
    "all_constants": [
      3,
      "(str.substr name 6 3)",
      5,
      6,
      7,
      8,
      "(str.substr name 6 3))",
      14,
      "(str.substr name 7 3))"
    ],
    "time_diff_ms": 1767.4479999999999
  },
  "phone-6modified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))"
    ],
    "constants": [
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ]
    ],
    "all_constants": [
      1,
      3,
      5,
      "(str.substr name 5 3))",
      " "
    ],
    "time_diff_ms": 1419.6399999999999
  },
  "phone-10-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 11 3))\"",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 4 3)\n           \") \"\n           (str.substr name 8 3)\n           \"-\"\n           (str.substr name 12 3)))",
      "(str.replace name \"-\" \" \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\") (\\\" \\\" \\\"(\\\")) \\\"-\\\" \\\" \\\")\"",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 7 3)\n           \"-\"\n           (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "\"(str.++ \\\"+\\\" \\\"(\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 4 3) \\\"-\\\" (str.substr name 8 3))\"",
      "(define-fun f (name String) String (str.++ \"+ \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 4 3)\n           \") \"\n           (str.substr name 8 3)\n           \"-\"\n           (str.substr name 12 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n          (str.substr name 0 3)\n          \" (\"\n          (str.substr name 3 3)\n          \") \"\n          (str.substr name 6 3)\n          \"-\"\n          (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f ((name String)) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n    (str.substr name 0 3)\n    \" (\"\n    (str.substr name 3 3)\n    \") \"\n    (str.substr name 6 3)\n    \"-\"\n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n    (str.substr name 0 3)\n    \" (\"\n    (str.substr name 3 3)\n    \") \"\n    (str.substr name 6 3)\n    \"-\"\n    (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 11 3))\"",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "(define-fun f (name String) String (+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "\"(str.++ \\\"+\\\" \\\"(\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\") \\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 6 3))\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 11 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3) \"-\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace name \"-\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\" \\\" \\\") (\\\" \\\" \\\"(\\\")) \\\"-\\\" \\\" \\\")\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" \\\"(\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 4 3) \\\"-\\\" (str.substr name 8 3))\")",
      "(define-fun f (name String) String (str.++ \"+ \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3) \"-\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 11 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" \\\"(\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\") \\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 6 3))\")"
    ],
    "constants": [
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3))"
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        "+",
        12,
        " (",
        ") "
      ],
      [
        "-",
        " "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        "(str.replace (str.replace (str.replace name \" \" \") (\" \" \"(\")) \"-\" \" \")"
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ \"+\" \"(\" (str.substr name 0 3) \")\" (str.substr name 4 3) \"-\" (str.substr name 8 3))"
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        "+ ",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        "+",
        12,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \")\" (str.substr name 3 3) \"-\" (str.substr name 7 3))"
      ],
      [
        0,
        3,
        6,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \")\" (str.substr name 3 3) \"-\" (str.substr name 7 3))"
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3))"
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ \"+\" \"(\" (str.substr name 0 3) \")\" (str.substr name 3 3) \"-\" (str.substr name 6 3))"
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))"
      ]
    ],
    "all_constants": [
      0,
      3,
      4,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      "+",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3))",
      " (",
      "(str.++ \"+\" \"(\" (str.substr name 0 3) \")\" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \")\" (str.substr name 3 3) \"-\" (str.substr name 7 3))",
      "(str.replace (str.replace (str.replace name \" \" \") (\" \" \"(\")) \"-\" \" \")",
      "+ ",
      "(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))",
      " ",
      ") ",
      "-",
      "(str.++ \"+\" \"(\" (str.substr name 0 3) \")\" (str.substr name 3 3) \"-\" (str.substr name 6 3))"
    ],
    "time_diff_ms": 2022.983
  },
  "stackoverflow2modified.sl": {
    "completions": [
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.replace _arg_0 \" \" \"\\n\"))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.replace _arg_0 \" \" \"\\n\"))",
      "\"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\" \\\") 1))\"",
      "(define-fun f ((_arg_0 String)) String (str.++ (str.replace _arg_0 \" \" \"\") \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.replace _arg_0 \\\" \\\" \\\"\\\")\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(ite (str.contains _arg_0 \" \") _arg_0 (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "\"(str.filter (lambda (x) (str.contains x _arg_0)) (str.split Start \\\" \\\")))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.replace _arg_0 \\\"korea\\\" \\\"\\\")\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.filter (lambda (x) (str.contains x _arg_0)) (str.split Start \\\" \\\")))\"",
      "\"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.++ \"india china\" \" \" \"japan\")",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.replace _arg_0 \" korea\" \"\")",
      "\"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\"",
      "\"(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")) \\\" \\\")\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.replace _arg_0 \" \" \"\\n\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "\"(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")) \\\" \\\")\"",
      "\"(str.replace _arg_0 \\\" korea\\\" \\\"\\\")\"",
      "\"(str.++ (ite (str.contains _arg_0 \\\"india\\\") \\\"india \\\" \\\"\\\") (ite (str.contains _arg_0 \\\"china\\\") \\\"china\\\" \\\"\\\"))\"",
      "\"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\" \\\") 1))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.++ \"india\" \" china\")",
      "\"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\" \\\") 1))\"",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" \" \"\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \") 1))",
      "\"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\"",
      "\"(str.++ (str.substr _arg_0 0 5) (str.at _arg_0 6))\"",
      "\"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\""
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\\n\"))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\\n\"))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\" \\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" \" \"\") \" \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") _arg_0 (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String \"(str.filter (lambda (x) (str.contains x _arg_0)) (str.split Start \\\" \\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"korea\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.filter (lambda (x) (str.contains x _arg_0)) (str.split Start \\\" \\\")))\")",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.++ \"india china\" \" \" \"japan\"))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" korea\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\")",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")) \\\" \\\")\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\\n\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")) \\\" \\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\" korea\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.++ (ite (str.contains _arg_0 \\\"india\\\") \\\"india \\\" \\\"\\\") (ite (str.contains _arg_0 \\\"china\\\") \\\"china\\\" \\\"\\\"))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\" \\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.++ \"india\" \" china\"))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\" \\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\")",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 0 5) (str.at _arg_0 6))\")",
      "(define-fun f (_arg_0 String) String \"(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))\")"
    ],
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        "\n"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "",
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        "\n"
      ],
      [
        "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \") 1))"
      ],
      [
        "",
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.replace _arg_0 \" \" \"\")"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split Start \" \")))"
      ],
      [
        0,
        " "
      ],
      [
        "(str.replace _arg_0 \"korea\" \"\")"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split Start \" \")))"
      ],
      [
        "(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "japan",
        " ",
        "india china"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "",
        " korea"
      ],
      [
        "(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))"
      ],
      [
        "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) \" \")"
      ],
      [
        0,
        " "
      ],
      [
        "(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        "\n"
      ],
      [
        0,
        " "
      ],
      [
        "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) \" \")"
      ],
      [
        "(str.replace _arg_0 \" korea\" \"\")"
      ],
      [
        "(str.++ (ite (str.contains _arg_0 \"india\") \"india \" \"\") (ite (str.contains _arg_0 \"china\") \"china\" \"\"))"
      ],
      [
        "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \") 1))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " china",
        "india"
      ],
      [
        "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \") 1))"
      ],
      [
        "",
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))"
      ],
      [
        "(str.++ (str.substr _arg_0 0 5) (str.at _arg_0 6))"
      ],
      [
        "(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))"
      ]
    ],
    "all_constants": [
      0,
      1,
      "\n",
      "",
      "india china",
      "japan",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.++ (str.substr _arg_0 0 5) (str.substr _arg_0 6 5))",
      "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split Start \" \")))",
      "(str.++ (ite (str.contains _arg_0 \"india\") \"india \" \"\") (ite (str.contains _arg_0 \"china\") \"china\" \"\"))",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) \" \")",
      "india",
      " china",
      " ",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \") 1))",
      " korea",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.++ (str.substr _arg_0 0 5) (str.at _arg_0 6))",
      "(str.replace _arg_0 \" korea\" \"\")",
      "(str.replace _arg_0 \"korea\" \"\")"
    ],
    "time_diff_ms": 1222.101
  },
  "stackoverflow9modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ],
    "time_diff_ms": 1479.019
  },
  "strip-html-from-text-or-numbersmodified.sl": {
    "completions": [
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\") ",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))"
    ],
    "constants": [
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ]
    ],
    "all_constants": [
      "",
      3,
      "<b>",
      7
    ],
    "time_diff_ms": 968.925
  },
  "phone-10modified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \" \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 2)\n           \" (\"\n           (str.substr name 2 3)\n           \") \"\n           (str.substr name 5 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \" (\" \n    (str.substr name 3 3) \") \" \n    (str.substr name 6 3) \"-\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \") \" \"(\") \"-\" \") \" \"(\") \")\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 4 3) \") \" \n    (str.substr name 7 3) \"-\" \n    (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \" \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 2 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \") \" \"(\") \"-\" \") \" \"(\") \")\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))"
    ],
    "constants": [
      [
        0,
        3,
        6,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        " ",
        11,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        5,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        " (",
        ") "
      ],
      [
        ")",
        "-",
        ") ",
        "("
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        " ",
        "(",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        " ",
        "(",
        ") "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      11,
      13,
      "(",
      "+",
      " (",
      " ",
      ") ",
      "-",
      ")"
    ],
    "time_diff_ms": 1380.069
  },
  "phone-9-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                name\n                                                                                                                                                \" \" \"\")\n                                                                                                                                              \"+\" \".\")\n                                                                            \"-\" \".\")\n                                                                        \"-\" \".\")\n                                                                    \"-\" \".\")\n                                                                \"-\" \".\")\n                                                            \"-\" \".\")\n                                                        \"-\" \".\")\n                                                    \"-\" \".\")\n                                                \"-\" \".\")\n                                            \"-\" \".\")\n                                        \"-\" \".\")\n                                    \"-\" \".\")\n                                \"-\" \".\")\n                            \"-\" \".\")\n                        \"-\" \".\")\n                    \"-\" \".\")\n                \"-\" \".\")\n            \"-\" \".\")\n        \"-\" \".\")\n    \"-\" \".\")\n  \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \" \" \"\") \"-\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(str.replace name \" \" \".\")",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"/\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          name\n                                          \" \" \"\")\n                                        \"-\")\n                                      \"(\" \"\")\n                                    \")\")\n                                  \"+\")\n                                \".\")\n                              \"BRD\" \"Branding\")\n                            \"DRS\" \"Direct Response\")\n                          \"LDS\" \"Leads\")\n                        \"=\" \"\")\n                      \"/\")\n                    \"in\" \"\")\n                  \"_\")\n                \"9\")\n              \"microsoft\" \"windows\")\n            \"apple\" \"mac\")\n          \"1\")\n        \"2\")\n      \"3\")\n    \"4\")\n  \".\"\n  \" \")\n   \" \"\n   \" \")",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                name\n                                                                                                                                                \" \"\n                                                                                                                                                \".\")\n                                                                                                                                              \"+\"\n                                                                                                                                              \".\")\n                                                                            \"-\"\n                                                                            \".\")\n                                                                        \"+\"\n                                                                        \".\")\n                                                                    \"-\"\n                                                                    \".\")\n                                                                \"+\"\n                                                                \".\")\n                                                            \"-\"\n                                                            \".\")\n                                                        \"+\"\n                                                        \".\")\n                                                    \"-\"\n                                                    \".\")\n                                                \"+\"\n                                                \".\")\n                                            \"-\"\n                                            \".\")\n                                        \"+\"\n                                        \".\")\n                                    \"-\"\n                                    \".\")\n                                \"+\"\n                                \".\")\n                            \"-\"\n                            \".\")\n                        \"+\"\n                        \".\")\n                    \"-\"\n                    \".\")\n                \"+\"\n                \".\")\n            \"-\"\n            \".\")\n        \"+\"\n        \".\")\n    \"-\"\n    \".\")\n  \"+\"\n  \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\")",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3) \".\"\n    (str.substr name 12 3)\n  )\n)",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n    (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"+\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \" \" \"\") \"-\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"/\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\") \"(\" \"\") \")\") \"+\") \".\") \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\") \"=\" \"\") \"/\") \"in\" \"\") \"_\") \"9\") \"microsoft\" \"windows\") \"apple\" \"mac\") \"1\") \"2\") \"3\") \"4\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace ())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))"
    ],
    "constants": [
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"/\" \".\")"
      ],
      [
        "",
        " ",
        "2",
        "4",
        "/",
        "Direct Response",
        "-",
        "Branding",
        "LDS",
        "microsoft",
        "Leads",
        ")",
        "apple",
        "9",
        "3",
        "1",
        "=",
        "windows",
        "BRD",
        "+",
        ".",
        "DRS",
        "in",
        "_",
        "(",
        "mac"
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "+",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ]
    ],
    "all_constants": [
      ".",
      "",
      0,
      3,
      4,
      8,
      "Direct Response",
      "LDS",
      12,
      "Leads",
      "DRS",
      "(",
      "+",
      "mac",
      "3",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"/\" \".\")",
      "1",
      "=",
      "BRD",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))",
      "_",
      "/",
      "4",
      "windows",
      " ",
      "9",
      "microsoft",
      "in",
      "apple",
      "-",
      "Branding",
      "2",
      ")"
    ],
    "time_diff_ms": 1131.774
  },
  "exceljet4modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://(.*?)/?$\" \"$2\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \".*//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\")",
      "(str.replace _arg_0 \"([^/]+://|/$)\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.replace _arg_0 \".*://\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://(www\\\\.)?\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) (ite (str.suffixof _arg_0 \"/\") 1 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.replace _arg_0 \".*//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://(.*?)/?$\" \"$2\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"([^/]+://|/$)\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://(www\\\\.)?\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) (ite (str.suffixof _arg_0 \"/\") 1 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))"
    ],
    "constants": [
      [
        3,
        "://"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        "$2",
        "^(https?|ftp|sftp)://(.*?)/?$"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        3,
        "://"
      ],
      [
        2,
        "//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        ".*//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        "",
        "^[a-zA-Z]+=//"
      ],
      [
        "",
        "([^/]+://|/$)"
      ],
      [
        3,
        "://"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        3,
        "://"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        0,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        "",
        ".*://"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        0,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        0,
        2,
        "//"
      ],
      [
        3,
        "://"
      ],
      [
        "^(https?|ftp|sftp)://"
      ],
      [
        3,
        "://"
      ],
      [
        0,
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        "",
        "^(https?|ftp|sftp)://(www\\.)?"
      ],
      [
        3,
        "://"
      ],
      [
        0,
        1,
        "/",
        3,
        "://"
      ],
      [
        0,
        "//"
      ],
      [
        0,
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        "",
        ".*//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ]
    ],
    "all_constants": [
      "",
      0,
      2,
      3,
      "^(https?|ftp|sftp)://",
      1,
      "/",
      "://",
      "$2",
      "^[a-zA-Z]+=//",
      "//",
      "^(https?|ftp|sftp)://(.*?)/?$",
      "([^/]+://|/$)",
      "^(https?|ftp|sftp)://(www\\.)?",
      ".*://",
      ".*//"
    ],
    "time_diff_ms": 2162.4919999999997
  },
  "33619752modified.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(define-fun f ((_arg_0 String)) String (ite (str.contains _arg_0 \" Inc\") (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\") 1)) (ite (str.contains _arg_0 \" Company\") (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Company\") 1)) (ite (str.contains _arg_0 \" Corporation\") (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Corporation\") 1)) _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" (ite (str.contains _arg_0 \\\"Enterprises\\\") \\\" Enterprises\\\" \\\"\\\"))) 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f ((_arg_0 String)) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f ((s String)) String\n    s)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" (ite (str.contains _arg_0 \\\"Enterprises\\\") \\\" Enterprises\\\" \\\"\\\"))) 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" \\\" Enterprises\\\")) 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f ((_arg_0 String)) String (ite (str.contains _arg_0 \" Inc\") \"General Electric\" (ite (str.contains _arg_0 \" Company\") \"General Electric\" (ite (str.contains _arg_0 \" Corporation\") \"Microsoft\" (ite (str.contains _arg_0 \" Enterprises\") \"Nintendo\" _arg_0)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f ((_arg_0 String)) String (ite (str.contains _arg_0 \" Inc\") (str.replace _arg_0 \" Inc\" \"\") (ite (str.contains _arg_0 \" Company\") (str.replace _arg_0 \" Company\" \"\") (ite (str.contains _arg_0 \" Corporation\") (str.replace _arg_0 \" Corporation\" \"\") (ite (str.contains _arg_0 \" Enterprises\") (str.replace _arg_0 \" Enterprises\" \"\") _arg_0)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" Inc\") (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\") 1)) (ite (str.contains _arg_0 \" Company\") (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Company\") 1)) (ite (str.contains _arg_0 \" Corporation\") (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Corporation\") 1)) _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" (ite (str.contains _arg_0 \\\"Enterprises\\\") \\\" Enterprises\\\" \\\"\\\"))) 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String s)",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" (ite (str.contains _arg_0 \\\"Enterprises\\\") \\\" Enterprises\\\" \\\"\\\"))) 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" \\\" Enterprises\\\")) 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" Inc\") \"General Electric\" (ite (str.contains _arg_0 \" Company\") \"General Electric\" (ite (str.contains _arg_0 \" Corporation\") \"Microsoft\" (ite (str.contains _arg_0 \" Enterprises\") \"Nintendo\" _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" Inc\") (str.replace _arg_0 \" Inc\" \"\") (ite (str.contains _arg_0 \" Company\") (str.replace _arg_0 \" Company\" \"\") (ite (str.contains _arg_0 \" Corporation\") (str.replace _arg_0 \" Corporation\" \"\") (ite (str.contains _arg_0 \" Enterprises\") (str.replace _arg_0 \" Enterprises\" \"\") _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))"
    ],
    "constants": [
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        0,
        " Corporation",
        1,
        " Inc",
        " Company"
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" (ite (str.contains _arg_0 \"Enterprises\") \" Enterprises\" \"\"))) 0))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" (ite (str.contains _arg_0 \"Enterprises\") \" Enterprises\" \"\"))) 0))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" \" Enterprises\")) 0))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " Corporation",
        "General Electric",
        "Nintendo",
        " Inc",
        "Microsoft",
        " Company",
        " Enterprises"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        " Corporation",
        " Inc",
        " Company",
        " Enterprises"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      " Corporation",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" \" Enterprises\")) 0))",
      "Nintendo",
      " ",
      " Company",
      "General Electric",
      "Microsoft",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" (ite (str.contains _arg_0 \"Enterprises\") \" Enterprises\" \"\"))) 0))",
      " Enterprises",
      " Inc"
    ],
    "time_diff_ms": 2248.824
  },
  "phone-6-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String \"769\")",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n\t(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(lambda (name) (str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3)\"",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "\"(str.substr name 5 3)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 6 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"769\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(lambda (name) (str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))"
    ],
    "constants": [
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        "769"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(lambda (name) (str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ]
    ],
    "all_constants": [
      "(lambda (name) (str.substr name 5 3))",
      3,
      5,
      6,
      "(str.substr name 5 3))",
      "769",
      "(str.substr name 5 3)"
    ],
    "time_diff_ms": 2348.232
  },
  "get-last-name-from-name-with-commamodified.sl": {
    "completions": [
      "\"(str.replace _arg_0 (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \\\",\\\" 0) 1) (str.len _arg_0)) \\\",\\\" (str.substr _arg_0 0 (str.indexof _arg_0 \\\",\\\" 0))) _arg_0)\"",
      "(str.++ (str.substr _arg_0 1 (str.indexof _arg_0 \",\")) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \"\")(\",\"))",
      "(str.replace _arg_0 \"^(.*),(.*)$\" \"$2,$1\"))",
      "(define-fun f ((_arg_0 String)) String (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.len _arg_0)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) \"\")",
      "(define-fun f ((_arg_0 String)) String (str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2)))))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) \"\")",
      "(str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.len _arg_0)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \"\") (str.replace _ arg_0 (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) \"\")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\" 0))))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \"\") (str.replace _arg_0 \" \" \",\") )",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \"\") (str.++ \",\" (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.len (str.at _arg_0 (str.indexof _arg_0 \",\" 0))) 1)))",
      "(str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \\\",\\\" 0) 1) (str.len _arg_0)) \\\",\\\" (str.substr _arg_0 0 (str.indexof _arg_0 \\\",\\\" 0))) _arg_0)\")",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 1 (str.indexof _arg_0 \",\")) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(.*),(.*)$\" \"$2,$1\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.len _arg_0)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.len _arg_0)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))"
    ],
    "constants": [
      [
        "(str.replace _arg_0 (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) _arg_0)"
      ],
      [
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        ","
      ],
      [
        "^(.*),(.*)$",
        "$2,$1"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      ",",
      "",
      "^(.*),(.*)$",
      "(str.replace _arg_0 (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) _arg_0)",
      "$2,$1"
    ],
    "time_diff_ms": 1892.649
  },
  "initials-long-repeatmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (- (str.indexof name \" \" 0) 1) 1)\n    \".\"))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "\"(str.++ (str.at name 0) \\\".\\\" (str.at name (+ 1 (str.indexof name \\\" \\\" 0))))\"",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\") 1) 1))\"",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (- (str.indexof name \" \" 0) 1) 1)\n    \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 999) 0 1) \".\"))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String \"(str.++ (str.at name 0) \\\".\\\" (str.at name (+ 1 (str.indexof name \\\" \\\" 0))))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\") 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 999) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")"
    ],
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \") 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        999,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ]
    ],
    "all_constants": [
      0,
      1,
      ".",
      2,
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \") 1) 1))",
      999,
      " ",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))"
    ],
    "time_diff_ms": 1603.8110000000001
  },
  "exceljet3modified.sl": {
    "completions": [
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(define-fun f ((year String) (make String) (model String) (fuel-economy String)) String\n  model)",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.replace _arg_0 \"year= \" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.substr _arg_0 6 (- (str.indexof _arg_0 \"/\") 6)))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f ((year String) (make String) (model String) (fuel-economy String)) String\n  model)",
      "\"(str.replace _arg_0 \\\"year=\\\" \\\"\\\")\"",
      "(define-fun f ((year String) (make String) (model String) (fuel_economy String)) String\n  model)",
      "(str.replace _arg_0 \"/\" \"\")",
      "(define-fun f ((year String) (make String) (model String) (fuel-economy String)) String\n  model)",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(str.replace _arg_0 \"/\" \"\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"/\\\" \\\"\\\") \\\" \\\" \\\"\\\") \\\"=\\\" \\\"\\\")\"",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"year= \" \"\") \"make= \" \"\") \"model= \" \"\")",
      "(str.substr _arg_0 6 (- (str.indexof _arg_0 \" \") 6)))",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(str.substr _arg_0 6 (- (str.len _arg_0) 6))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"/\" \"\"))",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"/\\\" \\\" \\\") \\\"year=\\\" \\\"\\\") \\\"make=\\\" \\\"\\\")\"",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(str.replace _arg_0 \"/\" \" \")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9) (str.at _arg_0 10) (str.at _arg_0 11) (str.at _arg_0 12) (str.at _arg_0 13) (str.at _arg_0 14))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.++ \n  (str.substr _arg_0 5 (- (str.indexof _arg_0 \"=\") 5))\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"=\") 2) (str.len _arg_0))\n)",
      "(define-fun f ((year String) (make String) (model String) (fuel_economy String)) String\n  model)",
      "(str.++ (str.substr _arg_0 5 4) (str.substr _arg_0 15 (- (str.indexof _arg_0 \" \" 15) 15)))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.++ (str.substr _arg_0 5 (str.indexof _arg_0 \"=\")))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(str.replace _arg_0 \"fuel economy= \" \"\")",
      "(define-fun f ((year String) (make String) (model String) (fuel_economy String)) String\n  model)"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String model)",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"year= \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (- (str.indexof _arg_0 \"/\") 6)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String model)",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"year=\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String model)",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String model)",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"/\\\" \\\"\\\") \\\" \\\" \\\"\\\") \\\"=\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"year= \" \"\") \"make= \" \"\") \"model= \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (- (str.indexof _arg_0 \" \") 6)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (- (str.len _arg_0) 6)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"/\\\" \\\" \\\") \\\"year=\\\" \\\"\\\") \\\"make=\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9) (str.at _arg_0 10) (str.at _arg_0 11) (str.at _arg_0 12) (str.at _arg_0 13) (str.at _arg_0 14)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.indexof _arg_0 \"=\") 5)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"=\") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String model)",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 4) (str.substr _arg_0 15 (- (str.indexof _arg_0 \" \" 15) 15))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (str.indexof _arg_0 \"=\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"fuel economy= \" \"\"))",
      "(define-fun f (_arg_0 String) String model)"
    ],
    "constants": [
      [
        0,
        "/",
        6
      ],
      [],
      [
        0,
        "/",
        6
      ],
      [
        "",
        "/"
      ],
      [
        0,
        "/",
        6
      ],
      [
        "",
        "/"
      ],
      [
        0,
        "="
      ],
      [
        "",
        "year= "
      ],
      [
        "",
        "/"
      ],
      [
        "/",
        6
      ],
      [
        "",
        "/"
      ],
      [
        0,
        "="
      ],
      [],
      [
        "(str.replace _arg_0 \"year=\" \"\")"
      ],
      [],
      [
        "",
        "/"
      ],
      [],
      [
        0,
        "/",
        6
      ],
      [
        "",
        "/"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"/\" \"\") \" \" \"\") \"=\" \"\")"
      ],
      [
        0,
        "/",
        6
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "make= ",
        "year= ",
        "model= "
      ],
      [
        " ",
        6
      ],
      [
        0,
        "/",
        6
      ],
      [
        6
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"/\" \" \") \"year=\" \"\") \"make=\" \"\")"
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        0,
        "/",
        6
      ],
      [
        "/",
        " "
      ],
      [
        "",
        "/"
      ],
      [
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14
      ],
      [
        "",
        "/"
      ],
      [
        "=",
        2,
        5
      ],
      [],
      [
        " ",
        4,
        5,
        15
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "=",
        5
      ],
      [
        "",
        "/"
      ],
      [
        0,
        "/",
        6
      ],
      [
        "",
        "fuel economy= "
      ],
      []
    ],
    "all_constants": [
      0,
      "",
      2,
      4,
      5,
      6,
      7,
      "year= ",
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      "make= ",
      "(str.replace _arg_0 \"year=\" \"\")",
      "=",
      "model= ",
      "/",
      " ",
      "(str.replace (str.replace (str.replace _arg_0 \"/\" \" \") \"year=\" \"\") \"make=\" \"\")",
      "fuel economy= ",
      "(str.replace (str.replace (str.replace _arg_0 \"/\" \"\") \" \" \"\") \"=\" \"\")"
    ],
    "time_diff_ms": 2063.1710000000003
  },
  "phone-10_shortmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \" \"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \" \"))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" \" \"(\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \" \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 4 3) \") \" \n    (str.substr name 7 3) \"-\" \n    (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f ((name String)) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \" \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ \" \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 4 3) \") \" \n    (str.substr name 7 3) \"-\" \n    (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 2)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 7 3)\n           \"-\"\n           (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \" \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \" \"))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" \" \"(\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \" \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \" \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))"
    ],
    "constants": [
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        "",
        "-",
        " "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        " "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        " ",
        11,
        "(",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        "",
        "-",
        " "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        " ",
        "(",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        " "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        " ",
        11,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        " ",
        "(",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ]
    ],
    "all_constants": [
      0,
      "",
      1,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      2,
      13,
      "(",
      "+",
      " (",
      " ",
      ") ",
      "-"
    ],
    "time_diff_ms": 2080.444
  },
  "get-first-name-from-name-with-commamodified.sl": {
    "completions": [
      "(define-fun f ((name String) (index Int)) String\n  (str.substr (str.substr name 0 (- (str.indexof name \",\" 0) 1)) (str.indexof name \",\" 0) (str.len name)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\")))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (str.indexof name \",\" 0)\n              (ite (= index 1)\n                   (- (str.indexof name \",\" 0) 1)\n                   (str.len name)\n              )\n  )\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "\"(str.at (str.replace _arg_0 \\\",\\\" \\\"\\\") _arg_1)\"",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.at \n    (str.replace \n      (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \n      \" \" \n      \"\")\n    _arg_1\n  )\n)",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name \n              (+\n                (str.indexof name \",\" 0) \n                1) \n              (-\n                (str.indexof name \",\" 0) \n                index)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) (str.len (str.replace _arg_0 \",\" \"\")) 0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.len _arg_0)) 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)) 0 _arg_1))",
      "(str.substr (str.++ _arg_0 \",\") 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (str.indexof (str.++ _arg_0 \",\") \",\" 1)))",
      "(str.substr (str.replace _arg_0 \",\" \"\") 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) (+ (str.indexof _arg_0 \",\" 0) 1) 0)))",
      "(str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (+\n               (str.indexof name \",\" 0)\n               2)\n              (-\n               (str.indexof name \",\" 0)\n               (+\n                2\n                (- index 1)))))",
      "(define-fun f ((name String) (index Int)) String\n  (str.at (str.replace name \",\" \"\") index))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \", \") _arg_1 1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\"))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr (str.substr name 0 (- (str.indexof name \",\" 0) 1)) 0 (str.indexof name \",\" 0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \", \") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \", \") 2) (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (+ (str.indexof _arg_0 \",\") 1) 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (_arg_1)))",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)) 0 _arg_1)",
      "(ite (= _arg_1 1) (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (x String y Int) String (str.substr x (+ (str.indexof x \",\" 0) 2) (ite (= y 1) (- (str.indexof x \",\" 0) 1) (str.indexof x \",\" 0))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.at (str.replace _arg_0 \",\" \"\") (str.indexof (str.at _arg_0 0) _arg_0 0) (+ _arg_1 1)) 0))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")) )",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\")))",
      "(ite (= _arg_1 1) (str.at (str.replace _arg_0 \",\" \"\") 0) (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) 0 (str.len (str.replace _arg_0 \",\" \"\")))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.- (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))) _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "\"(str.at (str.replace _arg_0 \\\",\\\" \\\"\\\") _arg_1)\"",
      "(ite (= _arg_1 1) (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \",\" \"\")\n                (ite (= _arg_1 2) (str.replace (str.substr _arg_0 (str.indexof _arg_0 \",\" 1) (str.len _arg_0)) \",\" \"\")\n                                  \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) 999 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) _arg_1))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (str.indexof name \",\" 0)\n              (str.indexof name \",\" (+ 1 index))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr name 0 (- (str.indexof name \",\" 0) 1)) (str.indexof name \",\" 0) (str.len name)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" 0) (ite (= index 1) (- (str.indexof name \",\" 0) 1) (str.len name))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.at (str.replace _arg_0 \\\",\\\" \\\"\\\") _arg_1)\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \" \" \"\") _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (+ (str.indexof name \",\" 0) 1) (- (str.indexof name \",\" 0) index)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) (str.len (str.replace _arg_0 \",\" \"\")) 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.len _arg_0)) 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)) 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.++ _arg_0 \",\") 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (str.indexof (str.++ _arg_0 \",\") \",\" 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) (+ (str.indexof _arg_0 \",\" 0) 1) 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (+ (str.indexof name \",\" 0) 2) (- (str.indexof name \",\" 0) (+ 2 (- index 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace name \",\" \"\") index))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \", \") _arg_1 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr name 0 (- (str.indexof name \",\" 0) 1)) 0 (str.indexof name \",\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \", \") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \", \") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (+ (str.indexof _arg_0 \",\") 1) 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)) 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr x (+ (str.indexof x \",\" 0) 2) (ite (= y 1) (- (str.indexof x \",\" 0) 1) (str.indexof x \",\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.at (str.replace _arg_0 \",\" \"\") (str.indexof (str.at _arg_0 0) _arg_0 0) (+ _arg_1 1)) 0))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.at (str.replace _arg_0 \",\" \"\") 0) (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) 0 (str.len (str.replace _arg_0 \",\" \"\"))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.- (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))) _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.at (str.replace _arg_0 \\\",\\\" \\\"\\\") _arg_1)\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \",\" \"\") (ite (= _arg_1 2) (str.replace (str.substr _arg_0 (str.indexof _arg_0 \",\" 1) (str.len _arg_0)) \",\" \"\") \"\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 2) 999 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" 0) (str.indexof name \",\" (+ 1 index))))"
    ],
    "constants": [
      [
        0,
        1,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        1,
        ","
      ],
      [
        "(str.at (str.replace _arg_0 \",\" \"\") _arg_1)"
      ],
      [
        "",
        1,
        2,
        0,
        ","
      ],
      [
        0,
        "",
        " ",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        1,
        ","
      ],
      [
        "",
        1,
        2,
        0,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        0,
        2,
        1,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ",",
        ", "
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        2,
        ", "
      ],
      [
        "",
        1,
        2,
        0,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        " ",
        ","
      ],
      [
        "",
        1,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        "",
        0,
        ",",
        1
      ],
      [
        2,
        " ",
        ","
      ],
      [
        "",
        1,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        "",
        1,
        0,
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        "",
        1,
        2,
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        "",
        1,
        ","
      ],
      [
        "(str.at (str.replace _arg_0 \",\" \"\") _arg_1)"
      ],
      [
        0,
        1,
        2,
        "",
        ","
      ],
      [
        "",
        1,
        2,
        0,
        999,
        ","
      ],
      [
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      ",",
      "(str.at (str.replace _arg_0 \",\" \"\") _arg_1)",
      999,
      " ",
      ", "
    ],
    "time_diff_ms": 1688.84
  },
  "stackoverflow10modified.sl": {
    "completions": [
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0)",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0)",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 4) 4)",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0)",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" (+ (str.len \"February\") 1)) 1) (+ (str.len _arg_0) 1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 6 (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 7 (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.at _arg_0 (- (str.len _arg_0) 5) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 1) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0)"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 4) 4))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" (+ (str.len \"February\") 1)) 1) (+ (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (- (str.len _arg_0) 5) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 1) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0))"
    ],
    "constants": [
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        4
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        1,
        " ",
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        4
      ],
      [
        1,
        " "
      ],
      [
        4
      ],
      [
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        1,
        " ",
        "February"
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        4
      ],
      [
        1,
        " ",
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        6
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        7
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        4,
        5
      ],
      [
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        0,
        " "
      ],
      [
        4,
        6
      ],
      [
        1,
        " ",
        3,
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      "February",
      7,
      " "
    ],
    "time_diff_ms": 1709.292
  },
  "25239569modified.sl": {
    "completions": [
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((x String)) String (str.replace x \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String (str.replace s \" _BRD \" \" _Branding \"))",
      "\"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\"",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((s String)) String\n  (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((s String)) String\n    (str.replace s \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((s String)) String (str.replace s \" _BRD \" \" _Branding \"))",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\" _Branding\\\")\"",
      "(define-fun f ((s String)) String\n    (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((s String)) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String\n  (str.replace s \" _BRD \" \" _Branding \")\n)",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((s String)) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "(define-fun f ((s String)) String\n  (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f ((s String)) String\n  (str.replace s \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "\"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\"",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "\"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\"",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((s String)) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f (_arg_0 String) String\n    (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((s String)) String (str.replace s \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace x \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\" _Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))"
    ],
    "constants": [
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "(str.replace _arg_0 \"BRD\" \"Branding\")"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \" _Branding\")"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "(str.replace _arg_0 \"BRD\" \"Branding\")"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "(str.replace _arg_0 \"BRD\" \"Branding\")"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ]
    ],
    "all_constants": [
      " _Branding ",
      "(str.replace _arg_0 \"_BRD\" \"_Branding\")",
      " _BRD ",
      "Branding",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"_BRD\" \" _Branding\")",
      "BRD"
    ],
    "time_diff_ms": 935.469
  },
  "36462127modified.sl": {
    "completions": [
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (+ 1 (str.indexof _arg_0 \"/\"))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) (+ (str.len _arg_0) 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (+ 1 (str.indexof _arg_0 \"/\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) (+ (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/"
    ],
    "time_diff_ms": 1204.2930000000001
  },
  "stackoverflow5modified.sl": {
    "completions": [
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "\"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"=\\\") 1))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))\n)",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (x String) String (str.substr x 0 (str.indexof x \"=\" 0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 13))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))\n)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"=\\\"))\"",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"=\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr x 0 (str.indexof x \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"=\\\"))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))"
    ],
    "constants": [
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\") 1))"
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        13
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))"
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        13
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ]
    ],
    "all_constants": [
      0,
      1,
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\") 1))",
      13,
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "="
    ],
    "time_diff_ms": 1216.35
  },
  "extract-word-that-begins-with-specific-charactermodified.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\") 0) (str.indexof _arg_0 \"_\" 0))))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (+ (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (- (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (str.indexof _arg_0 \\\"_\\\" 0))))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (+ (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (- (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (str.indexof _arg_0 \\\"_\\\" 0))))\"",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.len _arg_0)) \"\")",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (str.indexof _arg_0 \" _\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (str.indexof _arg_0 \" _\" 0))))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" _\" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (+ (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (- (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (str.indexof _arg_0 \\\"_\\\" 0))))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\") 0) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (+ (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (- (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (str.indexof _arg_0 \\\"_\\\" 0))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (+ (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (- (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (str.indexof _arg_0 \\\"_\\\" 0))))\")",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.len _arg_0)) \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (str.indexof _arg_0 \" _\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (str.indexof _arg_0 \" _\" 0)))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" _\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (+ (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (- (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (str.indexof _arg_0 \\\"_\\\" 0))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))"
    ],
    "constants": [
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))"
      ],
      [
        "",
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        1,
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      " _",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      " ",
      "_"
    ],
    "time_diff_ms": 1467.281
  }
}