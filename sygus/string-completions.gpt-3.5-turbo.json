{
  "get-first-name-from-name-with-comma.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 2)) 0 (str.indexof (str.substr _arg_0 \",\") \",\"))",
      "(str.substr (str.replace _arg_0 \" \" \"\") (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \",\" (+ _arg_1 1)))",
      "(str.substr (str.substr _arg_0 0 (+ (str.indexof _arg_0 \",\" 0) 1)) 0 (- (str.indexof _arg_0 \",\" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) _arg_1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr (str.replace _arg_0 \" \" \"\") 0 (str.indexof (str.replace _arg_0 \" \" \"\") \",\"))",
      "(str.substr (str.substr _arg_0 1 (str.indexof _arg_0 \",\")) 0 (- (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" (+ _arg_1 1)) (- (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" (+ _arg_1 1)) 1)))",
      "(str.substr (str.replace _arg_0 \", \" \",\") 0 (str.indexof (str.replace _arg_0 \", \" \",\") \",\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2))",
      "(str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1))",
      "(str.substr (str.replace _arg_0 \" \" \"\") 0 (str.indexof (str.replace _arg_0 \" \" \"\") \",\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (_arg_1 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\" _arg_1)) \",\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ 1 (str.indexof _arg_0 \",\" (+ _arg_1 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ 1 (str.indexof _arg_0 \" \" _arg_1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0\n              (str.indexof _arg_0 \",\" (_arg_1 - 1))\n              (str.indexof _arg_0 \",\" _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0\n              (str.indexof _arg_0 \",\" 0)\n              (ite (= _arg_1 1)\n                   (- (str.indexof _arg_0 \",\" 0) 1)\n                   (str.len _arg_0)\n                   )\n              )\n  )",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr\n    (str.substr\n      _arg_0\n      (+ (str.indexof _arg_0 \",\" 0) 1)\n      (- (str.indexof _arg_0 \",\" 0) (str.indexof _arg_0 \",\" 0))\n    )\n    0\n    (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)) \",\" 0)\n  )\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" (+ _arg_1 1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof _arg_0 \",\" _arg_1))\n)",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (str.indexof name \",\" (+ index 1))\n              (str.indexof name \",\" index)\n  )\n)",
      "(define-fun f ((name String) (index Int)) String\n  (str.at name (ite (= index 1) (str.indexof name \",\" 0) (str.indexof name \",\" 1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0\n              (str.indexof _arg_0 \",\" _arg_1)\n              (ite (= _arg_1 -1)\n                   (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" _arg_1) 2))\n                   (ite (= _arg_1 0)\n                        (str.indexof _arg_0 \",\" _arg_1)\n                        (- (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" (+ _arg_1 1)) 2))))))\n",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr\n    (str.substr _arg_0\n      (str.indexof _arg_0 \",\" (+ _arg_1 1))\n      (- (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \",\" (+ _arg_1 1))\n    )\n  )\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0\n              (str.indexof _arg_0 \",\" _arg_1)\n              (str.indexof _arg_0 \" \" (+ _arg_1 1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr\n    _arg_0\n    (str.indexof _arg_0 \",\" _arg_1)\n    (str.indexof _arg_0 \" \" _arg_1)\n  )\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \",\")))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (str.indexof name \",\" 0)\n              (ite (= index 1)\n                   (- (str.indexof name \",\" 0) 1)\n                   (ite (= index 2)\n                        (- (str.len name) (+ (str.indexof name \",\" 0) 2))\n                        0\n                   )\n              )\n  )\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr\n    (str.replace _arg_0 \",\" \"\")\n    (ite (= _arg_1 1) 0\n      (ite (= _arg_1 2)\n        (+ 1 (str.indexof _arg_0 \",\" 0))\n        0))\n    (ite (= _arg_1 1)\n      (str.indexof _arg_0 \",\" 0)\n      (str.len (str.replace _arg_0 \",\" \"\")))\n  )\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr\n    _arg_0\n    (str.indexof _arg_0 \",\" _arg_1)\n    (-\n      (str.indexof _arg_0 \",\" (+\n        _arg_1 1))\n      (+\n        (str.indexof _arg_0 \",\" _arg_1)\n        1)\n    )\n  )\n)",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (str.indexof name \",\" (+ index 1))\n              (str.indexof name \",\" index)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr\n    (str.replace _arg_0 \",\" \"\")\n    (ite (= _arg_1 1) 0\n      (str.indexof _arg_0 \",\" 0))\n    (ite (= _arg_1 1)\n      (str.indexof _arg_0 \",\" 0)\n      (str.len _arg_0)\n    )\n  )\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr\n    _arg_0\n    (str.indexof _arg_0 \",\" _arg_1)\n    (-\n      (str.indexof _arg_0 \",\" (+ _arg_1 1))\n      (str.indexof _arg_0 \",\" _arg_1)\n    )\n  )\n)",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr \n    (str.replace name \" \" \"\") \n    (+ (str.indexof name \",\" 0) index) \n    (- (str.indexof name \",\" 0) 1)\n  )\n)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" _arg_1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr\n    (str.replace name \",\" \"\")\n    0\n    (str.indexof name \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) _arg_1))",
      "(str.substr (str.replace _arg_0 \",\" \"\") (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1) (str.indexof (str.replace _arg_0 \",\" \"\") \",\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \"))",
      "(str.substr (str.replace _arg_0 \",\" \" \") 0 (str.indexof (str.replace _arg_0 \",\" \" \") \" \" _arg_1))",
      "(str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2)))",
      "(str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \" \") (ite (str.contains _arg_0 \" \") 1 0))) (ite (= _arg_1 2) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 1) \"\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" (+ _arg_1 1)) (- (str.indexof _arg_0 \",\" _arg_1) (+ _arg_1 1)))",
      "(str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1))",
      "(str.substr (str.++ _arg_0 \",\") (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \",\") (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (ite (= _arg_1 2) (- (str.len _arg_0) (str.indexof _arg_0 \",\") 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (- (str.indexof _arg_0 \",\" _arg_1) _arg_1))",
      "(str.substr (str.++ _arg_0 \",\") (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \",\") (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) 0)))",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)) 0 (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)))))",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\"))) 1 (str.len (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\")))))",
      "(str.substr (str.++ _arg_0 \", \") (ite (= _arg_1 1) 0 (str.indexof _arg_0 \", \" (_arg_1 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \", \" 0) (str.indexof _arg_0 \", \" _arg_1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)) 0 (- (str.indexof _arg_0 \",\") 1))",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 1)) 0 (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))) \",\"))",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\") (str.indexof _arg_0 \",\") ))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2))",
      "(str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\") 1) \",\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" (+ _arg_1 1)) -1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" _arg_1))",
      "(str.substr (str.replace _arg_0 \",\" \" \") (str.indexof (str.replace _arg_0 \",\" \" \") \" \" _arg_1) (str.indexof (str.replace _arg_0 \",\" \" \") \",\" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ 1 (str.indexof _arg_0 \",\" (+ 1 _arg_1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ 1 (str.indexof _arg_0 \",\" (+ _arg_1 1))))",
      "(str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\") 1) \" \"))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name \n              (str.indexof name \",\" 0)\n              (str.indexof name \" \" 0)))",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 1)) 0 (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\")))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (str.indexof name \",\" 0)\n              (str.indexof (str.at (str.replace name \" \" \"\") 0) \",\" 0)\n  )\n)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0\n              (str.indexof _arg_0 \",\" 0)\n              (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (str.indexof name \",\" 0)\n              (str.indexof name \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (_arg_1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\") 1) \",\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(ite (str.contains _arg_0 \",\")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (_arg_1))\n     (str.substr _arg_0 0 _arg_1))",
      "(str.at (str.replace _arg_0 \",\" \" \") _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr\n    (str.replace\n      (str.substr name 0 (str.indexof name \",\" 0))\n      \",\"\n      \"\")\n    0\n    index\n  )\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr\n    _arg_0\n    (str.indexof _arg_0 \",\" (+ _arg_1 1))\n    (str.indexof _arg_0 \",\" _arg_1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 2)) 0 (str.indexof (str.substr _arg_0 \",\") \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \" \" \"\") (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \",\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (+ (str.indexof _arg_0 \",\" 0) 1)) 0 (- (str.indexof _arg_0 \",\" 0) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.indexof (str.replace _arg_0 \" \" \"\") \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 1 (str.indexof _arg_0 \",\")) 0 (- (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" (+ _arg_1 1)) (- (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" (+ _arg_1 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \", \" \",\") 0 (str.indexof (str.replace _arg_0 \", \" \",\") \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.indexof (str.replace _arg_0 \" \" \"\") \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (_arg_1 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\" _arg_1)) \",\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ 1 (str.indexof _arg_0 \",\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ 1 (str.indexof _arg_0 \" \" _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" (_arg_1 - 1)) (str.indexof _arg_0 \",\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" 0) (str.indexof _arg_0 \",\" 0))) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)) \",\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof _arg_0 \",\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" (+ index 1)) (str.indexof name \",\" index)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at name (ite (= index 1) (str.indexof name \",\" 0) (str.indexof name \",\" 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (ite (= _arg_1 -1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" _arg_1) 2)) (ite (= _arg_1 0) (str.indexof _arg_0 \",\" _arg_1) (- (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" (+ _arg_1 1)) 2))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (str.indexof _arg_0 \",\" (+ _arg_1 1)) (- (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \",\" (+ _arg_1 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" 0) (ite (= index 1) (- (str.indexof name \",\" 0) 1) (ite (= index 2) (- (str.len name) (+ (str.indexof name \",\" 0) 2)) 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (+ 1 (str.indexof _arg_0 \",\" 0)) 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (str.len (str.replace _arg_0 \",\" \"\")))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (- (str.indexof _arg_0 \",\" (+ _arg_1 1)) (+ (str.indexof _arg_0 \",\" _arg_1) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" (+ index 1)) (str.indexof name \",\" index)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (str.indexof _arg_0 \",\" 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \",\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (- (str.indexof _arg_0 \",\" (+ _arg_1 1)) (str.indexof _arg_0 \",\" _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace name \" \" \"\") (+ (str.indexof name \",\" 0) index) (- (str.indexof name \",\" 0) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace name \",\" \"\") 0 (str.indexof name \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1) (str.indexof (str.replace _arg_0 \",\" \"\") \",\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \" \") 0 (str.indexof (str.replace _arg_0 \",\" \" \") \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \" \") (ite (str.contains _arg_0 \" \") 1 0))) (ite (= _arg_1 2) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 1) \"\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" (+ _arg_1 1)) (- (str.indexof _arg_0 \",\" _arg_1) (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \"\") 0 (str.indexof (str.replace _arg_0 \",\" \"\") \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.++ _arg_0 \",\") (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \",\") (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (ite (= _arg_1 2) (- (str.len _arg_0) (str.indexof _arg_0 \",\") 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (- (str.indexof _arg_0 \",\" _arg_1) _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.++ _arg_0 \",\") (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \",\") (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)) 0 (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\"))) 1 (str.len (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\"))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.++ _arg_0 \", \") (ite (= _arg_1 1) 0 (str.indexof _arg_0 \", \" (_arg_1 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \", \" 0) (str.indexof _arg_0 \", \" _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.indexof _arg_0 \",\") 1)) 0 (- (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 1)) 0 (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))) \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" _arg_1) 2)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\") 1) \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ (str.indexof _arg_0 \",\" (+ _arg_1 1)) -1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \",\" \" \") (str.indexof (str.replace _arg_0 \",\" \" \") \" \" _arg_1) (str.indexof (str.replace _arg_0 \",\" \" \") \",\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ 1 (str.indexof _arg_0 \",\" (+ 1 _arg_1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (+ 1 (str.indexof _arg_0 \",\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\") 1) \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" 0) (str.indexof name \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \",\") 1)) 0 (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" 0) (str.indexof (str.at (str.replace name \" \" \"\") 0) \",\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" 0) (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" 0) (str.indexof name \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\") 1) \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (str.contains _arg_0 \",\") (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (_arg_1)) (str.substr _arg_0 0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \" \") _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace (str.substr name 0 (str.indexof name \",\" 0)) \",\" \"\") 0 index))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \",\" (+ _arg_1 1)) (str.indexof _arg_0 \",\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))"
    ],
    "time_diff_ms": 138.539,
    "constants": [
      [
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        2,
        " ",
        ","
      ],
      [
        "",
        " ",
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        ",",
        ", "
      ],
      [
        2,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        2,
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        " ",
        ","
      ],
      [
        "",
        0,
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ",",
        -1
      ],
      [
        1,
        ","
      ],
      [
        1,
        " ",
        ","
      ],
      [
        " ",
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        "",
        0,
        ","
      ],
      [
        "",
        1,
        2,
        0,
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        "",
        1,
        ",",
        0
      ],
      [
        1,
        ","
      ],
      [
        "",
        0,
        1,
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        2,
        ","
      ],
      [
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        "",
        0,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        2,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        2,
        " ",
        ","
      ],
      [
        0,
        " ",
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        2,
        " ",
        ","
      ],
      [
        2,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        0,
        1,
        2,
        "",
        " ",
        ","
      ],
      [
        1,
        2,
        " ",
        ","
      ],
      [
        1,
        ","
      ],
      [
        "",
        0,
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        1,
        " ",
        ","
      ],
      [
        0,
        1,
        ", "
      ],
      [
        2,
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        1,
        " ",
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        ",",
        -1
      ],
      [
        " ",
        ","
      ],
      [
        0,
        " ",
        ","
      ],
      [
        2,
        " ",
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        " ",
        ","
      ],
      [
        0,
        " ",
        ","
      ],
      [
        0,
        1,
        " ",
        ","
      ],
      [
        0,
        "",
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        " ",
        ","
      ],
      [
        0,
        " ",
        ","
      ],
      [
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        " ",
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        "",
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        2,
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      ", ",
      " ",
      ",",
      -1
    ]
  },
  "strip-html-from-text-or-numbers.sl": {
    "completions": [
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>|</b>\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]+>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\") )",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\") ",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")\n      \"</b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<.*?>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")  ",
      "(str.replace _arg_0 \"<.*?>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")))",
      "(str.replace _arg_0 \"<b>\" \"\")))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<.*?>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<[^>]+>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.replace _arg_0 \"<[^>]*>\" \"\")",
      "(str.replace _arg_0 \"<b>\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>|</b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]+>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<.*?>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<.*?>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<.*?>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]+>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<[^>]*>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))"
    ],
    "time_diff_ms": 2419.676,
    "constants": [
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>|</b>"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]+>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<.*?>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<.*?>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<.*?>"
      ],
      [
        "",
        "<b>"
      ],
      [
        3,
        7
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<[^>]+>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<[^>]*>"
      ],
      [
        "",
        "<b>"
      ]
    ],
    "all_constants": [
      "",
      "<[^>]*>",
      3,
      "<",
      "<b>|</b>",
      7,
      "<.*?>",
      "<[^>]+>",
      "<b>"
    ]
  },
  "count-total-words-in-a-cell.sl": {
    "completions": [
      "(str.len (str.replace _arg_0 \" \" \"\"))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len (str.split _arg_0 \" \"))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len (str.replace _arg_0 \" \" \" \") 1)",
      "(str.len _arg_0)",
      "(str.len (str.split _arg_0 \" \"))",
      "(Start (str.len _arg_0))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(+\n  (str.len _arg_0)\n  1)",
      "(str.len (str.replace _arg_0 \" \" \"\"))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len (str.replace _arg_0 \" \" \"\")))",
      "(str.len _arg_0)",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(str.len (str.split _arg_0 \" \"))",
      "(str.len (str.replace _arg_0 \" \" \"\"))",
      "(str.len _arg_0)",
      "(str.len (str.replace _arg_0 \" \" \"\"))",
      "(str.len (str.replace _arg_0 \" \" \"\")))",
      "(str.len _arg_0)",
      "(str.len (str.replace (str.replace (str.replace (str.replace _arg_0 \",\" \"\") \".\" \"\") \"?\" \"\") \"!\"))",
      "(str.len _arg_0)",
      "(str.len (str.replace _arg_0 \" \" \"\")))",
      "(str.len (str.replace _arg_0 \" \" \"\"))",
      "(str.len _arg_0))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (ntInt (str.len _arg_0))\n)",
      "(Start (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(Start Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(+ (str.to.int (str.len _arg_0)) 1)",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1)",
      "(+ (str.len _arg_0) 1))",
      "(+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0)\n)",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(Start Int (str.len (str.replace _arg_0 \" \" \" \")))",
      "(str.len _arg_0)",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0)\n)",
      "(Start Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(Start (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) Int (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) Int (str.len _arg_0))",
      "(Start Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(Start Int (str.len (ite (str.contains _arg_0 \" \") (+ 1 (str.len (str.replace _arg_0 \" \" \"\"))) 1)))",
      "(str.len _arg_0))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \",\" \"\") \".\" \"\") \";\" \"\") \"?\" \"\") \"!\"))",
      "(str.len (str.replace (str.replace (str.replace _arg_0 \",\" \"\") \".\" \"\") \"-\" \" \"))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (",
      "(str.len _arg_0)",
      "(str.len (str.replace _arg_0 \" \" \" \") + 1))",
      "(str.len (str.replace _arg_0 \" \" \"\"))",
      "(str.len _arg_0)",
      "(str.len _arg_0)",
      "(str.len _arg_0))",
      "(Start (str.len _arg_0))",
      "(str.len (str.replace _arg_0 \" \" \"\")))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.split _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \" \") 1))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.split _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) Int (Start (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (str.len (str.split _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace (str.replace (str.replace (str.replace _arg_0 \",\" \"\") \".\" \"\") \"?\" \"\") \"!\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (ntInt (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) Int (Start (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (Start Int (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (+ (str.to.int (str.len _arg_0)) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (+ (str.len _arg_0) 1))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (Start Int (str.len (str.replace _arg_0 \" \" \" \"))))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (Start Int (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (Start (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (Start Int (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (Start Int (str.len (ite (str.contains _arg_0 \" \") (+ 1 (str.len (str.replace _arg_0 \" \" \"\"))) 1))))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \",\" \"\") \".\" \"\") \";\" \"\") \"?\" \"\") \"!\")))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace (str.replace (str.replace _arg_0 \",\" \"\") \".\" \"\") \"-\" \" \")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace ()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \" \") + 1))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (Start (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"\")))"
    ],
    "time_diff_ms": 1559.636,
    "constants": [
      [
        "",
        " "
      ],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [
        " "
      ],
      [],
      [],
      [],
      [
        1,
        " "
      ],
      [],
      [
        " "
      ],
      [],
      [],
      [],
      [
        1
      ],
      [
        "",
        " "
      ],
      [],
      [],
      [
        "",
        " "
      ],
      [],
      [
        1
      ],
      [
        1
      ],
      [
        " "
      ],
      [
        "",
        " "
      ],
      [],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [],
      [
        "",
        "!",
        ",",
        ".",
        "?"
      ],
      [],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [],
      [],
      [
        " "
      ],
      [],
      [],
      [
        "",
        " "
      ],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [
        "",
        1,
        " "
      ],
      [],
      [],
      [],
      [
        "",
        ";",
        "!",
        ",",
        ".",
        "?"
      ],
      [
        "",
        "-",
        " ",
        ",",
        "."
      ],
      [],
      [],
      [],
      [],
      [
        1,
        " "
      ],
      [
        "",
        " "
      ],
      [],
      [],
      [],
      [],
      [
        "",
        " "
      ]
    ],
    "all_constants": [
      "",
      1,
      ";",
      " ",
      "-",
      "!",
      ",",
      ".",
      "?"
    ]
  },
  "stackoverflow8.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1))) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (- (str.indexof s \"/\" (+ 1 (str.indexof s \"/\"))) 1) (- (str.len s) (str.indexof s \"/\"))))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" (+ 1 (str.indexof s \"/\"))) 1) (str.len s)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f ((str String)) String\n  (str.substr str (+ (str.indexof str \"/\" 0) 1) (str.len str)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1))))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1))) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1))))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (- (str.indexof _arg_0 \\\"/\\\" 0) 6) 100)\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 5) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.rindexof _arg_0 \"/\") 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 5) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" ))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (- (str.indexof s \"/\" (+ 1 (str.indexof s \"/\"))) 1) (- (str.len s) (str.indexof s \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" (+ 1 (str.indexof s \"/\"))) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr str (+ (str.indexof str \"/\" 0) 1) (str.len str)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\"))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (- (str.indexof _arg_0 \\\"/\\\" 0) 6) 100)\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 5) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.rindexof _arg_0 \"/\") 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 5) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))"
    ],
    "time_diff_ms": 2084.973,
    "constants": [
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "home/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/",
        "home/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/",
        "home/"
      ],
      [
        1,
        "/",
        "home/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 6) 100)"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        "/",
        5
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        5
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      5,
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 6) 100)",
      "home/"
    ]
  },
  "phone-6-long.sl": {
    "completions": [
      "(str.at name 5)",
      "\"(str.at name 5)\"",
      "\"(str.substr name 5 3))\"",
      "(str.substr name 5 3))",
      "\"(str.at name 5)\"",
      "(str.at name 4)",
      "\"(str.at name 5)\"",
      "\"(str.at name 5)\"",
      "\"(str.at name 5)\"",
      "\"(str.at name 5)\"",
      "\"(str.at name 5)\"",
      "(str.substr name 5 3))",
      "\"(str.at name 5)\"",
      "\"(str.at name 5)\"",
      "\"(str.at name 4)\"",
      "(str.at name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.at name 4)\"",
      "(str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "\"(str.at name 5)\"",
      "(str.at name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.at name 5)\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.at (str.replace name \"-\" \" \") 5)\"",
      "(str.substr name 5 3))",
      "\"(str.at name 5)\"",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(str.at name 4)",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n    (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 6))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.at name 5)",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 6))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n    (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 6))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.at name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.at name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.replace name \")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 6))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 6))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 6))",
      "(define-fun f (name String) String (str.substr name 4 3))"
    ],
    "time_diff_ms": 1358.497,
    "constants": [
      [
        5
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 5)"
      ],
      [
        4
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 4)"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.at name 5)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 5)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.replace name "
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 5)"
      ],
      [
        5
      ],
      [
        5
      ],
      [
        4
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        4
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        4
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        4
      ],
      [
        6
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        3,
        4
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        4
      ],
      [
        5
      ],
      [
        5
      ],
      [
        3,
        4
      ],
      [
        4
      ],
      [
        6
      ],
      [
        5
      ],
      [
        3,
        4
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        4
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        3,
        4
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        6
      ],
      [
        3,
        4
      ]
    ],
    "all_constants": [
      3,
      4,
      5,
      "(str.at name 5)",
      6,
      "(str.substr name 5 3))",
      "(str.at name 4)",
      "(str.at (str.replace name "
    ]
  },
  "phone-10.sl": {
    "completions": [
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \" (\") \") \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0)\n    \" (\"\n    (str.substr name 1 3)\n    \") \"\n    (str.substr name 5 3)\n    \"-\"\n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.at name 1 3) \") \" (str.at name 4 6) \"-\" (str.at name 7 10)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.at name 1 3) \") \" (str.at name 4 6) \"-\" (str.at name 7 10)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)) )",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 4 3) \") \" \n    (str.substr name 7 3) \"-\" \n    (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \" (\" \n    (str.substr name 1 3) \") \" \n    (str.substr name 5 3) \"-\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 4 3) \") \" \n    (str.substr name 7 3) \"-\" \n    (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.at name 1 3) \") \" (str.at name 5)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-(str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "\"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 11 3))\"",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-(str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)) )",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)) )",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0 1) \" (\" (str.at name 1 3) \") \" (str.at name 4 3) \"-\" (str.at name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-(str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" \" \"(\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \" (\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.at name 1 3) \") \" (str.at name 4 6) \"-\" (str.at name 7 10)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.at name 1 3) \") \" (str.at name 4 6) \"-\" (str.at name 7 10)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.at name 1 3) \") \" (str.at name 5)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      null,
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 11 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      null,
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0 1) \" (\" (str.at name 1 3) \") \" (str.at name 4 3) \"-\" (str.at name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      null,
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" \" \"(\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))"
    ],
    "time_diff_ms": 2459.3720000000003,
    "constants": [
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        10,
        " (",
        ") "
      ],
      [
        " ",
        " ("
      ],
      [
        0,
        3,
        6,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        6,
        7,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        6,
        7,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      null,
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3))"
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      null,
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      null,
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        " ",
        9,
        "(",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      " ",
      11,
      13,
      "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3))",
      "-",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      " (",
      ") ",
      "+",
      "("
    ]
  },
  "phone-6.sl": {
    "completions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.at (str.substr name 5 12) 0)\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "\"(str.at (str.substr name 5 3) 0)\"",
      "(str.substr name 5 3))",
      "(str.at (str.substr name 5 3) 0 3))",
      "\"(str.substr name 5 3))\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(str.substr name 5 3))",
      "\"(str.at (str.replace name \"+\" \"\") 1)\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.at (str.substr name 5 3) 0 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.at name 4 3))",
      "(str.at (str.substr name 5 3) 0 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "\"(str.at (str.substr name 5 3) 0)\"",
      "\"(str.at (str.substr name 5 3) 0)\"",
      "\"(str.at (str.substr name 5 3) 0)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (= (str.at name 0) \"+\") (str.substr name 2 3) (str.substr name 1 3))",
      "(ite (= (str.at name 1) \" \")\n     (str.substr name 2 (str.indexof name \"-\" 0))\n     (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 2 3) (ite (= (str.at name 2) \" \") (str.substr name 3 3) (str.substr name 1 3)))",
      "(str.at (str.substr name 4 3) 0 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.at (str.substr name 5 3) 0)",
      "(str.at (str.substr name 5 3) 0 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.at (str.substr name 5 3) 0 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f ((name String)) String\n    (str.substr name 5 3)\n)",
      "\"(str.at (str.substr name 5 12) 0)\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "\"(str.at (str.substr name 5 11) 1)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.at (str.substr name 5 12) 0)\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.at (str.substr name 5 3) 0)\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 12) 0)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 3) 0)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.replace name \")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 4 3))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 3) 0)\")",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 3) 0)\")",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 3) 0)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 2 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 2 (str.indexof name \"-\" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 2 3) (ite (= (str.at name 2) \" \") (str.substr name 3 3) (str.substr name 1 3))))",
      "(define-fun f (name String) String (str.at (str.substr name 4 3) 0 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 12) 0)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 11) 1)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 12) 0)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 3) 0)\")"
    ],
    "time_diff_ms": 1207.218,
    "constants": [
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 12) 0)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 3) 0)"
      ],
      [
        3,
        5
      ],
      [
        0,
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.replace name "
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        0,
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        0,
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 3) 0)"
      ],
      [
        "(str.at (str.substr name 5 3) 0)"
      ],
      [
        "(str.at (str.substr name 5 3) 0)"
      ],
      [
        3,
        5
      ],
      [
        0,
        1,
        2,
        3,
        "+"
      ],
      [
        0,
        1,
        2,
        "-",
        " "
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        1,
        " ",
        2
      ],
      [
        0,
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        0,
        3,
        5
      ],
      [
        0,
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        0,
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 12) 0)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        "(str.at (str.substr name 5 11) 1)"
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 12) 0)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 3) 0)"
      ]
    ],
    "all_constants": [
      "(str.at (str.substr name 5 3) 0)",
      0,
      1,
      3,
      4,
      5,
      2,
      "(str.substr name 5 3))",
      "-",
      "+",
      " ",
      "(str.at (str.substr name 5 11) 1)",
      "(str.at (str.replace name ",
      "(str.at (str.substr name 5 12) 0)"
    ]
  },
  "phone-7-short.sl": {
    "completions": [
      "(str.at (str.substr name 5 11) 0 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.substr (str.substr name 5 3) 0 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr (str.substr name 6 3) 0 3))",
      "(str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 6 3))\"",
      "(str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.at name 6 9))",
      "\"(str.substr name 5 3))\"",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 6 3))\"",
      "(str.at name 6 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "\"(str.substr name 5 3))\"",
      "\"(str.substr name 5 3))\"",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 6 3))\"",
      "\"(str.at (str.at name 5) 5)\"",
      "\"(str.substr name 6 3))\"",
      "(define-fun f ((name String)) String (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(ite (= (str.at name 1) #\\space) (str.substr name 5 3) (ite (= (str.at name 2) #\\space) (str.substr name 6 3) (ite (= (str.at name 3) #\\space) (str.substr name 7 3) (ite (= (str.at name 4) #\\space) (str.substr name 8 3) \"\"))))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "(define-fun f ((name String)) String (str.substr name 7 3))",
      "(ite (= (str.at name 4) #\\space) (str.substr name 6 3) (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3))",
      "(str.substr name 6 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 4 (str.indexof name \"-\")) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "\"(str.at (str.substr name 6 11) 4)\"",
      "(define-fun f ((name String)) String (str.substr name 6 3))",
      "(define-fun f ((name String)) String\n  (str.substr name 6 3))",
      "(define-fun f ((name String)) String (str.substr name 7 3))",
      "(str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f ((name String)) String (str.substr name 5 3))",
      "(str.at name 6 4))",
      "\"(str.substr name 6 3))\"",
      "\"(str.at (str.substr name 5 11) 0 3))\"",
      "(str.at name 7 3))",
      "\"(str.substr (str.substr name 5 3) 1 3))\"",
      "(define-fun f ((name String)) String\n  (str.substr name 5 3))",
      "\"(str.substr name 6 3))\"",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 1 (str.indexof name \"-\")) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) \"\")",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \" 0) 2) 3)\n     (str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ 1 (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 7 8))",
      "(str.substr name 7 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.indexof name \"-\" 6) 4) (str.substr name 6 3) (str.substr name 7 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(define-fun f (name String) String\n  (str.at name 6 8))",
      "(ite (= (str.at name 1) \" \") (str.substr name 5 3) (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.prefixof name \"+6\") (str.substr name 6 3) (ite (str.prefixof name \"+7\") (str.substr name 6 3) (ite (str.prefixof name \"+8\") (str.substr name 6 3) (str.substr name 6 3))))",
      "(ite (= (str.at name 0) \"+\")\n     (str.substr name 6 3)\n     (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \" 0) 1) 3)\n     (str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "\"(str.substr name 5 3))\"",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.at (str.substr name 5 11) 0 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr (str.substr name 5 3) 0 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr (str.substr name 6 3) 0 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.at name 6 9))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.at name 6 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.at (str.at name 5) 5)\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \\#\\\\space) (str.substr name 5 3) (ite (= (str.at name 2) \\#\\\\space) (str.substr name 6 3) (ite (= (str.at name 3) \\#\\\\space) (str.substr name 7 3) (ite (= (str.at name 4) \\#\\\\space) (str.substr name 8 3) \"\")))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (ite (= (str.at name 4) \\#\\\\space) (str.substr name 6 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 4 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String \"(str.at (str.substr name 6 11) 4)\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 6 4))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 11) 0 3))\")",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String \"(str.substr (str.substr name 5 3) 1 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 1 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) \"\"))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \" 0) 2) 3) (str.substr name (+ (str.indexof name \"-\" 0) 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 1 (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 7 8))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \"-\" 6) 4) (str.substr name 6 3) (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.at name 6 8))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 5 3) (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+6\") (str.substr name 6 3) (ite (str.prefixof name \"+7\") (str.substr name 6 3) (ite (str.prefixof name \"+8\") (str.substr name 6 3) (str.substr name 6 3)))))",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 6 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \" 0) 1) 3) (str.substr name (+ (str.indexof name \"-\" 0) 1) 3)))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))"
    ],
    "time_diff_ms": 1126.8470000000002,
    "constants": [
      [
        0,
        3,
        11,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        0,
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        0,
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        9,
        6
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.at (str.at name 5) 5)"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "",
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4,
        5,
        6
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        3,
        5,
        "-",
        " "
      ],
      [
        3,
        6
      ],
      [
        1,
        3,
        4,
        "-",
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        "(str.at (str.substr name 6 11) 4)"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        4,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.at (str.substr name 5 11) 0 3))"
      ],
      [
        3,
        7
      ],
      [
        "(str.substr (str.substr name 5 3) 1 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        "",
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        0,
        1,
        2,
        3,
        "-",
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        8,
        7
      ],
      [
        3,
        7
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        4,
        6,
        7,
        "-"
      ],
      [
        3,
        5
      ],
      [
        3,
        7
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        8,
        6
      ],
      [
        1,
        3,
        5,
        6,
        " "
      ],
      [
        3,
        6
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        6,
        "+6",
        "+8",
        "+7"
      ],
      [
        0,
        3,
        5,
        6,
        "+"
      ],
      [
        0,
        1,
        3,
        "-",
        " "
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      3,
      2,
      5,
      6,
      7,
      8,
      9,
      " ",
      11,
      "(str.substr name 5 3))",
      4,
      "+7",
      "-",
      "(str.at (str.at name 5) 5)",
      "+6",
      "(str.at (str.substr name 6 11) 4)",
      "+8",
      "(str.at (str.substr name 5 11) 0 3))",
      "(str.substr (str.substr name 5 3) 1 3))",
      "+",
      "(str.substr name 6 3))"
    ]
  },
  "phone-7.sl": {
    "completions": [
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 8 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "\"(str.substr name 5 3))\"",
      "(ite (= (str.at name 1) \"+\")\n     (str.substr name 6 3)\n     (str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) \"000\") )",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (= (str.at name 0) \"+\") (str.substr name 6 3) (str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 7 3) (str.substr name 8 3))))",
      "(define-fun f (name String) String\n  (str.at name 6 5))",
      "(ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3)))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr name 6 3))\"",
      "\"(str.substr (str.substr name 6 3) 5 3))\"",
      "(str.at (str.substr name 6 3) 0 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name (+ 1 (str.indexof name \" \")) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(define-fun f (name String) String\n  (str.at (str.substr name 5 11) 0 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3)))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.prefixof name \"+6\") (str.substr name 6 3) (ite (str.prefixof name \"+7\") (str.substr name 6 3) (str.substr name 6 3)))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(ite (= (str.at name 1) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 5 3) (ite (= (str.at name 4) \" \") (str.substr name 5 3) (str.substr name 4 3))))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.at name 4) \"-\") (str.substr name 6 3) (str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 7 3) (ite (= (str.at name 4) \" \") (str.substr name 8 3) (ite (= (str.at name 5) \" \") (str.substr name 9 3) (str.substr name 10 3))))))",
      "(ite (= (str.indexof name \"-\") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.prefixof name \"+6\") (str.substr name 5 3) (ite (str.prefixof name \"+7\") (str.substr name 5 3) (str.substr name 6 3)))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 7 3) (str.substr name 8 3))))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 3 3)))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name (+ 1 (str.indexof name \" \")) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.indexof name \"-\") (- (str.indexof name \"-\") 4)) (str.substr name (+ (str.indexof name \"-\") 1) 3) (ite (= (str.indexof name \"-\") (- (str.indexof name \"-\") 3)) (str.substr name (+ (str.indexof name \"-\") 1) 2) (str.substr name (+ (str.indexof name \"-\") 1) 1)))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.indexof name \"-\") -1) (str.substr name 5 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name (+ (str.indexof name \"-\") 1) 3) (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(ite (= (str.at name 1) \"+\")\n     (str.substr name 6 3)\n     (str.substr name 5 3))",
      "(ite (str.contains name \" \")(str.substr name (+ (str.indexof name \" \") 1) 3)(str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(str.substr name 6 3))",
      "(ite (= (str.indexof name \"-\") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (ite (= (str.at name 3) \" \") (str.substr name 3 3) (ite (= (str.at name 4) \" \") (str.substr name 2 3) (ite (= (str.at name 5) \" \") (str.substr name 1 3) (str.substr name 0 3))))))",
      "(ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3)))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name 7 3) (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \" 0) 1) 3)\n     (str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3)))",
      "(ite (= (str.indexof name \"-\" 6) (- (str.indexof name \"-\" 10) 1)) (str.substr name (+ (str.indexof name \"-\" 6) 1) 3) (ite (= (str.indexof name \"-\" 7) (- (str.indexof name \"-\" 11) 1)) (str.substr name (+ (str.indexof name \"-\" 7) 1) 3) (ite (= (str.indexof name \"-\" 8) (- (str.indexof name \"-\" 12) 1)) (str.substr name (+ (str.indexof name \"-\" 8) 1) 3) (ite (= (str.indexof name \"-\" 9) (- (str.indexof name \"-\" 13) 1)) (str.substr name (+ (str.indexof name \"-\" 9) 1) 3) \"\"))))))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.indexof name \" \") (- (str.indexof name \"-\") 1)) (str.substr name (+ (str.indexof name \"-\") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 2))",
      "(str.substr name 6 3))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3)))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.at name 5 6))",
      "(ite (= (str.at name 1) \"+\")\n     (str.substr name 6 3)\n     (str.substr name 5 3))",
      "(ite (= (str.indexof name \" \") -1)\n     (str.substr name (+ 5 (str.indexof name \"-\")) 3)\n     (str.substr name (+ 5 (str.indexof name \" \")) 3))",
      "(str.substr name 7 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3)))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.at name 4) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 5 3) (str.substr name 4 3)))",
      "(ite (= (str.at name 4) \" \") (str.substr name 5 3) (ite (= (str.at name 5) \" \") (str.substr name 6 3) (str.substr name 7 3)))",
      "(ite (= (str.at name 4) \"-\") (str.substr name 6 3) (str.substr name 5 3))",
      "(ite (= (str.at name 5) #\\+)\n     (str.substr name 9 3)\n     (str.substr name 6 3))",
      "(ite (= (str.at name 3) \"-\") (str.substr name 5 3) (str.substr name 6 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr (str.replace name \"+\" \"\") 5 3)\n     (str.substr (str.replace name \"+\" \"\") 4 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 8 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (ite (= (str.at name 1) \"+\") (str.substr name 6 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) \"000\"))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 6 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 7 3) (str.substr name 8 3)))))",
      "(define-fun f (name String) String (str.at name 6 5))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String \"(str.substr (str.substr name 6 3) 5 3))\")",
      "(define-fun f (name String) String (str.at (str.substr name 6 3) 0 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 1 (str.indexof name \" \")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.at (str.substr name 5 11) 0 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+6\") (str.substr name 6 3) (ite (str.prefixof name \"+7\") (str.substr name 6 3) (str.substr name 6 3))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 5 3) (ite (= (str.at name 4) \" \") (str.substr name 5 3) (str.substr name 4 3)))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 4) \"-\") (str.substr name 6 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 7 3) (ite (= (str.at name 4) \" \") (str.substr name 8 3) (ite (= (str.at name 5) \" \") (str.substr name 9 3) (str.substr name 10 3)))))))",
      "(define-fun f (name String) String (ite (= (str.indexof name \"-\") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+6\") (str.substr name 5 3) (ite (str.prefixof name \"+7\") (str.substr name 5 3) (str.substr name 6 3))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 7 3) (str.substr name 8 3)))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 3 3))))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 1 (str.indexof name \" \")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \"-\") (- (str.indexof name \"-\") 4)) (str.substr name (+ (str.indexof name \"-\") 1) 3) (ite (= (str.indexof name \"-\") (- (str.indexof name \"-\") 3)) (str.substr name (+ (str.indexof name \"-\") 1) 2) (str.substr name (+ (str.indexof name \"-\") 1) 1))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \"-\") -1) (str.substr name 5 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name (+ (str.indexof name \"-\") 1) 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \"+\") (str.substr name 6 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (= (str.indexof name \"-\") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 5 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (ite (= (str.at name 3) \" \") (str.substr name 3 3) (ite (= (str.at name 4) \" \") (str.substr name 2 3) (ite (= (str.at name 5) \" \") (str.substr name 1 3) (str.substr name 0 3)))))))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name 7 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \" 0) 1) 3) (str.substr name (+ (str.indexof name \"-\" 0) 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3))))",
      "(define-fun f (name String) String (ite (= (str.indexof name \"-\" 6) (- (str.indexof name \"-\" 10) 1)) (str.substr name (+ (str.indexof name \"-\" 6) 1) 3) (ite (= (str.indexof name \"-\" 7) (- (str.indexof name \"-\" 11) 1)) (str.substr name (+ (str.indexof name \"-\" 7) 1) 3) (ite (= (str.indexof name \"-\" 8) (- (str.indexof name \"-\" 12) 1)) (str.substr name (+ (str.indexof name \"-\" 8) 1) 3) (ite (= (str.indexof name \"-\" 9) (- (str.indexof name \"-\" 13) 1)) (str.substr name (+ (str.indexof name \"-\" 9) 1) 3) \"\")))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") (- (str.indexof name \"-\") 1)) (str.substr name (+ (str.indexof name \"-\") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 2)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 5 6))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \"+\") (str.substr name 6 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name (+ 5 (str.indexof name \"-\")) 3) (str.substr name (+ 5 (str.indexof name \" \")) 3)))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 3 3) (ite (= (str.at name 2) \" \") (str.substr name 4 3) (str.substr name 5 3))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 4) \" \") (str.substr name 6 3) (ite (= (str.at name 3) \" \") (str.substr name 5 3) (str.substr name 4 3))))",
      "(define-fun f (name String) String (ite (= (str.at name 4) \" \") (str.substr name 5 3) (ite (= (str.at name 5) \" \") (str.substr name 6 3) (str.substr name 7 3))))",
      "(define-fun f (name String) String (ite (= (str.at name 4) \"-\") (str.substr name 6 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 5) \\#\\\\+) (str.substr name 9 3) (str.substr name 6 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 3) \"-\") (str.substr name 5 3) (str.substr name 6 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr (str.replace name \"+\" \"\") 5 3) (str.substr (str.replace name \"+\" \"\") 4 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 5 (str.indexof name \"-\")) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name 6 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))"
    ],
    "time_diff_ms": 1911.0729999999999,
    "constants": [
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        8,
        3
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        1,
        3,
        5,
        6,
        "+"
      ],
      [
        1,
        " ",
        3,
        "000"
      ],
      [
        3,
        5
      ],
      [
        0,
        3,
        5,
        6,
        "+"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        1,
        2,
        3,
        5,
        6,
        7,
        8,
        " "
      ],
      [
        5,
        6
      ],
      [
        1,
        2,
        3,
        4,
        5,
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        "(str.substr (str.substr name 6 3) 5 3))"
      ],
      [
        0,
        3,
        6
      ],
      [
        1,
        " ",
        3
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        0,
        3,
        11,
        5
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        2,
        3,
        4,
        5,
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        "+6",
        6,
        "+7"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        3,
        4,
        5,
        6,
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        4,
        5,
        6,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        " ",
        10
      ],
      [
        1,
        3,
        6,
        "-",
        -1
      ],
      [
        3,
        5,
        6,
        "+6",
        "+7"
      ],
      [
        1,
        3,
        5,
        "-",
        " "
      ],
      [
        1,
        2,
        3,
        5,
        6,
        7,
        8,
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        2,
        3,
        4,
        5,
        " "
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        3,
        6,
        " ",
        -1
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        2,
        3,
        4,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        3,
        5,
        "-",
        -1
      ],
      [
        1,
        3,
        "-",
        " ",
        -1
      ],
      [
        1,
        3,
        6,
        " ",
        -1
      ],
      [
        1,
        3,
        5,
        6,
        "+"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        6
      ],
      [
        1,
        3,
        6,
        "-",
        -1
      ],
      [
        0,
        1,
        2,
        3,
        4,
        5,
        " "
      ],
      [
        1,
        2,
        3,
        4,
        5,
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        3,
        6,
        " ",
        -1
      ],
      [
        1,
        3,
        5,
        "-",
        " "
      ],
      [
        1,
        3,
        7,
        " ",
        -1
      ],
      [
        1,
        3,
        5,
        "-",
        " "
      ],
      [
        0,
        1,
        3,
        "-",
        " "
      ],
      [
        1,
        2,
        3,
        4,
        5,
        " "
      ],
      [
        "",
        1,
        3,
        6,
        7,
        8,
        "-",
        10,
        11,
        12,
        9,
        13
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        2,
        3,
        "-",
        " "
      ],
      [
        3,
        6
      ],
      [
        1,
        3,
        6,
        " ",
        -1
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        2,
        3,
        4,
        5,
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        6
      ],
      [
        5,
        6
      ],
      [
        1,
        3,
        5,
        6,
        "+"
      ],
      [
        3,
        5,
        "-",
        " ",
        -1
      ],
      [
        3,
        7
      ],
      [
        1,
        2,
        3,
        4,
        5,
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        4,
        5,
        6,
        " "
      ],
      [
        3,
        4,
        5,
        6,
        7,
        " "
      ],
      [
        3,
        4,
        5,
        6,
        "-"
      ],
      [
        9,
        3,
        5,
        6
      ],
      [
        "-",
        3,
        5,
        6
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        5
      ],
      [
        1,
        3,
        5,
        "-",
        " "
      ],
      [
        1,
        3,
        5,
        "-",
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        "",
        3,
        4,
        5,
        " ",
        "+"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        3,
        5,
        "-",
        " "
      ],
      [
        1,
        3,
        5,
        "-",
        " "
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        1,
        3,
        6,
        " ",
        -1
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      "(str.substr name 5 3))",
      " ",
      11,
      9,
      10,
      "",
      12,
      13,
      "+7",
      "-",
      "(str.substr (str.substr name 6 3) 5 3))",
      "+6",
      "+",
      "(str.substr name 6 3))",
      "000",
      -1
    ]
  },
  "univ_6_short.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York,\" \"NY,\") \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Phialdelphia\" \"Philadelphia\") \"Ithaca\" \"NY\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"USA,\" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \") \" , \" \"\") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \" , \" \") \"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 21))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", \") \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", \") \"New York\" \"NY\")) 5)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York,\" \"NY,\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col2 \", \" \" USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\", New York, USA\\\" \\\", NY, USA\\\") \\\", New York, NY, USA\\\" \\\", NY, USA\\\") \\\", Ann Arbor, MI, USA\\\" \\\", MI, USA\\\") \\\", College Park, MD\\\" \\\", MD, USA\\\") \\\", Ithaca, New York, USA\\\" \\\", NY, USA\\\") \\\", Los Angeles, CA\\\" \\\", CA, USA\\\") \\\", Phialdelphia, PA, USA\\\" \\\", PA, USA\\\") \\\", Philadelphia, PA, USA\\\" \\\", PA, USA\\\") \\\", Phialdelphia, PA, USA\\\" \\\", PA, USA\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\", PA\\\" \\\", PA, USA\\\") \\\", USA\\\" \\\", USA\\\") \\\", MI\\\" \\\", MI, USA\\\") \\\", CA\\\" \\\", CA, USA\\\") \\\", MD\\\" \\\", MD, USA\\\") \\\", NY\\\" \\\", NY, USA\\\") \\\", New York\\\" \\\", NY\\\") \\\", Los Angeles\\\" \\\", CA, USA\\\") \\\", Ithaca, New York\\\" \\\", NY, USA\\\") \\\", College Park\\\" \\\", MD, USA\\\") \\\", Ann Arbor\\\" \\\", MI, USA\\\") \\\", Los Angeles\\\" \\\", CA, USA\\\") \\\", New York, New York\\\" \\\", NY, USA\\\") \\\", New York, NY\\\" \\\", NY\\\") \\\", Philadelphia\\\" \\\", PA, USA\\\") \\\", Ithaca\\\" \\\", NY\\\") \\\", College Park\\\" \\\", MD\\\") \\\", Ann Arbor\\\" \\\", MI\\\") \\\", New York\\\" \\\", NY\\\")\"",
      "\"(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\") 0 (- (str.indexof col2 \",\" 0) 1))\"",
      "\"(str.substr (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\") 1 (str.indexof (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\") \\\",\\\"))\"",
      "(define-fun f (col1 String col2 String) String\n    (str.substr\n        (str.replace\n            (str.++\n                (str.replace col1 \", \" \"\")\n                (str.replace col2 \", \" \"\")\n            )\n            \"New York\"\n            \"NY\"\n        )\n        0\n        (str.indexof\n            (str.replace\n                (str.++\n                    (str.replace col1 \", \" \"\")\n                    (str.replace col2 \", \" \"\")\n                )\n                \"New York\"\n                \"NY\"\n            )\n            \", USA\"\n            0\n        )\n    )\n)",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr (str.replace (str.replace col2 col1 \\\"\\\" ) col2 \\\"\\\") 1 (- (str.indexof col2 \\\",\\\") 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                col1 \"University of \" \"\")\n                                                                                                                                                col2 \"University of \" \"\")\n                                                                                                                                              \"New York\" \"NY\")\n                                                                                                                                            \"New York\" \"NY\")\n                                                                                                                                          \"New York\" \"NY\")\n                                                                                                                                        \"New York\" \"NY\")\n                                                                                                                                      \"New York\" \"NY\")\n                                                                                                                                    \"New York\" \"NY\")\n                                                                                                                                  \"New York\" \"NY\")\n                                                                                                                                \"New York\" \"NY\")\n                                                                                                                              \"New York\" \"NY\")\n                                                                                                                            \"New York\" \"NY\")\n                                                                                                                          \"New York\" \"NY\")\n                                                                                                                        \"New York\" \"NY\")\n                                                                                                                      \"New York\" \"NY\")\n                                                                                                                    \"New York\" \"NY\")\n                                                                                                                  \"New York\" \"NY\")\n                                                                                                                \"New York\" \"NY\")\n                                                                                                              \"New York\" \"NY\")\n                                                                                                            \"New York\" \"NY\")\n                                                                                                          \"New York\" \"NY\")\n                                                                                                        \"New York\" \"NY\")\n                                                                                                      \"New York\" \"NY\")\n                                                                                                    \"New York\" \"NY\")\n                                                                                                  \"New York\" \"NY\")\n                                                                                                \"New York\" \"NY\")\n                                                                                              \"New York\" \"NY\")\n                                                                                            \"New York\" \"NY\")\n                                                                                          \"New York\" \"NY\")\n                                                                                        \"New York\" \"NY\")\n                                                                                      \"New York\" \"NY\")\n                                                                                    \"New York\" \"NY\")\n                                                                                  \"New York\" \"NY\")\n                                                                                \"New York\" \"NY\")\n                                                                              \"New York\" \"NY\")\n                                                                            \"New York\" \"NY\")\n                                                                          \"New York\" \"NY\")\n                                                                        \"New York\" \"NY\")\n                                                                      \"New York\" \"NY\")\n                                                                    \"New York\" \"NY\")\n                                                                  \"New York\" \"NY\")\n                                                                \"New York\" \"NY\")\n                                                              \"New York\" \"NY\")\n                                                            \"New York\" \"NY\")\n                                                          \"New York\" \"NY\")\n                                                        \"New York\" \"NY\")\n                                                      \"New York\" \"NY\")\n                                                    \"New York\" \"NY\")\n                                                  \"New York\" \"NY\")\n                                                \"New York\" \"NY\")\n                                              \"New York\" \"NY\")\n                                            \"New York\" \"NY\")\n                                          \"New York\" \"NY\")\n                                        \"New York\" \"NY\")\n                                      \"New York\" \"NY\")\n                                    \"New York\" \"NY\")\n                                  \"New York\" \"NY\")\n                                \"New York\" \"NY\")\n                              \"New York\" \"NY\")\n                            \"New York\" \"NY\")\n                          \"New York\" \"NY\")\n                        \"New York\" \"NY\")\n                      \"New York\" \"NY\")\n                    \"New York\" \"NY\")\n                  \"New York\" \"NY\")\n                \"New York\" \"NY\")\n              \"New York\" \"NY\")\n            \"New York\" \"NY\")\n          \"New York\" \"NY\")\n        \"New York\" \"NY\")\n      \"New York\" \"NY\")\n    \"New York\" \"NY\"))))",
      "\"(str.substr (str.replace (str.replace (str.++ col2 \\\", USA\\\") \\\", New York, USA\\\") \\\", New York, USA\\\") 0 (- (str.indexof col1 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") 0 (- (str.indexof (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))\n    (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)))\n    \", USA\"))",
      "\"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\", \\\" \\\",\\\") 0 (- (str.indexof (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\",\\\") 1))\"",
      "\"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York, New York, USA\\\" \\\"New York, NY, USA\\\") 0 (- (str.len col1) 1))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\", USA\\\" \\\",\\\") \\\", PA\\\" \\\", PA\\\") \\\", CT\\\" \\\", CT\\\") \\\", CA\\\" \\\", CA\\\") \\\", MD\\\" \\\", MD\\\") \\\", NY\\\" \\\", NY\\\") \\\", New York\\\" \\\", NY\\\") \\\", MI\\\" \\\", MI\\\") \\\", Phialdelphia\\\" \\\", PA\\\") \\\", Los Angeles\\\" \\\", CA\\\") \\\", Ithaca\\\" \\\", NY\\\") \\\", College Park\\\" \\\", MD\\\") \\\", Ann Arbor\\\" \\\", MI\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))\n    \", \"\n    (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2))\n    \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \", USA\") 2)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University\" \"\") \"College Park\" \"\") \"University\" \"\") \"Columbia\" \"\") \"UCLA\" \"\") \"Cornell\" \"\") \"Penn\" \"\") \"University of \" \"\") \"NYU\" \"\") \"Ithaca, New York\" \"Ithaca, NY, USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ \n    (ite (str.contains col2 \"New York\") \"New York\" (str.at col2 0))\n    \", \"\n    (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 0))\n    \", USA\"))",
      "\"(str.substr (str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\", \\\" \\\",\\\") \\\", USA\\\" \\\"USA\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1) )\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia, PA, USA\\\") \\\"UCLA\\\" \\\"Los Angeles, CA, USA\\\") \\\"Cornell University\\\" \\\"Ithaca, NY, USA\\\") \\\"Penn\\\" \\\"Philadelphia, PA, USA\\\") \\\"University of Maryland College Park\\\" \\\"College Park, MD, USA\\\") \\\"University of Michigan\\\" \\\"Ann Arbor, MI, USA\\\") \\\"Columbia University\\\" \\\"New York, NY, USA\\\") \\\"NYU\\\" \\\"New York, NY, USA\\\") \\\"New York, New York, USA\\\" \\\"New York, NY, USA\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\") \\\", \\\" \\\", USA\\\")\"",
      "\"(str.substr (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" 0) 1))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of\\\" \\\"\\\") \\\"University\\\" \\\"\\\") \\\"College Park\\\" \\\"\\\") \\\"Cornell\\\" \\\"\\\") \\\"Penn\\\" \\\"\\\") \\\"UCLA\\\" \\\"\\\") \\\"University of Maryland\\\" \\\"\\\") \\\"University of Michigan\\\" \\\"\\\") \\\"Columbia\\\" \\\"\\\") \\\"NYU\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\"New York\\\" \\\"NY\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1)) 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"PA\\\" \\\"PA\\\") \\\"CA\\\" \\\"CA\\\") \\\"MD\\\" \\\"MD\\\") \\\"NY\\\" \\\"NY\\\") \\\"MI\\\" \\\"MI\\\") \\\"USA\\\" \\\"USA\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1) (+ (str.indexof col1 \\\",\\\" 0) 2))\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Michigan\" \"MI\") \"University of \" \"\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.++ (str.substr col2 0 (+ 1 (str.indexof col2 \\\",\\\" 0))) (str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (str.len col2)))\"",
      "\"(str.substr (str.replace (str.++ col2 \\\",\\\" \\\" USA\\\") col1 \\\"\\\") 0 (- (str.indexof (str.++ col1 \\\",\\\") \\\",\\\" 0) 1))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") 0 (- (str.len col2) 5))\"",
      "\"(ite (str.contains col2 \\\"USA\\\") col2 (str.++ col2 \\\", USA\\\"))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\")\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"PA\\\" \\\"PA\\\") \\\"MI\\\" \\\"MI\\\") 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA\" \"Phialdelphia, PA, USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                col1 \"University of \" \"\")\n                                                                                                                                                                                                                                                                              \"Penn\" \"Philadelphia\")\n                                                                                                                                                                                                                                                                            \"Cornell\" \"Ithaca\")\n                                                                                                                                                                                                                                                                          \"Penn\" \"Philadelphia\")\n                                                                                                                                                                                                                                                                        \"Maryland College Park\" \"College Park\")\n                                                                                                                                                                                                                                                                      \"Michigan\" \"Ann Arbor\")\n                                                                                                                                                                                                    \"Columbia\" \"New York\")\n                                                                                                                                                                                                  \"NYU\" \"New York\"))\n                                                                                                                                \"Los Angeles\" \"UCLA\")\n                                                                                                                              \"New York\" \"NY\")\n                                                                                                                            \"New York\" \"NY\")\n                                                                                                                          \"USA\" \"\")\n                                                                                                                        \"PA\" \"\")\n                                                                                                                      \"CT\" \"\")\n                                                                                                                    \"CA\" \"\")\n                                                                                                                  \"MD\" \"\")\n                                                                                                                \"NY\" \"\")\n                                                                                                              \"New York\" \"NY\")\n                                                                                                            \" \" \"\")\n                                                                                                          \",\" \"\"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace (ite (= col1 \"University of Pennsylvania\") \"Phialdelphia, PA, USA\"\n                                          (ite (= col1 \"UCLA\") \"Los Angeles, CA, USA\"\n                                               (ite (= col1 \"Cornell University\") \"Ithaca, NY, USA\"\n                                                    (ite (= col1 \"Penn\") \"Philadelphia, PA, USA\"\n                                                         (ite (= col1 \"University of Maryland College Park\") \"College Park, MD, USA\"\n                                                              (ite (= col1 \"University of Michigan\") \"Ann Arbor, MI, USA\"\n                                                                   (ite (= col1 \"Columbia University\") \"New York, NY, USA\"\n                                                                        (ite (= col1 \"NYU\") \"New York, NY, USA\"\n                                                                             col1)))))))\n                             \", New York\" \" NY\"\n                             \", PA\" \", PA, USA\")\n                  \", CA\" \", CA, USA\")\n            \", MD\" \", MD, USA\") col2))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace col2 \"New York\" \"NY\") \n                  \"Phialdelphia\" \"Philadelphia\") \n                \"Los Angeles\" \"Los Angeles\") \n              \"Ithaca\" \"Ithaca\") \n            \"College Park\" \"College Park\") \n          \"Ann Arbor\" \"Ann Arbor\") \n        \"New York\" \"NY\") \n      \"New York\" \"NY\") \n    0 \n    (- \n      (str.indexof col1 \",\" 0) \n      1)\n  )\n)",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\",\\\" \\\"\\\") \\\", PA\\\" \\\", PA, USA\\\") \\\", CT\\\" \\\", CT, USA\\\") \\\", CA\\\" \\\", CA, USA\\\") \\\", MD\\\" \\\", MD, USA\\\") \\\", NY\\\" \\\", NY, USA\\\") \\\" New York\\\" \\\", NY, USA\\\") \\\", MI\\\" \\\", MI, USA\\\") \\\", New York\\\" \\\", NY, USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2) \"Phialdelphia\" \"Philadelphia\" \"Los Angeles\" \"Los Angeles\" \"Ithaca, New York\" \"Ithaca, NY\" \"College Park\" \"College Park\" \"Ann Arbor\" \"Ann Arbor\" \"New York, New York\" \"New York, NY\"))",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Los Angeles\\\" \\\"CA\\\") \\\"Ithaca\\\" \\\"NY\\\") \\\"Philadelphia\\\" \\\"PA\\\") \\\"College Park\\\" \\\"MD\\\") \\\"Ann Arbor\\\" \\\"MI\\\") \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"PA\\\") \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") 0 (- (str.len col2) 5))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.substr (str.replace (str.++ col1 \" , \" col2 \" , USA\") 0 (- (str.indexof (str.++ col1 \" , \" col2 \" , USA\") \" , \" 0) 2)) 0 (- (str.indexof (str.++ col1 \" , \" col2 \" , USA\") \" , \" 0) 2)) 0 (- (str.indexof (str.++ col1 \" , \" col2 \" , USA\") \" , \" (- (str.len (str.++ col1 \" , \" col2 \" , USA\")) 4)) 2)) 3 2))",
      "\"(str.++ (str.substr col2 2 (- (str.len col2) 2)) (str.substr col1 0 (- (str.len col1) 2)) \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr \n        (str.replace \n            (str.replace \n                (str.replace col2 \"New York\" \"NY\") \n                \"Los Angeles\" \"CA\") \n            \"University of \" \"\") \n        2 100))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\")))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                col1 \"University of\" \"\")\n                                                                                                                                              \"University\" \"\")\n                                                                                                                                            \"UCLA\" \"Los Angeles\")\n                                                                                                                                          \"Cornell\" \"Ithaca\")\n                                                                                                                                        \"Penn\" \"Philadelphia\")\n                                                                                                                                      \"Maryland\" \"College Park\")\n                                                                                                                                    \"Michigan\" \"Ann Arbor\")\n                                                                                                                                  \"Columbia\" \"New York\")\n                                                                                                                                \"NYU\" \"New York\")\n                                                                                                                              \"Phialdelphia\" \"Philadelphia\")\n                                                                                                                            \"Los Angeles\" \"CA\")\n                                                                                                                          \"Ithaca, New York\" \"Ithaca\")\n                                                                                                                        \"Philadelphia\" \"PA\")\n                                                                                                                      \"College Park\" \"MD\")\n                                                                                                                    \"Ann Arbor\" \"MI\")\n                                                                                                                  \"New York\" \"NY\")\n                                                                                                                \"New York\" \"NY\")\n                                                                                                              \"New York\" \"NY\")\n                                                                                                            \"New York\" \"NY\")\n                                                                                                          \"New York\" \"NY\")\n                                                                                                        \"New York\" \"NY\")\n                                                                                                      \"New York\" \"NY\")\n                                                                                                    \"New York\" \"NY\")\n                                                                                                  \"New York\" \"NY\")\n                                                                                                \"New York\" \"NY\")\n                                                                                              \"New York\" \"NY\")\n                                                                                            \"New York\" \"NY\")\n                                                                                          \"New York\" \"NY\")\n                                                                                        \"New York\" \"NY\")\n                                                                                      \"New York\" \"NY\")\n                                                                                    \"New York\" \"NY\")\n                                                                                  \"New York\" \"NY\")\n                                                                                \"New York\" \"NY\")\n                                                                              \"New York\" \"NY\")\n                                                                            \"New York\" \"NY\")\n                                                                          \"New York\" \"NY\")\n                                                                        \"New York\" \"NY\")\n                                                                      \"New York\" \"NY\")\n                                                                    \"New York\" \"NY\")\n                                                                  \"New York\" \"NY\")\n                                                                \"New York\" \"NY\")\n                                                              \"New York\" \"NY\")\n                                                            \"New York\" \"NY\")\n                                                          \"New York\" \"NY\")\n                                                        \"New York\" \"NY\")\n                                                      \"New York\" \"NY\")\n                                                    \"New York\" \"NY\")\n                                                  \"New York\" \"NY\")\n                                                \"New York\" \"NY\")\n                                              \"New York\" \"NY\")\n                                            \"New York\" \"NY\")\n                                          \"New York\" \"NY\")\n                                        \"New York\" \"NY\")\n                                      \"New York\" \"NY\")\n                                    \"New York\" \"NY\")\n                                  \"New York\" \"NY\")\n                                \"New York\" \"NY\")\n                              \"New York\" \"NY\")\n                            \"New York\" \"NY\")\n                          \"New York\" \"NY\")\n                        \"New York\" \"NY\")\n                      \"New York\" \"NY\")\n                    \"New York\" \"NY\")\n                  \"New York\" \"NY\")\n                \"New York\" \"NY\")\n              \"New York\" \"NY\")\n            \"New York\" \"NY\")\n          \"New York\" \"NY\")\n        \"New York\" \"NY\")\n      \"New York\" \"NY\")\n    \"New York\" \"NY\"))))",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr \n        (str.replace \n            (str.replace \n                (str.replace \n                    (str.replace \n                        (str.replace \n                            (str.replace \n                                (str.replace \n                                    (str.replace \n                                        (str.replace \n                                            (str.replace \n                                                (str.replace \n                                                    (str.replace \n                                                        (str.replace \n                                                            (str.replace \n                                                                (str.replace \n                                                                    (str.replace \n                                                                        (str.replace \n                                                                            (str.replace \n                                                                                (str.replace \n                                                                                    (str.replace \n                                                                                        (str.replace \n                                                                                            (str.replace \n                                                                                                (str.replace \n                                                                                                    (str.replace \n                                                                                                        (str.replace \n                                                                                                            (str.replace \n                                                                                                                (str.replace \n                                                                                                                    (str.replace \n                                                                                                                        (str.replace \n                                                                                                                            (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                    col1 \"University of \" \"\") \"College Park\" \"College Park, MD\" \"\") \"Ithaca\" \"Ithaca, NY\" \"\") \"Ann Arbor\" \"Ann Arbor, MI\" \"\") \"Los Angeles\" \"Los Angeles, CA\" \"\") \"Philadelphia\" \"Philadelphia, PA\" \"\") \"New York, New York\" \"New York, NY\" \"\") \"New York\" \"New York, NY\" \"\") \"PA\" \"PA, USA\" \"\") \"CA\" \"CA, USA\" \"\") \"CT\" \"CT, USA\" \"\") \"MD\" \"MD, USA\" \"\") \"NY\" \"NY, USA\" \"\") \"USA\" \"USA\" \"\") 0 (str.len col1))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0 (str.len col1)))) 0",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.++ col1 \", \" col2 \", USA\") \n      \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") \n    0 (- (str.len \"Phialdelphia, PA, USA\") 5)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.++ col1 \", \" col2 \", USA\") \n      \", USA\" \n      \"\") \n    0 \n    (- (str.len col2) 2)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" \"\" \",\" \"USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                                col1 \"University of\" \"\")\n                                                                                                                                                                                                                                                                              \"Pennsylvania\" \"PA\")\n                                                                                                                                                                                                                                                                            \"UCLA\" \"CA\")\n                                                                                                                                                                                                                                                                          \"Cornell\" \"NY\")\n                                                                                                                                                                                                                                                                        \"Penn\" \"PA\")\n                                                                                                                                                                                                      \"Maryland College Park\" \"MD\")\n                                                                                                                                                                                                    \"Michigan\" \"MI\")\n                                                                                                                                                                                                  \"Columbia\" \"NY\")\n                                                                                                                                                                                                \"NYU\" \"NY\") 0 (- (str.len col
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" College Park\" \"\") \" College\" \"\") \"University\" \"\") \"NYU\" \"New York University\") \"UCLA\" \"Los Angeles\") \"Cornell\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"Michigan\" \"Ann Arbor\") \"Columbia\" \"New York\") \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 25))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 23))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"College Park\" \"MD\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"Phialdelphia, PA\" \"Phialdelphia, PA, USA\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Ithaca, New York\" \"Ithaca, NY, USA\") \"Philadelphia, PA\" \"Philadelphia, PA, USA\") \"College Park, MD\" \"College Park, MD, USA\") \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\") \"New York, NY\" \"New York, NY, USA\") \"New York, New York\" \"New York, NY, USA\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"CT\" \"CT, USA\") \"MD\" \"MD, USA\") \"NY\" \"NY, USA\") \"MI\" \"MI, USA\") \"USA\" \"USA\")))))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles, CA\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.++ col1 \", \" col2 \", USA\")\n      \"Phialdelphia, PA, USA\"\n      \"Philadelphia, PA, USA\")\n    0\n    (-\n      (str.len\n        (str.++ col1 \", \" col2 \", USA\"))\n      2)\n  )\n)",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Ithaca\\\" \\\"Ithaca, NY\\\") \\\"Philadelphia\\\" \\\"Philadelphia, PA\\\") \\\"Los Angeles\\\" \\\"Los Angeles, CA\\\") \\\"College Park\\\" \\\"College Park, MD\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor, MI\\\") \\\"New York\\\" \\\"New York, NY\\\") \\\"Phialdelphia\\\" \\\"Phialdelphia, PA\\\") \\\"PA\\\" \\\"PA, USA\\\") \\\"CA\\\" \\\"CA, USA\\\") \\\"MD\\\" \\\"MD, USA\\\") \\\"NY\\\" \\\"NY, USA\\\") \\\"MI\\\" \\\"MI, USA\\\") \\\"USA\\\" \\\"USA\\\") \\\",\\\" \\\", USA\\\") \\\" \\\" \\\", \\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                col1\n                                                                                                                                                \"University of\" \"\"\n                                                                                                                                              )\n                                                                                                                                              \"UCLA\" \"Los Angeles, CA, USA\"\n                                                                                                                                            )\n                                                                                                                                            \"Cornell University\" \"Ithaca, NY, USA\"\n                                                                                                                                          )\n                                                                                                                                          \"Penn\" \"Philadelphia, PA, USA\"\n                                                                                                                                        )\n                                                                                                                                        \"University of Maryland College Park\" \"College Park, MD, USA\"\n                                                                                                                                      )\n                                                                                                                                      \"University of Michigan\" \"Ann Arbor, MI, USA\"\n                                                                                                                                    )\n                                                                                                                                    \"Columbia University\" \"New York, NY, USA\"\n                                                                                                                                  )\n                                                                                                                                  \"NYU\" \"New York, NY, USA\"\n                                                                                                                                )\n                                                                                                                                \"New York\" \"NY\"\n                                                                                                                              )\n                                                                                                                              \"Phialdelphia\" \"Philadelphia\"\n                                                                                                                            )\n                                                                                                                            \"Los Angeles\" \"Los Angeles\"\n                                                                                                                          )\n                                                                                                                          \"Ithaca\" \"Ithaca\"\n                                                                                                                        )\n                                                                                                                        \"College Park\" \"College Park\"\n                                                                                                                      )\n                                                                                                                      \"Ann Arbor\" \"Ann Arbor\"\n                                                                                                                    )\n                                                                                                                    \"New York\" \"New York\"\n                                                                                                                  )\n                                                                                                                  \"New York\" \"New York\"\n                                                                                                                )\n                                                                                                                \"PA\" \"PA\"\n                                                                                                              )\n                                                                                                              \"CA\" \"CA\"\n                                                                                                            )\n                                                                                                            \"NY\" \"NY\"\n                                                                                                          )\n                                                                                                          \"MD\" \"MD\"\n                                                                                                        )\n                                                                                                        \"MI\" \"MI\"\n                                                                                                      )\n                                                                                                      \"USA\" \"USA\"\n                                                                                                    )\n                                                                                                    \"USA\" \"USA\"\n                                                                                                  )\n                                                                                                  \"USA\" \"USA\"\n                                                                                                )\n                                                                                                \"USA\" \"USA\"\n                                                                                              )\n                                                                                              \"USA\" \"USA\"\n                                                                                            )\n                                                                                            \"USA\" \"USA\"\n                                                                                          )\n                                                                                          \"USA\" \"USA\"\n                                                                                        )\n                                                                                        \"USA\" \"USA\"\n                                                                                      )\n                                                                                      \"USA\" \"USA\"\n                                                                                    )\n                                                                                    \"USA\" \"USA\"\n                                                                                  )\n                                                                                  \"USA\" \"USA\"\n                                                                                )\n                                                                                \"USA\" \"USA\"\n                                                                              )\n                                                                              \"USA\" \"USA\"\n                                                                            )\n                                                                            \"USA\" \"USA\"\n                                                                          )\n                                                                          \"USA\" \"USA\"\n                                                                        )\n                                                                        \"USA\" \"USA\"\n                                                                      )\n                                                                      \"USA\" \"USA\"\n                                                                    )\n                                                                    \"USA\" \"USA\"\n                                                                  )\n                                                                  \"USA\" \"USA\"\n                                                                )\n                                                                \"USA\" \"USA\"\n                                                              )\n                                                              \"USA\" \"USA\"\n                                                            )\n                                                            \"USA\" \"USA\"\n                                                          )\n                                                          \"USA\" \"USA\"\n                                                        )\n                                                        \"USA\" \"USA\"\n                                                      )\n                                                      \"USA\" \"USA\"\n                                                    )\n                                                    \"USA\" \"USA\"\n                                                  )\n                                                  \"USA\" \"USA\"\n                                                )\n                                                \"USA\" \"USA\"\n                                              )\n                                              \"USA\" \"USA\"\n                                            )\n                                            \"USA\" \"USA\"\n                                          )\n                                          \"USA\" \"USA\"\n                                        )\n                                        \"USA\" \"USA\"\n                                      )\n                                      \"USA\" \"USA\"\n                                    )\n                                    \"USA\" \"USA\"\n                                  )\n                                  \"USA\" \"USA\"\n                                )\n                                \"USA\" \"USA\"\n                              )\n                              \"USA\" \"USA\"\n                            )\n                            \"USA\" \"USA\"\n                          )\n                          \"USA\" \"USA\"\n                        )\n                        \"USA\" \"USA\"\n                      )\n                      \"USA\" \"USA\"\n                    )\n                    \"USA\" \"USA\"\n                  )\n                  \"USA\" \"USA\"\n                )\n                \"USA\" \"USA\"\n              )\n              \"USA\" \"USA\"\n            )\n            \"USA\" \"USA\"\n          )\n          \"USA\" \"USA\"\n        )\n        \"USA\" \"USA\"\n      )\n      \"USA\" \"USA\"\n    )\n    0\n    (-\n      (str.len col1)\n      2\n    )\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\")\n               \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\"\n               \"Los Angeles, CA\" \"Los Angeles, CA, USA\"\n               \"Ithaca, New York, USA\" \"Ithaca, NY, USA\"\n               \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\"\n               \"College Park, MD\" \"College Park, MD, USA\"\n               \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\"\n               \"New York, NY, USA\" \"New York, NY, USA\"\n               \"New York, New York, USA\" \"New York, NY, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 3 100) \n    \", \" \n    (str.substr col2 0 2) \n    \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 2 100) \", \" (str.substr col2 0 2) \", USA\"))",
      "\"(str.substr (str.replace (str.replace col2 col1 \\\"\\\") \\\", \\\" \\\",\\\") 0 (- (str.indexof col2 col1 0) 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 3 100) \", \" \n    (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 0)) \", USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col2 3 100) \", \" (str.substr col2 0 2) \", USA\"))",
      "\"(ite (str.contains col1 \\\",\\\") (str.replace col1 \\\", \\\" col2) (str.replace col1 \\\",\\\" col2))\"",
      "\"(str.replace (str.++ col2 \\\", USA\\\") \\\",\\\" \\\"\\\")\"",
      "\"(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.at col2 (+ (str.indexof col2 \\\",\\\") 2)))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\")\"",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)) \\\", USA\\\")\"",
      "\"(ite (str.contains col2 \\\"USA\\\") col2 (str.++ col2 \\\", USA\\\"))\"",
      "\"(str.substr (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" 0) 1))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Phialdelphia, PA, USA\\\") \\\"Los Angeles\\\" \\\"Los Angeles, CA, USA\\\") \\\"Ithaca\\\" \\\"Ithaca, NY, USA\\\") \\\"Philadelphia\\\" \\\"Philadelphia, PA, USA\\\") \\\"College Park\\\" \\\"College Park, MD, USA\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor, MI, USA\\\") \\\"New York\\\" \\\"New York, NY, USA\\\") \\\"New York\\\" \\\"New York, NY, USA\\\") 0 (str.indexof col2 \\\",\\\" 0))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", \\\")\"",
      "\"(str.++ (str.replace (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)) \\\"USA\\\") (str.substr col2 (- (str.indexof col2 \\\",\\\" 0) 1) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.++ \\\", \\\" (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) (+ (str.indexof col2 \\\",\\\") 2)))))\"",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)))\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.replace col2 col1 \\\"University of \\\" \\\"\\\") col2 \\\",\\\" \\\",\\\") \\\", USA\\\")\""
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York,\" \"NY,\") \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Phialdelphia\" \"Philadelphia\") \"Ithaca\" \"NY\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"USA,\" \"USA\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \") \" \\, \" \" \") \" \\, \" \") \" , \" \") \" \\, \" \") \" , \" \") \" \\, \" \") \" , \" \") \" \\, \" \") \" , \" \") \" \\, \" \") \" , \" \") \" \\, \" \") \" , \" \") \" \\, \" \") \" , \" \") \" \\, \" \") \" , \" \") \")))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 21))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", \") \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", \") \"New York\" \"NY\")) 5)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York,\" \"NY,\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col2 \", \" \" USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\", New York, USA\\\" \\\", NY, USA\\\") \\\", New York, NY, USA\\\" \\\", NY, USA\\\") \\\", Ann Arbor, MI, USA\\\" \\\", MI, USA\\\") \\\", College Park, MD\\\" \\\", MD, USA\\\") \\\", Ithaca, New York, USA\\\" \\\", NY, USA\\\") \\\", Los Angeles, CA\\\" \\\", CA, USA\\\") \\\", Phialdelphia, PA, USA\\\" \\\", PA, USA\\\") \\\", Philadelphia, PA, USA\\\" \\\", PA, USA\\\") \\\", Phialdelphia, PA, USA\\\" \\\", PA, USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\", PA\\\" \\\", PA, USA\\\") \\\", USA\\\" \\\", USA\\\") \\\", MI\\\" \\\", MI, USA\\\") \\\", CA\\\" \\\", CA, USA\\\") \\\", MD\\\" \\\", MD, USA\\\") \\\", NY\\\" \\\", NY, USA\\\") \\\", New York\\\" \\\", NY\\\") \\\", Los Angeles\\\" \\\", CA, USA\\\") \\\", Ithaca, New York\\\" \\\", NY, USA\\\") \\\", College Park\\\" \\\", MD, USA\\\") \\\", Ann Arbor\\\" \\\", MI, USA\\\") \\\", Los Angeles\\\" \\\", CA, USA\\\") \\\", New York, New York\\\" \\\", NY, USA\\\") \\\", New York, NY\\\" \\\", NY\\\") \\\", Philadelphia\\\" \\\", PA, USA\\\") \\\", Ithaca\\\" \\\", NY\\\") \\\", College Park\\\" \\\", MD\\\") \\\", Ann Arbor\\\" \\\", MI\\\") \\\", New York\\\" \\\", NY\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace col2 col1 \")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\") 1 (str.indexof (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\") \\\",\\\"))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ (str.replace col1 \", \" \"\") (str.replace col2 \", \" \"\")) \"New York\" \"NY\") 0 (str.indexof (str.replace (str.++ (str.replace col1 \", \" \"\") (str.replace col2 \", \" \"\")) \"New York\" \"NY\") \", USA\" 0)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace col2 col1 \\\"\\\" ) col2 \\\"\\\") 1 (- (str.indexof col2 \\\",\\\") 2))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") col2 \"University of \" \"\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\")))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.++ col2 \\\", USA\\\") \\\", New York, USA\\\") \\\", New York, USA\\\") 0 (- (str.indexof col1 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") 0 (- (str.indexof (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\", \\\" \\\",\\\") 0 (- (str.indexof (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York, New York, USA\\\" \\\"New York, NY, USA\\\") 0 (- (str.len col1) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\", USA\\\" \\\",\\\") \\\", PA\\\" \\\", PA\\\") \\\", CT\\\" \\\", CT\\\") \\\", CA\\\" \\\", CA\\\") \\\", MD\\\" \\\", MD\\\") \\\", NY\\\" \\\", NY\\\") \\\", New York\\\" \\\", NY\\\") \\\", MI\\\" \\\", MI\\\") \\\", Phialdelphia\\\" \\\", PA\\\") \\\", Los Angeles\\\" \\\", CA\\\") \\\", Ithaca\\\" \\\", NY\\\") \\\", College Park\\\" \\\", MD\\\") \\\", Ann Arbor\\\" \\\", MI\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \", USA\") 2)))",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University\" \"\") \"College Park\" \"\") \"University\" \"\") \"Columbia\" \"\") \"UCLA\" \"\") \"Cornell\" \"\") \"Penn\" \"\") \"University of \" \"\") \"NYU\" \"\") \"Ithaca, New York\" \"Ithaca, NY, USA\"))))",
      "(define-fun f (col1 String col2 String) String (str.++ (ite (str.contains col2 \"New York\") \"New York\" (str.at col2 0)) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\", \\\" \\\",\\\") \\\", USA\\\" \\\"USA\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1) )\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia, PA, USA\\\") \\\"UCLA\\\" \\\"Los Angeles, CA, USA\\\") \\\"Cornell University\\\" \\\"Ithaca, NY, USA\\\") \\\"Penn\\\" \\\"Philadelphia, PA, USA\\\") \\\"University of Maryland College Park\\\" \\\"College Park, MD, USA\\\") \\\"University of Michigan\\\" \\\"Ann Arbor, MI, USA\\\") \\\"Columbia University\\\" \\\"New York, NY, USA\\\") \\\"NYU\\\" \\\"New York, NY, USA\\\") \\\"New York, New York, USA\\\" \\\"New York, NY, USA\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\") \\\", \\\" \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of\\\" \\\"\\\") \\\"University\\\" \\\"\\\") \\\"College Park\\\" \\\"\\\") \\\"Cornell\\\" \\\"\\\") \\\"Penn\\\" \\\"\\\") \\\"UCLA\\\" \\\"\\\") \\\"University of Maryland\\\" \\\"\\\") \\\"University of Michigan\\\" \\\"\\\") \\\"Columbia\\\" \\\"\\\") \\\"NYU\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\"New York\\\" \\\"NY\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1)) 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"PA\\\" \\\"PA\\\") \\\"CA\\\" \\\"CA\\\") \\\"MD\\\" \\\"MD\\\") \\\"NY\\\" \\\"NY\\\") \\\"MI\\\" \\\"MI\\\") \\\"USA\\\" \\\"USA\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1) (+ (str.indexof col1 \\\",\\\" 0) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Michigan\" \"MI\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (+ 1 (str.indexof col2 \\\",\\\" 0))) (str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (str.len col2)))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col2 \\\",\\\" \\\" USA\\\") col1 \\\"\\\") 0 (- (str.indexof (str.++ col1 \\\",\\\") \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") 0 (- (str.len col2) 5))\")",
      "(define-fun f (col1 String col2 String) String \"(ite (str.contains col2 \\\"USA\\\") col2 (str.++ col2 \\\", USA\\\"))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"PA\\\" \\\"PA\\\") \\\"MI\\\" \\\"MI\\\") 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA\" \"Phialdelphia, PA, USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (ite (= col1 \"University of Pennsylvania\") \"Phialdelphia, PA, USA\" (ite (= col1 \"UCLA\") \"Los Angeles, CA, USA\" (ite (= col1 \"Cornell University\") \"Ithaca, NY, USA\" (ite (= col1 \"Penn\") \"Philadelphia, PA, USA\" (ite (= col1 \"University of Maryland College Park\") \"College Park, MD, USA\" (ite (= col1 \"University of Michigan\") \"Ann Arbor, MI, USA\" (ite (= col1 \"Columbia University\") \"New York, NY, USA\" (ite (= col1 \"NYU\") \"New York, NY, USA\" col1))))))) \", New York\" \" NY\" \", PA\" \", PA, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") col2))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"NY\") \"New York\" \"NY\") 0 (- (str.indexof col1 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\",\\\" \\\"\\\") \\\", PA\\\" \\\", PA, USA\\\") \\\", CT\\\" \\\", CT, USA\\\") \\\", CA\\\" \\\", CA, USA\\\") \\\", MD\\\" \\\", MD, USA\\\") \\\", NY\\\" \\\", NY, USA\\\") \\\" New York\\\" \\\", NY, USA\\\") \\\", MI\\\" \\\", MI, USA\\\") \\\", New York\\\" \\\", NY, USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2) \"Phialdelphia\" \"Philadelphia\" \"Los Angeles\" \"Los Angeles\" \"Ithaca, New York\" \"Ithaca, NY\" \"College Park\" \"College Park\" \"Ann Arbor\" \"Ann Arbor\" \"New York, New York\" \"New York, NY\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Los Angeles\\\" \\\"CA\\\") \\\"Ithaca\\\" \\\"NY\\\") \\\"Philadelphia\\\" \\\"PA\\\") \\\"College Park\\\" \\\"MD\\\") \\\"Ann Arbor\\\" \\\"MI\\\") \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"PA\\\") \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") 0 (- (str.len col2) 5))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.substr (str.replace (str.++ col1 \" , \" col2 \" , USA\") 0 (- (str.indexof (str.++ col1 \" , \" col2 \" , USA\") \" , \" 0) 2)) 0 (- (str.indexof (str.++ col1 \" , \" col2 \" , USA\") \" , \" 0) 2)) 0 (- (str.indexof (str.++ col1 \" , \" col2 \" , USA\") \" , \" (- (str.len (str.++ col1 \" , \" col2 \" , USA\")) 4)) 2)) 3 2))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 2 (- (str.len col2) 2)) (str.substr col1 0 (- (str.len col1) 2)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"University of \" \"\") 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"UCLA\" \"Los Angeles\") \"Cornell\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"Maryland\" \"College Park\") \"Michigan\" \"Ann Arbor\") \"Columbia\" \"New York\") \"NYU\" \"New York\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"Ithaca, New York\" \"Ithaca\") \"Philadelphia\" \"PA\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\"))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\")\")",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 0 (- (str.len \"Phialdelphia, PA, USA\") 5)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \", USA\" \"\") 0 (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" \"\" \",\" \"USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" \"\"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" College Park\" \"\") \" College\" \"\") \"University\" \"\") \"NYU\" \"New York University\") \"UCLA\" \"Los Angeles\") \"Cornell\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"Michigan\" \"Ann Arbor\") \"Columbia\" \"New York\") \"New York\" \"NY\") \"New York\" \"NY\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 25))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 23))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"College Park\" \"MD\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"Phialdelphia, PA\" \"Phialdelphia, PA, USA\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Ithaca, New York\" \"Ithaca, NY, USA\") \"Philadelphia, PA\" \"Philadelphia, PA, USA\") \"College Park, MD\" \"College Park, MD, USA\") \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\") \"New York, NY\" \"New York, NY, USA\") \"New York, New York\" \"New York, NY, USA\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"CT\" \"CT, USA\") \"MD\" \"MD, USA\") \"NY\" \"NY, USA\") \"MI\" \"MI, USA\") \"USA\" \"USA\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles, CA\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Philadelphia, PA, USA\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 2)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\"))))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Ithaca\\\" \\\"Ithaca, NY\\\") \\\"Philadelphia\\\" \\\"Philadelphia, PA\\\") \\\"Los Angeles\\\" \\\"Los Angeles, CA\\\") \\\"College Park\\\" \\\"College Park, MD\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor, MI\\\") \\\"New York\\\" \\\"New York, NY\\\") \\\"Phialdelphia\\\" \\\"Phialdelphia, PA\\\") \\\"PA\\\" \\\"PA, USA\\\") \\\"CA\\\" \\\"CA, USA\\\") \\\"MD\\\" \\\"MD, USA\\\") \\\"NY\\\" \\\"NY, USA\\\") \\\"MI\\\" \\\"MI, USA\\\") \\\"USA\\\" \\\"USA\\\") \\\",\\\" \\\", USA\\\") \\\" \\\" \\\", \\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"UCLA\" \"Los Angeles, CA, USA\") \"Cornell University\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia, PA, USA\") \"University of Maryland College Park\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor, MI, USA\") \"Columbia University\" \"New York, NY, USA\") \"NYU\" \"New York, NY, USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New Yorkstr.len col1) 2)))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\" \"Los Angeles, CA\" \"Los Angeles, CA, USA\" \"Ithaca, New York, USA\" \"Ithaca, NY, USA\" \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\" \"College Park, MD\" \"College Park, MD, USA\" \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\" \"New York, NY, USA\" \"New York, NY, USA\" \"New York, New York, USA\" \"New York, NY, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 3 100) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 100) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace col2 col1 \\\"\\\") \\\", \\\" \\\",\\\") 0 (- (str.indexof col2 col1 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 3 100) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 3 100) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(ite (str.contains col1 \\\",\\\") (str.replace col1 \\\", \\\" col2) (str.replace col1 \\\",\\\" col2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.++ col2 \\\", USA\\\") \\\",\\\" \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.at col2 (+ (str.indexof col2 \\\",\\\") 2)))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(ite (str.contains col2 \\\"USA\\\") col2 (str.++ col2 \\\", USA\\\"))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Phialdelphia, PA, USA\\\") \\\"Los Angeles\\\" \\\"Los Angeles, CA, USA\\\") \\\"Ithaca\\\" \\\"Ithaca, NY, USA\\\") \\\"Philadelphia\\\" \\\"Philadelphia, PA, USA\\\") \\\"College Park\\\" \\\"College Park, MD, USA\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor, MI, USA\\\") \\\"New York\\\" \\\"New York, NY, USA\\\") \\\"New York\\\" \\\"New York, NY, USA\\\") 0 (str.indexof col2 \\\",\\\" 0))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", \\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)) \\\"USA\\\") (str.substr col2 (- (str.indexof col2 \\\",\\\" 0) 1) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.++ \\\", \\\" (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) (+ (str.indexof col2 \\\",\\\") 2)))))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col2 col1 \\\"University of \\\" \\\"\\\") col2 \\\",\\\" \\\",\\\") \\\", USA\\\")\")"
    ],
    "time_diff_ms": 1215.969,
    "constants": [
      [
        "NY,",
        "MD",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "USA",
        "New York,",
        "NY",
        "Ithaca",
        "CA",
        "Ann Arbor",
        "USA,",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "",
        " , ",
        " ",
        "University of ",
        ") "
      ],
      [
        0,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        21
      ],
      [
        "",
        0,
        5,
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Ithaca",
        "CA",
        "New York",
        "Los Angeles"
      ],
      [
        "Los Angeles, USA",
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "New York",
        "Los Angeles"
      ],
      [
        "NY,",
        ", USA",
        ", ",
        "New York,",
        "NY",
        "New York"
      ],
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Ithaca",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "NY",
        " USA",
        "New York",
        ", "
      ],
      [
        "NY",
        "Philadelphia",
        "New York",
        "Phialdelphia"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \", New York, USA\" \", NY, USA\") \", New York, NY, USA\" \", NY, USA\") \", Ann Arbor, MI, USA\" \", MI, USA\") \", College Park, MD\" \", MD, USA\") \", Ithaca, New York, USA\" \", NY, USA\") \", Los Angeles, CA\" \", CA, USA\") \", Phialdelphia, PA, USA\" \", PA, USA\") \", Philadelphia, PA, USA\" \", PA, USA\") \", Phialdelphia, PA, USA\" \", PA, USA\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \", PA\" \", PA, USA\") \", USA\" \", USA\") \", MI\" \", MI, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") \", NY\" \", NY, USA\") \", New York\" \", NY\") \", Los Angeles\" \", CA, USA\") \", Ithaca, New York\" \", NY, USA\") \", College Park\" \", MD, USA\") \", Ann Arbor\" \", MI, USA\") \", Los Angeles\" \", CA, USA\") \", New York, New York\" \", NY, USA\") \", New York, NY\" \", NY\") \", Philadelphia\" \", PA, USA\") \", Ithaca\" \", NY\") \", College Park\" \", MD\") \", Ann Arbor\" \", MI\") \", New York\" \", NY\")"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace col2 col1 "
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\") 1 (str.indexof (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\") \",\"))"
      ],
      [
        "",
        0,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr (str.replace (str.replace col2 col1 \"\" ) col2 \"\") 1 (- (str.indexof col2 \",\") 2))"
      ],
      [
        "",
        "New York",
        "NY",
        "University of "
      ],
      [
        "(str.substr (str.replace (str.replace (str.++ col2 \", USA\") \", New York, USA\") \", New York, USA\") 0 (- (str.indexof col1 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 1))"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ","
      ],
      [
        "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \", \" \",\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 1))"
      ],
      [
        "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, New York, USA\" \"New York, NY, USA\") 0 (- (str.len col1) 1))"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \", USA\" \",\") \", PA\" \", PA\") \", CT\" \", CT\") \", CA\" \", CA\") \", MD\" \", MD\") \", NY\" \", NY\") \", New York\" \", NY\") \", MI\" \", MI\") \", Phialdelphia\" \", PA\") \", Los Angeles\" \", CA\") \", Ithaca\" \", NY\") \", College Park\" \", MD\") \", Ann Arbor\" \", MI\")"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "Phialdelphia",
        "Philadelphia",
        "NY",
        "New York"
      ],
      null,
      [
        "",
        "Ithaca, New York",
        "Cornell",
        "Penn",
        "University",
        "Ithaca, NY, USA",
        "University of ",
        "UCLA",
        "College Park",
        "Columbia",
        "NYU"
      ],
      [
        0,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace col2 col1 \"\" ) \", \" \",\") \", USA\" \"USA\") 0 (- (str.indexof col1 \",\" 0) 1) )"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia, PA, USA\") \"UCLA\" \"Los Angeles, CA, USA\") \"Cornell University\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia, PA, USA\") \"University of Maryland College Park\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor, MI, USA\") \"Columbia University\" \"New York, NY, USA\") \"NYU\" \"New York, NY, USA\") \"New York, New York, USA\" \"New York, NY, USA\") \", USA\" \"\") \",\" \", USA\") \", \" \", USA\")"
      ],
      [
        "(str.substr (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") 0 (- (str.indexof (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") \",\" 0) 1))"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"Cornell\" \"\") \"Penn\" \"\") \"UCLA\" \"\") \"University of Maryland\" \"\") \"University of Michigan\" \"\") \"Columbia\" \"\") \"NYU\" \"\") \",\" \"\") \"New York\" \"NY\") 0 (- (str.indexof col1 \",\" 0) 1)) 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"PA\" \"PA\") \"CA\" \"CA\") \"MD\" \"MD\") \"NY\" \"NY\") \"MI\" \"MI\") \"USA\" \"USA\") 0 (- (str.indexof col1 \",\" 0) 1) (+ (str.indexof col1 \",\" 0) 2))"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "",
        "MI",
        "NY",
        "Michigan",
        "University of ",
        "New York"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.++ (str.substr col2 0 (+ 1 (str.indexof col2 \",\" 0))) (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (str.len col2)))"
      ],
      [
        "(str.substr (str.replace (str.++ col2 \",\" \" USA\") col1 \"\") 0 (- (str.indexof (str.++ col1 \",\") \",\" 0) 1))"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\") 0 (- (str.len col2) 5))"
      ],
      [
        "(ite (str.contains col2 \"USA\") col2 (str.++ col2 \", USA\"))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\" ) \", USA\" \"\") \",\" \", USA\")"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"PA\" \"PA\") \"MI\" \"MI\") 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "Phialdelphia",
        "Philadelphia",
        ", USA",
        ", "
      ],
      [
        "Phialdelphia, PA, USA",
        "Phialdelphia, PA",
        ", USA",
        ", "
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      null,
      [
        ", MD",
        "Penn",
        "Ann Arbor, MI, USA",
        "University of Maryland College Park",
        ", New York",
        "UCLA",
        "Columbia University",
        ", MD, USA",
        "NYU",
        "Phialdelphia, PA, USA",
        ", CA, USA",
        ", PA",
        "Cornell University",
        "New York, NY, USA",
        " NY",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "University of Michigan",
        ", CA",
        "Los Angeles, CA, USA",
        ", PA, USA",
        "University of Pennsylvania"
      ],
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Ithaca",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        1,
        "Philadelphia",
        "Phialdelphia",
        ",",
        "NY",
        "Ithaca",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \",\" \"\") \", PA\" \", PA, USA\") \", CT\" \", CT, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") \", NY\" \", NY, USA\") \" New York\" \", NY, USA\") \", MI\" \", MI, USA\") \", New York\" \", NY, USA\")"
      ],
      [
        "New York, NY",
        "Ithaca, New York",
        "Ithaca, NY",
        "New York, New York",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        "Ann Arbor",
        "College Park",
        "Los Angeles"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"Philadelphia\" \"PA\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\") \"Phialdelphia\" \"PA\") \"University of Pennsylvania\" \"Phialdelphia\") 0 (- (str.len col2) 5))"
      ],
      [
        0,
        " , ",
        2,
        3,
        4,
        " , USA"
      ],
      [
        "(str.++ (str.substr col2 2 (- (str.len col2) 2)) (str.substr col1 0 (- (str.len col1) 2)) \", USA\")"
      ],
      [
        "",
        2,
        100,
        "NY",
        "University of ",
        "CA",
        "New York",
        "Los Angeles"
      ],
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Ithaca",
        "New York",
        "Los Angeles"
      ],
      [
        "",
        "Penn",
        "PA",
        "MD",
        "Ann Arbor",
        "UCLA",
        "Cornell",
        "Columbia",
        "NYU",
        "University of",
        "Michigan",
        "New York",
        "Los Angeles",
        "Maryland",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "College Park",
        "University",
        "Ithaca, New York",
        "Ithaca",
        "NY",
        "CA"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\" ) \", USA\" \"\") \",\" \", USA\")"
      ],
      null,
      [
        "",
        " , ",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        0,
        1,
        ", USA",
        ", ",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        5,
        ", USA",
        ", ",
        "Phialdelphia, PA, USA"
      ],
      [
        "",
        0,
        2,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        "",
        "USA",
        ",",
        "NY",
        "New York"
      ],
      [
        "",
        " , ",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      null,
      [
        "",
        "Penn",
        " College Park",
        "Ann Arbor",
        "UCLA",
        "Cornell",
        "Columbia",
        "NYU",
        "Michigan",
        "New York",
        "Los Angeles",
        "Philadelphia",
        " College",
        "University ",
        "University",
        " of ",
        "Ithaca",
        "NY",
        "University of ",
        "New York University"
      ],
      [
        0,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        25
      ],
      [
        0,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        23
      ],
      [
        "",
        "University ",
        "University of ",
        "MD",
        "College Park"
      ],
      [
        "Penn",
        "MD, USA",
        "Ann Arbor, MI, USA",
        "MI, USA",
        "University of Maryland College Park",
        "PA",
        "MD",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "NYU",
        "Phialdelphia, PA",
        "New York, New York",
        "Phialdelphia, PA, USA",
        "USA",
        "CT",
        "College Park, MD",
        "CT, USA",
        "New York",
        "NY, USA",
        "Los Angeles",
        "Cornell University",
        "Philadelphia, PA",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "New York, NY, USA",
        "Ann Arbor, MI",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "Los Angeles, CA",
        "CA, USA",
        "College Park",
        "New York, NY",
        "Ithaca, New York",
        "University of Michigan",
        "PA, USA",
        "Ithaca",
        "NY",
        "Los Angeles, CA, USA",
        "CA",
        "University of Pennsylvania"
      ],
      [
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Los Angeles, CA",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "Phialdelphia, PA, USA",
        "Philadelphia, PA, USA"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "Penn",
        "University of Maryland College Park",
        "MD",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "NYU",
        "New York",
        "Los Angeles",
        "Cornell University",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "College Park",
        "University of Michigan",
        "Ithaca",
        "NY",
        "CA",
        "University of Pennsylvania"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Ithaca\" \"Ithaca, NY\") \"Philadelphia\" \"Philadelphia, PA\") \"Los Angeles\" \"Los Angeles, CA\") \"College Park\" \"College Park, MD\") \"Ann Arbor\" \"Ann Arbor, MI\") \"New York\" \"New York, NY\") \"Phialdelphia\" \"Phialdelphia, PA\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"MD\" \"MD, USA\") \"NY\" \"NY, USA\") \"MI\" \"MI, USA\") \"USA\" \"USA\") \",\" \", USA\") \" \" \", \")"
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      [
        "",
        0,
        2,
        "Penn",
        "Ann Arbor, MI, USA",
        "University of Maryland College Park",
        "PA",
        "MD",
        "UCLA",
        "Ann Arbor",
        "Columbia University",
        "NYU",
        "USA",
        "University of",
        "New York",
        "Los Angeles",
        "Cornell University",
        "MI",
        "Philadelphia",
        "New York, NY, USA",
        "Phialdelphia",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "College Park",
        "University of Michigan",
        "NY",
        "Ithaca",
        "Los Angeles, CA, USA",
        "CA"
      ],
      [
        "New York, New York, USA",
        ", USA",
        ", ",
        "New York, NY, USA",
        "Phialdelphia, PA, USA",
        "Ann Arbor, MI, USA",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Los Angeles, CA, USA",
        "Ithaca, NY, USA",
        "College Park, MD",
        "Los Angeles, CA",
        "Ithaca, New York, USA"
      ],
      [
        0,
        2,
        3,
        100,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        2,
        100,
        ", USA",
        ", "
      ],
      [
        "(str.substr (str.replace (str.replace col2 col1 \"\") \", \" \",\") 0 (- (str.indexof col2 col1 0) 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        0,
        3,
        100,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        0,
        2,
        3,
        100,
        ", USA",
        ", "
      ],
      [
        "(ite (str.contains col1 \",\") (str.replace col1 \", \" col2) (str.replace col1 \",\" col2))"
      ],
      [
        "(str.replace (str.++ col2 \", USA\") \",\" \"\")"
      ],
      [
        "(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.at col2 (+ (str.indexof col2 \",\") 2)))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\" ) \",\" \"\") \"USA\" \"\")"
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \", USA\")"
      ],
      [
        "(ite (str.contains col2 \"USA\") col2 (str.++ col2 \", USA\"))"
      ],
      [
        "(str.substr (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") 0 (- (str.indexof (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") \",\" 0) 1))"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \",\" \"\") \", USA\" \"\") \"New York\" \"NY\") \"Phialdelphia\" \"Phialdelphia, PA, USA\") \"Los Angeles\" \"Los Angeles, CA, USA\") \"Ithaca\" \"Ithaca, NY, USA\") \"Philadelphia\" \"Philadelphia, PA, USA\") \"College Park\" \"College Park, MD, USA\") \"Ann Arbor\" \"Ann Arbor, MI, USA\") \"New York\" \"New York, NY, USA\") \"New York\" \"New York, NY, USA\") 0 (str.indexof col2 \",\" 0))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\" ) \", USA\" \"\") \",\" \", \")"
      ],
      [
        "(str.++ (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \"USA\") (str.substr col2 (- (str.indexof col2 \",\" 0) 1) 1))"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.++ \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2)))))"
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)))"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.replace col2 col1 \"University of \" \"\") col2 \",\" \",\") \", USA\")"
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      2,
      3,
      5,
      4,
      "(str.substr (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") 0 (- (str.indexof (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") \",\" 0) 1))",
      "(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\") 1 (str.indexof (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\") \",\"))",
      "(str.++ (str.substr col2 2 (- (str.len col2) 2)) (str.substr col1 0 (- (str.len col1) 2)) \", USA\")",
      21,
      "MD",
      23,
      "Ann Arbor",
      25,
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \",\" \"\") \", USA\" \"\") \"New York\" \"NY\") \"Phialdelphia\" \"Phialdelphia, PA, USA\") \"Los Angeles\" \"Los Angeles, CA, USA\") \"Ithaca\" \"Ithaca, NY, USA\") \"Philadelphia\" \"Philadelphia, PA, USA\") \"College Park\" \"College Park, MD, USA\") \"Ann Arbor\" \"Ann Arbor, MI, USA\") \"New York\" \"New York, NY, USA\") \"New York\" \"New York, NY, USA\") 0 (str.indexof col2 \",\" 0))",
      "NYU",
      " , ",
      "USA",
      "(ite (str.contains col1 \",\") (str.replace col1 \", \" col2) (str.replace col1 \",\" col2))",
      "College Park, MD",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \", New York, USA\" \", NY, USA\") \", New York, NY, USA\" \", NY, USA\") \", Ann Arbor, MI, USA\" \", MI, USA\") \", College Park, MD\" \", MD, USA\") \", Ithaca, New York, USA\" \", NY, USA\") \", Los Angeles, CA\" \", CA, USA\") \", Phialdelphia, PA, USA\" \", PA, USA\") \", Philadelphia, PA, USA\" \", PA, USA\") \", Phialdelphia, PA, USA\" \", PA, USA\")",
      "CT, USA",
      "Los Angeles",
      "Philadelphia, PA",
      ", USA",
      "Maryland",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"PA\" \"PA\") \"MI\" \"MI\") 0 (- (str.indexof col2 \",\") 1))",
      " College",
      "College Park, MD, USA",
      "University ",
      "University",
      ") ",
      100,
      "Los Angeles, CA, USA",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"PA\" \"PA\") \"CA\" \"CA\") \"MD\" \"MD\") \"NY\" \"NY\") \"MI\" \"MI\") \"USA\" \"USA\") 0 (- (str.indexof col1 \",\" 0) 1) (+ (str.indexof col1 \",\" 0) 2))",
      "(str.substr (str.replace (str.replace col2 col1 \"\" ) col2 \"\") 1 (- (str.indexof col2 \",\") 2))",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"Philadelphia\" \"PA\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\") \"Phialdelphia\" \"PA\") \"University of Pennsylvania\" \"Phialdelphia\") 0 (- (str.len col2) 5))",
      "USA,",
      "University of Pennsylvania",
      "(str.replace (str.replace (str.replace col2 col1 \"\" ) \", USA\" \"\") \",\" \", \")",
      "Los Angeles, USA",
      "Ithaca, NY",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \", PA\" \", PA, USA\") \", USA\" \", USA\") \", MI\" \", MI, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") \", NY\" \", NY, USA\") \", New York\" \", NY\") \", Los Angeles\" \", CA, USA\") \", Ithaca, New York\" \", NY, USA\") \", College Park\" \", MD, USA\") \", Ann Arbor\" \", MI, USA\") \", Los Angeles\" \", CA, USA\") \", New York, New York\" \", NY, USA\") \", New York, NY\" \", NY\") \", Philadelphia\" \", PA, USA\") \", Ithaca\" \", NY\") \", College Park\" \", MD\") \", Ann Arbor\" \", MI\") \", New York\" \", NY\")",
      ", New York",
      ", MD, USA",
      "New York, New York",
      "Michigan",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\") 0 (- (str.len col2) 5))",
      "CT",
      "(str.substr (str.replace (str.replace col2 col1 \"\") \", \" \",\") 0 (- (str.indexof col2 col1 0) 1))",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.++ \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2)))))",
      ", CA, USA",
      "(str.substr (str.replace (str.replace (str.replace col2 col1 ",
      "NY,",
      "MI",
      "Philadelphia",
      "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \", \" \",\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 1))",
      " NY",
      "Philadelphia, PA, USA",
      "Los Angeles, CA",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.at col2 (+ (str.indexof col2 \",\") 2)))",
      "New York, NY",
      " of ",
      "University of Michigan",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \",\" \"\") \", PA\" \", PA, USA\") \", CT\" \", CT, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") \", NY\" \", NY, USA\") \" New York\" \", NY, USA\") \", MI\" \", MI, USA\") \", New York\" \", NY, USA\")",
      "Ithaca",
      "University of ",
      " USA",
      "New York University",
      "(str.++ (str.replace (str.replace col2 col1 \"University of \" \"\") col2 \",\" \",\") \", USA\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Ithaca\" \"Ithaca, NY\") \"Philadelphia\" \"Philadelphia, PA\") \"Los Angeles\" \"Los Angeles, CA\") \"College Park\" \"College Park, MD\") \"Ann Arbor\" \"Ann Arbor, MI\") \"New York\" \"New York, NY\") \"Phialdelphia\" \"Phialdelphia, PA\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"MD\" \"MD, USA\") \"NY\" \"NY, USA\") \"MI\" \"MI, USA\") \"USA\" \"USA\") \",\" \", USA\") \" \" \", \")",
      " ",
      "Ann Arbor, MI, USA",
      "MD, USA",
      "MI, USA",
      "New York,",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia, PA, USA\") \"UCLA\" \"Los Angeles, CA, USA\") \"Cornell University\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia, PA, USA\") \"University of Maryland College Park\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor, MI, USA\") \"Columbia University\" \"New York, NY, USA\") \"NYU\" \"New York, NY, USA\") \"New York, New York, USA\" \"New York, NY, USA\") \", USA\" \"\") \",\" \", USA\") \", \" \", USA\")",
      "University of Maryland College Park",
      "UCLA",
      "(str.++ col2 \", USA\")",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"Cornell\" \"\") \"Penn\" \"\") \"UCLA\" \"\") \"University of Maryland\" \"\") \"University of Michigan\" \"\") \"Columbia\" \"\") \"NYU\" \"\") \",\" \"\") \"New York\" \"NY\") 0 (- (str.indexof col1 \",\" 0) 1)) 0 (- (str.indexof col2 \",\" 0) 1))",
      "Columbia",
      "Phialdelphia, PA",
      "New York, New York, USA",
      ", ",
      "(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))",
      "Phialdelphia, PA, USA",
      ",",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \", USA\")",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \", USA\" \",\") \", PA\" \", PA\") \", CT\" \", CT\") \", CA\" \", CA\") \", MD\" \", MD\") \", NY\" \", NY\") \", New York\" \", NY\") \", MI\" \", MI\") \", Phialdelphia\" \", PA\") \", Los Angeles\" \", CA\") \", Ithaca\" \", NY\") \", College Park\" \", MD\") \", Ann Arbor\" \", MI\")",
      "Ithaca, New York, USA",
      "(str.++ (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \"USA\") (str.substr col2 (- (str.indexof col2 \",\" 0) 1) 1))",
      "(str.substr (str.replace (str.replace (str.++ col2 \", USA\") \", New York, USA\") \", New York, USA\") 0 (- (str.indexof col1 \",\") 1))",
      "New York",
      ", PA",
      "(str.substr (str.replace (str.++ col2 \",\" \" USA\") col1 \"\") 0 (- (str.indexof (str.++ col1 \",\") \",\" 0) 1))",
      "(str.substr (str.replace (str.replace (str.replace col2 col1 \"\" ) \", \" \",\") \", USA\" \"USA\") 0 (- (str.indexof col1 \",\" 0) 1) )",
      "(ite (str.contains col2 \"USA\") col2 (str.++ col2 \", USA\"))",
      " , USA",
      "(str.++ (str.substr col2 0 (+ 1 (str.indexof col2 \",\" 0))) (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (str.len col2)))",
      "Ithaca, NY, USA",
      ", PA, USA",
      "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 1))",
      ", CA",
      "(str.replace (str.++ col2 \", USA\") \",\" \"\")",
      "PA, USA",
      "(str.replace (str.replace (str.replace col2 col1 \"\" ) \", USA\" \"\") \",\" \", USA\")",
      ", MD",
      "Penn",
      " College Park",
      "PA",
      "Cornell",
      "Columbia University",
      "University of",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      "NY, USA",
      "Cornell University",
      "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, New York, USA\" \"New York, NY, USA\") 0 (- (str.len col1) 1))",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)))",
      "Phialdelphia",
      "New York, NY, USA",
      "Ann Arbor, MI",
      "CA, USA",
      "College Park",
      "Ithaca, New York",
      "NY",
      "(str.replace (str.replace (str.replace col2 col1 \"\" ) \",\" \"\") \"USA\" \"\")",
      "CA"
    ]
  },
  "stackoverflow9.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" 0))))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" 0))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))"
    ],
    "time_diff_ms": 1510.707,
    "constants": [
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "phone-9-long-repeat.sl": {
    "completions": [
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\" \"+\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\")",
      "(str.replace name \" \" \".\")",
      "(str.replace name \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace name \" \" \".\")",
      "(str.replace name \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.++ (str.substr name 0 3) \".\" (str.++ (str.substr name 4 3) \".\" (str.++ (str.substr name 8 3) \".\" (str.substr name 12 3))))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\" +\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\" ) \"-\" \".\" ) \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\" ) \"-\" \"\" ) \"-\" \"\" ) \"-\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3))",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\"))",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\" \"+\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.++ (str.substr name 4 3) \".\" (str.++ (str.substr name 8 3) \".\" (str.substr name 12 3)))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\" +\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")))"
    ],
    "time_diff_ms": 1034.149,
    "constants": [
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        "+",
        "."
      ],
      [
        "",
        "-",
        " "
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \".\") \".\" \".\")"
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \" +\" \".\") \"-\" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \" \" \".\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \"\") \".\" \".\")"
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "-",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \" \" \".\")"
      ],
      [
        "-",
        "."
      ],
      [
        "",
        "-",
        " ",
        "+"
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ]
    ],
    "all_constants": [
      0,
      "",
      3,
      4,
      8,
      " ",
      12,
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \"\") \".\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \" \" \".\") \".\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \".\" \".\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "-",
      "(str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace name \" +\" \".\") \"-\" \".\") \" \" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \".\") \".\" \".\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")",
      "+",
      "."
    ]
  },
  "get-last-word.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" -1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \")) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" -1))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"x\") \"x\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \"x\") \"x\" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"_\") \"_\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \"_\") \"_\" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (str.len _arg_0)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" -1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \" \") \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \" \") \" \" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" -1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 2)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \\\" \\\" \\\"|\\\") \\\"|\\\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \" \") \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"$\") \"$\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" -1))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" -1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" -1))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"x\") \"x\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \"x\") \"x\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"_\") \"_\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \"_\") \"_\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (str.len _arg_0)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" -1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \" \") \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \" \") \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" -1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 2)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \\\" \\\" \\\"|\\\") \\\"|\\\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \" \") \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.len _arg_0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"$\") \"$\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" -1))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.len _arg_0) -1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))"
    ],
    "time_diff_ms": 1796.25,
    "constants": [
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        "x",
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        "_"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        2
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"|\") \"|\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        "$"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      "x",
      2,
      " ",
      "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"|\") \"|\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "$",
      "_",
      -1
    ]
  },
  "phone-10_short.sl": {
    "completions": [
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f ((name String)) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f ((name String)) String (str.++ (str.at name 0) \" (\" (str.at name 1 3) \") \" (str.substr name 5 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "\"(str.++ \" \" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)) )",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "\"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.at name 0) \\\" (\\\" (str.substr name 1 3) \\\") \\\" (str.substr name 5 3) \\\"-\\\" (str.substr name 9 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "\"(str.++ (str.++ (str.at name 0) (str.at name 1)) \\\" (\\\" (str.++ (str.++ (str.at name 2) (str.at name 3)) \\\") \\\" (str.++ (str.substr name 5 3) \\\"-\\\" (str.substr name 9 3)))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) (str.substr name 11 3))\"",
      "\"(str.++ (str.substr name 0 1) \\\" (\\\" (str.substr name 1 3) \\\") \\\" (str.substr name 4 3) \\\"-\\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\"",
      "\"(str.++ (str.substr name 0 5) \\\" (\\\" (str.substr name 5 3) \\\") \\\" (str.substr name 8 3) \\\"-\\\" (str.substr name 11 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \" (\" \n    (str.substr name 1 3) \") \" \n    (str.substr name 5 3) \"-\" \n    (str.substr name 9 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\"",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \" (\" \n    (str.substr name 1 3) \") \" \n    (str.substr name 5 3) \"-\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \" (\" \n    (str.substr name 1 3) \") \" \n    (str.substr name 5 3) \"-\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)) )",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "\"(str.++ \"+\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" \" \"(\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0)\n          \" (\"\n          (str.substr name 1 3)\n          \") \"\n          (str.substr name 5 3)\n          \"-\"\n          (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)) )",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)) )",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \" \" \n    \"(\" (str.substr name 1 3) \") \" \n    (str.substr name 5 3) \"-\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" \" \"(\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \" (\" \n    (str.substr name 1 3) \") \" \n    (str.substr name 4 3) \"-\" \n    (str.substr name 7 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0)\n    \" (\"\n    (str.substr name 1 3)\n    \") \"\n    (str.substr name 4 3)\n    \"-\"\n    (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "\"(str.++ (str.at name 0) \\\" (\\\" (str.substr name 1 3) \\\") \\\" (str.substr name 5 3) \\\"-\\\" (str.substr name 9 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 5 3) \\\") \\\" (str.substr name 9 3))\"",
      "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.at name 1 3) \") \" (str.substr name 5 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.at name 0) \\\" (\\\" (str.substr name 1 3) \\\") \\\" (str.substr name 5 3) \\\"-\\\" (str.substr name 9 3))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String \"(str.++ (str.++ (str.at name 0) (str.at name 1)) \\\" (\\\" (str.++ (str.++ (str.at name 2) (str.at name 3)) \\\") \\\" (str.++ (str.substr name 5 3) \\\"-\\\" (str.substr name 9 3)))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 7 3) (str.substr name 11 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\" (\\\" (str.substr name 1 3) \\\") \\\" (str.substr name 4 3) \\\"-\\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 5) \\\" (\\\" (str.substr name 5 3) \\\") \\\" (str.substr name 8 3) \\\"-\\\" (str.substr name 11 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" \" \"(\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" \" \"(\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" \" \"(\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 2 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String \"(str.++ (str.at name 0) \\\" (\\\" (str.substr name 1 3) \\\") \\\" (str.substr name 5 3) \\\"-\\\" (str.substr name 9 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3) \\\"-\\\" (str.substr name 10 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 5 3) \\\") \\\" (str.substr name 9 3))\")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))"
    ],
    "time_diff_ms": 1834.047,
    "constants": [
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))"
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        "(str.++ (str.++ (str.at name 0) (str.at name 1)) \" (\" (str.++ (str.++ (str.at name 2) (str.at name 3)) \") \" (str.++ (str.substr name 5 3) \"-\" (str.substr name 9 3)))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) (str.substr name 11 3))"
      ],
      [
        "(str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))"
      ],
      [
        "(str.++ (str.substr name 0 5) \" (\" (str.substr name 5 3) \") \" (str.substr name 8 3) \"-\" (str.substr name 11 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))"
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        " ",
        9,
        "(",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        8,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        11,
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        " ",
        9,
        "(",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " ",
        "(",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        6,
        "-",
        10,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        "-",
        13,
        " (",
        ") "
      ],
      [
        "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))"
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))"
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))"
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3))"
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      "(str.++ (str.substr name 0 5) \" (\" (str.substr name 5 3) \") \" (str.substr name 8 3) \"-\" (str.substr name 11 3))",
      13,
      " ",
      "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) (str.substr name 11 3))",
      "-",
      "(str.++ ",
      "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))",
      "(str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3))",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 10 3))",
      "(str.++ (str.++ (str.at name 0) (str.at name 1)) \" (\" (str.++ (str.++ (str.at name 2) (str.at name 3)) \") \" (str.++ (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      " (",
      ") ",
      "(str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3))",
      "+",
      "("
    ]
  },
  "17212077.sl": {
    "completions": [
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))+\"/\"+(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 5))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))+\"/\"+(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))+\"/\"+(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))+\"/\"+(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 5)))",
      "(str.substr _arg_0 0 5))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "\"(str.substr _arg_0 0 (+ (str.indexof _arg_0 \\\"/\\\" 0) 4))\"",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 5))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 5))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 5))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))+\"/\"+(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "\"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"/\\\" 0) 3))\"",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)) (str.++ (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "\"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"/\\\" 0) 3))\"",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))+\"/\"+(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)) (str.++ (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "\"(str.substr _arg_0 0 (+ (str.indexof _arg_0 \\\"/\\\" 0) 4))\"",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1))+\"/\"+(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 5))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 5)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 5)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 5))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (+ (str.indexof _arg_0 \\\"/\\\" 0) 4))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 5))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 5))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 5)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"/\\\" 0) 3))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"/\\\" 0) 3))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (+ (str.indexof _arg_0 \\\"/\\\" 0) 4))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 5)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4)))"
    ],
    "time_diff_ms": 1548.936,
    "constants": [
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        5
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        6
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        5
      ],
      [
        0,
        5
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))"
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        6
      ],
      [
        0,
        5
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        5
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        "/",
        5
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        4
      ],
      [
        "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))"
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        3
      ],
      [
        "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        6
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        3
      ],
      [
        0,
        "/",
        4
      ],
      [
        "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))"
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        5
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ],
      [
        0,
        "/",
        4
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      3,
      4,
      5,
      6,
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 0) 3))",
      "(str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 0) 4))"
    ]
  },
  "phone-5.sl": {
    "completions": [
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f ((name String)) String (str.at name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f ((name String)) String (str.at name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(str.at (str.replace name \"-\" \"\") 0)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) (str.substr name 1 (str.indexof name \"-\")))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(ite (str.prefixof name \"+\") (str.substr name 1 2) (str.at name 0))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(str.at name 0 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 (- (str.indexof name \" \") 1))\n)",
      "(define-fun f (name String) String (str.at (str.replace name \" \" \"\") 0))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) (str.substr name 1 (str.indexof name \"-\")))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at (str.replace name \" \" \"\") 0))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \"-\" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(ite (str.prefixof name \"+\") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 0 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.at name 1)",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) name)",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.at (str.replace name \" \" \"\") 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \")))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \"-\" 0))\n)",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(ite (str.contains name \" \") (str.substr name 1 (- (str.indexof name \" \") 1)) (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at (str.replace name \"-\" \"\") 0))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) (str.substr name 1 (str.indexof name \"-\"))))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+\") (str.substr name 1 2) (str.at name 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 0 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 (- (str.indexof name \" \") 1)))",
      "(define-fun f (name String) String (str.at (str.replace name \" \" \"\") 0))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) (str.substr name 1 (str.indexof name \"-\"))))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at (str.replace name \" \" \"\") 0))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+\") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 0 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) name))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at (str.replace name \" \" \"\") 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \")))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (- (str.indexof name \" \") 1)) (str.substr name 1 2)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))"
    ],
    "time_diff_ms": 978.1189999999999,
    "constants": [
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        "",
        "-",
        0
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1,
        " ",
        "-"
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        2,
        "+"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        " "
      ],
      [
        "",
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        "-"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        "",
        0,
        " "
      ],
      [
        0,
        1,
        "-"
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        0,
        1,
        " ",
        "+"
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1,
        " "
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        "(str.at name 1)"
      ],
      [
        "",
        1,
        " "
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        "-"
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        3
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        2
      ],
      [
        1
      ]
    ],
    "all_constants": [
      "",
      1,
      2,
      3,
      0,
      "-",
      " ",
      "+",
      "(str.at name 1)"
    ]
  },
  "39060015.sl": {
    "completions": [
      "(str.replace _arg_0 \"delete words in the area \" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)) \" \")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\")",
      "(str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ \"This is a line. \" \"keep this part\")",
      "\"(str.replace _arg_0 \\\"/delete words in the area /\\\" \\\"\\\")\"",
      "(str.++ \"This is a line. \" \"keep this part\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ \"This is a line. \" \"keep this part\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ \"This is a line. \" \"keep this part\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ \"This is a line. \" \"keep this part\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\")))",
      "(str.replace _arg_0 \"/.*?/\" \"\")",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(str.++ \"This is a line. \" (str.replace _arg_0 \"delete words in the area \" \"\"))",
      "(str.++ \"This is a line. \" (str.replace _arg_0 \"delete words in the area \" \"\"))",
      "(str.++ \"This is a line. \" (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" / \")))",
      "(str.++ \"This is a line. \" (str.replace _arg_0 \"delete words in the area \" \"\"))",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ \"This is a line. \" (str.replace _arg_0 \"delete words in the area \" \"\"))",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 0)))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)))",
      "(str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")) (str.substr _arg_0 (+ (str.indexof _arg_0 \"->\") 2) (str.len _arg_0)))",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \" keep this part\"))",
      "\"(str.replace _arg_0 \\\"/delete words in the area /\\\" \\\"\\\")\"",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (- (str.len _arg_0) 3)))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" /\" \"\"))",
      "(str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\")",
      "(str.++ \"This is a line. \" \"keep this part\")",
      "(str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")) (str.substr _arg_0 (+ (str.indexof _arg_0 \"->\") 2) (str.len _arg_0)))",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\")))",
      "(str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \"delete words in the area \" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.++ (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)) (str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0)))",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")) (str.substr _arg_0 (str.indexof _arg_0 \"->\") (+ (str.indexof _arg_0 \"->\") 2) (str.len _arg_0)))",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)) (str.substr _arg_0 (str.indexof _arg_0 \" /\" 0) (str.len _arg_0)))",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")) (str.substr _arg_0 (+ (str.indexof _arg_0 \"->\") 2) (str.len _arg_0)))",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.++ \"This is a line. \" \"keep this part\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.++ \"This is a line. \" \"keep this part\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \" /\" \"\")",
      "(str.replace _arg_0 \"delete words in the area\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)) \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" \"keep this part\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"/delete words in the area /\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/.*?/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.replace _arg_0 \"delete words in the area \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.replace _arg_0 \"delete words in the area \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.replace _arg_0 \"/delete words in the area /\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" / \"))))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.replace _arg_0 \"delete words in the area \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.replace _arg_0 \"delete words in the area \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")) (str.substr _arg_0 (+ (str.indexof _arg_0 \"->\") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \" keep this part\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"/delete words in the area /\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (- (str.len _arg_0) 3))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")) (str.substr _arg_0 (+ (str.indexof _arg_0 \"->\") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \" /\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)) (str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")) (str.substr _arg_0 (str.indexof _arg_0 \"->\") (+ (str.indexof _arg_0 \"->\") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \"delete words in the area\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" /\" 0)) (str.substr _arg_0 (str.indexof _arg_0 \" /\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")) (str.substr _arg_0 (+ (str.indexof _arg_0 \"->\") 2) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"This is a line. \" \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area\" \"\"))"
    ],
    "time_diff_ms": 1291.862,
    "constants": [
      [
        "",
        "delete words in the area "
      ],
      [
        "",
        " /"
      ],
      [
        0,
        " ",
        " /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        " /delete words in the area /",
        "keep this part"
      ],
      [
        "",
        "delete words in the area",
        "keep this part"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "This is a line. ",
        "keep this part"
      ],
      [
        "(str.replace _arg_0 \"/delete words in the area /\" \"\")"
      ],
      [
        "This is a line. ",
        "keep this part"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "This is a line. ",
        "keep this part"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "This is a line. ",
        "keep this part"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "This is a line. ",
        "keep this part"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "This is a line. ",
        0,
        " /"
      ],
      [
        "",
        "/.*?/"
      ],
      [
        "This is a line. ",
        0,
        "/"
      ],
      [
        "This is a line. ",
        "",
        "delete words in the area "
      ],
      [
        "This is a line. ",
        "",
        "delete words in the area "
      ],
      [
        "This is a line. ",
        "",
        "/delete words in the area /"
      ],
      [
        "",
        " /"
      ],
      [
        0,
        " "
      ],
      [
        "This is a line. ",
        0,
        " / "
      ],
      [
        "This is a line. ",
        "",
        "delete words in the area "
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "This is a line. ",
        "",
        "delete words in the area "
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /"
      ],
      [
        0,
        " /"
      ],
      [
        "This is a line. ",
        0,
        "/"
      ],
      [
        "This is a line. ",
        0,
        " /"
      ],
      [
        "",
        "delete words in the area",
        "keep this part"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        0,
        "->",
        "/",
        2
      ],
      [
        "",
        " keep this part",
        " /delete words in the area /"
      ],
      [
        "(str.replace _arg_0 \"/delete words in the area /\" \"\")"
      ],
      [
        "This is a line. ",
        0,
        " /"
      ],
      [
        "This is a line. ",
        0,
        "/"
      ],
      [
        "This is a line. ",
        0,
        3
      ],
      [
        "",
        " /"
      ],
      [
        "",
        "delete words in the area",
        "keep this part"
      ],
      [
        "This is a line. ",
        "keep this part"
      ],
      [
        "",
        "delete words in the area",
        "keep this part"
      ],
      [
        0,
        "->",
        "/",
        2
      ],
      [
        "This is a line. ",
        0,
        " /"
      ],
      [
        "",
        "delete words in the area",
        "keep this part"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        0,
        " "
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        "delete words in the area "
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        0,
        1,
        " ",
        "/"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /"
      ],
      [
        0,
        "->",
        "/",
        2
      ],
      [
        "",
        " /"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "delete words in the area",
        "keep this part"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "This is a line. ",
        0,
        "/"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        0,
        " /"
      ],
      [
        0,
        "->",
        "/",
        2
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "This is a line. ",
        "keep this part"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /"
      ],
      [
        "This is a line. ",
        "keep this part"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        "delete words in the area"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        " /"
      ],
      [
        "",
        "delete words in the area"
      ]
    ],
    "all_constants": [
      "",
      0,
      2,
      3,
      1,
      " ",
      "delete words in the area ",
      "/.*?/",
      " /delete words in the area /",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "->",
      "keep this part",
      "/",
      " / ",
      "This is a line. ",
      " /",
      "/delete words in the area /",
      " keep this part",
      "delete words in the area"
    ]
  },
  "phone-7-long-repeat.sl": {
    "completions": [
      "(str.at name 7 3))",
      "(str.substr name 7 3))",
      "(str.at name 6))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.at name 9 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.at name 7 3))",
      "(str.substr name 6 3))",
      "(str.at name 7 3))",
      "(str.substr name 7 3))",
      "(str.at name 7))",
      "(str.substr name 7 3))",
      "(str.at name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 8 3))",
      "(str.substr name 7 3))",
      "(str.at name 7 3))",
      "(str.substr name 7 3))",
      "(str.at name 8 3))",
      "(str.at name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.at name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.at name 7 3))",
      "(str.at name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.at name 7 3))",
      "(str.at name 9 3))",
      "(str.substr name 8 3))",
      "(str.substr name 8 3))",
      "(str.substr name 8 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.at name (- (str.indexof name \"-\") 4) 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.substr name 8 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 8 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "\"(str.at name 6)\"",
      "(str.substr name 6 3))",
      "\"(str.at name 7)\"",
      "\"(str.at name 9)\"",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "\"(str.at name 7)\"",
      "(str.substr name 7 3))",
      "(str.substr name 8 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.at name 7 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.at name 7 3))",
      "(define-fun f (name String) String\n  (str.at name 7))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 9 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.at name 8 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(str.substr name 8 3))",
      "(str.at name 7))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 6))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 9 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 7))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 8 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.at name 9 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name (- (str.indexof name \"-\") 4) 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String \"(str.at name 6)\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.at name 7)\")",
      "(define-fun f (name String) String \"(str.at name 9)\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String \"(str.at name 7)\")",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name (+ (str.indexof name \"-\") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.at name 7))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 9 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.at name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.at name 7))",
      "(define-fun f (name String) String (str.substr name 7 3))"
    ],
    "time_diff_ms": 1948.774,
    "constants": [
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        9,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        9,
        3
      ],
      [
        8,
        3
      ],
      [
        8,
        3
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "-",
        3,
        4
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "(str.at name 6)"
      ],
      [
        3,
        6
      ],
      [
        "(str.at name 7)"
      ],
      [
        "(str.at name 9)"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "(str.at name 7)"
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        1,
        " ",
        3,
        "-"
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        9,
        3
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        7
      ],
      [
        3,
        7
      ]
    ],
    "all_constants": [
      1,
      3,
      4,
      6,
      7,
      8,
      9,
      "-",
      "(str.at name 7)",
      " ",
      "(str.at name 9)",
      "(str.at name 6)"
    ]
  },
  "38871714.sl": {
    "completions": [
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \" <\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \" <\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "\"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\"",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \" <\" \" \")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" <\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" <\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" <\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))"
    ],
    "time_diff_ms": 1835.128,
    "constants": [
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        " <"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        " <"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "(str.replace _arg_0 \"<\" \"\")"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        " <",
        " "
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ]
    ],
    "all_constants": [
      "",
      " <",
      "<",
      "(str.replace _arg_0 \"<\" \"\")",
      " "
    ]
  },
  "43120683.sl": {
    "completions": [
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "\"(str.replace _arg_0 \\\"1\\\" \\\"apple\\\")\"",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "\"(ite (= _arg_0 \\\"one\\\") \\\"one apple\\\" (ite (= _arg_0 \\\"two\\\") \\\"two bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\"three strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\"four oranges\\\" \\\"\\\"))))\"",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")",
      "(str.replace _arg_0 \"1\" \"apple\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"1\\\" \\\"apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(ite (= _arg_0 \\\"one\\\") \\\"one apple\\\" (ite (= _arg_0 \\\"two\\\") \\\"two bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\"three strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\"four oranges\\\" \\\"\\\"))))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1\" \"apple\"))"
    ],
    "time_diff_ms": 1397.297,
    "constants": [
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "(str.replace _arg_0 \"1\" \"apple\")"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "(ite (= _arg_0 \"one\") \"one apple\" (ite (= _arg_0 \"two\") \"two bananas\" (ite (= _arg_0 \"three\") \"three strawberries\" (ite (= _arg_0 \"four\") \"four oranges\" \"\"))))"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ]
    ],
    "all_constants": [
      "1",
      "apple",
      "(ite (= _arg_0 \"one\") \"one apple\" (ite (= _arg_0 \"two\") \"two bananas\" (ite (= _arg_0 \"three\") \"three strawberries\" (ite (= _arg_0 \"four\") \"four oranges\" \"\"))))",
      "(str.replace _arg_0 \"1\" \"apple\")"
    ]
  },
  "stackoverflow11.sl": {
    "completions": [
      "(ite (str.contains _arg_0 \" \")(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \"No substring found\")",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 \" \" 0) \n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 ntInt 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 1)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0\n            (+\n                (str.indexof _arg_0 \" \" 0)\n                1)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 ntInt 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0\n              (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0)\n              (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) )",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0\n           (str.indexof _arg_0 \" \" 0)\n           (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 (str.to.int \"0\") 0) \n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (- (str.len _arg_0)\n               (str.indexof _arg_0 (str.to.int \"0\") 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0\n           (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0)\n           (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.substr _arg_0\n           (str.indexof _arg_0 (str.to.int \"A\") 0)\n           (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 (str.to.int \"A\") 0) \n            (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"A\") 0)\n            (- (str.len _arg_0) (str.indexof _arg_0 (str.to.int \"A\") 0)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (- (str.len _arg_0)\n               (str.indexof _arg_0 (str.to.int \"0\") 0)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (+\n                (str.indexof _arg_0 \" \")\n                1)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 (str.to.int \"A\") 0) \n            (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0\n            (+\n              (str.indexof _arg_0 \" \" 0)\n              1)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0))",
      "(str.substr _arg_0\n           (+\n            (str.indexof _arg_0 \" \" 0)\n            1)\n           (str.len _arg_0))",
      "(str.substr _arg_0\n           (str.indexof _arg_0 (str.to.int \"0\") 0)\n           (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"a\") 0) (str.indexof _arg_0 (str.to.int \"a\") 0))",
      "(str.substr _arg_0\n            (+\n                (str.indexof _arg_0 \" \" 0)\n                1)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0\n           (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"9\")) 0)\n           (str.len _arg_0))",
      "(str.substr _arg_0\n            (+\n                (str.indexof _arg_0 \" \")\n                1)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.str 0) 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"A\") 0)\n            (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"A\") 0)\n            (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"a\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) 0))",
      "(str.substr _arg_0\n            (+\n              (str.indexof _arg_0 \" \")\n              1)\n            (-\n              (str.len _arg_0)\n              (+\n                (str.indexof\n                  (str.substr _arg_0\n                              (+\n                                (str.indexof _arg_0 \" \")\n                                1)\n                              (-\n                                (str.len _arg_0)\n                                (+\n                                  (str.indexof _arg_0 \" \")\n                                  1)))\n                  \" \")\n                1)))",
      "(str.substr _arg_0\n           (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0))\n           (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0\n            (+\n              (str.indexof _arg_0 \" \" 0)\n              1)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (+\n                (str.indexof _arg_0 \" \")\n                1)\n            (-\n                (str.len _arg_0)\n                (+\n                    (str.indexof\n                        (str.substr _arg_0\n                            (+\n                                (str.indexof _arg_0 \" \")\n                                1)\n                            (str.len _arg_0))\n                        \" \")\n                    1)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"A\") 0)\n            (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0))\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"A\") 0)\n            (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) 0) (str.len _arg_0))",
      "(ite (str.contains _arg_0 \" \")(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"_\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"_\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"1\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"2\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"2\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"3\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"3\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"4\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"4\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"5\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"5\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"6\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"6\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"7\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"7\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"8\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"8\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"9\")(str.substr _arg_0 (+ (str.indexof _arg_0 \"9\") 1) (str.len _arg_0)) (str.substr _arg_0 0 (str.len _arg_0))))))))))))))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0))\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0))\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"A\") 0)\n            (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"0\") 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int 48) 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"A\") 0)\n            (str.indexof _arg_0 (str.to.int \"Z\") 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (ite (str.contains _arg_0 \" \") (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.int \"a\") 0)\n            (str.indexof _arg_0 (str.to.int \"z\") 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \"No substring found\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 ntInt 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 1)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 ntInt 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (- (str.len _arg_0) (str.indexof _arg_0 (str.to.int \"0\") 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.to.int (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (- (str.len _arg_0) (str.indexof _arg_0 (str.to.int \"A\") 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (- (str.len _arg_0) (str.indexof _arg_0 (str.to.int \"0\") 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"a\") 0) (str.indexof _arg_0 (str.to.int \"a\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.at _arg_0 0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"9\")) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.str 0) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"a\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \") 1))) \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \" \" \"\")) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"_\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"1\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"2\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"2\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"3\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"3\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"4\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"4\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"5\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"5\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"6\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"6\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"7\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"7\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"8\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"8\") 1) (str.len _arg_0)) (ite (str.contains _arg_0 \"9\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"9\") 1) (str.len _arg_0)) (str.substr _arg_0 0 (str.len _arg_0))))))))))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int 0) (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"0\") 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int 48) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"A\") 0) (str.indexof _arg_0 (str.to.int \"Z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (ite (str.contains _arg_0 \" \") (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.int \"a\") 0) (str.indexof _arg_0 (str.to.int \"z\") 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))"
    ],
    "time_diff_ms": 2012.853,
    "constants": [
      [
        1,
        " ",
        "No substring found"
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0
      ],
      [
        0,
        1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1
      ],
      [
        1,
        " "
      ],
      [
        0
      ],
      [
        0
      ],
      [
        "0",
        0
      ],
      [
        0
      ],
      [
        "",
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "0",
        0
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "0",
        0
      ],
      [
        "0",
        0
      ],
      [
        0
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        "",
        0,
        " "
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        0,
        " "
      ],
      [
        "0",
        0
      ],
      [
        0,
        "A"
      ],
      [
        "0",
        0
      ],
      [
        "0",
        0
      ],
      [
        "",
        0,
        " "
      ],
      [
        "",
        0,
        " "
      ],
      [
        "0",
        0
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "0",
        0
      ],
      [
        "0",
        0
      ],
      [
        "0",
        0
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        0,
        1,
        " "
      ],
      [
        "",
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "0",
        0
      ],
      [
        0,
        " "
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0,
        "a"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0
      ],
      [
        "9",
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0
      ],
      [
        "0",
        0
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        "A"
      ],
      [
        0,
        "a"
      ],
      [
        0
      ],
      [
        1,
        " "
      ],
      [
        "0"
      ],
      [
        1,
        " "
      ],
      [
        "",
        0,
        " "
      ],
      [
        0
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        "0",
        0
      ],
      [
        "",
        0,
        " "
      ],
      [
        "0",
        0
      ],
      [
        "0"
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        "",
        0,
        " "
      ],
      [
        0
      ],
      [
        0,
        1,
        "8",
        "6",
        "9",
        " ",
        "2",
        "5",
        "7",
        "3",
        "_",
        "4",
        "1"
      ],
      [
        0
      ],
      [
        0,
        "A"
      ],
      [
        0
      ],
      [
        "0",
        0
      ],
      [
        0
      ],
      [
        "0"
      ],
      [
        "0",
        0
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        "0",
        0
      ],
      [
        0,
        " "
      ],
      [
        48,
        0
      ],
      [
        0,
        "A",
        "Z"
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0
      ],
      [
        0,
        "a",
        "z"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      " ",
      "2",
      "4",
      "Z",
      "8",
      "7",
      48,
      "6",
      "9",
      "5",
      "No substring found",
      "A",
      "3",
      "a",
      "z",
      "1",
      "0",
      "_"
    ]
  },
  "split-text-string-at-specific-character.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1 0))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(str.substr _arg_0 0 _arg_1)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1 - 1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (+ _arg_1 1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 _arg_1)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0))\n)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))) )",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (+ _arg_1 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f ((s String) (n Int)) String\n  (str.substr s 0 n)\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(str.substr _arg_0 0 _arg_1))",
      "(define-fun f ((s String) (n Int)) String\n  (str.substr s 0 (str.indexof s \"_\" n)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f ((s String) (n Int)) String\n  (str.substr s 0 n))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\"",
      "(define-fun f ((s String) (i Int)) String\n  (str.substr s 0 i))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\"",
      "(str.substr _arg_0 0 _arg_1)",
      "(define-fun f ((s String) (i Int)) String\n  (str.substr s 0 (str.indexof s \"_\" i))\n)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1 - 1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n    (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))\n)"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1 - 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 n))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" n)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 n))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 i))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr s 0 (str.indexof s \"_\" i)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (_arg_1 - 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))"
    ],
    "time_diff_ms": 2389.8019999999997,
    "constants": [
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 "
      ],
      [
        0
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 "
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ]
    ],
    "all_constants": [
      0,
      1,
      "(str.substr _arg_0 0 (str.indexof _arg_0 ",
      "_"
    ]
  },
  "get-domain-name-from-url.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.len (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 2) 1) 1)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 8)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.len \"http=//\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 8)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 0 (str.indexof _arg_0 \"/\" 1))))))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) 1)) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 0 (str.len \"://\") 2)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=//\") 2)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 0 (str.indexof _arg_0 \"/\" 8))))))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) 1)) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) 1)) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.indexof _arg_0 \"http=//\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 8)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 7))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.len (str.substr _arg_0 (str.len \"http=//\") (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1)))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.len (str.substr _arg_0 (str.len \"http=//\") (str.len _arg_0))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.len (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 2) 1) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 8)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.len \"http=//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 8)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 0 (str.indexof _arg_0 \"/\" 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 0 (str.len \"://\") 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=//\") 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 0 (str.indexof _arg_0 \"/\" 8)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.indexof _arg_0 \"http=//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len _arg_0) -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 8)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 7)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.len (str.substr _arg_0 (str.len \"http=//\") (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") 1))))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.len (str.substr _arg_0 (str.len \"http=//\") (str.len _arg_0)))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))"
    ],
    "time_diff_ms": 1850.933,
    "constants": [
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        1,
        2,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        "/",
        -1
      ],
      [
        0,
        "/",
        -1
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        1,
        "/",
        "http=//"
      ],
      [
        0,
        "/",
        -1
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        "/",
        -1
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        "/",
        -1
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        2,
        "://"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        "/",
        2,
        "https=//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        1,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        -1
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        7
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        8,
        "/",
        1
      ],
      [
        0,
        1,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        1,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        "/",
        "http=//"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ],
      [
        0,
        8,
        "/"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      2,
      "//",
      7,
      8,
      "://",
      "https=//",
      "http=//",
      -1
    ]
  },
  "get-last-name-from-name-with-comma.sl": {
    "completions": [
      "(str.replace _arg_0 \",\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\" 0)))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0))))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\"))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\"))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) 2) \",\" (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\"))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(str.++ (str.replace _arg_0 \",\" \"\") \",\")",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0)))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\"))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1)))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \" \")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.replace _arg_0 (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1)) \",\") \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \" \")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.++ \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(str.++ (str.at _arg_0 (- (str.len _arg_0) 1) \",\") (str.substr _arg_0 0 (- (str.len _arg_0) 1)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.at _arg_0 (- (str.len _arg_0) 1) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1)))",
      "\"(str.replace _arg_0 \\\",\\\" \\\"\\\")\"",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.at _arg_0 (- (str.len _arg_0) 1)) (str.++ \",\" (str.substr _arg_0 0 (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \" \")",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\"))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (+ (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 (str.++ (str.indexof _arg_0 \",\" 0) 1) \"\")",
      "(str.replace _arg_0 (str.++ (str.indexof _arg_0 \",\" 0) 1) \"\")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(define-fun f ((name String)) String\n  (str.substr name (+ (str.indexof name \",\" 0) 1) (- (str.len name) (+ (str.indexof name \",\" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.at _arg_0 (- (str.len _arg_0) 1)) \",\" (str.substr _arg_0 0 (- (str.len _arg_0) 1)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(str.++ (str.at _arg_0 (- (str.len _arg_0) 1)) \",\" (str.substr _arg_0 0 (- (str.len _arg_0) 1)))",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1)))",
      "(str.++ (str.at _arg_0 (- (str.len _arg_0) 1)) (str.++ \",\" (str.substr _arg_0 0 (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))) , (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0))))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 (str.indexof _arg_0 \",\"))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))) , (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\"))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\"))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) 2) \",\" (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\"))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \",\" \"\") \",\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1)))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1)) \",\") \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.++ \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\" 0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.len _arg_0) 1) \",\") (str.substr _arg_0 0 (- (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.len _arg_0) 1) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\",\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.len _arg_0) 1)) (str.++ \",\" (str.substr _arg_0 0 (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\"))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (+ (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.++ (str.indexof _arg_0 \",\" 0) 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.++ (str.indexof _arg_0 \",\" 0) 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(define-fun f (_arg_0 String) String (str.substr name (+ (str.indexof name \",\" 0) 1) (- (str.len name) (+ (str.indexof name \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.len _arg_0) 1)) \",\" (str.substr _arg_0 0 (- (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.len _arg_0) 1)) \",\" (str.substr _arg_0 0 (- (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.len _arg_0) 1)) (str.++ \",\" (str.substr _arg_0 0 (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (- (str.indexof _arg_0 \",\" 0) 1) (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 1)) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))))"
    ],
    "time_diff_ms": 2072.382,
    "constants": [
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        " ",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        " ",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "(str.replace _arg_0 \",\" \"\")"
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        " ",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      [
        0,
        1,
        ",",
        ""
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        2,
        ","
      ],
      [
        2,
        ","
      ],
      [
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ","
      ]
    ],
    "all_constants": [
      "",
      0,
      2,
      1,
      " ",
      ",",
      "(str.replace _arg_0 \",\" \"\")"
    ]
  },
  "initials.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f ((name String)) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at (str.substr name 0 1) 0) \".\"\n          (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f ((name String)) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1)\n    \".\"\n    (str.substr (str.replace name \" \" \".\") (+ (str.indexof name \" \" 0) 1) 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \". \" (str.substr (str.at name (- (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1)\n    \".\"\n    (str.substr (str.replace name \" \" \".\") (+ (str.indexof name \" \" 0) 1) 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1)\n    \".\"\n    (str.substr (str.indexof name \" \" 0) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.at (str.replace name \" \" \".\") 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.at \n        (str.replace name \" \" \".\") \n        1) \n      0 \n      1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr (str.replace (str.substr name 0 1) name \".\") 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr \n      (str.at \n        (str.replace \n          (str.replace name \" \" \".\") \n          \".\" \n          \"\") \n        1) \n      0 \n      1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0)\n    \".\"\n    (str.at \n      (str.substr name \n        (+ \n          (str.indexof name \" \" 0) \n          1) \n        1) \n      0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \". \" (str.at (str.replace name \" \" \"\") 0) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.replace name \" \" \"\") 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.replace name \" \" \"\") 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.at name 1)\n      0\n      1\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.at name \n        (+ 1 \n          (str.indexof name \" \" 0))) \n      0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.replace name \" \" \".\") \n      0 \n      2\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.substr name 0 1) name \".\") 0 3)\n    \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.at name 1)\n      0\n      1\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.++ (str.at name (+ (str.indexof name \" \" 0) 1) \". \"))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.++ (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.at name (+ (str.indexof name \" \" 0) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n          \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.at (str.replace name \" \" \".\") 0)\n          \".\"\n          (str.at (str.replace name \" \" \".\") 2)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    \".\"\n    (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0)))",
      "(define-fun f (name String) String\n    (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\"\n            (str.substr (str.replace (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) \" \" \".\") 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.substr name 0 1) name \".\") 0 3)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.substr name 0 1) \" \" \".\") 0 3) \n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.substr name 0 1) \"\" \".\") 0 1)\n    \".\"\n    (str.substr (str.replace (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \"\" \".\") 0 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.at name 0) 0 1) \n    \".\"\n    (str.substr (str.at name (str.indexof name \" \" 0)) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f ((name String)) String (str.++ (str.substr (str.at name 0) 0 1) \".\" (str.++ (str.at name (+ (str.indexof name \" \" 0) 1) \".\") \"\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.at name 0) 0 1) \".\"\n    (str.substr (str.at name (str.indexof name \" \" 0)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.++\n      (str.substr \n        (str.at name 1) 0 1)\n      \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f ((name String)) String\n    (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.substr name 0 1) name \".\") 0 3)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.substr name 0 1) name \".\") 0 3)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.replace name \" \" \".\") \".\" 1) 0 3)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1)\n    \".\"\n    (str.substr (str.at (str.replace name \" \" \".\") 1) 0 1)\n  )\n)",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) (str.len name)) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1)\n    \".\"\n    (str.substr (str.at (str.replace name \" \" \".\") 1) 0 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1)\n    \".\"\n    (str.substr (str.at name 1) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n          \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1)\n    \".\"\n    (str.substr (str.at (str.replace name \" \" \".\") 1) 0 1)\n  )\n)",
      "(define-fun f (name String) String\n    (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) 2) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.substr name 0 1) \"\" \".\") 0 1)\n    \".\"\n    (str.substr (str.replace (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \"\" \".\") 0 1)\n  )\n)",
      "(define-fun f ((name String)) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at (str.substr name 0 1) 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.replace name \" \" \".\") (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \". \" (str.substr (str.at name (- (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.replace name \" \" \".\") (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.indexof name \" \" 0) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.at (str.replace name \" \" \".\") 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at (str.replace name \" \" \".\") 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.substr name 0 1) name \".\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at (str.replace (str.replace name \" \" \".\") \".\" \"\") 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \". \" (str.at (str.replace name \" \" \"\") 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.replace name \" \" \"\") 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.replace name \" \" \"\") 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ 1 (str.indexof name \" \" 0))) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \".\") 0 2)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.substr name 0 1) name \".\") 0 3) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.at name (+ (str.indexof name \" \" 0) 1) \". \"))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.at name (+ (str.indexof name \" \" 0) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.at (str.replace name \" \" \".\") 0) \".\" (str.at (str.replace name \" \" \".\") 2)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.replace (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) \" \" \".\") 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.substr name 0 1) name \".\") 0 3) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.substr name 0 1) \" \" \".\") 0 3) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.substr name 0 1) \"\" \".\") 0 1) \".\" (str.substr (str.replace (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \"\" \".\") 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr (str.at name 0) 0 1) \".\" (str.substr (str.at name (str.indexof name \" \" 0)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.at name 0) 0 1) \".\" (str.++ (str.at name (+ (str.indexof name \" \" 0) 1) \".\") \"\")))",
      "(define-fun f (name String) String (str.++ (str.substr (str.at name 0) 0 1) \".\" (str.substr (str.at name (str.indexof name \" \" 0)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.substr name 0 1) name \".\") 0 3) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.substr name 0 1) name \".\") 0 3) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.replace name \" \" \".\") \".\" 1) 0 3) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.at (str.replace name \" \" \".\") 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) (str.len name)) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.at (str.replace name \" \" \".\") 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.at (str.replace name \" \" \".\") 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) 2) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace (str.substr name 0 1) \"\" \".\") 0 1) \".\" (str.substr (str.replace (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \"\" \".\") 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))"
    ],
    "time_diff_ms": 422.054,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        ".",
        ". "
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        "",
        " ",
        ".",
        ". "
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        3,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        ".",
        ". "
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        3,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        3,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        3,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        3,
        "."
      ],
      [
        0,
        1,
        3,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      3,
      " ",
      ".",
      ". "
    ]
  },
  "univ_5-long-repeat.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (str.substr col1 0 (- (str.indexof col1 \",\") 1))) )",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 3) \", \" (str.substr col2 4 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\" \"Los Angeles\" \"LA\" \"Storrs\" \"CT\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)) \", \" \"USA\"))))",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"A\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\" \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (ite (str.contains col1 \"New York\") \"NY\" (str.substr col1 0 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2)) \", USA\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\" \"Los Angeles\" \"LA\" \"Santa Barbara\" \"CA\" \"Storrs\" \"CT\" \"Ithaca\" \"NY\" \"Phialdelphia\" \"PA\" \"College Park\" \"MD\" \"Ann Arbor\" \"MI\" \"Cambridge\" \"MA\" \"Houston\" \"TX\" \"New Haven\" \"CT\" \"Berkeley\" \"CA\" \"Urbana\" \"IL\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col1 (+ (str.indexof col1 \",\") 2) (str.len col1)) \", USA\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "\"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \", \" \"\") \", USA\" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))))",
      "\"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\",\\\") \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\") \"University of \" \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ \n        (str.at col2 0 0) \n        (str.at col2 1 0) \n        \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col2 0 3) \", \" (str.substr col2 0 2)) \", USA\"))",
      "\"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (ite (str.contains col1 \"New York\") \"NY\" (str.substr col1 0 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"A\" \"Berkeley\" \"B\" \"CA\" \"C\" \"University of Pennsylvania\" \"D\" \"Phialdelphia\" \"E\" \"PA\" \"F\" \"Cornell University\" \"G\" \"Ithaca\" \"H\" \"NY\" \"I\" \"Penn\" \"J\" \"Philadelphia\" \"K\" \"University of Michigan\" \"L\" \"Ann Arbor\" \"M\" \"MI\" \"N\" \"MIT\" \"O\" \"Cambridge\" \"P\" \"MA\" \"Q\" \"UCLA\" \"R\" \"Los Angeles\" \"S\" \"University of Maryland College Park\" \"T\" \"College Park\" \"U\" \"University of Connecticut\" \"V\" \"Storrs\" \"W\" \"Drexel University\" \"X\" \"NYU\" \"Y\" \"Columbia University\" \"Z\" \"New York\" \"New Haven University\" \"AA\" \"Houston\" \"AB\" \"TX\" \"AC\" \"Rice University\" \"AD\" \"Yale University\" \"AE\" \"Temple University\" \"AF\" \"Harvard University\" \"AG\" \"UIUC\" \"AH\" \"Urbana\" \"AI\" \"IL\" \"AJ\" \"New Haven\" \"AK\" \"Santa Barbara\" \"AL\" \"CA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (str.substr col1 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col1 0 0 1) (str.at col1 1 0 1) (str.at col1 2 0 1) (str.at col1 3 0 1) (str.at col1 4 0 1) \", \" (str.at col2 0 0 1) (str.at col2 1 0 1) (str.at col2 2 0 1) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (str.++ col1 \", USA\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col1 \", \" \"\") \", \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.at col2 0) (str.substr col2 1 (- (str.len col2) 1))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ col2 \", \" (str.substr col1 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.replace (str.++ col1 \", \" col2) \", USA\" \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.replace col1 \"University of \" \"\")\n          (ite (str.contains col1 \"New York\")\n               \"NY\"\n               (str.substr col2 0 2))\n          \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col1 0 1) (str.at col1 1 1) \", \" (str.at col2 0 1) (str.at col2 1 1) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ col2 \", \" (str.substr col1 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace col2 \"New York\" \"NY\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"A\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace col1 col2 \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \", \" 0) 1)) \", \" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.replace (str.replace col2 \",\" \"\") \",\" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 5)) \", USA\"))",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ col2 ', USA')\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 3) \", \" (str.substr col2 0 2) \", USA\"))",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" , \" \", \") \", USA\"))",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (str.substr col1 0 2) \", USA\"))",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", USA\\\")\""
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (str.substr col1 0 (- (str.indexof col1 \",\") 1))))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 3) \", \" (str.substr col2 4 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\" \"Los Angeles\" \"LA\" \"Storrs\" \"CT\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)) \", \" \"USA\")))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"A\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (ite (str.contains col1 \"New York\") \"NY\" (str.substr col1 0 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\" \"Los Angeles\" \"LA\" \"Santa Barbara\" \"CA\" \"Storrs\" \"CT\" \"Ithaca\" \"NY\" \"Phialdelphia\" \"PA\" \"College Park\" \"MD\" \"Ann Arbor\" \"MI\" \"Cambridge\" \"MA\" \"Houston\" \"TX\" \"New Haven\" \"CT\" \"Berkeley\" \"CA\" \"Urbana\" \"IL\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col1 (+ (str.indexof col1 \",\") 2) (str.len col1)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \", \" \"\") \", USA\" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\")))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\",\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\") \"University of \" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col2 0 0) (str.at col2 1 0) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ (str.substr col2 0 3) \", \" (str.substr col2 0 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (ite (str.contains col1 \"New York\") \"NY\" (str.substr col1 0 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"A\" \"Berkeley\" \"B\" \"CA\" \"C\" \"University of Pennsylvania\" \"D\" \"Phialdelphia\" \"E\" \"PA\" \"F\" \"Cornell University\" \"G\" \"Ithaca\" \"H\" \"NY\" \"I\" \"Penn\" \"J\" \"Philadelphia\" \"K\" \"University of Michigan\" \"L\" \"Ann Arbor\" \"M\" \"MI\" \"N\" \"MIT\" \"O\" \"Cambridge\" \"P\" \"MA\" \"Q\" \"UCLA\" \"R\" \"Los Angeles\" \"S\" \"University of Maryland College Park\" \"T\" \"College Park\" \"U\" \"University of Connecticut\" \"V\" \"Storrs\" \"W\" \"Drexel University\" \"X\" \"NYU\" \"Y\" \"Columbia University\" \"Z\" \"New York\" \"New Haven University\" \"AA\" \"Houston\" \"AB\" \"TX\" \"AC\" \"Rice University\" \"AD\" \"Yale University\" \"AE\" \"Temple University\" \"AF\" \"Harvard University\" \"AG\" \"UIUC\" \"AH\" \"Urbana\" \"AI\" \"IL\" \"AJ\" \"New Haven\" \"AK\" \"Santa Barbara\" \"AL\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (str.substr col1 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 0 0 1) (str.at col1 1 0 1) (str.at col1 2 0 1) (str.at col1 3 0 1) (str.at col1 4 0 1) \", \" (str.at col2 0 0 1) (str.at col2 1 0 1) (str.at col2 2 0 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (str.++ col1 \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col1 \", \" \"\") \", \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ (str.at col2 0) (str.substr col2 1 (- (str.len col2) 1))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (str.substr col1 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.++ col1 \", \" col2) \", USA\" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace col1 \"University of \" \"\") (ite (str.contains col1 \"New York\") \"NY\" (str.substr col2 0 2)) \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 0 1) (str.at col1 1 1) \", \" (str.at col2 0 1) (str.at col2 1 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (str.substr col1 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace col2 \"New York\" \"NY\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"A\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace col1 col2 \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \", \" 0) 1)) \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \",\" \"\") \",\" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 5)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 ', USA')\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 3) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" , \" \", \") \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (str.substr col1 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")"
    ],
    "time_diff_ms": 1539.077,
    "constants": [
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA",
        ", "
      ],
      [
        ", USA"
      ],
      [
        0,
        1,
        ",",
        ", "
      ],
      [
        ", USA"
      ],
      [
        "USA",
        ", "
      ],
      [
        0,
        2,
        3,
        4,
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", ",
        "LA",
        "NY",
        "CT",
        "Storrs",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        1,
        "USA",
        ", "
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        ", USA",
        ", ",
        "NY",
        "A",
        "New York"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "M",
        "N",
        "S",
        "U",
        "Q",
        "C",
        "H",
        "Z",
        "B",
        "L",
        ", ",
        "P",
        "New York",
        "W",
        "R",
        "D",
        ", USA",
        "K",
        "F",
        "A",
        "V",
        "E",
        "G",
        "Y",
        "T",
        "X",
        "J",
        "I",
        "NY",
        "O"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        ", USA"
      ],
      [
        "IL",
        "PA",
        "MA",
        "MD",
        "New Haven",
        "Ann Arbor",
        "TX",
        "Urbana",
        ", ",
        "CT",
        "Houston",
        "New York",
        "Los Angeles",
        "Berkeley",
        ", USA",
        "MI",
        "Phialdelphia",
        "Storrs",
        "Cambridge",
        "College Park",
        "LA",
        "NY",
        "Ithaca",
        "CA",
        "Santa Barbara"
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        ", USA"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.replace (str.++ col1 \", \" col2) \", USA\" \"\") \", USA\")"
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        ", USA",
        ", "
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        ", USA",
        "University of ",
        ", "
      ],
      [
        "(str.++ (str.replace (str.replace col2 col1 \"\") \",\" \",\") \", USA\")"
      ],
      [
        "",
        "NY",
        "NH",
        "University of ",
        "New Haven",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA"
      ],
      [
        "",
        " , ",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        2,
        3,
        ", USA",
        ", "
      ],
      [
        "(str.++ (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \", USA\")"
      ],
      [
        ", USA",
        "NY",
        "NH",
        "New Haven",
        "New York"
      ],
      [
        ", USA"
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "USA",
        ", "
      ],
      [
        "New Haven",
        "Ann Arbor",
        "NYU",
        "AH",
        "Los Angeles",
        "AA",
        "D",
        "Berkeley",
        ", USA",
        "V",
        "AC",
        "X",
        "AD",
        "J",
        "AJ",
        "MIT",
        "University of Connecticut",
        "University of Pennsylvania",
        "N",
        "IL",
        "TX",
        "Urbana",
        "AL",
        "AI",
        "W",
        "Temple University",
        "AG",
        "MI",
        "Philadelphia",
        "Rice University",
        "F",
        "A",
        "AE",
        "Cambridge",
        "T",
        "University of Michigan",
        "Ithaca",
        "O",
        "U",
        "Q",
        "University of Maryland College Park",
        "C",
        "UCLA",
        "H",
        "AK",
        "B",
        "L",
        ", ",
        "P",
        "Houston",
        "New York",
        "R",
        "K",
        "G",
        "Y",
        "I",
        "UIUC",
        "M",
        "Penn",
        "S",
        "Yale University",
        "PA",
        "MA",
        "Columbia University",
        "Z",
        "Cornell University",
        "New Haven University",
        "Phialdelphia",
        "Storrs",
        "E",
        "College Park",
        "AF",
        "NY",
        "Drexel University",
        "CA",
        "Santa Barbara",
        "AB",
        "Harvard University"
      ],
      [
        "USA",
        ", "
      ],
      [
        ", USA"
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        ", USA"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        "University of ",
        ", "
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        0,
        2,
        ", USA",
        ", "
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        2,
        3,
        4,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        ", USA",
        ", "
      ],
      [
        "",
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA"
      ],
      [
        0,
        2,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        ", "
      ],
      [
        "",
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", "
      ],
      [
        ", USA",
        "NY",
        "NH",
        "New Haven",
        "New York"
      ],
      [
        0,
        2,
        ", USA",
        ", "
      ],
      [
        "NY",
        "New York",
        ", USA"
      ],
      [
        "",
        ", USA",
        "University of ",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", ",
        "NY",
        "A",
        "New York"
      ],
      [
        "",
        ", USA",
        "University of ",
        ", "
      ],
      [
        "",
        ", USA"
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        0,
        1,
        "USA",
        ", "
      ],
      [
        "",
        ", USA",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        "University of",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        5,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ col2 ', USA')"
      ],
      [
        "",
        ", USA",
        "University of ",
        ", "
      ],
      [
        0,
        2,
        3,
        ", USA",
        ", "
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "",
        " , ",
        ", USA",
        ", ",
        "University ",
        "University of "
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", "
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ col2 \", USA\")"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      "",
      5,
      "MD",
      "New Haven",
      "Ann Arbor",
      "NYU",
      " , ",
      "USA",
      "AH",
      "Los Angeles",
      "AA",
      "D",
      "Berkeley",
      ", USA",
      "V",
      "University ",
      "(str.++ col2 ', USA')",
      "AC",
      "X",
      "LA",
      "J",
      "AD",
      "AJ",
      "Harvard University",
      "University of Connecticut",
      "University of Pennsylvania",
      "N",
      "IL",
      "TX",
      "Urbana",
      "AL",
      "AI",
      "CT",
      "W",
      "Temple University",
      "AG",
      "MI",
      "Philadelphia",
      "Rice University",
      "F",
      "A",
      "AE",
      "Cambridge",
      "T",
      "University of Michigan",
      "Ithaca",
      "University of ",
      "O",
      "U",
      "Q",
      "University of Maryland College Park",
      "C",
      "UCLA",
      "(str.++ col2 \", USA\")",
      "H",
      "AK",
      "B",
      "L",
      "(str.++ (str.replace (str.++ col1 \", \" col2) \", USA\" \"\") \", USA\")",
      ", ",
      "P",
      ",",
      "(str.++ (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \", USA\")",
      "Houston",
      "New York",
      "R",
      "K",
      "(str.++ (str.replace (str.replace col2 col1 \"\") \",\" \",\") \", USA\")",
      "G",
      "Y",
      "I",
      "NH",
      "UIUC",
      "M",
      "Penn",
      "S",
      "Yale University",
      "PA",
      "MA",
      "Columbia University",
      "Z",
      "University of",
      "Cornell University",
      "New Haven University",
      "Phialdelphia",
      "Storrs",
      "E",
      "College Park",
      "AF",
      "NY",
      "Drexel University",
      "CA",
      "Santa Barbara",
      "AB",
      "MIT"
    ]
  },
  "stackoverflow10.sl": {
    "completions": [
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") (str.len _arg_0)) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) (str.len (str.at _arg_0 0))) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4)",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 6 4))",
      "(str.substr _arg_0 7 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.at _arg_0 (- (str.len _arg_0) 5) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "\"(str.substr _arg_0 (- (str.indexof _arg_0 \\\" \\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) 1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4)",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(ite (str.contains _arg_0 \" -> \")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \" 0) 4) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" -> \" 0) 4)))\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) 1)))",
      "(ite (str.contains _arg_0 \" -> \")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \") 4) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" -> \") 4)))\n     _arg_0)",
      "(ite (str.indexof _arg_0 \" \" -1)\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \") 1)))\n     _arg_0)",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (s String) String\n  (str.substr s (- (str.indexof s \" \" 0) 3) 4))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0)",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1) 4))",
      "(define-fun f ((s String)) String\n  (str.substr s (- (str.indexof s \" \" 0) 1) (- (str.len s) (str.indexof s \" \" 0))))",
      "(ite (str.contains _arg_0 \" -> \")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \") 4) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" -> \") 4)))\n     \"\")",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 6 4))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))) _arg_0)",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) (- (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n  (str.at _arg_0 (- (str.len _arg_0) 5) 4))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) 1)))\n)",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) (- (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0)",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (date String) String\n  (str.substr date 8 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (s String) String\n  (str.substr s (+ (str.indexof s \" \" 0) 1) (- (str.len s) (+ (str.indexof s \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (s String) String\n  (str.substr s (- (str.indexof s \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(ite (str.contains _arg_0 \" -> \")\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \") 4) (str.len _arg_0))\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))\n)",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (s String) String (str.substr s (- (str.indexof s \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(ite (str.contains _arg_0 \" -> \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \") 4) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" -> \") 4))) \"\")",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) (str.len (str.at _arg_0 0))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (- (str.len _arg_0) 5) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (- (str.indexof _arg_0 \\\" \\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" -> \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \" 0) 4) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" -> \" 0) 4))) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" -> \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \") 4) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" -> \") 4))) _arg_0))",
      "(define-fun f (_arg_0 String) String (ite (str.indexof _arg_0 \" \" -1) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \") 1))) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr s (- (str.indexof s \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr s (- (str.indexof s \" \" 0) 1) (- (str.len s) (str.indexof s \" \" 0))))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" -> \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \") 4) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" -> \") 4))) \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) (- (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (- (str.len _arg_0) 5) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) (- (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr date 8 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \" \" 0) 1) (- (str.len s) (+ (str.indexof s \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr s (- (str.indexof s \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" -> \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \") 4) (str.len _arg_0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr s (- (str.indexof s \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" -> \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" -> \") 4) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" -> \") 4))) \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))"
    ],
    "time_diff_ms": 1055.257,
    "constants": [
      [
        0,
        " ",
        3,
        4
      ],
      [
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " "
      ],
      [
        4
      ],
      [
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        4
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        4
      ],
      [
        4,
        6
      ],
      [
        4,
        7
      ],
      [
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4,
        5
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (str.len _arg_0))"
      ],
      [
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        1,
        4,
        " ",
        " -> "
      ],
      [
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        4,
        " -> "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        1,
        " "
      ],
      [
        4
      ],
      [
        1,
        " ",
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        "",
        4,
        " -> "
      ],
      [
        4,
        6
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        4,
        5
      ],
      [
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        " "
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        8,
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        0,
        1,
        " ",
        4
      ],
      [
        4
      ],
      [
        1,
        " ",
        4,
        " -> "
      ],
      [
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        "",
        4,
        " -> "
      ],
      [
        4
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      "",
      8,
      " ",
      " -> ",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      -1
    ]
  },
  "phone-9-short.sl": {
    "completions": [
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\"))",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \".\" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\"))\"",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \"+ \" \"+\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"\n    (str.replace name \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"\n",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \" \" \".\") \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    (str.substr name 1 3) \n    \".\" \n    (str.substr name 5 3) \n    \".\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \".\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3) \".\"\n    (str.substr name 12 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0)\n    (str.substr name 2 3)\n    \".\"\n    (str.substr name 6 3)\n    \".\"\n    (str.substr name 10 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0)\n    (str.substr name 2 3)\n    \".\"\n    (str.substr name 6 3)\n    \".\"\n    (str.substr name 10 3)\n    \".\"\n    (str.substr name 14 3)\n  )\n)",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+.\" \"+\") \"+-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \"\") \" \" \"\") \" \" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3) \".\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \"+\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3) \".\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3) \".\"\n    (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \".\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\")\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \".\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace name \" \" \".\" (str.replace name \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \".\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) (str.substr name 2 3) \".\" (str.substr name 6 3) \".\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) (str.substr name 2 3) \".\" (str.substr name 6 3) \".\" (str.substr name 10 3) \".\" (str.substr name 14 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3) \".\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \"+\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3) \".\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")"
    ],
    "time_diff_ms": 1146.795,
    "constants": [
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        2,
        3,
        6,
        10,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        2,
        3,
        6,
        10,
        14,
        "."
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \".\") \" \" \".\") \".\" \".\") \".\" \".\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        1,
        3,
        5,
        9,
        13,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        1,
        3,
        5,
        9,
        13,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ]
    ],
    "all_constants": [
      0,
      "",
      1,
      3,
      4,
      5,
      2,
      6,
      8,
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      " ",
      9,
      12,
      10,
      14,
      13,
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\")",
      "-",
      "(str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \".\") \" \" \".\") \".\" \".\") \".\" \".\") \".\" \".\")",
      "+",
      ".",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
    ]
  },
  "phone-6-short.sl": {
    "completions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.at (str.substr name 5 11) 0)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(str.substr name 5 3))",
      "\"(str.at (str.substr name 5 11) 0)\"",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(ite (= (str.at name 1) #\\space) (str.substr name 2 3) (ite (= (str.at name 2) #\\space) (str.substr name 3 3) (str.substr name 2 3)))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.at (str.substr name 5 12) 0))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(str.at (str.substr name 5 3) 0)",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "\"(str.at (str.substr name 5 12) 0)\"",
      "(ite (= (str.at name 0) \"+\")\n     (str.substr name 5 3)\n     (str.substr name 4 3))",
      "(str.at (str.substr name 5 12) 0 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.at (str.substr name 5 11) 0 3))",
      "(ite (= (str.at name 1) \" \") (str.substr name 2 3) (ite (= (str.at name 2) \" \") (str.substr name 3 3) (str.substr name 4 3)))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(ite (= (str.at name 0) \"+\") (str.substr name 5 3) (str.substr name 4 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(ite (= (str.at name 0) \"+\") (str.substr name 3 3) (str.substr name 1 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "\"(str.at (str.substr name 5 11) 0)\"",
      "(str.at (str.substr name 5 11) 0 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(str.at (str.substr name 5 11) 0 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(ite (= (str.at name 1) #\\space) (str.substr name 3 3) (ite (= (str.at name 2) #\\space) (str.substr name 4 3) (str.substr name 5 3)))",
      "(ite (str.prefixof name \"+\")\n     (str.substr name 5 3)\n     (ite (str.prefixof name \"0\")\n          (str.substr name 1 3)\n          (str.substr name 0 3)))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name 1 3) (str.substr name 0 3))",
      "(str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(ite (= (str.at name 4) \"-\") (str.substr name 5 3) (ite (= (str.at name 3) \"-\") (str.substr name 4 3) (str.substr name 3 3)))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(str.at (str.substr name 5 3) 0 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3))",
      "(ite (= (str.at name 0) \"+\") (str.substr name 3 3) (str.substr name 2 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (= (str.at name 4) \"-\")\n     (str.substr name 5 3)\n     (ite (= (str.at name 3) \"-\")\n          (str.substr name 4 3)\n          (str.substr name 3 3)))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (= (str.at name 1) #\\space) (str.substr name 2 3) (ite (= (str.at name 2) #\\space) (str.substr name 3 3) (str.substr name 4 3))) )",
      "(str.substr name 5 3))",
      "(ite (str.contains name \"+\")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(ite (= (str.at name 1) #\\space) (str.substr name 2 3) (ite (= (str.at name 2) #\\space) (str.substr name 3 3) (str.substr name 4 3)))",
      "(ite (= (str.at name 0) \"+\") (str.substr name 2 3) (str.substr name 1 3))",
      "(ite (str.contains name \" \")\n     (str.substr name 1 (str.indexof name \" \" 0))\n     (str.substr name 1 (str.indexof name \"-\")))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.at (str.substr name 5 3) 0)",
      "(ite (= (str.at name 0) \"+\") (str.substr name 2 3) (ite (= (str.at name 1) \" \") (str.substr name 3 3) (str.substr name 1 3)))",
      "(ite (= (str.at name 1) \"+\")\n     (str.substr name 4 3)\n     (ite (= (str.at name 2) \"+\")\n          (str.substr name 5 3)\n          (str.substr name 6 3)))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name 1 (str.indexof name \" \" 0))\n     (str.substr name 1 (str.indexof name \"-\")))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 11) 0)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 11) 0)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \\#\\\\space) (str.substr name 2 3) (ite (= (str.at name 2) \\#\\\\space) (str.substr name 3 3) (str.substr name 2 3))))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at (str.substr name 5 12) 0))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 12) 0)\")",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 5 3) (str.substr name 4 3)))",
      "(define-fun f (name String) String (str.at (str.substr name 5 12) 0 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at (str.substr name 5 11) 0 3))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \" \") (str.substr name 2 3) (ite (= (str.at name 2) \" \") (str.substr name 3 3) (str.substr name 4 3))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 5 3) (str.substr name 4 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 3 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String \"(str.at (str.substr name 5 11) 0)\")",
      "(define-fun f (name String) String (str.at (str.substr name 5 11) 0 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.at (str.substr name 5 11) 0 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \\#\\\\space) (str.substr name 3 3) (ite (= (str.at name 2) \\#\\\\space) (str.substr name 4 3) (str.substr name 5 3))))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+\") (str.substr name 5 3) (ite (str.prefixof name \"0\") (str.substr name 1 3) (str.substr name 0 3))))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 3) (str.substr name 0 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (= (str.at name 4) \"-\") (str.substr name 5 3) (ite (= (str.at name 3) \"-\") (str.substr name 4 3) (str.substr name 3 3))))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 3 3) (str.substr name 2 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.at name 4) \"-\") (str.substr name 5 3) (ite (= (str.at name 3) \"-\") (str.substr name 4 3) (str.substr name 3 3))))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \\#\\\\space) (str.substr name 2 3) (ite (= (str.at name 2) \\#\\\\space) (str.substr name 3 3) (str.substr name 4 3))))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \"+\") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \\#\\\\space) (str.substr name 2 3) (ite (= (str.at name 2) \\#\\\\space) (str.substr name 3 3) (str.substr name 4 3))))",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 2 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\"))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at (str.substr name 5 3) 0))",
      "(define-fun f (name String) String (ite (= (str.at name 0) \"+\") (str.substr name 2 3) (ite (= (str.at name 1) \" \") (str.substr name 3 3) (str.substr name 1 3))))",
      "(define-fun f (name String) String (ite (= (str.at name 1) \"+\") (str.substr name 4 3) (ite (= (str.at name 2) \"+\") (str.substr name 5 3) (str.substr name 6 3))))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\"))))"
    ],
    "time_diff_ms": 1641.393,
    "constants": [
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 11) 0)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 11) 0)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        2,
        3
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        0,
        12,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        0,
        3,
        5
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        "(str.at (str.substr name 5 12) 0)"
      ],
      [
        0,
        3,
        4,
        5,
        "+"
      ],
      [
        0,
        3,
        12,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        0,
        3,
        11,
        5
      ],
      [
        1,
        2,
        3,
        4,
        " "
      ],
      [
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        0,
        3,
        4,
        5,
        "+"
      ],
      [
        1,
        " ",
        3
      ],
      [
        0,
        3,
        "+",
        1
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        1,
        " ",
        3
      ],
      [
        "(str.at (str.substr name 5 11) 0)"
      ],
      [
        0,
        3,
        11,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        0,
        3,
        11,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        1,
        2,
        3,
        4,
        5
      ],
      [
        "0",
        1,
        0,
        3,
        5,
        "+"
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        "-",
        3,
        4,
        5
      ],
      [
        5
      ],
      [
        0,
        3,
        5
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        0,
        3,
        2,
        "+"
      ],
      [
        3,
        5
      ],
      [
        "-",
        3,
        4,
        5
      ],
      [
        3,
        5
      ],
      [
        1,
        2,
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        1,
        " ",
        "+"
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        1,
        2,
        3,
        4
      ],
      [
        0,
        1,
        2,
        3,
        "+"
      ],
      [
        0,
        1,
        " ",
        "-"
      ],
      [
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        0,
        3,
        5
      ],
      [
        0,
        1,
        2,
        3,
        " ",
        "+"
      ],
      [
        1,
        2,
        3,
        4,
        5,
        6,
        "+"
      ],
      [
        3,
        5
      ],
      [
        1,
        " ",
        3,
        5
      ],
      [
        0,
        1,
        " ",
        "-"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "(str.at (str.substr name 5 11) 0)",
      3,
      5,
      4,
      "0",
      6,
      "-",
      " ",
      "+",
      12,
      11,
      "(str.at (str.substr name 5 12) 0)"
    ]
  },
  "43606446.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"<\") (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \",\") 1) (+ (str.indexof _arg_0 \">\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\",\\\") 1) (- (str.indexof _arg_0 \\\">\\\") (str.indexof _arg_0 \\\",\\\") 1))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"<\" (+ 1 (str.indexof _arg_0 \",\"))) (- (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\")) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<CASH,\") 6) (- (str.indexof _arg_0 \",CASH>\") (str.indexof _arg_0 \"<CASH,\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (+ (str.indexof _arg_0 \">\") -1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (+ (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\")) -1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) 3))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\"))\n```",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\" (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (+ (str.indexof _arg_0 \">\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15)))",
      "\"(str.substr _arg_0 (- (str.indexof _arg_0 \\\",\\\") 1) (+ (str.indexof _arg_0 \\\",\\\") 1))\"",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(define-fun f (x String) String (str.substr x (+ (str.indexof x \",\" 0) 1) (- (str.indexof x \",\" (+ (str.indexof x \",\" 0) 1)) (+ (str.indexof x \",\" 0) 1))))",
      "(define-fun f ((s String)) String (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (+ (str.indexof s \",\") 1))))",
      "(define-fun f (s String) String\n  (str.substr s (+ (str.indexof s \",\" 0) 1) (- (str.indexof s \">\" 0) (+ (str.indexof s \",\" 0) 1))))",
      "(define-fun f (s String) String\n  (str.substr s (+ (str.indexof s \",\" 0) 1) (- (str.indexof s \">\" 0) (+ (str.indexof s \",\" 0) 1))))",
      "(define-fun f ((_arg_0 String)) String\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" (+ (str.indexof _arg_0 \"<\") 1)))))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\",\\\" 0) 1) (- (str.indexof _arg_0 \\\",\\\" 0) 1))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (s String) String\n  (str.substr s (+ (str.indexof s \"<\") 1) (- (str.indexof s \",\") (str.indexof s \"<\") 1)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\",\\\") 1) (- (str.indexof _arg_0 \\\">\\\") (str.indexof _arg_0 \\\",\\\")))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16) (- (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 1))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (+ (str.indexof s \",\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\",\\\") 1) (- (str.indexof _arg_0 \\\">\\\") (str.indexof _arg_0 \\\",\\\") 1))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (+ 1 (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\")))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"<\") (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \",\") 1) (+ (str.indexof _arg_0 \">\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\",\\\") 1) (- (str.indexof _arg_0 \\\">\\\") (str.indexof _arg_0 \\\",\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" (+ (str.indexof _arg_0 \"<\") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"<\" (+ 1 (str.indexof _arg_0 \",\"))) (- (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\")) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<CASH,\") 6) (- (str.indexof _arg_0 \",CASH>\") (str.indexof _arg_0 \"<CASH,\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (+ (str.indexof _arg_0 \">\") -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (+ (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\")) -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) 3))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\" (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" (+ (str.indexof _arg_0 \"<\") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (+ (str.indexof _arg_0 \">\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (- (str.indexof _arg_0 \\\",\\\") 1) (+ (str.indexof _arg_0 \\\",\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 15))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\" 0) 1) (- (str.indexof x \",\" (+ (str.indexof x \",\" 0) 1)) (+ (str.indexof x \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (+ (str.indexof s \",\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \",\" 0) 1) (- (str.indexof s \">\" 0) (+ (str.indexof s \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \",\" 0) 1) (- (str.indexof s \">\" 0) (+ (str.indexof s \",\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\" (+ (str.indexof _arg_0 \"<\") 1)))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\",\\\" 0) 1) (- (str.indexof _arg_0 \\\",\\\" 0) 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"<\") 1) (- (str.indexof s \",\") (str.indexof s \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\",\\\") 1) (- (str.indexof _arg_0 \\\">\\\") (str.indexof _arg_0 \\\",\\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16) (- (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \",\") 1) (- (str.indexof s \">\") (+ (str.indexof s \",\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\",\\\") 1) (- (str.indexof _arg_0 \\\">\\\") (str.indexof _arg_0 \\\",\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (+ 1 (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"<\") 1) (str.indexof _arg_0 \">\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\"))))"
    ],
    "time_diff_ms": 1514.633,
    "constants": [
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        ">",
        "<"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ","
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1))"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        ",CASH>",
        "<CASH,",
        6
      ],
      [
        1,
        "<",
        ">",
        -1
      ],
      [
        1,
        ",",
        "<",
        -1
      ],
      [
        1,
        3,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ","
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        ">",
        "<IDEALPRO,CASH,",
        15
      ],
      [
        ">",
        "<IDEALPRO,CASH,",
        15
      ],
      [
        "(str.substr _arg_0 (- (str.indexof _arg_0 \",\") 1) (+ (str.indexof _arg_0 \",\") 1))"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        ">",
        "<IDEALPRO,CASH,",
        15
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        0,
        1,
        ",",
        ">"
      ],
      [
        0,
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" 0) 1))"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        "<"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\")))"
      ],
      [
        16,
        1,
        "<IDEALPRO,CASH,"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1))"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        16,
        1,
        "<IDEALPRO,CASH,",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ]
    ],
    "all_constants": [
      0,
      1,
      3,
      "<",
      6,
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\")))",
      ",CASH>",
      "<IDEALPRO,CASH,",
      ",",
      15,
      16,
      "(str.substr _arg_0 (- (str.indexof _arg_0 \",\") 1) (+ (str.indexof _arg_0 \",\") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1))",
      -1,
      ">",
      "<CASH,"
    ]
  },
  "initials-long.sl": {
    "completions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.at name (+ (str.indexof name \" \" 0) 1) 1)\n      0\n      1)\n  )\n)",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n    (str.++ \n        (str.substr name 0 1) \".\"\n        (str.substr (str.at name (+ 1 (str.indexof name \" \" 0))) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    \".\"\n    (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr (str.at name (+ 1 (str.indexof name \" \" 0))) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (- (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    \".\"\n    (str.at \n      (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \n      0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n    (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    \".\"\n    (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n    (str.++ \n        (str.substr name 0 1) \".\"\n        (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr (str.at name 1) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (- (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    \".\"\n    (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n    (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    \".\"\n    (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String\n    (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr (str.at name 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 1 (str.len (str.at name 1)))\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n          \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n    (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \n      0 1\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\" \n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0)\n    \".\"\n    (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    \".\" \n    (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \".\"\n    (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (- (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (- (str.len name) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr (str.at name (- (str.len name) 1)) 0 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.++ \n      (str.substr \n        (str.at name 0) \n        0 \n        (str.indexof name \" \" 0)\n      ) \".\"\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ 1 (str.indexof name \" \" 0))) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ 1 (str.indexof name \" \" 0))) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (- (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (- (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 1 (str.len (str.at name 1)))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (- (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (- (str.len name) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (- (str.len name) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 0) 0 (str.indexof name \" \" 0)) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))"
    ],
    "time_diff_ms": 2298.041,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      2,
      " ",
      "."
    ]
  },
  "phone-5-long-repeat.sl": {
    "completions": [
      "(str.substr name 1 3))",
      "(str.at name 1)",
      "(str.substr name 1 3)",
      "(str.substr name 1 (str.indexof name \" \" 0))",
      "(str.substr name 1 3))",
      "(str.at name 1)",
      "(str.at name 1)",
      "(str.substr name 1 3))",
      "(str.at name 1)",
      "(str.substr name 1 3))",
      "\"(str.to.int (str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "(str.substr name 1 3))",
      "(str.at name 1)",
      "\"(str.at name 1)\"",
      "\"(str.to.int (str.substr name 1 3))\"",
      "(str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 0)\"",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "\"(str.at name 0)\"",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n    (str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.to.int (str.substr name 1 (- (str.indexof name \\\" \\\") 1)))\"",
      "\"(str.at name 0)\"",
      "(str.at name 1))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.to.int (str.substr name 1 (str.indexof name \\\" \\\")))\"",
      "\"(str.to.int (str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.to.int (str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(str.at name 1))",
      "\"(str.at name 0)\"",
      "\"(str.at name 1)\"",
      "\"(str.substr name 1 3))\"",
      "(str.at name 1))",
      "\"(str.at name 1)\"",
      "(str.at name 1)",
      "(str.at name 1))",
      "\"(str.at name 0)\"",
      "(str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "(str.at name 1)",
      "\"(str.at name 1)\"",
      "(str.at name 2))",
      "(str.at name 1)",
      "\"(str.at name 1)\"",
      "(str.at name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 3))",
      "(str.at name 1))",
      "\"(str.at name 1)\"",
      "(str.at name 1))",
      "(str.to.int (str.substr name 1 3)))",
      "(str.to.int (str.substr name 1 3)))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.to.int (str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "(str.at name 1))",
      "(str.to.int (str.substr name 1 (- (str.indexof name \" \") 1)))",
      "(str.at name 1)",
      "(str.at name 1))",
      "(str.at name 1))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(str.to.int (str.substr name 1 3))",
      "(str.to.int (str.substr name 1 3)))",
      "(str.at name 1))",
      "(str.at name 0)",
      "(str.at name 1))",
      "(str.at name 1)",
      "(str.at name 1 2))",
      "(str.at name 1)",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(str.at name 1)",
      "\"(str.to.int (str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "(str.at name 1))",
      "\"(str.at name 1)\"",
      "\"(str.at name 0)\"",
      "\"(str.at name 1)\"",
      "(str.at name 1))",
      "\"(str.at name 1)\"",
      "(str.at name 1))",
      "\"(str.at name 1)\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.to.int (str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.to.int (str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 0)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 0)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.to.int (str.substr name 1 (- (str.indexof name \\\" \\\") 1)))\")",
      "(define-fun f (name String) String \"(str.at name 0)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.to.int (str.substr name 1 (str.indexof name \\\" \\\")))\")",
      "(define-fun f (name String) String \"(str.to.int (str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.to.int (str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 0)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 0)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.to.int (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.to.int (str.substr name 1 3)))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.to.int (str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.to.int (str.substr name 1 (- (str.indexof name \" \") 1))))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.to.int (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.to.int (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 0))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.to.int (str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 0)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")"
    ],
    "time_diff_ms": 1947.288,
    "constants": [
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        "(str.to.int (str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.to.int (str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 0)"
      ],
      [
        1
      ],
      [
        "(str.at name 0)"
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        "(str.to.int (str.substr name 1 (- (str.indexof name \" \") 1)))"
      ],
      [
        "(str.at name 0)"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.to.int (str.substr name 1 (str.indexof name \" \")))"
      ],
      [
        "(str.to.int (str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.to.int (str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.at name 0)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        1
      ],
      [
        "(str.at name 0)"
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        2
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.to.int (str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        1,
        " "
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        0
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.to.int (str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 0)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      "(str.to.int (str.substr name 1 3))",
      " ",
      "(str.substr name 1 3))",
      "(str.to.int (str.substr name 1 (- (str.indexof name \" \") 1)))",
      "(str.at name 0)",
      "(str.at name 1)",
      "(str.to.int (str.substr name 1 (str.indexof name \" \")))"
    ]
  },
  "phone-7-long.sl": {
    "completions": [
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.at name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.at name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.at name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.at name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f ((name String)) String (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n    (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.at name 6))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 7 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.at name 6))",
      "(define-fun f (name String) String (str.substr name 6 3))"
    ],
    "time_diff_ms": 2328.047,
    "constants": [
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        8,
        3
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        6
      ],
      [
        3,
        6
      ]
    ],
    "all_constants": [
      3,
      5,
      6,
      7,
      8,
      "(str.substr name 6 3))"
    ]
  },
  "univ_6-long.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\")\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"Berkeley\" \"CA\") \"Cambridge\" \"MA\") \"Houston\" \"TX\") \"New Haven\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))))",
      "\"(str.substr col2 (str.indexof col2 \\\",\\\") 2)\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\" ) \\\",\\\" \\\",\\\") 1 (str.len (str.replace (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\" ) \\\",\\\" \\\",\\\")))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"California\" \"CA\") \"USA\" \"USA\"))",
      "\"(str.replace (str.replace col2 col1 \\\"USA\\\") \\\", USA\\\" \\\"\\\")\"",
      "\"(ite (str.contains col1 \\\",\\\") (str.substr col1 (+ (str.indexof col1 \\\",\\\") 2) (str.len col1)) (str.++ col2 \\\", USA\\\"))\"",
      "\"(ite (str.contains col2 \\\",\\\") (str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) (+ 2 (str.indexof col2 \\\",\\\" 0)))) col2)\"",
      "\"(str.replace (str.replace col2 col1 \\\"USA\\\") col1 \\\"\\\")\"",
      "\"(str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\", USA\\\")\"",
      "\"(str.substr (str.replace col2 col1 \\\"\\\") 0 (- (str.indexof col2 col1 0) 2))\"",
      "\"(str.substr col2 (str.indexof col2 col1 0) (str.len col2))\"",
      "(str.substr (str.replace col2 \"New York\" \"NY\") 0 (str.indexof col2 \",\"))",
      "\"(str.substr (str.replace (str.replace col2 col1 \\\"\\\") col1 col2) 0 (- (str.len col2) 4))\"",
      "\"(str.replace (str.replace col2 col1 \\\" \\\") col1 \\\", USA\\\")\"",
      "\"(str.substr col2 (str.indexof col2 \\\",\\\" 0) (str.len col2))\"",
      "\"(str.replace (str.replace col2 col1 \\\"USA\\\") col1 \\\"\\\")\"",
      "(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 0 (- (str.indexof (str.replace col2 \", USA\" \"\") \",\") 1) \"\") 0 (- (str.indexof col2 \",\") 1))",
      "\"(str.substr (str.replace (str.++ col1 col2) col1 col2) 0 (- (str.len col2) 1))\"",
      "\"(str.replace (str.replace col2 col1 \\\"USA\\\") col1 \\\"\\\")\"",
      "\"(str.substr (str.substr col2 0 (- (str.len col2) 4)) 0 (- (str.len (str.substr col2 0 (- (str.len col2) 4))) 4))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\")\"",
      "\"(str.substr col2 (- (str.indexof col2 \\\",\\\") 2) (- (str.len col2) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 2 2) \", \" (str.substr col1 (- (str.len col1) 3) 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (str.indexof col2 \",\"))\n    \", \"\n    (str.substr col2 (+ 2 (str.indexof col2 \",\")) (str.len col2))\n    \", USA\"\n  )\n)",
      "(define-fun f (col1 String col2 String) String\n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)\n        (str.replace (str.replace col1 \"New York\" \"NY\") \"New York\" \"NY\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 2))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"California\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0  (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.replace col2 \", \" \"\") \", USA\" \"\") 2 (str.len (str.replace (str.replace col2 \", \" \"\") \", USA\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.++ col1 \", \" col2 \", USA\") 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")) 4))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col2 \" \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") 0 5))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 1 100) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace col2 \"New York\" \"NY\") \"Santa Barbara\" \"CA\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "\"(str.substr (str.++ col2 \\\", USA\\\") 2 (- (str.len col2) 2))\"",
      "(define-fun f (col1 String col2 String) String\n  (str.++ \n    (str.substr col2 0 (str.indexof col2 \",\" 0))\n    \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \", USA\" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of\" \"\") \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"California\" \"CA\") \"Illinois\" \"IL\") \"Connecticut\" \"CT\") 0 2))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.len (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\")) 5)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.len col2) 4)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\") \\\",\\\" \\\"\\\") 1 (str.len (str.replace (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\")))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") col2 \"PA\" \"USA\") \"New York\" \"NY\") \"CA\" \"USA\") \"AR\" \"USA\") \"AZ\" \"USA\") \"AK\" \"USA\") \"CA\" \"USA\") \"CO\" \"USA\") \"CT\" \"USA\") \"DE\" \"USA\") \"FL\" \"USA\") \"GA\" \"USA\") \"HI\" \"USA\") \"ID\" \"USA\") \"IL\" \"USA\") \"IN\" \"USA\") \"IA\" \"USA\") \"KS\" \"USA\") \"KY\" \"USA\") \"LA\" \"USA\") \"ME\" \"USA\") \"MD\" \"USA\") \"MA\" \"USA\") \"MI\" \"USA\") \"MN\" \"USA\") \"MS\" \"USA\") \"MO\" \"USA\") \"MT\" \"USA\") \"NE\" \"USA\") \"NV\" \"USA\") \"NH\" \"USA\") \"NJ\" \"USA\") \"NM\" \"USA\") \"NY\" \"USA\") \"NC\" \"USA\") \"ND\" \"USA\") \"OH\" \"USA\") \"OK\" \"USA\") \"OR\" \"USA\") \"PA\" \"USA\") \"RI\" \"USA\") \"SC\" \"USA\") \"SD\" \"USA\") \"TN\" \"USA\") \"TX\" \"USA\") \"UT\" \"USA\") \"VT\" \"USA\") \"VA\" \"USA\") \"WA\" \"USA\") \"WV\" \"USA\") \"WI\" \"USA\")) 0 (- (str.len col2) 4)))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"New Haven\" \"New Haven\") 0 (- (str.len col1) 1)))",
      "\"(str.replace (str.replace col2 col1 \\\"\\\" ) \\\", USA\\\" \\\"\\\")\"",
      "(define-fun f (col1 String col2 String) String\n  (str.substr (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") 2 (- (str.len (str.replace (str.replace col2 col1 \"\") \", USA\" \"\")) 2)))",
      "\"(str.substr (str.++ col2 \\\", USA\\\") 2 100)\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.indexof col2 \",\") 1)))",
      "\"(str.++ (str.substr col2 0 (- (str.len col2) 4)) (str.substr col2 (- (str.len col2) 3) 2) \\\", USA\\\")\"",
      "\"(str.++ (str.substr col2 0 (- (str.len col2) 1)) (str.substr col1 (- (str.len col1) 4) 2) \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") \"USA\" \"\") 0 (- (str.indexof (str.replace (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") \"USA\" \"\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "\"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\"",
      "\"(str.substr (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") 2 (- (str.len (str.replace (str.replace col2 col1 \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\")) 2))\"",
      "\"(str.substr (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 2 (- (str.len (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\")) 2))\"",
      "\"(str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.len col2) 4)))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String\n  (str.replace\n    (str.replace\n      (str.replace col2 \"New York\" \"NY\")\n      \"New York\" \"NY\")\n    \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.++ col1 \", \" col2 \", USA\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace col2 col1 \"\") \"USA\" \"\") 1 (str.len (str.replace (str.replace col2 col1 \"\") \"USA\" \"\"))))",
      "(define-fun f (col1 String col2 String) String\n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.++ col1 \", \" col2 \", \" \"USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", \" \"USA\") \"New York\" \"NY\")) 5))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.++ col1 \", \" col2 \", USA\") 2 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.++ col2 \", USA\") 2 (str.len col2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia, PA, USA\") \"UCLA\" \"Los Angeles, CA, USA\") \"Cornell University\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia, PA, USA\") \"University of Maryland College Park\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor, MI, USA\") \"UC Berkeley\" \"Berkeley, CA, USA\") \"MIT\" \"Cambridge, MA, USA\") \"Rice University\" \"Houston, TX, USA\") \"Yale University\" \"New Haven, CT, USA\") \"Columbia University\" \"New York, NY, USA\") \"NYU\" \"New York, NY, USA\") \"UC Berkeley\" \"Berkeley, CA, USA\") \"UIUC\" \"Urbana, IL, USA\") \"Temple University\" \"Philadelphia, PA, USA\") \"Harvard University\" \"Cambridge, MA, USA\") \"University of Connecticut\" \"Storrs, CT, USA\") \"Drexel University\" \"Philadelphia, PA, USA\") \"New Haven University\" \"New Haven, CT, USA\") \"University of California, Santa Barbara\" \"Santa Barbara, CA, USA\") 0 (- (str.len col1) 5)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\")\")",
      null,
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (str.indexof col2 \\\",\\\") 2)\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\" ) \\\",\\\" \\\",\\\") 1 (str.len (str.replace (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\" ) \\\",\\\" \\\",\\\")))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"California\" \"CA\") \"USA\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col2 col1 \\\"USA\\\") \\\", USA\\\" \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(ite (str.contains col1 \\\",\\\") (str.substr col1 (+ (str.indexof col1 \\\",\\\") 2) (str.len col1)) (str.++ col2 \\\", USA\\\"))\")",
      "(define-fun f (col1 String col2 String) String \"(ite (str.contains col2 \\\",\\\") (str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) (+ 2 (str.indexof col2 \\\",\\\" 0)))) col2)\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col2 col1 \\\"USA\\\") col1 \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace col2 col1 \\\"\\\") 0 (- (str.indexof col2 col1 0) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (str.indexof col2 col1 0) (str.len col2))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace col2 \"New York\" \"NY\") 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace col2 col1 \\\"\\\") col1 col2) 0 (- (str.len col2) 4))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col2 col1 \\\" \\\") col1 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (str.indexof col2 \\\",\\\" 0) (str.len col2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col2 col1 \\\"USA\\\") col1 \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 0 (- (str.indexof (str.replace col2 \", USA\" \"\") \",\") 1) \"\") 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 col2) col1 col2) 0 (- (str.len col2) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col2 col1 \\\"USA\\\") col1 \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.substr col2 0 (- (str.len col2) 4)) 0 (- (str.len (str.substr col2 0 (- (str.len col2) 4))) 4))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (- (str.indexof col2 \\\",\\\") 2) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 2) \", \" (str.substr col1 (- (str.len col1) 3) 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ 2 (str.indexof col2 \",\")) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1) (str.replace (str.replace col1 \"New York\" \"NY\") \"New York\" \"NY\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"California\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace col2 \", \" \"\") \", USA\" \"\") 2 (str.len (str.replace (str.replace col2 \", \" \"\") \", USA\"))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.++ col1 \", \" col2 \", USA\") 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")) 4)))",
      "(define-fun f (col1 String col2 String) String (str.replace col2 \" \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") 0 5))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 1 100) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace col2 \"New York\" \"NY\") \"Santa Barbara\" \"CA\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.++ col2 \\\", USA\\\") 2 (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \", USA\" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of\" \"\") \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"California\" \"CA\") \"Illinois\" \"IL\") \"Connecticut\" \"CT\") 0 2))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.len (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\")) 5)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.len col2) 4)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\") \\\",\\\" \\\"\\\") 1 (str.len (str.replace (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\")))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") col2 \"PA\" \"USA\") \"New York\" \"NY\") \"CA\" \"USA\") \"AR\" \"USA\") \"AZ\" \"USA\") \"AK\" \"USA\") \"CA\" \"USA\") \"CO\" \"USA\") \"CT\" \"USA\") \"DE\" \"USA\") \"FL\" \"USA\") \"GA\" \"USA\") \"HI\" \"USA\") \"ID\" \"USA\") \"IL\" \"USA\") \"IN\" \"USA\") \"IA\" \"USA\") \"KS\" \"USA\") \"KY\" \"USA\") \"LA\" \"USA\") \"ME\" \"USA\") \"MD\" \"USA\") \"MA\" \"USA\") \"MI\" \"USA\") \"MN\" \"USA\") \"MS\" \"USA\") \"MO\" \"USA\") \"MT\" \"USA\") \"NE\" \"USA\") \"NV\" \"USA\") \"NH\" \"USA\") \"NJ\" \"USA\") \"NM\" \"USA\") \"NY\" \"USA\") \"NC\" \"USA\") \"ND\" \"USA\") \"OH\" \"USA\") \"OK\" \"USA\") \"OR\" \"USA\") \"PA\" \"USA\") \"RI\" \"USA\") \"SC\" \"USA\") \"SD\" \"USA\") \"TN\" \"USA\") \"TX\" \"USA\") \"UT\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"New Haven\" \"New Haven\") 0 (- (str.len col1) 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col2 col1 \\\"\\\" ) \\\", USA\\\" \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") 2 (- (str.len (str.replace (str.replace col2 col1 \"\") \", USA\" \"\")) 2)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.++ col2 \\\", USA\\\") 2 100)\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.len col2) 4)) (str.substr col2 (- (str.len col2) 3) 2) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.len col2) 1)) (str.substr col1 (- (str.len col1) 4) 2) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") \"USA\" \"\") 0 (- (str.indexof (str.replace (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") \"USA\" \"\") 1))))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") 2 (- (str.len (str.replace (str.replace col2 col1 \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"\\\")) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 2 (- (str.len (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\")) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.len col2) 4)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.++ col1 \", \" col2 \", USA\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace col2 col1 \"\") \"USA\" \"\") 1 (str.len (str.replace (str.replace col2 col1 \"\") \"USA\" \"\"))))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", \" \"USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", \" \"USA\") \"New York\" \"NY\")) 5)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.++ col1 \", \" col2 \", USA\") 2 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.++ col2 \", USA\") 2 (str.len col2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia, PA, USA\") \"UCLA\" \"Los Angeles, CA, USA\") \"Cornell University\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia, PA, USA\") \"University of Maryland College Park\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor, MI, USA\") \"UC Berkeley\" \"Berkeley, CA, USA\") \"MIT\" \"Cambridge, MA, USA\") \"Rice University\" \"Houston, TX, USA\") \"Yale University\" \"New Haven, CT, USA\") \"Columbia University\" \"New York, NY, USA\") \"NYU\" \"New York, NY, USA\") \"UC Berkeley\" \"Berkeley, CA, USA\") \"UIUC\" \"Urbana, IL, USA\") \"Temple University\" \"Philadelphia, PA, USA\") \"Harvard University\" \"Cambridge, MA, USA\") \"University of Connecticut\" \"Storrs, CT, USA\") \"Drexel University\" \"Philadelphia, PA, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))"
    ],
    "time_diff_ms": 1422.171,
    "constants": [
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \", USA\" \"\")"
      ],
      null,
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.substr col2 (str.indexof col2 \",\") 2)"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\" ) \",\" \",\") 1 (str.len (str.replace (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\" ) \",\" \",\")))"
      ],
      [
        "USA",
        "California",
        "NY",
        "CA",
        "New York"
      ],
      [
        "(str.replace (str.replace col2 col1 \"USA\") \", USA\" \"\")"
      ],
      [
        "(ite (str.contains col1 \",\") (str.substr col1 (+ (str.indexof col1 \",\") 2) (str.len col1)) (str.++ col2 \", USA\"))"
      ],
      [
        "(ite (str.contains col2 \",\") (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) (+ 2 (str.indexof col2 \",\" 0)))) col2)"
      ],
      [
        "(str.replace (str.replace col2 col1 \"USA\") col1 \"\")"
      ],
      [
        "(str.replace (str.replace col2 col1 \"\") \", USA\" \", USA\")"
      ],
      [
        "(str.substr (str.replace col2 col1 \"\") 0 (- (str.indexof col2 col1 0) 2))"
      ],
      [
        "(str.substr col2 (str.indexof col2 col1 0) (str.len col2))"
      ],
      [
        "NY",
        0,
        "New York",
        ","
      ],
      [
        "(str.substr (str.replace (str.replace col2 col1 \"\") col1 col2) 0 (- (str.len col2) 4))"
      ],
      [
        "(str.replace (str.replace col2 col1 \" \") col1 \", USA\")"
      ],
      [
        "(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2))"
      ],
      [
        "(str.replace (str.replace col2 col1 \"USA\") col1 \"\")"
      ],
      [
        0,
        1,
        "",
        ", USA",
        ","
      ],
      [
        "(str.substr (str.replace (str.++ col1 col2) col1 col2) 0 (- (str.len col2) 1))"
      ],
      [
        "(str.replace (str.replace col2 col1 \"USA\") col1 \"\")"
      ],
      [
        "(str.substr (str.substr col2 0 (- (str.len col2) 4)) 0 (- (str.len (str.substr col2 0 (- (str.len col2) 4))) 4))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \",\" \", USA\")"
      ],
      [
        "(str.substr col2 (- (str.indexof col2 \",\") 2) (- (str.len col2) 2))"
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "NY",
        "New Haven",
        "NH",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        ","
      ],
      [
        "NY",
        "",
        "New York",
        "USA"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        3,
        ", USA",
        ", "
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ",",
        "NY",
        "New York"
      ],
      [
        "NY",
        "",
        "New York",
        "USA"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "NY",
        "New York",
        "California",
        "CA"
      ],
      [
        0,
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        ","
      ],
      [],
      [
        "",
        2,
        ", USA",
        ", "
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        100,
        ", USA",
        ", "
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        0,
        4,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "",
        " "
      ],
      [
        "",
        0,
        5,
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ", USA",
        ","
      ],
      [
        1,
        100,
        ", USA"
      ],
      [
        0,
        1,
        ",",
        "NY",
        "CA",
        "Santa Barbara",
        "New York"
      ],
      [
        "(str.substr (str.++ col2 \", USA\") 2 (- (str.len col2) 2))"
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        "",
        ", USA",
        ", "
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "",
        "University of",
        "NY",
        "New Haven",
        "New York"
      ],
      [
        0,
        2,
        "Connecticut",
        "New York",
        "IL",
        "California",
        "NY",
        "CT",
        "CA",
        "Illinois"
      ],
      [
        "",
        ", "
      ],
      [
        "",
        0,
        5,
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        4,
        ", USA"
      ],
      [
        "NY",
        "",
        "New York",
        "USA"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\") \",\" \"\") 1 (str.len (str.replace (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\")))"
      ],
      [
        "OK",
        "HI",
        "MD",
        "New Haven",
        "Ann Arbor",
        "MN",
        "NYU",
        "KS",
        "USA",
        "ID",
        "University of California, Santa Barbara",
        "Los Angeles",
        "Berkeley",
        "MS",
        "NJ",
        "Harvard University",
        "LA",
        "MIT",
        "OH",
        "University of Connecticut",
        "MT",
        "University of Pennsylvania",
        "OR",
        "IN",
        "IL",
        "GA",
        "UT",
        "TX",
        "RI",
        "NM",
        "Urbana",
        "CT",
        "Temple University",
        "NV",
        "MI",
        "Philadelphia",
        "Rice University",
        "Cambridge",
        "ME",
        "NC",
        "University of Michigan",
        "Ithaca",
        "DE",
        "AZ",
        "NE",
        "CO",
        "ND",
        "University of Maryland College Park",
        "UCLA",
        "AK",
        "KY",
        "Houston",
        "TN",
        "New York",
        "MO",
        "NH",
        "UIUC",
        "Penn",
        "Yale University",
        "PA",
        "MA",
        "Columbia University",
        "AR",
        "Cornell University",
        "New Haven University",
        "Phialdelphia",
        "SC",
        "Storrs",
        "College Park",
        "SD",
        "IA",
        "NY",
        "Drexel University",
        "CA",
        "Santa Barbara",
        "UC Berkeley",
        "FL"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        "NY",
        "New Haven",
        "New York"
      ],
      [
        "(str.replace (str.replace col2 col1 \"\" ) \", USA\" \"\")"
      ],
      [
        "",
        2,
        ", USA"
      ],
      [
        "(str.substr (str.++ col2 \", USA\") 2 100)"
      ],
      [
        "",
        0,
        1,
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.len col2) 4)) (str.substr col2 (- (str.len col2) 3) 2) \", USA\")"
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.len col2) 1)) (str.substr col1 (- (str.len col1) 4) 2) \", USA\")"
      ],
      [
        "",
        0,
        1,
        ", ",
        "USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))"
      ],
      [
        "(str.substr (str.replace (str.replace col2 col1 \"\") \",\" \"\") 2 (- (str.len (str.replace (str.replace col2 col1 \",\" \"\") \"USA\" \"\")) 2))"
      ],
      [
        "(str.substr (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") 2 (- (str.len (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\")) 2))"
      ],
      [
        "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2))"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "NY",
        "New Haven",
        "New York",
        "USA"
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        0,
        4
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "NY",
        "New York"
      ],
      [
        0,
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", "
      ],
      [
        0,
        ","
      ],
      [
        "",
        1,
        "USA"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        5,
        ", ",
        "USA",
        "NY",
        "New York"
      ],
      [
        0,
        ","
      ],
      [
        2,
        ", USA",
        ", "
      ],
      [
        2,
        ", USA"
      ],
      [
        "Penn",
        "Ann Arbor, MI, USA",
        "Yale University",
        "University of Maryland College Park",
        "UIUC",
        "UCLA",
        "Columbia University",
        "NYU",
        "Phialdelphia, PA, USA",
        "Cornell University",
        "University of Pennsylvania",
        "Temple University",
        "Cambridge, MA, USA",
        "Berkeley, CA, USA",
        "Rice University",
        "New York, NY, USA",
        "Storrs, CT, USA",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "Urbana, IL, USA",
        "University of Michigan",
        "Harvard University",
        "Houston, TX, USA",
        "Los Angeles, CA, USA",
        "Drexel University",
        "University of Connecticut",
        "New Haven, CT, USA",
        "UC Berkeley",
        "MIT"
      ],
      [
        2,
        ", "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      "(str.substr (str.substr col2 0 (- (str.len col2) 4)) 0 (- (str.len (str.substr col2 0 (- (str.len col2) 4))) 4))",
      3,
      4,
      5,
      "OK",
      "HI",
      "(str.++ (str.substr col2 0 (- (str.len col2) 1)) (str.substr col1 (- (str.len col1) 4) 2) \", USA\")",
      "MD",
      "New Haven",
      "Ann Arbor",
      "(str.replace (str.replace col2 col1 \"\" ) \", USA\" \"\")",
      "MN",
      "NYU",
      "KS",
      "USA",
      "ID",
      "University of California, Santa Barbara",
      "Los Angeles",
      "Berkeley",
      "MS",
      ", USA",
      "NJ",
      "Storrs, CT, USA",
      "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))",
      "(str.substr (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") 2 (- (str.len (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\")) 2))",
      "College Park, MD, USA",
      100,
      "(str.substr (str.replace (str.replace col2 col1 \"\") col1 col2) 0 (- (str.len col2) 4))",
      "(str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \",\" \", USA\")",
      "LA",
      "Harvard University",
      "Houston, TX, USA",
      "OH",
      "Los Angeles, CA, USA",
      "University of Connecticut",
      "MT",
      "University of Pennsylvania",
      "OR",
      "IN",
      "IL",
      "GA",
      "UT",
      "(str.substr (str.++ col2 \", USA\") 2 100)",
      "TX",
      "RI",
      "FL",
      "NM",
      "Urbana",
      "(ite (str.contains col1 \",\") (str.substr col1 (+ (str.indexof col1 \",\") 2) (str.len col1)) (str.++ col2 \", USA\"))",
      "(str.replace (str.replace col2 col1 \"USA\") \", USA\" \"\")",
      "CT",
      "(str.substr (str.replace (str.++ col1 col2) col1 col2) 0 (- (str.len col2) 1))",
      "Temple University",
      "Cambridge, MA, USA",
      "NV",
      "MI",
      "Philadelphia",
      "(str.replace (str.replace col2 col1 \"USA\") col1 \"\")",
      "Rice University",
      "New Haven, CT, USA",
      "Philadelphia, PA, USA",
      "Cambridge",
      "ME",
      "Urbana, IL, USA",
      "(str.substr (str.replace col2 col1 \"\") 0 (- (str.indexof col2 col1 0) 2))",
      "(str.++ (str.substr col2 0 (- (str.len col2) 4)) (str.substr col2 (- (str.len col2) 3) 2) \", USA\")",
      "NC",
      "University of Michigan",
      "Ithaca",
      "DE",
      "AZ",
      "University of ",
      "NE",
      "CO",
      "Illinois",
      "ND",
      " ",
      "Ann Arbor, MI, USA",
      "(str.replace (str.replace col2 col1 \" \") col1 \", USA\")",
      "University of Maryland College Park",
      "UCLA",
      "AK",
      "KY",
      "(str.substr (str.replace (str.replace col2 col1 \"\") \",\" \"\") 2 (- (str.len (str.replace (str.replace col2 col1 \",\" \"\") \"USA\" \"\")) 2))",
      "(str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \", USA\" \"\")",
      ", ",
      "Phialdelphia, PA, USA",
      ",",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "Houston",
      "TN",
      "(ite (str.contains col2 \",\") (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) (+ 2 (str.indexof col2 \",\" 0)))) col2)",
      "New York",
      "(str.replace (str.replace col2 col1 \"\") \", USA\" \", USA\")",
      "(str.substr (str.replace (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\" ) \",\" \",\") 1 (str.len (str.replace (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\" ) \",\" \",\")))",
      "California",
      "Ithaca, NY, USA",
      "(str.substr col2 (str.indexof col2 col1 0) (str.len col2))",
      "MO",
      "Connecticut",
      "NH",
      "(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2))",
      "UIUC",
      "Penn",
      "Yale University",
      "(str.substr col2 (str.indexof col2 \",\") 2)",
      "PA",
      "MA",
      "Columbia University",
      "AR",
      "University of",
      "(str.substr col2 (- (str.indexof col2 \",\") 2) (- (str.len col2) 2))",
      "Cornell University",
      "New Haven University",
      "Berkeley, CA, USA",
      "Phialdelphia",
      "New York, NY, USA",
      "SC",
      "Storrs",
      "(str.substr (str.++ col2 \", USA\") 2 (- (str.len col2) 2))",
      "College Park",
      "SD",
      "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2))",
      "IA",
      "(str.substr (str.replace (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\") \",\" \"\") 1 (str.len (str.replace (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\")))",
      "NY",
      "Drexel University",
      "CA",
      "Santa Barbara",
      "UC Berkeley",
      "MIT"
    ]
  },
  "33619752.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))\n)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))"
    ],
    "time_diff_ms": 1703.242,
    "constants": [
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      " ",
      " Inc"
    ]
  },
  "extract-text-between-parentheses.sl": {
    "completions": [
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\"))))",
      "(str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"<\")) (- (str.indexof _arg_0 \">\" (str.indexof _arg_0 \"<\")) (+ 6 (str.indexof _arg_0 \"<\"))))))",
      "(str.to.int (str.substr _arg_0 7 2)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.at _arg_0 (- (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (+ (str.indexof _arg_0 \">\") -1)))",
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.at _arg_0 7))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\") 1)))",
      "(str.to.int (str.at _arg_0 (- (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7)))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.at _arg_0 (- (str.indexof _arg_0 \"<\" 0) 1) (+ 1 (str.indexof _arg_0 \">\" 0))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6)))",
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6)))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6)))",
      "(str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7)))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\") 6)))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (+ (str.indexof _arg_0 \">\" 0) -1)))",
      "(str.to.int (str.substr _arg_0 6 2))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1)))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 7 (- (str.indexof _arg_0 \">\" 0) 7)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 2))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.substr _arg_0 6 2)))",
      "(str.to.int (str.substr _arg_0 7 2))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7)))",
      "(str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"<\")) (- (str.indexof _arg_0 \">\" (str.indexof _arg_0 \"<\")) (+ 6 (str.indexof _arg_0 \"<\"))))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 7 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (- (str.indexof _arg_0 \"<\" 0) 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (+ (str.indexof _arg_0 \">\") -1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 7)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (- (str.indexof _arg_0 \"<\" 0) 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (- (str.indexof _arg_0 \"<\" 0) 1) (+ 1 (str.indexof _arg_0 \">\" 0)))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\") 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (+ (str.indexof _arg_0 \">\" 0) -1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.at _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 7 (- (str.indexof _arg_0 \">\" 0) 7))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 7 2)))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.indexof _arg_0 \">\" 0) 6))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 6 (- (str.len _arg_0) 7))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))"
    ],
    "time_diff_ms": 2069.583,
    "constants": [
      [
        0,
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        6,
        7
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        2,
        6
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        ">",
        "<",
        6
      ],
      [
        2,
        7
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        6
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">",
        -1
      ],
      [
        0,
        1,
        "<"
      ],
      [
        7
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<"
      ],
      [
        0,
        1,
        "<"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        6,
        7
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        6
      ],
      [
        0,
        1,
        "<"
      ],
      [
        0,
        ">",
        6
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        6
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        6
      ],
      [
        6,
        7
      ],
      [
        2,
        6
      ],
      [
        ">",
        6
      ],
      [
        2,
        6
      ],
      [
        0,
        1,
        "<",
        ">",
        -1
      ],
      [
        2,
        6
      ],
      [
        2,
        6
      ],
      [
        0,
        ">",
        6
      ],
      [
        0,
        ">",
        6
      ],
      [
        0,
        1,
        "<"
      ],
      [
        0,
        ">",
        6
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        2,
        6
      ],
      [
        2,
        6
      ],
      [
        2,
        6
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        7
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        ">",
        "<"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        0,
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        2,
        6
      ],
      [
        2,
        6
      ],
      [
        2,
        6
      ],
      [
        2,
        7
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        6,
        7
      ],
      [
        0,
        ">",
        6
      ],
      [
        6,
        7
      ],
      [
        1,
        "<",
        ">"
      ],
      [
        1,
        "<",
        ">"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "<",
      6,
      7,
      ">",
      -1
    ]
  },
  "remove-leading-and-trailing-spaces-from-text.sl": {
    "completions": [
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.trim _arg_0))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "\"(str.++ (ite (str.prefixof \\\" \\\" _arg_0) \\\"\\\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") 1 (str.len _arg_0)))\"",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))) )"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.trim _arg_0))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String \"(str.++ (ite (str.prefixof \\\" \\\" _arg_0) \\\"\\\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") 1 (str.len _arg_0)))\")",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))"
    ],
    "time_diff_ms": 2029.615,
    "constants": [
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))"
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      " ",
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))"
    ]
  },
  "strip-non-numeric-characters.sl": {
    "completions": [
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\"\"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f ((s String)) String\n  (str.replace s \" \" \"\"))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f ((s String)) String\n  (str.to.int (str.replace s \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \" \" \"\"))",
      "(str.to.int (str.replace _arg_0 \" \" \"\")))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.replace s \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace s \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \" \" \"\")))"
    ],
    "time_diff_ms": 1187.68,
    "constants": [
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        "%"
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ]
    ],
    "all_constants": [
      "",
      "%",
      " "
    ]
  },
  "get-middle-name-from-full-name.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" 0) 1)) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (- (str.indexof _arg_0 \" \" 2) (+ (str.indexof _arg_0 \" \" 1) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" 0) 1)) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (- (str.indexof _arg_0 \" \" 2) (+ (str.indexof _arg_0 \" \" 1) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))"
    ],
    "time_diff_ms": 1221.969,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      2
    ]
  },
  "initials_small.sl": {
    "completions": [
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\")",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.substr name 1 (str.indexof name \" \" 0)) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at name (+ (str.indexof name \" \" 0) 1))))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.++ \n      (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.at name 1)\n      0\n      1\n    )\n  )\n)",
      "(define-fun f (name String) String\n    (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n          \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.at name (+ (str.indexof name \" \" 0) 1) 1) \n      0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n           \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1) \n    \".\"\n    (str.substr (str.replace name \" \" \".\") (+ (str.indexof name \" \" 0) 1) 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.++\n      (str.substr name \n        (+ (str.indexof name \" \" 0) 1)\n        1)\n      \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n          \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.replace \n        (str.substr name 1 (str.indexof name \" \" 0)) \" \" \".\"\n      ) 0 2\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n           (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ (str.at name (+ (str.indexof name \" \" 0) 1) 0) \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \n    \".\"\n    (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace (str.replace name \" \" \".\") \" \" \".\") 0 1) \".\"\n    (str.substr (str.at (str.replace (str.replace name \" \" \".\") \" \" .\") 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (+ (str.indexof name \" \" 0) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n          \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr \n      (str.at name 1)\n      0\n      1\n    )\n    \".\"\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n          \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.replace name \" \" \"\") 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.replace name \" \" \".\") 1 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0)\n    \".\"\n    (str.at \n      (str.substr name \n        (+ (str.indexof name \" \" 0) 1) \n        2) \n      0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.at name 0) \".\"\n    (str.at (str.substr name (str.indexof name \" \" 0) 2) 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.at \n        (str.replace \n          name \n          \" \" \n          \".\") \n        2) \n      0 \n      1)\n  ))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.at name (+ (str.indexof name \" \" 0) 1) 0) \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.at name 0) 0 1)\n    \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at name (+ (str.indexof name \" \" 0) 1)) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.at \n        (str.replace name \" \" \".\") \n        1) \n      0 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at (str.replace name \" \" \".\") 0) \".\"\n           (str.at (str.replace name \" \" \".\") (+ (str.indexof name \" \") 1))))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.substr (str.replace name \" \" \".\") 1 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 1) 0) \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr (str.replace name \" \" \".\") 0 1)\n    \".\"\n    (str.substr (str.replace name \" \" \".\") (+ (str.indexof name \" \") 1) 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at (str.to.str (str.indexof name \" \" 0)) 0) \".\" (str.at name 0) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr name (+ (str.indexof name \" \" 0) 1) 1)\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \".\"\n          (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name 1 (str.indexof name \" \" 0)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at name (+ (str.indexof name \" \" 0) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.replace name \" \" \".\") (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace (str.substr name 1 (str.indexof name \" \" 0)) \" \" \".\") 0 2)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr name (+ (str.indexof name \" \" 0) 1) 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.at name (+ (str.indexof name \" \" 0) 1) 0) \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      null,
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (+ (str.indexof name \" \" 0) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.replace name \" \" \"\") 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \".\") 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 2) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at (str.replace name \" \" \".\") 2) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.at name (+ (str.indexof name \" \" 0) 1) 0) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.at name 0) 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at name (+ (str.indexof name \" \" 0) 1)) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at (str.replace name \" \" \".\") 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 2) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at (str.replace name \" \" \".\") 0) \".\" (str.at (str.replace name \" \" \".\") (+ (str.indexof name \" \") 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \".\") 1 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (str.indexof name \" \" 0) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr (str.replace name \" \" \".\") 0 1) \".\" (str.substr (str.replace name \" \" \".\") (+ (str.indexof name \" \") 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at (str.to.str (str.indexof name \" \" 0)) 0) \".\" (str.at name 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))"
    ],
    "time_diff_ms": 2343.051,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      null,
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      " ",
      "."
    ]
  },
  "stackoverflow5.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f ((s String)) String s)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f ((s String)) String\n  (ite (str.contains s \",\")\n       (str.substr s 0 (str.indexof s \",\" 0))\n       s))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f ((x String)) String x)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(define-fun f ((_arg_0 String)) String (_arg_0))",
      "(define-fun f ((_arg_0 String)) String\n  (ite (= (str.len _arg_0) 0)\n       \"\"\n       (str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))\n  )\n)",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f ((_arg_0 String)) String (_arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String s)",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (ite (str.contains s \",\") (str.substr s 0 (str.indexof s \",\" 0)) s))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String x)",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (_arg_0))",
      "(define-fun f (_arg_0 String) String (ite (= (str.len _arg_0) 0) \"\" (str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (_arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))"
    ],
    "time_diff_ms": 2826.0389999999998,
    "constants": [
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        ","
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [],
      [
        0,
        "",
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ]
    ],
    "all_constants": [
      0,
      "=",
      1,
      "",
      ","
    ]
  },
  "extract-word-that-begins-with-specific-character.sl": {
    "completions": [
      "(str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))",
      "(str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.len \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))",
      "(str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.len _arg_0)) \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" _\" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (+ (str.indexof _arg_0 \" _\" 0) 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))) ",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" _\") 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\")) (str.indexof _arg_0 \" _\")))",
      "(str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 0) (str.len \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" _\" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (+ (str.indexof _arg_0 \" _\" 0) 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")) (str.indexof _arg_0 \"_\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" _\" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (+ (str.indexof _arg_0 \" _\" 0) 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")) - (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" _\" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.at _arg_0 (+ 1 (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ 1 (str.len \" _\")))",
      "(str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (_arg_0 (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\" 0) 1) (str.len _arg_0)) \"_\" 0) \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" _\" 0) (str.len \" _\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" _\" 0) (str.len \" _\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.len \"_username\"))",
      "(str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.at _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.len \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" _\" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (+ (str.indexof _arg_0 \" _\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" _\") 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\")) (str.indexof _arg_0 \" _\"))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 0) (str.len \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" _\" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (+ (str.indexof _arg_0 \" _\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")) (str.indexof _arg_0 \"_\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" _\" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (+ (str.indexof _arg_0 \" _\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\")) - (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" _\" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (+ 1 (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ 1 (str.len \" _\"))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (_arg_0 (str.substr _arg_0 (+ (str.indexof _arg_0 \"_\" 0) 1) (str.len _arg_0)) \"_\" 0) \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" _\" 0) (str.len \" _\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" _\" 0) (str.len \" _\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.len \"_username\")))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (+ 1 (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (+ (str.indexof _arg_0 \"_\" 1) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0)))"
    ],
    "time_diff_ms": 727.703,
    "constants": [
      [
        1,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        0,
        1,
        " ",
        " _"
      ],
      [
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        " ",
        " _"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        " _"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        " ",
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        1,
        " ",
        " _"
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        " _"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " _"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        1,
        " _"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " _"
      ],
      [
        0,
        " _"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        "_username",
        " _"
      ],
      [
        1,
        " "
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        1,
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ]
    ],
    "all_constants": [
      0,
      1,
      " _",
      "_username",
      " ",
      "_"
    ]
  },
  "35744094.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"//\" 0)) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//www.\") 7) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"//www.\") 7)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\") (+ (str.indexof _arg_0 \"//\" 2) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" (+ (str.len \"http://\") (str.indexof _arg_0 \"//\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.indexof _arg_0 \"//\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 7) 1) (str.indexof _arg_0 \"/\" (- (str.indexof _arg_0 \"/\" 7) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 3) (str.indexof _arg_0 \"/\" 0 (+ (str.indexof _arg_0 \"/\" 0 3) 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 2) (+ (str.indexof _arg_0 \"/\" 0) 1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"//\" 0) 1) (str.indexof _arg_0 \"/\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 12 (- (str.indexof _arg_0 \"microsoft\" 0) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"http://\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"http://\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 (+ (str.len \"://\") 1)) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://\" 0 (+ (str.len \"://\") 1)) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\") 1) 1)) 0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=\") 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \".com/\"))",
      "(str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 7))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"microsoft\" 0) (str.len \"microsoft\")) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) (str.len \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\"))) (+ (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\")) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) (str.len \"www.\") 1) (str.indexof _arg_0 \"/\" (str.len \"https://\") 1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\" 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"//\" 0) 2)))",
      "(str.substr _arg_0 8 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"://www.\") 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 1))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(str.substr _arg_0 13 (- (str.len _arg_0) 13))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\"))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1)) (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1)))",
      "(str.substr _arg_0 8 (- (str.indexof _arg_0 \"/\" 8) 8))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 2 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" (+ (str.len \"https://\") 2)) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" 0)) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//www.\") 7) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 7) 100))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\" 10))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 2) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"microsoft\" 0) 2) (str.len \"microsoft\"))",
      "(str.substr _arg_0 7 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 7))",
      "(str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 7)))",
      "(str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 7)))",
      "(str.substr _arg_0 7 (- (str.indexof _arg_0 \"/\" 7) 7))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 9))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1)) (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (- (str.indexof _arg_0 \"/\" (- (str.indexof _arg_0 \"/\" 0) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\" 0) 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\" 0) 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\" (str.len \"://\")))) (str.indexof _arg_0 \"/\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=\") 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\") (+ 2 (str.indexof _arg_0 \"//\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ 2 (str.indexof _arg_0 \"//\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 3) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" 0 3) 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"www.\") (+ (str.indexof _arg_0 \".com\") 4))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" 0)) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" 0)) 1)))",
      "(ite (str.contains _arg_0 \"apple\") \"apple\" (ite (str.contains _arg_0 \"microsoft\") \"microsoft\" (ite (str.contains _arg_0 \"windows\") \"windows\" \"\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 6) 1)))",
      "(str.substr _arg_0 7 (- (str.indexof _arg_0 \"/\" 7) 7))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.len \"https=//\"))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"//\") 2))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"://www.\") 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 7))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"https://www.\") 12) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"https://www.\") 12)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 8))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 3) (+ (str.indexof _arg_0 \"/\" 0 8) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=\") 2)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"//\") 2))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"://\") 3) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ 3 (str.indexof _arg_0 \"/\" 3))) (str.indexof _arg_0 \"/\" (+ 3 (str.indexof _arg_0 \"/\" 3))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" (+ (str.len \"https://\") (str.len \"www.\"))) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"//\" (+ (str.len \"https://\") (str.len \"www.\")))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"//\" 0)) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//www.\") 7) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"//www.\") 7))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\") (+ (str.indexof _arg_0 \"//\" 2) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" (+ (str.len \"http://\") (str.indexof _arg_0 \"//\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 7) 1) (str.indexof _arg_0 \"/\" (- (str.indexof _arg_0 \"/\" 7) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 3) (str.indexof _arg_0 \"/\" 0 (+ (str.indexof _arg_0 \"/\" 0 3) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 2) (+ (str.indexof _arg_0 \"/\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"//\" 0) 1) (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 12 (- (str.indexof _arg_0 \"microsoft\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"http://\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"http://\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 (+ (str.len \"://\") 1)) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://\" 0 (+ (str.len \"://\") 1)) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\") 1) 1)) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=\") 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \".com/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"microsoft\" 0) (str.len \"microsoft\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) (str.len \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\"))) (+ (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\")) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) (str.len \"www.\") 1) (str.indexof _arg_0 \"/\" (str.len \"https://\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"//\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 8 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"://www.\") 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (- (str.len _arg_0) 13)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\"))) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") (str.len \"www.\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1)) (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 8 (- (str.indexof _arg_0 \"/\" 8) 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 2 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" (+ (str.len \"https://\") 2)) (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" 0)) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//www.\") 7) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http://\") (str.len \"https://\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 7) 100))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\" 10)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 2) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"microsoft\" 0) 2) (str.len \"microsoft\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"www.\") 4) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (- (str.indexof _arg_0 \"/\" 7) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 9)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1)) (str.indexof _arg_0 \"/\" (+ (str.len \"https=//www.\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) 1) (- (str.indexof _arg_0 \"/\" (- (str.indexof _arg_0 \"/\" 0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\" 0) 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\" 0) 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\" (str.len \"://\")))) (str.indexof _arg_0 \"/\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=\") 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\") (+ 2 (str.indexof _arg_0 \"//\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ 2 (str.indexof _arg_0 \"//\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 3) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" 0 3) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"www.\") (+ (str.indexof _arg_0 \".com\") 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" 0)) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\" 0)) 1))))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"apple\") \"apple\" (ite (str.contains _arg_0 \"microsoft\") \"microsoft\" (ite (str.contains _arg_0 \"windows\") \"windows\" \"\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 6) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (- (str.indexof _arg_0 \"/\" 7) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=//\") (str.len \"https=//\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"https://\") 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"//\") 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"://www.\") 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"https://www.\") 12) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"https://www.\") 12))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 3) (+ (str.indexof _arg_0 \"/\" 0 8) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"http=\") 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"//\") 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"://\") 3) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 8) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ 3 (str.indexof _arg_0 \"/\" 3))) (str.indexof _arg_0 \"/\" (+ 3 (str.indexof _arg_0 \"/\" 3)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" (+ (str.len \"https://\") (str.len \"www.\"))) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"//\" (+ (str.len \"https://\") (str.len \"www.\"))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))"
    ],
    "time_diff_ms": 1835.708,
    "constants": [
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        1,
        "/",
        "//"
      ],
      [
        "http://",
        "/",
        "https://"
      ],
      [
        "http://",
        "/",
        "https://"
      ],
      [
        "/",
        7,
        "//www."
      ],
      [
        "http://",
        "/",
        "https://"
      ],
      [
        1,
        2,
        "//"
      ],
      [
        "http://",
        "/",
        "//",
        "https://"
      ],
      [
        "http://",
        "/",
        "https://"
      ],
      [
        1,
        "/",
        7
      ],
      [
        0,
        1,
        "/",
        3,
        "://"
      ],
      [
        0,
        1,
        "/",
        2
      ],
      [
        0,
        1,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        "microsoft",
        0,
        12,
        1
      ],
      [
        "http://",
        "/",
        "https://"
      ],
      [
        0,
        1,
        "/",
        "://"
      ],
      [
        0,
        1,
        "/",
        "://"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        "/",
        2,
        "https="
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        ".com/",
        "www.",
        4
      ],
      [
        "/",
        7
      ],
      [
        "/",
        "www.",
        "https://"
      ],
      [
        0,
        "/"
      ],
      [
        "microsoft",
        0
      ],
      [
        0,
        "/",
        3,
        "://"
      ],
      [
        "/",
        2,
        "//"
      ],
      [
        1,
        "/",
        "www.",
        "https://"
      ],
      [
        0,
        "//"
      ],
      [
        0,
        1,
        "/",
        "www.",
        "https://"
      ],
      [
        "/",
        8,
        2,
        "//"
      ],
      [
        0,
        "/",
        2,
        "//"
      ],
      [
        8,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/",
        "://www.",
        7
      ],
      [
        0,
        1,
        "/"
      ],
      [
        13
      ],
      [
        "/",
        "www.",
        "https://"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        "https=//www.",
        "/",
        1
      ],
      [
        8,
        "/"
      ],
      [
        "/",
        "www.",
        4
      ],
      [
        "/",
        2
      ],
      [
        0,
        1,
        "/"
      ],
      [
        "/",
        2,
        "//",
        "https://"
      ],
      [
        "/",
        2,
        "https://"
      ],
      [
        0,
        "/"
      ],
      [
        "/",
        2,
        "https://"
      ],
      [
        "/",
        2,
        "https://"
      ],
      [
        0,
        1,
        "/",
        "://"
      ],
      [
        "/",
        7,
        "//www."
      ],
      [
        0,
        "/"
      ],
      [
        "/",
        "www.",
        4
      ],
      [
        "http://",
        "/",
        "https://"
      ],
      [
        0,
        "/",
        100,
        7
      ],
      [
        0,
        1,
        "/"
      ],
      [
        "/",
        2,
        10,
        "//"
      ],
      [
        0,
        "/"
      ],
      [
        0,
        "/"
      ],
      [
        "/",
        2,
        "https://"
      ],
      [
        0,
        "/"
      ],
      [
        "/",
        "www.",
        4
      ],
      [
        0,
        1,
        "/",
        2
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        "//"
      ],
      [
        "microsoft",
        0,
        2
      ],
      [
        7
      ],
      [
        "/",
        "www.",
        4
      ],
      [
        "/",
        7
      ],
      [
        "/",
        7
      ],
      [
        "/",
        7
      ],
      [
        "/",
        7
      ],
      [
        0,
        9,
        "/",
        "//"
      ],
      [
        "https=//www.",
        "/",
        1
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        8,
        "/",
        "://www."
      ],
      [
        "/",
        "://"
      ],
      [
        "http=",
        "/",
        2
      ],
      [
        2,
        "//"
      ],
      [
        0,
        "/",
        2,
        "//"
      ],
      [
        0,
        "/",
        3,
        "://"
      ],
      [
        "www.",
        4,
        ".com"
      ],
      [
        0,
        1,
        "/",
        "//"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/",
        "//"
      ],
      [
        "microsoft",
        "",
        "apple",
        "windows"
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        1,
        "/",
        "//",
        6
      ],
      [
        "/",
        7
      ],
      [
        "/",
        "http=//",
        "https=//"
      ],
      [
        8,
        1,
        "/"
      ],
      [
        "/",
        2,
        "https://"
      ],
      [
        "/",
        2,
        "//"
      ],
      [
        8,
        1,
        "/"
      ],
      [
        "/",
        "://www.",
        7
      ],
      [
        0,
        "//"
      ],
      [
        "https://www.",
        "/",
        12
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        1,
        "/",
        3,
        8,
        "://"
      ],
      [
        "http=",
        "/",
        2
      ],
      [
        "/",
        2,
        "//"
      ],
      [
        1,
        "/",
        3,
        8,
        "://"
      ],
      [
        "/",
        3,
        "://"
      ],
      [
        "/",
        "www.",
        "//",
        "https://"
      ],
      [
        0,
        8,
        "/",
        "//"
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www."
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      "",
      6,
      7,
      8,
      9,
      10,
      12,
      13,
      "://",
      "https=//",
      "/",
      "www.",
      "microsoft",
      "http://",
      "apple",
      "://www.",
      ".com/",
      "https=//www.",
      "windows",
      "//",
      100,
      "//www.",
      ".com",
      "https://",
      "https=",
      "http=",
      "https://www.",
      "http=//"
    ]
  },
  "get-last-line-in-cell.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ 1 (str.len _arg_0))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ 1 (str.len _arg_0)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \"/n\" 0)) \"/n\" 0) 3))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 3) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (str.len _arg_0)) \"/n\" 0) 3))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \"/n\" 0)) \"/n\" 0) 3))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (str.len _arg_0)) \"/n\" 0) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 2)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 2)) 2)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"n\" (+ 1 (str.indexof _arg_0 \"n\"))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/n\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 10) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" 0) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0 (+ (str.indexof _arg_0 \"/n\" 0) 2))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" 0) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"/n\\\" (- (str.len _arg_0) 1)) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0)) \"/n\" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0)) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (+ (str.len _arg_0) -1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) 4) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1))) \"/n\" 0) 3)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0))) \"/n\" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0)))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ 1 (str.len _arg_0))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ 1 (str.len _arg_0))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \"/n\" 0)) \"/n\" 0) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (str.len _arg_0)) \"/n\" 0) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \"/n\" 0)) \"/n\" 0) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (str.len _arg_0)) \"/n\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 2)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 2)) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"n\" (+ 1 (str.indexof _arg_0 \"n\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/n\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 10) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" 0) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0 (+ (str.indexof _arg_0 \"/n\" 0) 2)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"/n\\\" (- (str.len _arg_0) 1)) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0)) \"/n\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0)) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (+ (str.len _arg_0) -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) 4) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -4)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1))) \"/n\" 0) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" 0))) \"/n\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1)) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) -1) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) 3) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1) 3))))"
    ],
    "time_diff_ms": 1182.412,
    "constants": [
      [
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        3,
        "/n",
        -1
      ],
      [
        "/n",
        -4
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        1,
        2,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        1,
        2,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        1,
        2,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        1,
        "n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        1,
        10,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        2,
        "/n",
        -1
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        2,
        "/n",
        -1
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        2,
        "/n",
        -1
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        2,
        "/n",
        -1
      ],
      [
        2,
        "/n",
        -1
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        "/n",
        -4
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0))"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n",
        0
      ],
      [
        0,
        1,
        2,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        "/n",
        -4,
        -1
      ],
      [
        1,
        2,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        2,
        "/n",
        -1
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        1,
        2,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        "/n",
        -4
      ],
      [
        "/n",
        -4,
        4
      ],
      [
        "/n",
        -4
      ],
      [
        1,
        "/n"
      ],
      [
        "/n",
        -4
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        "/n",
        -4
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        3,
        1,
        "/n",
        0
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        2,
        "/n"
      ],
      [
        2,
        "/n",
        -1
      ],
      [
        3,
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        1,
        2,
        "/n",
        -1
      ],
      [
        0,
        1,
        2,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        1,
        2,
        "/n"
      ],
      [
        3,
        1,
        "/n"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      10,
      "/n",
      "n",
      " ",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0))",
      -4,
      -1
    ]
  },
  "31753108.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 8))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 13 8))",
      "(str.substr _arg_0 11 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 9))",
      "(str.substr _arg_0 12 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr\n    _arg_0\n    (str.indexof _arg_0 \" \" 0)\n    (str.len _arg_0)\n))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 13 (- (str.indexof _arg_0 \" \") 13))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 12 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 13 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 13 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 13 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 12 9))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 13)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 12 8))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 11 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 9))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 12 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (- (str.indexof _arg_0 \" \") 13)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 12 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 12 9))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 13)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 12 8))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 13 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))"
    ],
    "time_diff_ms": 729.3069999999999,
    "constants": [
      [
        0,
        " "
      ],
      [
        8,
        13
      ],
      [
        0,
        " ",
        13
      ],
      [
        8,
        13
      ],
      [
        8,
        11
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        9,
        13
      ],
      [
        0,
        " ",
        12
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        8,
        12
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        8,
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        1,
        " "
      ],
      [
        8,
        13
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        8,
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        9,
        12
      ],
      [
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        8,
        12
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        13
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      8,
      9,
      " ",
      11,
      12,
      13
    ]
  },
  "exceljet4.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.replace _arg_0 \"https://\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"ftp=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 8 (str.indexof _arg_0 \"//\" 0)) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(define-fun f ((url String)) String (str.replace url \"https=//\" \"\") )",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"//\" 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1))",
      "(str.replace _arg_0 \"^(https|http|ftp|sftp)://\")",
      "(str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\")",
      "(str.replace _arg_0 \"ftp=//\" \"\")",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\")",
      "(str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) (ite (str.suffixof _arg_0 \"/\") 1 0)))",
      "(str.replace _arg_0 \"([^:]+://)\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\")",
      "(str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\")",
      "(str.replace _arg_0 \".*://\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https://\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\")",
      "\"(str.replace _arg_0 \\\"^\\\\w+\\\\=\\\\/\\\\/\\\" \\\"\\\")\"",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"^(https|ftp|sftp)://\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 8 (str.indexof _arg_0 \"//\" 0)) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(str.replace (str.replace (str.replace _arg_0 \"https=//\" \"\") \"http=//\" \"\") \"ftp=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"https://\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.replace _arg_0 \"https=//\" \"\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"ftp=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 8 (str.indexof _arg_0 \"//\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace url \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"//\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https|http|ftp|sftp)://\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"ftp=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (- (str.len _arg_0) (ite (str.suffixof _arg_0 \"/\") 1 0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"([^:]+://)\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^[a-zA-Z]+=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"^\\\\w+\\\\=\\\\/\\\\/\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https|ftp|sftp)://\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 8 (str.indexof _arg_0 \"//\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"https=//\" \"\") \"http=//\" \"\") \"ftp=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https://\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"https=//\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\" \"\"))"
    ],
    "time_diff_ms": 1178.8519999999999,
    "constants": [
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        2,
        "//"
      ],
      [
        1,
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        1,
        3,
        "://"
      ],
      [
        "^(https?|ftp|sftp)://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        1,
        3,
        "://"
      ],
      [
        "",
        "https=//"
      ],
      [
        "",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        0,
        "//"
      ],
      [
        "",
        "https://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        1,
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "ftp=//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        8,
        0,
        "//"
      ],
      [
        "",
        "^(https?|ftp|sftp)://"
      ],
      [
        "",
        "https=//"
      ],
      [
        "",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        0,
        "//"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https=//"
      ],
      [
        0,
        "//",
        6
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "^(https?|ftp|sftp)://"
      ],
      [
        1,
        3,
        "://"
      ],
      [
        "^(https|http|ftp|sftp)://"
      ],
      [
        "",
        "^[a-zA-Z]+=//"
      ],
      [
        "",
        "ftp=//"
      ],
      [
        "",
        "^(https?|ftp|sftp)://"
      ],
      [
        "",
        "^[a-zA-Z]+=//"
      ],
      [
        0,
        1,
        "/",
        3,
        "://"
      ],
      [
        "([^:]+://)",
        ""
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https=//"
      ],
      [
        "",
        "https=//"
      ],
      [
        "",
        "^[a-zA-Z]+=//"
      ],
      [
        "",
        "^[a-zA-Z]+=//"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "^(https?|ftp|sftp)://"
      ],
      [
        "",
        ".*://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https=//"
      ],
      [
        "",
        "^(https?|ftp|sftp)://"
      ],
      [
        "",
        "https=//"
      ],
      [
        "",
        "^(https?|ftp|sftp)://"
      ],
      [
        2,
        "//"
      ],
      [
        "",
        "https=//"
      ],
      [
        0,
        "//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https://"
      ],
      [
        "",
        "https=//"
      ],
      [
        "^(https?|ftp|sftp)://"
      ],
      [
        "(str.replace _arg_0 \"^\\w+\\=\\/\\/\" \"\")"
      ],
      [
        "^(https?|ftp|sftp)://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "^(https?|ftp|sftp)://"
      ],
      [
        "",
        "https=//"
      ],
      [
        "",
        "https=//"
      ],
      [
        "^(https|ftp|sftp)://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        8,
        0,
        "//"
      ],
      [
        "",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "ftp=//",
        "http=//",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "https://"
      ],
      [
        "",
        "https=//"
      ],
      [
        "",
        "https=//"
      ],
      [
        3,
        "://"
      ],
      [
        3,
        "://"
      ],
      [
        "",
        "^(https?|ftp|sftp)://"
      ]
    ],
    "all_constants": [
      "",
      1,
      2,
      3,
      0,
      6,
      8,
      "://",
      "https=//",
      "/",
      "([^:]+://)",
      "ftp=//",
      "(str.replace _arg_0 \"^\\w+\\=\\/\\/\" \"\")",
      "^(https|ftp|sftp)://",
      "^[a-zA-Z]+=//",
      "//",
      ".*://",
      "^(https|http|ftp|sftp)://",
      "^(https?|ftp|sftp)://",
      "https://",
      "http=//"
    ]
  },
  "44789427.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 0) _arg_1)) (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 0) _arg_1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \"-\" 0)) (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" _arg_1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 - 1)) (+ (str.indexof _arg_0 \"-\" (_arg_1 - 1)) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" (_arg_1 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"-\\\"))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (- (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"/\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (- (str.len _arg_0) (+ (str.len (str.replace _arg_0 \"-\" \"\")) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") _arg_1) (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\") _arg_1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.len (str.indexof _arg_0 \"-\" 0)) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 1) 1)) (- (str.indexof _arg_0 \"-\" 1) (str.indexof _arg_0 \"-\" 0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1))",
      "(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"-\" 0 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (+ (str.len _arg_0) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" _arg_1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (* 11 _arg_1) 10))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (+ _arg_1 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"/\" 0) (str.indexof _arg_0 \"-\" 0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"/\" 0) 3))",
      "(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 1) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 1) 1) 10))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) 10))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") 1) _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 0) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 0) _arg_1)) (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 0) _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \"-\" 0)) (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 - 1)) (+ (str.indexof _arg_0 \"-\" (_arg_1 - 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" (_arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"-\\\"))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (- (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (- (str.len _arg_0) (+ (str.len (str.replace _arg_0 \"-\" \"\")) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") _arg_1) (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\") _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.len (str.indexof _arg_0 \"-\" 0)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.indexof _arg_0 \"-\" 1) 1)) (- (str.indexof _arg_0 \"-\" 1) (str.indexof _arg_0 \"-\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.indexof _arg_0 \"-\" 0 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) (+ (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (* 11 _arg_1) 10))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"/\" 0) (str.indexof _arg_0 \"-\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"/\" 0) 3)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 1) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 1) 1) 10)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 1) 10)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\") 1) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (- (str.indexof _arg_0 \"-\" 0) 0) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)))"
    ],
    "time_diff_ms": 1964.967,
    "constants": [
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\"))"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-",
        "/"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1,
        ""
      ],
      [
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        10,
        11
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-",
        "/",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        "/",
        3
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        10,
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-",
        10,
        1
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        0,
        "-",
        1
      ],
      [
        0,
        "-"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      "",
      3,
      "-",
      10,
      11,
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\"))"
    ]
  },
  "stackoverflow4.sl": {
    "completions": [
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.++ \"R/\" (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" 2))) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 2) 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\" 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4))",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 11 2))))",
      "(str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4))",
      "(str.replace _arg_0 \",\" \" \")",
      "(str.++ \"R/\" (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (+ (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1) (- (str.indexof _arg_0 \">\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 (str.indexof _arg_0 \",\")))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\")) (str.indexof _arg_0 (+ 4 (str.indexof _arg_0 \",\")))))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 5 (str.indexof _arg_0 \",\")) (str.len _arg_0)))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)) \",\" \" \") (str.replace (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" \" \"))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.substr _arg_0 1 3) \" \" (str.substr _arg_0 5 3) \" \" (str.substr _arg_0 9 3))",
      "(str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4))",
      "(str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2))))",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.++ \"R/\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \" \" (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (str.indexof _arg_0 \",\")) \" \" (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (str.indexof _arg_0 \",\")))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 2) 1) (str.len _arg_0)))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 3))",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1))))",
      "(str.++ \"R/\" (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 2) \" \" (str.substr _arg_0 11 2))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.substr _arg_0 1 3) \" \" (str.substr _arg_0 5 3) \" \" (str.substr _arg_0 9 2) \" \" (str.substr _arg_0 13 2))",
      "(str.++ (str.substr _arg_0 0 1) \" \" (str.substr _arg_0 1 3) \" \" (str.substr _arg_0 5 3) \" \" (str.substr _arg_0 9 2))",
      "(str.++ \"R/\" (str.at _arg_0 1) \" \" (str.at _arg_0 4) \" \" (str.at _arg_0 7))",
      "(str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4))",
      "(str.++ (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 7 2) \" \" (str.substr _arg_0 10 2))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 4 (str.indexof _arg_0 \",\" 0)) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 5 (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0))) (str.len _arg_0))))))",
      "(str.++ \"R/\" (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 3) \" \" (str.substr _arg_0 12 2))",
      "(str.++ (str.substr _arg_0 3 3) \" \" (str.substr _arg_0 5 2) \" \" (str.substr _arg_0 8 2))",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 5 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \"))",
      "(str.++ \"R/\" (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (+ (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 5 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 2))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.to.int (str.substr _arg_0 3 (str.indexof _arg_0 \",\" 3))) \" \" (str.to.int (str.substr _arg_0 (+ 4 (str.indexof _arg_0 \",\" 3)) (str.indexof _arg_0 \",\" (+ 4 (str.indexof _arg_0 \",\" 3))))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.at _arg_0 1) \" \" (str.at _arg_0 4) \" \" (str.at _arg_0 7))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 (str.indexof _arg_0 \",\" 3)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 3) 1) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 3) 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 3) 1)) 1) (str.len _arg_0)))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.at _arg_0 2))) \" \" (int.to.str (str.to.int (str.at _arg_0 5))) \" \" (int.to.str (str.to.int (str.at _arg_0 8))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.at _arg_0 3))) \" \" (int.to.str (str.to.int (str.at _arg_0 6))) \" \" (int.to.str (str.to.int (str.at _arg_0 9))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.at _arg_0 3))) \" \" (int.to.str (str.to.int (str.at _arg_0 6))) \" \" (int.to.str (str.to.int (str.at _arg_0 9))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \"))",
      "(str.++ (str.substr _arg_0 3 3) \" \" (str.substr _arg_0 7 3) \" \" (str.substr _arg_0 11 2) \" \" (str.substr _arg_0 15 2))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 11 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 3))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ (str.substr _arg_0 3 3) \" \" (str.substr _arg_0 7 3) \" \" (str.substr _arg_0 11 2) \" \" (str.substr _arg_0 15 2))",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")",
      "(str.++ \"R/\" (str.at _arg_0 1) \" \" (str.at _arg_0 4) \" \" (str.at _arg_0 7))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2))))",
      "(str.++ \"R/\" (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 2)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)) 2)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)) 1))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" 2))) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 2) 1) (- (str.len _arg_0) (str.indexof _arg_0 \",\" 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4)))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 11 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (+ (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1) (- (str.indexof _arg_0 \">\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1))))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 (str.indexof _arg_0 \",\")))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\")) (str.indexof _arg_0 (+ 4 (str.indexof _arg_0 \",\")))))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 5 (str.indexof _arg_0 \",\")) (str.len _arg_0))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\") 1)) \",\" \" \") (str.replace (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 1 3) \" \" (str.substr _arg_0 5 3) \" \" (str.substr _arg_0 9 3)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2)))))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \" \" (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (str.indexof _arg_0 \",\")) \" \" (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 2) 1) (str.len _arg_0)))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 3)))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 2) \" \" (str.substr _arg_0 11 2)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 1 3) \" \" (str.substr _arg_0 5 3) \" \" (str.substr _arg_0 9 2) \" \" (str.substr _arg_0 13 2)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 1) \" \" (str.substr _arg_0 1 3) \" \" (str.substr _arg_0 5 3) \" \" (str.substr _arg_0 9 2)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.at _arg_0 1) \" \" (str.at _arg_0 4) \" \" (str.at _arg_0 7)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.at _arg_0 0) \" \" (str.at _arg_0 2) \" \" (str.at _arg_0 4)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 7 2) \" \" (str.substr _arg_0 10 2)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 4 (str.indexof _arg_0 \",\" 0)) (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 5 (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0))) (str.len _arg_0)))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 3) \" \" (str.substr _arg_0 12 2)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 3 3) \" \" (str.substr _arg_0 5 2) \" \" (str.substr _arg_0 8 2)))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 5 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 1 (- (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (+ (str.indexof _arg_0 \",\" 0) 1)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 5 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.to.int (str.substr _arg_0 3 (str.indexof _arg_0 \",\" 3))) \" \" (str.to.int (str.substr _arg_0 (+ 4 (str.indexof _arg_0 \",\" 3)) (str.indexof _arg_0 \",\" (+ 4 (str.indexof _arg_0 \",\" 3)))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.at _arg_0 1) \" \" (str.at _arg_0 4) \" \" (str.at _arg_0 7)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 (str.indexof _arg_0 \",\" 3)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 3) 1) (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 3) 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 3) 1)) 1) (str.len _arg_0)))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.at _arg_0 2))) \" \" (int.to.str (str.to.int (str.at _arg_0 5))) \" \" (int.to.str (str.to.int (str.at _arg_0 8)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.at _arg_0 3))) \" \" (int.to.str (str.to.int (str.at _arg_0 6))) \" \" (int.to.str (str.to.int (str.at _arg_0 9)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.at _arg_0 3))) \" \" (int.to.str (str.to.int (str.at _arg_0 6))) \" \" (int.to.str (str.to.int (str.at _arg_0 9)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 2 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 6 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \") (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 3 3) \" \" (str.substr _arg_0 7 3) \" \" (str.substr _arg_0 11 2) \" \" (str.substr _arg_0 15 2)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 11 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 3)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 3 3) \" \" (str.substr _arg_0 7 3) \" \" (str.substr _arg_0 11 2) \" \" (str.substr _arg_0 15 2)))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \",\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.at _arg_0 1) \" \" (str.at _arg_0 4) \" \" (str.at _arg_0 7)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 3 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 7 2))) \" \" (int.to.str (str.to.int (str.substr _arg_0 10 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.substr _arg_0 0 (- (str.indexof _arg_0 \",\" 0) 2)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)) 2)) \" \" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" 0)) 1)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 4 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 8 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 12 2)))))"
    ],
    "time_diff_ms": 1450.716,
    "constants": [
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        1,
        2,
        " ",
        ",",
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        0,
        2,
        4,
        " ",
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        11,
        "R/"
      ],
      [
        0,
        2,
        4,
        " ",
        "R/"
      ],
      [
        " ",
        ","
      ],
      [
        0,
        1,
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        4,
        5,
        " ",
        ",",
        "R/"
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        "R/",
        " ",
        ",",
        1
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        6,
        9,
        " ",
        "R"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        1,
        3,
        5,
        9,
        " ",
        "R/"
      ],
      [
        0,
        2,
        4,
        " ",
        "R/"
      ],
      [
        0,
        2,
        4,
        " ",
        "R/"
      ],
      [
        2,
        3,
        4,
        8,
        " ",
        12,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        0,
        1,
        " ",
        ",",
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        0,
        1,
        2,
        3,
        " ",
        ",",
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        0,
        3,
        4,
        8,
        " ",
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        0,
        1,
        " ",
        ",",
        "R/"
      ],
      [
        0,
        2,
        3,
        4,
        8,
        " ",
        11,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        1,
        2,
        3,
        5,
        9,
        " ",
        13,
        "R/"
      ],
      [
        0,
        1,
        2,
        3,
        5,
        9,
        " "
      ],
      [
        1,
        4,
        7,
        " ",
        "R/"
      ],
      [
        0,
        2,
        4,
        " ",
        "R/"
      ],
      [
        2,
        3,
        4,
        7,
        " ",
        10
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        0,
        3,
        4,
        5,
        " ",
        ",",
        "R/"
      ],
      [
        0,
        2,
        3,
        4,
        8,
        " ",
        12,
        "R/"
      ],
      [
        2,
        3,
        5,
        8,
        " "
      ],
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        2,
        3,
        6,
        9,
        " ",
        "R/"
      ],
      [
        1,
        2,
        3,
        5,
        8,
        " ",
        "R/"
      ],
      [
        2,
        3,
        6,
        9,
        " ",
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        6,
        9,
        " ",
        "R/"
      ],
      [
        "R/",
        " ",
        ","
      ],
      [
        0,
        1,
        " ",
        ",",
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        " ",
        ","
      ],
      [
        1,
        2,
        3,
        5,
        8,
        " ",
        "R/"
      ],
      [
        3,
        4,
        " ",
        ",",
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        1,
        4,
        7,
        " ",
        "R/"
      ],
      [
        2,
        3,
        6,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        1,
        3,
        " ",
        ",",
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        5,
        8,
        " ",
        "R/"
      ],
      [
        3,
        6,
        9,
        " ",
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        3,
        6,
        9,
        " ",
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        6,
        9,
        " ",
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        11,
        15
      ],
      [
        2,
        3,
        7,
        " ",
        11,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        0,
        3,
        4,
        8,
        " ",
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        "",
        "<",
        " ",
        ",",
        "R/",
        ">"
      ],
      [
        2,
        3,
        7,
        " ",
        11,
        15
      ],
      [
        " ",
        ","
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        "",
        "<",
        " ",
        ",",
        ">"
      ],
      [
        1,
        4,
        7,
        " ",
        "R/"
      ],
      [
        2,
        3,
        7,
        " ",
        10,
        "R/"
      ],
      [
        0,
        1,
        2,
        " ",
        ",",
        "R/"
      ],
      [
        2,
        3,
        4,
        8,
        " ",
        12,
        "R/"
      ]
    ],
    "all_constants": [
      "",
      1,
      2,
      0,
      4,
      3,
      5,
      7,
      6,
      9,
      " ",
      10,
      11,
      8,
      12,
      13,
      15,
      "R/",
      ",",
      "R",
      "<",
      ">"
    ]
  },
  "stackoverflow6.sl": {
    "completions": [
      "(str.substr _arg_0 26 (- (str.len _arg_0) 26))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 33 (str.len _arg_0)))",
      "(str.substr _arg_0 26 (str.len _arg_0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 33 (- (str.len _arg_0) 33))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31))",
      "(str.substr _arg_0 32 (- (str.len _arg_0) 32))",
      "(str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 26 (- (str.len _arg_0) 26))",
      "(str.substr _arg_0 27 (- (str.len _arg_0) 27))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 26 (- (str.len _arg_0) 26))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31))",
      "(str.substr _arg_0 35 (- (str.len _arg_0) 35))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 28 (- (str.len _arg_0) 28))",
      "(str.substr _arg_0 36 (- (str.len _arg_0) 36))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 25 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 31 (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 30 (str.len _arg_0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "\"(str.substr _arg_0 0 (- (str.len _arg_0) 1))\"",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "\"(str.replace (str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"=\\\") 1)) \\\"+91 \\\" \\\"\\\")\"",
      "\"(str.substr _arg_0 29 (str.len _arg_0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"=\\\"))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "\"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"=\\\") 1))\"",
      "(str.substr _arg_0 52 (str.len _arg_0))",
      "\"(ite (str.contains _arg_0 \\\"=\\\") (str.substr _arg_0 (+ (str.indexof _arg_0 \\\"=\\\" 0) 1) (str.len _arg_0)) _arg_0)\"",
      "(str.substr _arg_0 42 (- (str.len _arg_0) 42))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 28 (str.indexof _arg_0 \"=\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "\"(str.substr _arg_0 36 (str.indexof _arg_0 \\\"= \\\" 0))\"",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.len _arg_0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 36 (str.len _arg_0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 29 (- (str.len _arg_0) 29))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 33 (- (str.len _arg_0) 33))",
      "(str.substr _arg_0 31 (str.len _arg_0))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 32 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 39 (- (str.len _arg_0) 39))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 33 (- (str.len _arg_0) 33)))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 29 (- (str.len _arg_0) 29))",
      "(str.substr _arg_0 36 (- (str.len _arg_0) 36)))",
      "(str.substr _arg_0 22 (- (str.len _arg_0) 22))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 29 (- (str.len _arg_0) 29)))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 25 (- (str.len _arg_0) 25)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 26 (- (str.len _arg_0) 26)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 33 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 26 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 33 (- (str.len _arg_0) 33)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 26 (- (str.len _arg_0) 26)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 27 (- (str.len _arg_0) 27)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 26 (- (str.len _arg_0) 26)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 35 (- (str.len _arg_0) 35)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 36 (- (str.len _arg_0) 36)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 25 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 30 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.len _arg_0) 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"=\\\") 1)) \\\"+91 \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 29 (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"=\\\"))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (- (str.indexof _arg_0 \\\"=\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 52 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(ite (str.contains _arg_0 \\\"=\\\") (str.substr _arg_0 (+ (str.indexof _arg_0 \\\"=\\\" 0) 1) (str.len _arg_0)) _arg_0)\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 42 (- (str.len _arg_0) 42)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 36 (str.indexof _arg_0 \\\"= \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 36 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (- (str.len _arg_0) 29)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 33 (- (str.len _arg_0) 33)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 39 (- (str.len _arg_0) 39)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 33 (- (str.len _arg_0) 33)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (- (str.len _arg_0) 29)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 36 (- (str.len _arg_0) 36)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 22 (- (str.len _arg_0) 22)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (- (str.len _arg_0) 29)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 25 (- (str.len _arg_0) 25)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))"
    ],
    "time_diff_ms": 1272.865,
    "constants": [
      [
        26
      ],
      [
        0,
        "="
      ],
      [
        33
      ],
      [
        26
      ],
      [
        0,
        "=",
        1
      ],
      [
        33
      ],
      [
        0,
        "=",
        1
      ],
      [
        28
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        31
      ],
      [
        32
      ],
      [
        32
      ],
      [
        0,
        "=",
        1
      ],
      [
        26
      ],
      [
        27
      ],
      [
        0,
        "="
      ],
      [
        26
      ],
      [
        31
      ],
      [
        35
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        28
      ],
      [
        36
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        25,
        "="
      ],
      [
        31
      ],
      [
        0,
        "=",
        1
      ],
      [
        31
      ],
      [
        0,
        "="
      ],
      [
        30
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        "(str.substr _arg_0 0 (- (str.len _arg_0) 1))"
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        "(str.replace (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\") 1)) \"+91 \" \"\")"
      ],
      [
        "(str.substr _arg_0 29 (str.len _arg_0))"
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))"
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\") 1))"
      ],
      [
        52
      ],
      [
        "(ite (str.contains _arg_0 \"=\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (str.len _arg_0)) _arg_0)"
      ],
      [
        42
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        28
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        "(str.substr _arg_0 36 (str.indexof _arg_0 \"= \" 0))"
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        36
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        29
      ],
      [
        0,
        "=",
        1
      ],
      [
        33
      ],
      [
        31
      ],
      [
        0,
        "="
      ],
      [
        32,
        "="
      ],
      [
        0,
        "="
      ],
      [
        31
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        39
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        33
      ],
      [
        0,
        "=",
        1
      ],
      [
        31
      ],
      [
        0,
        "=",
        1
      ],
      [
        29
      ],
      [
        36
      ],
      [
        22
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        29
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        25
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "=",
        1
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ]
    ],
    "all_constants": [
      0,
      1,
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\") 1))",
      22,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      "(str.replace (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\") 1)) \"+91 \" \"\")",
      35,
      36,
      39,
      42,
      52,
      "(str.substr _arg_0 36 (str.indexof _arg_0 \"= \" 0))",
      "(str.substr _arg_0 0 (- (str.len _arg_0) 1))",
      "(str.substr _arg_0 29 (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "=",
      "(ite (str.contains _arg_0 \"=\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (str.len _arg_0)) _arg_0)"
    ]
  },
  "univ_4-long.sl": {
    "completions": [
      "(str.substr (str.replace (str.++ col1 \", \" col2) \"University of \" \"\") 0 (- (str.indexof col2 \", \" 0) 1))",
      "(str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of \" \"\") 0 (str.indexof (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of \" \"\") \", \"))",
      "(str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", \") \"University of \" \"\") \"New York\" \"NY\") 0 (- (str.indexof col1 \",\") 1))",
      "(str.substr (str.substr (str.++ col1 \", \" col2 \", USA\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", \" 0) 1) (str.len (str.++ col1 \", \" col2 \", USA\"))) 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", \" 0) 1))",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"University of\" \"\") \"University\" \"\") \" of\" \"\") \" , \" \"\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,",
      "(str.substr (str.replace (str.replace (str.replace col2 \", USA\" \"\") \", \" \"\") \",\") 0 (- (str.indexof col2 \",\") 1))",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \" of\" \"\") \" College Park\" \"\") \" University\" \"\") \" University of\" \"\") \"University, \" \"\") \"University\" \"\") \"University of\" \"\") \"University of \" \"\")",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"USA\" \"\") \" \" \", \"))",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of California, Santa Barbara\" \"Santa Barbara\") \"University of Connecticut\" \"Storrs\") \"University of Pennsylvania\" \"Philadelphia\") \"",
      "(str.replace (str.replace (str.replace col2 \"USA\" \"\") \"PA\" \"\") \"CT\" \"\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.indexof col1 \",\") 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"New \" \"\") 0 2) \", \" (str.substr (str.replace (str.replace col2 \"University of\" \"\") \"University\" \"\") 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Philadelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.++ \n        (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"College Park\" \"College Park,\") \"Santa Barbara\" \"Santa Barbara,\") \n        \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 3 (- (str.indexof col2 \",\" 0) 3))\n    \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 1) (str.substr (str.++ col1 \", \" col2 \", USA\") (+ (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 2) (- (str.len (str.++ col1 \", \" col2 \", USA\")) (+ (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 2))))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") col2 \"USA\" \"PA\" \"CT\" \"CA\" \"MD\" \"NY\" \"New York\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"CT\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"California\" \"CA\") \"Connecticut\" \"CT\") \"Maryland\" \"MD\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (- (str.indexof col2 \",\" 0) 2) (- (str.len col2) (str.indexof col2 \",\" 0))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"USA\" \"\") \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col1 \",\" \"\") \",\" \"\") \",\" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"University of \" \"\") \"University\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"University,\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\" ) \"University\") \"\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", USA\" 0) 1))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"University of California,\" \"\") \"University of\" \"\") \"University\" \"\") \"University of Connecticut\" \"\") \"University of Pennsylvania\" \"\") \"University of Michigan\" \"\") \"University of Maryland\" \"\") \"University of California, Santa Barbara\" \"\") \"University of California\" \"\") \"University of\" \"\") \"University\" \"\") \" of \" \" \") \"University of\" \"\") \"University\" \"\") \",\" \"\") \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"Philadelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"Berkeley\" \"Berkeley\") \"Cambridge\" \"Cambridge\") \"Houston\" \"Houston\") \"Urbana\" \"Urbana\") \"Storrs\" \"Storrs\") \"Santa Barbara\" \"Santa Barbara\") \"NY,\" \"NY,\") \"PA,\" \"PA,\") \"CA,\" \"CA,\") \"MD,\" \"MD,\") \"CT,\" \"CT,\") \"MA,\" \"MA,\") \"TX,\" \"TX,\") \"IL,\" \"IL,\") \"USA,\" \"USA\")",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") 0 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.++ col1 \", \" col2 \", USA\")\n      \"New York\"\n      \"NY\")\n    0\n    (- (str.len col1) 2)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col1 \",\" \"\") \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (ite (str.contains col1 \",\") (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.indexof col1 \",\") 2))) col1) \"University of \" \"\") \"University \" \"\") \", USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") \"USA\" \"USA\") \"PA\" \"PA\") \"CT\" \"CT\") \"CA\" \"CA\") \"MD\" \"MD\") \"NY\" \"NY\") \"New York\" \"NY\") \"MA\" \"MA\") \"TX\" \"TX\") \"IL\" \"IL\") \"TX\" \"TX\") \"CA\" \"CA\") \"MI\" \"MI\") \"MA\" \"MA\") \"CT\" \"CT\") \"PA\" \"PA\") \"NY\" \"NY\") \"USA\" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ col1 \" \" col2) \", USA\") \", PA\") \", CT\") \", CA\") \", MD\") \", NY\") \", New York\") \", \" \"Phialdelphia, PA, USA\") \"Los Angeles, CA, USA\") \"Ithaca, NY, USA\") \"Philadelphia, PA, USA\") \"College Park, MD, USA\") \"Ann Arbor, MI, USA\") \"Berkeley, CA, USA\") \"Cambridge, MA, USA\") \"Houston, TX, USA\") \"New Haven, CT, USA\") \"New York, NY, USA\") \"New York, NY, USA\") \"Berkeley, CA, USA\") \"Urbana, IL, USA\") \"Philadelphia, PA, USA\") \"Cambridge, MA, USA\") \"Storrs, CT, USA\") \"Philadelphia, PA, USA\") \"New Haven, CT, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA, USA\") \"Santa Barbara, CA",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"CT\") \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York,\" \"NY,\") \"New York\" \"NY\") \"USA\" \"USA,\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"California\" \"CA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col2 \"USA\" \"\") \"New York\" \"NY\") \" \" \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Connecticut\" \"CT\") \"California\" \"CA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"United States of America\" \"USA\") \"Pennsylvania\" \"PA\") \"Connecticut\" \"CT\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \"USA\" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\" \"CT\" \"CT\" \"CA\" \"CA\" \"MD\" \"MD\" \"NY\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\")\n               \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"Santa Barbara\" \"Santa Barbara\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"CT\") \"Santa Barbara\" \"CA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.indexof col1 \",\") 2))) \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col1 \"University of \" \"\") \" , \" \", \") \"USA\" \"\")\n               \" \" \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          col2 \n                                                          \"New York\" \n                                                          \"NY\") \n                                                        \"New Haven\" \n                                                        \"New Haven\") \n                                                      \"Santa Barbara\" \n                                                      \"Santa Barbara\") \n                                                    \"Los Angeles\" \n                                                    \"Los Angeles\") \n                                                  \"Philadelphia\" \n                                                  \"Philadelphia\") \n                                                \"Cambridge\" \n                                                \"Cambridge\") \n                                              \"Berkeley\" \n                                              \"Berkeley\") \n                                            \"Ithaca\" \n                                            \"Ithaca\") \n                                          \"College Park\" \n                                          \"College Park\") \n                                        \"Ann Arbor\" \n                                        \"Ann Arbor\") \n                                      \"Houston\" \n                                      \"Houston\") \n                                    \"Urbana\" \n                                    \"Urbana\") \n                                  \"Storrs\" \n                                  \"Storrs\") \n                                \"Phialdelphia\" \n                                \"Phialdelphia\") \n                              \"Temple University\" \n                              \"Temple University\") \n                            \"University of California, Santa Barbara\" \n                            \"University of California, Santa Barbara\") \n                          \"University of Connecticut\" \n                          \"University of Connecticut\") \n                        \"University of Michigan\" \n                        \"University of Michigan\") \n                      \"University of Pennsylvania\" \n                      \"University of Pennsylvania\") \n                    \"Yale University\" \n                    \"Yale University\") \n                  \"Harvard University\" \n                  \"Harvard University\") \n                \"Rice University\" \n                \"Rice University\") \n              \"Columbia University\" \n              \"Columbia University\") \n            \"Cornell University\" \n            \"Cornell University\") \n          \"Drexel University\" \n          \"Drexel University\") \n        \"MIT\" \n        \"MIT\") \n      \"NYU\" \n      \"NYU\") \n    \"UIUC\" \n    \"UIUC\"))))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col2 2 (- (str.len col2) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col1 0 (- (str.indexof col1 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") 0 (- (str.len col1) 4)) 4))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University\" \"\") \"College\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") 0 (- (str.indexof col2 \",\" 0) 1) (+ (str.indexof col2 \",\" 0) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 2 100) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"California\" \"CA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"University\" \"\") \" of \" \"\") \" of\" \"\") \", \" \"\") \",\") \" , \" \"\") \",\") \", \") \" , \") \" ,\") \" , \") \" , \") \" , \") \" , \"\") \"College Park\" \"CP\") \"Santa Barbara\" \"SB\") \"Los Angeles\" \"LA\") \"New York\" \"NY\") \"Philadelphia\" \"PA\") \"Berkeley\" \"CA\") \"New Haven\" \"NH\") \"Ithaca\" \"NY\") \"Cambridge\" \"MA\") \"Ann Arbor\" \"MI\") \"Houston\" \"TX\") \"Temple\" \"TP\") \"Connecticut\" \"CT\") \"Michigan\" \"MI\") \"Illinois\" \"IL\") \"Barbara\" \"BA\") \"Haven\" \"HA\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\") \"Phialdelphia\" \"PH\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"University of California, Santa Barbara\" \"\") \"University of Connecticut\" \"\") \"University of Michigan\" \"\") \"University of Pennsylvania\" \"\") \"University of Maryland\" \"\") \"University of California\" \"\") \"University of Illinois\" \"\") \"University of\" \"\") \"University\" \"\") \"UC Berkeley\" \"\") \"UCLA\" \"\") \"UIUC\" \"\") \"MIT\" \"\") \"NYU\" \"\") \"Rice University\" \"\") \"Temple University\" \"\") \"Harvard University\" \"\") \"Cornell University\" \"\") \"Columbia University\" \"\") \"Drexel University\" \"\") \"New Haven University\" \"\") \"New Haven\" \"\") \"New York\" \"NY\") \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Santa Barbara\" \"CA\") \"Philadelphia\" \"PA\") \"Ann Arbor\" \"MI\") \"Berkeley\" \"CA\") \"Storrs\" \"CT\") \"Cambridge\" \"MA\") \"Houston\" \"TX\") \"Ithaca\" \"NY\") \"Phialdelphia\" \"PA\") \"Urbana\" \"IL\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace\n    (str.++ col1 \", \" col2 \", USA\")\n    \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\"\n    \"Los Angeles, CA\" \"Los Angeles, CA, USA\"\n    \"Ithaca, New York, USA\" \"Ithaca, NY, USA\"\n    \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\"\n    \"College Park, MD\" \"College Park, MD, USA\"\n    \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\"\n    \"Berkeley, CA\" \"Berkeley, CA, USA\"\n    \"Cambridge, MA\" \"Cambridge, MA, USA\"\n    \"Houston, TX\" \"Houston, TX, USA\"\n    \"New Haven, CT, USA\" \"New Haven, CT, USA\"\n    \"New York, NY, USA\" \"New York, NY, USA\"\n    \"Urbana, IL\" \"Urbana, IL, USA\"\n    \"Storrs, CT, USA\" \"Storrs, CT, USA\"\n    \"Santa Barbara, CA, USA\" \"Santa Barbara, CA, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace col2 col1 \"\") \",\" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\")",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"USA\" \"\") \"New York\" \"NY\") \"New Haven\" \"New Haven\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"CT\" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"Connecticut\" \"CT\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"USA\" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"CT\") \"California, Santa Barbara\" \"CA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col1 col2 \", \" \"\") \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \"University, \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College\" \"\") \"University\" \"\") \"New Haven\" \"New Haven\" \"\") \"Santa Barbara\" \"Santa Barbara\" \"\") \"California,\" \"\") \" of\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UC Berkeley\" \"Berkeley\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"CT\" \"CT, USA\") \"MD\" \"MD, USA\") \"NY\" \"NY, USA\") \"New York\" \"NY, USA\") \"MA\" \"MA, USA\") \"MI\" \"MI, USA\") \"TX\" \"TX, USA\") \"IL\" \"IL, USA\") \"USA\" \"USA\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"University of \" \"\") \"California, \" \"\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.substr col2 2 100) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \"University,\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \", Phialdelphia, PA, USA\" \"\") \"UCLA\" \"Los Angeles\") \", Los Angeles, CA\" \"\") \"Cornell University\" \"Ithaca\") \", Ithaca, New York, USA\" \"\") \"Penn\" \"Philadelphia\") \", Philadelphia, PA, USA\" \"\") \"University of Maryland College Park\" \"College Park\") \", College Park, MD\" \"\") \"University of Michigan\" \"Ann Arbor\") \", Ann Arbor, MI, USA\" \"\") \"UC Berkeley\" \"Berkeley\") \", Berkeley, CA\" \"\") \"MIT\" \"Cambridge\") \", Cambridge, MA\" \"\") \"Rice University\" \"Houston\") \", Houston, TX\" \"\") \"Yale University\" \"New Haven\") \", New Haven, CT, USA\" \"\") \"Columbia University\" \"New York\") \", New York, NY, USA\" \"\") \"NYU\" \"New York\") \", New York, NY, USA\" \"\") \"UIUC\" \"Urbana\") \", Urbana, IL\" \"\") \"Temple University\" \"Philadelphia\") \", Philadelphia, PA, USA\" \"\") \"Harvard University\" \"Cambridge\") \", Cambridge, MA, USA\" \"\") \"University of Connecticut\" \"Storrs\") \", Storrs, CT, USA\" \"\") \"Drexel University\" \"Philadelphia\") \", Philadelphia, PA, USA\" \"\") \"New Haven University\" \"New Haven\") \", New Haven, CT, USA\" \"\") \"University of California, Santa Barbara\" \"Santa Barbara\") \", Santa Barbara, CA, USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace col2 col1 \"\") \",\" \" USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col2 \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2) \"University of \" \"\") 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of \" \"\") 0 (str.indexof (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of \" \"\") \", \")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", \") \"University of \" \"\") \"New York\" \"NY\") 0 (- (str.indexof col1 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr (str.++ col1 \", \" col2 \", USA\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", \" 0) 1) (str.len (str.++ col1 \", \" col2 \", USA\"))) 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"University of\" \"\") \"University\" \"\") \" of\" \"\") \" , \" \"\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \", USA\" \"\") \", \" \"\") \",\") 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \" of\" \"\") \" College Park\" \"\") \" University\" \"\") \" University of\" \"\") \"University, \" \"\") \"University\" \"\") \"University of\" \"\") \"University of \" \"\")))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"USA\" \"\") \" \" \", \"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"USA\" \"\") \"PA\" \"\") \"CT\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.indexof col1 \",\") 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"New \" \"\") 0 2) \", \" (str.substr (str.replace (str.replace col2 \"University of\" \"\") \"University\" \"\") 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Philadelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"College Park\" \"College Park,\") \"Santa Barbara\" \"Santa Barbara,\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 3 (- (str.indexof col2 \",\" 0) 3)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 1) (str.substr (str.++ col1 \", \" col2 \", USA\") (+ (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 2) (- (str.len (str.++ col1 \", \" col2 \", USA\")) (+ (str.indexof (str.++ col1 \", \" col2 \", USA\") \",\") 2))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") col2 \"USA\" \"PA\" \"CT\" \"CA\" \"MD\" \"NY\" \"New York\"))))))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"CT\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"California\" \"CA\") \"Connecticut\" \"CT\") \"Maryland\" \"MD\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (- (str.indexof col2 \",\" 0) 2) (- (str.len col2) (str.indexof col2 \",\" 0))) \", USA\"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"USA\" \"\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col1 \",\" \"\") \",\" \"\") \",\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"University of \" \"\") \"University\" \"\"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", USA\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"University of California,\" \"\") \"University of\" \"\") \"University\" \"\") \"University of Connecticut\" \"\") \"University of Pennsylvania\" \"\") \"University of Michigan\" \"\") \"University of Maryland\" \"\") \"University of California, Santa Barbara\" \"\") \"University of California\" \"\") \"University of\" \"\") \"University\" \"\") \" of \" \" \") \"University of\" \"\") \"University\" \"\") \",\" \"\") \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"Philadelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"Berkeley\" \"Berkeley\") \"Cambridge\" \"Cambridge\") \"Houston\" \"Houston\") \"Urbana\" \"Urbana\") \"Storrs\" \"Storrs\") \"Santa Barbara\" \"Santa Barbara\") \"NY,\" \"NY,\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") 0 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len col1) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col1 \",\" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (ite (str.contains col1 \",\") (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.indexof col1 \",\") 2))) col1) \"University of \" \"\") \"University \" \"\") \", USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") \"USA\" \"USA\") \"PA\" \"PA\") \"CT\" \"CT\") \"CA\" \"CA\") \"MD\" \"MD\") \"NY\" \"NY\") \"New York\" \"NY\") \"MA\" \"MA\") \"TX\" \"TX\") \"IL\" \"IL\") \"TX\" \"TX\") \"CA\" \"CA\") \"MI\" \"MI\") \"MA\" \"MA\") \"CT\" \"CT\") \"PA\" \"PA\") \"NY\" \"NY\") \"USA\" \"USA\")))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"New York\" \"NY\"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"CT\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York,\" \"NY,\") \"New York\" \"NY\") \"USA\" \"USA,\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"California\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"USA\" \"\") \"New York\" \"NY\") \" \" \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Connecticut\" \"CT\") \"California\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"United States of America\" \"USA\") \"Pennsylvania\" \"PA\") \"Connecticut\" \"CT\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \"USA\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\" \"CT\" \"CT\" \"CA\" \"CA\" \"MD\" \"MD\" \"NY\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"Santa Barbara\" \"Santa Barbara\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"CT\") \"Santa Barbara\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.indexof col1 \",\") 2))) \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col1 \"University of \" \"\") \" , \" \", \") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"Santa Barbara\" \"Santa Barbara\") \"Los Angeles\" \"Los Angeles\") \"Philadelphia\" \"Philadelphia\") \"Cambridge\" \"Cambridge\") \"Berkeley\" \"Berkeley\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"Houston\" \"Houston\") \"Urbana\" \"Urbana\") \"Storrs\" \"Storrs\") \"Phialdelphia\" \"Phialdelphia\") \"Temple University\" \"Temple University\") \"University of California, Santa Barbara\" \"University of California, Santa Barbara\") \"University of Connecticut\" \"University of Connecticut\") \"University of Michigan\" \"University of Michigan\") \"University of Pennsylvania\" \"University of Pennsylvania\") \"Yale University\" \"Yale University\") \"Harvard University\" \"Harvard University\") \"Rice University\" \"Rice University\") \"Columbia University\" \"Columbia University\") \"Cornell University\" \"Cornell University\") \"Drexel University\" \"Drexel University\") \"MIT\" \"MIT\") \"NYU\" \"NYU\") \"UIUC\" \"UIUC\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 (- (str.len col2) 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col1 0 (- (str.indexof col1 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University\" \"\") \"College\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") 0 (- (str.indexof col2 \",\" 0) 1) (+ (str.indexof col2 \",\" 0) 2))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 100) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"California\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"University of California, Santa Barbara\" \"\") \"University of Connecticut\" \"\") \"University of Michigan\" \"\") \"University of Pennsylvania\" \"\") \"University of Maryland\" \"\") \"University of California\" \"\") \"University of Illinois\" \"\") \"University of\" \"\") \"University\" \"\") \"UC Berkeley\" \"\") \"UCLA\" \"\") \"UIUC\" \"\") \"MIT\" \"\") \"NYU\" \"\") \"Rice University\" \"\") \"Temple University\" \"\") \"Harvard University\" \"\") \"Cornell University\" \"\") \"Columbia University\" \"\") \"Drexel University\" \"\") \"New Haven University\" \"\") \"New Haven\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\" \"Los Angeles, CA\" \"Los Angeles, CA, USA\" \"Ithaca, New York, USA\" \"Ithaca, NY, USA\" \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\" \"College Park, MD\" \"College Park, MD, USA\" \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\" \"Berkeley, CA\" \"Berkeley, CA, USA\" \"Cambridge, MA\" \"Cambridge, MA, USA\" \"Houston, TX\" \"Houston, TX, USA\" \"New Haven, CT, USA\" \"New Haven, CT, USA\" \"New York, NY, USA\" \"New York, NY, USA\" \"Urbana, IL\" \"Urbana, IL, USA\" \"Storrs, CT, USA\" \"Storrs, CT, USA\" \"Santa Barbara, CA, USA\" \"Santa Barbara, CA, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \",\" \"USA\"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"USA\" \"\") \"New York\" \"NY\") \"New Haven\" \"New Haven\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"CT\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"Connecticut\" \"CT\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"USA\" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"CT\") \"California, Santa Barbara\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col1 col2 \", \" \"\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \"University, \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College\" \"\") \"University\" \"\") \"New Haven\" \"New Haven\" \"\") \"Santa Barbara\" \"Santa Barbara\" \"\") \"California,\" \"\") \" of\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"UC Berkeley\" \"Berkeley\") \"MIT\" \"Cambridge\") \"Rice University\" \"Houston\") \"Yale University\" \"New Haven\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"UC Berkeley\" \"Berkeley\") \"UIUC\" \"Urbana\") \"Temple University\" \"Philadelphia\") \"Harvard University\" \"Cambridge\") \"University of Connecticut\" \"Storrs\") \"Drexel University\" \"Philadelphia\") \"New Haven University\" \"New Haven\") \"University of California, Santa Barbara\" \"Santa Barbara\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"CT\" \"CT, USA\") \"MD\" \"MD, USA\") \"NY\" \"NY, USA\") \"New York\" \"NY, USA\") \"MA\" \"MA, USA\") \"MI\" \"MI, USA\") \"TX\" \"TX, USA\") \"IL\" \"IL, USA\") \"USA\" \"USA\")))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"University of \" \"\") \"California, \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 100) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"University of \" \"\") \"University \" \"\") \"University,\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \", Phialdelphia, PA, USA\" \"\") \"UCLA\" \"Los Angeles\") \", Los Angeles, CA\" \"\") \"Cornell University\" \"Ithaca\") \", Ithaca, New York, USA\" \"\") \"Penn\" \"Philadelphia\") \", Philadelphia, PA, USA\" \"\") \"University of Maryland College Park\" \"College Park\") \", College Park, MD\" \"\") \"University of Michigan\" \"Ann Arbor\") \", Ann Arbor, MI, USA\" \"\") \"UC Berkeley\" \"Berkeley\") \", Berkeley, CA\" \"\") \"MIT\" \"Cambridge\") \", Cambridge, MA\" \"\") \"Rice University\" \"Houston\") \", Houston, TX\" \"\") \"Yale University\" \"New Haven\") \", New Haven, CT, USA\" \"\") \"Columbia University\" \"New York\") \", New York, NY, USA\" \"\") \"NYU\" \"New York\") \", New York, NY, USA\" \"\") \"UIUC\" \"Urbana\") \", Urbana, IL\" \"\") \"Temple University\" \"Philadelphia\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \",\" \" USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace col2 \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))"
    ],
    "time_diff_ms": 1653.2690000000002,
    "constants": [
      [
        "",
        0,
        1,
        ", ",
        "University of "
      ],
      [
        "",
        0,
        ", ",
        "NY",
        "University of ",
        "New Haven",
        "New York"
      ],
      [
        "",
        0,
        1,
        ", ",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", "
      ],
      [
        "",
        " of",
        " , ",
        " ,",
        "University of",
        "University"
      ],
      [
        "",
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        " of",
        "University of",
        " College Park",
        "University of ",
        "University, ",
        "University",
        " University",
        " University of"
      ],
      [
        "",
        " ",
        "USA",
        ", "
      ],
      null,
      [
        "",
        "PA",
        "CT",
        "USA"
      ],
      [
        0,
        1,
        ", ",
        "USA",
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ","
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "",
        0,
        2,
        ", USA",
        ", ",
        "University of",
        "New ",
        "University"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "Penn",
        "Yale University",
        "University of Maryland College Park",
        "UIUC",
        "New Haven",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "NYU",
        "Urbana",
        "Houston",
        "New York",
        "Los Angeles",
        "Cornell University",
        "University of Pennsylvania",
        "Temple University",
        "Berkeley",
        "Philadelphia",
        "Rice University",
        "Cambridge",
        "College Park",
        "University of Michigan",
        "Harvard University",
        "Ithaca",
        "UC Berkeley",
        "MIT"
      ],
      [
        "",
        ", USA",
        "College Park,",
        "University of ",
        "Santa Barbara,",
        "Santa Barbara",
        "College Park"
      ],
      [
        0,
        3,
        ", USA",
        ","
      ],
      [
        "",
        "NY",
        "University of ",
        "New Haven",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ",",
        "NY",
        "New York"
      ],
      [
        "Penn",
        "Yale University",
        "University of Maryland College Park",
        "PA",
        "UIUC",
        "New Haven",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "MD",
        "NYU",
        "Urbana",
        "USA",
        "CT",
        "Houston",
        "New York",
        "University of California, Santa Barbara",
        "Los Angeles",
        "Cornell University",
        "University of Pennsylvania",
        "Temple University",
        "New Haven University",
        "Berkeley",
        "Philadelphia",
        "Phialdelphia",
        "Rice University",
        "Storrs",
        "Cambridge",
        "College Park",
        "University of Michigan",
        "Harvard University",
        "Ithaca",
        "NY",
        "Drexel University",
        "University of Connecticut",
        "CA",
        "Santa Barbara",
        "UC Berkeley",
        "MIT"
      ],
      [
        ", USA",
        "NY",
        "CT",
        "New Haven",
        "New York"
      ],
      [
        "MD",
        "Connecticut",
        "Maryland",
        "California",
        "NY",
        "CT",
        "CA",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      null,
      [
        ", USA"
      ],
      [
        "",
        "USA"
      ],
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        "",
        "USA",
        ","
      ],
      [
        "",
        "University",
        "University of "
      ],
      null,
      [
        0,
        1,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "",
        " ",
        "University of Maryland",
        "University of California",
        "New Haven",
        "Ann Arbor",
        "Urbana",
        "University of",
        ",",
        "Houston",
        "New York",
        "University of California, Santa Barbara",
        "Los Angeles",
        "University of California,",
        "NY,",
        "Berkeley",
        "Philadelphia",
        "Storrs",
        "Cambridge",
        "College Park",
        "University",
        " of ",
        "University of Michigan",
        "NY",
        "Ithaca",
        "University of Connecticut",
        "Santa Barbara",
        "University of Pennsylvania"
      ],
      [
        "",
        0,
        100,
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "NY",
        "New Haven",
        "New York"
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "",
        ","
      ],
      [],
      [
        "",
        2,
        ", USA",
        ",",
        "University ",
        "University of "
      ],
      [
        ", USA"
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "Penn",
        "IL",
        "Yale University",
        "University of Maryland College Park",
        "PA",
        "MA",
        "UIUC",
        "New Haven",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "MD",
        "TX",
        "NYU",
        "Urbana",
        "USA",
        "CT",
        "Houston",
        "New York",
        "University of California, Santa Barbara",
        "Los Angeles",
        "Cornell University",
        "University of Pennsylvania",
        "Temple University",
        "New Haven University",
        "Berkeley",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "Rice University",
        "Storrs",
        "Cambridge",
        "College Park",
        "University of Michigan",
        "Harvard University",
        "Ithaca",
        "NY",
        "Drexel University",
        "University of Connecticut",
        "CA",
        "Santa Barbara",
        "UC Berkeley",
        "MIT"
      ],
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      null,
      [
        "",
        "USA",
        "NY",
        "CT",
        "New Haven",
        "New York"
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [],
      [
        "NY,",
        "USA",
        "New York,",
        "NY",
        "USA,",
        "New York"
      ],
      [
        "",
        "University ",
        "University of "
      ],
      null,
      [
        "California",
        "NY",
        "CA",
        "New Haven",
        "New York"
      ],
      [
        "",
        ", USA",
        " ",
        "USA",
        "NY",
        "New York"
      ],
      [
        ", USA",
        ", "
      ],
      [
        "Connecticut",
        "California",
        "NY",
        "CT",
        "CA",
        "New York"
      ],
      [
        "Connecticut",
        "USA",
        "CT",
        "PA",
        "Pennsylvania",
        "United States of America"
      ],
      [
        "",
        "USA"
      ],
      [
        "MD",
        ", USA",
        ", ",
        "NY",
        "CT",
        "CA",
        "New York"
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "NY",
        "New Haven",
        "New York",
        "Santa Barbara"
      ],
      [
        "",
        "University of California, Santa Barbara",
        "NY",
        "University of ",
        "New Haven",
        "Santa Barbara",
        "New York"
      ],
      [
        "NY",
        "CT",
        "CA",
        "New Haven",
        "Santa Barbara",
        "New York"
      ],
      [
        0,
        1,
        2,
        "USA",
        ","
      ],
      [
        ", USA"
      ],
      [
        "",
        " , ",
        ", ",
        "University ",
        "University of "
      ],
      [
        "",
        " , ",
        ", ",
        "USA",
        "University of "
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "",
        "University of "
      ],
      [
        "Yale University",
        "UIUC",
        "New Haven",
        "Ann Arbor",
        "Columbia University",
        "NYU",
        "Urbana",
        "Houston",
        "University of California, Santa Barbara",
        "New York",
        "Los Angeles",
        "Cornell University",
        "Temple University",
        "Berkeley",
        "Philadelphia",
        "Phialdelphia",
        "Rice University",
        "Storrs",
        "Cambridge",
        "College Park",
        "University of Michigan",
        "MIT",
        "NY",
        "Ithaca",
        "Drexel University",
        "University of Connecticut",
        "Santa Barbara",
        "University of Pennsylvania",
        "Harvard University"
      ],
      [
        2,
        ", USA"
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "",
        "University of "
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "Penn",
        "Yale University",
        "University of Maryland College Park",
        "UIUC",
        "New Haven",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "NYU",
        "Urbana",
        "Houston",
        "New York",
        "Los Angeles",
        "Cornell University",
        "University of Pennsylvania",
        "Temple University",
        "New Haven University",
        "Berkeley",
        "Philadelphia",
        "Phialdelphia",
        "Rice University",
        "Storrs",
        "Cambridge",
        "College Park",
        "University of Michigan",
        "Harvard University",
        "Ithaca",
        "Drexel University",
        "University of Connecticut",
        "UC Berkeley",
        "MIT"
      ],
      [
        ", USA",
        ", "
      ],
      [
        "NY",
        "New Haven",
        "New York"
      ],
      [
        "",
        0,
        1,
        2,
        ",",
        "College",
        "University of ",
        "University"
      ],
      [
        2,
        100,
        ", USA"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "California",
        "NY",
        "CA",
        "New Haven",
        "New York"
      ],
      [
        ", USA"
      ],
      null,
      [
        "",
        "University of Maryland",
        "University of California",
        "UIUC",
        "New Haven",
        "UCLA",
        "Columbia University",
        "UC Berkeley",
        "NYU",
        "University of",
        "University of California, Santa Barbara",
        "Cornell University",
        "Temple University",
        "New Haven University",
        "Rice University",
        "College Park",
        "University",
        "University of Michigan",
        "Harvard University",
        "Drexel University",
        "University of Connecticut",
        "University of Illinois",
        "University of Pennsylvania",
        "MIT"
      ],
      [
        "Ann Arbor, MI, USA",
        "Cambridge, MA",
        ", ",
        "Phialdelphia, PA, USA",
        "Santa Barbara, CA, USA",
        "College Park, MD",
        "Ithaca, New York, USA",
        "Cambridge, MA, USA",
        ", USA",
        "Berkeley, CA, USA",
        "New York, NY, USA",
        "Storrs, CT, USA",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "Los Angeles, CA",
        "Urbana, IL, USA",
        "Houston, TX",
        "Houston, TX, USA",
        "Los Angeles, CA, USA",
        "New Haven, CT, USA",
        "Urbana, IL",
        "Berkeley, CA"
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "",
        "USA",
        ","
      ],
      null,
      [
        "",
        "USA",
        "NY",
        "New Haven",
        "New York"
      ],
      [
        "USA",
        "NY",
        "CT",
        "New Haven",
        "New York"
      ],
      [
        "Connecticut",
        "NY",
        "CT",
        "New Haven",
        "New York"
      ],
      [],
      [
        "",
        " , ",
        "USA",
        ", "
      ],
      [
        "California, Santa Barbara",
        "NY",
        "CT",
        "CA",
        "New Haven",
        "New York"
      ],
      [
        "",
        "USA",
        ", "
      ],
      [
        "",
        "University ",
        "University of ",
        "University, "
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "",
        " of",
        "California,",
        "University of",
        "College",
        "New Haven",
        "Santa Barbara",
        "University"
      ],
      [
        "Penn",
        "MD, USA",
        "MI, USA",
        "IL",
        "Yale University",
        "University of Maryland College Park",
        "PA",
        "MA",
        "UIUC",
        "New Haven",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "MD",
        "TX",
        "NYU",
        "Urbana",
        "USA",
        "CT",
        "Houston",
        "CT, USA",
        "New York",
        "University of California, Santa Barbara",
        "Los Angeles",
        "Cornell University",
        "University of Pennsylvania",
        "Temple University",
        "New Haven University",
        "Berkeley",
        "NY, USA",
        "IL, USA",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "Rice University",
        "Storrs",
        "Cambridge",
        "TX, USA",
        "CA, USA",
        "College Park",
        "MA, USA",
        "University of Michigan",
        "Harvard University",
        "PA, USA",
        "Ithaca",
        "NY",
        "Drexel University",
        "University of Connecticut",
        "CA",
        "Santa Barbara",
        "UC Berkeley",
        "MIT"
      ],
      [
        "",
        "California, ",
        "University of "
      ],
      [
        2,
        100,
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        "",
        "University ",
        "University of ",
        "University,"
      ],
      [
        "",
        "Penn",
        "Yale University",
        ", College Park, MD",
        "University of Maryland College Park",
        "UIUC",
        "New Haven",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "UC Berkeley",
        "NYU",
        ", Ithaca, New York, USA",
        "Urbana",
        ", Berkeley, CA",
        ", Cambridge, MA",
        "Houston",
        "New York",
        "Los Angeles",
        "Cornell University",
        "Temple University",
        "Berkeley",
        "Philadelphia",
        "Phialdelphia",
        ", Ann Arbor, MI, USA",
        "Rice University",
        ", Houston, TX",
        ", New York, NY, USA",
        ", Phialdelphia, PA, USA",
        ", Los Angeles, CA",
        ", New Haven, CT, USA",
        "Cambridge",
        "College Park",
        "University of Michigan",
        "Ithaca",
        ", Urbana, IL",
        ", Philadelphia, PA, USA",
        "University of Pennsylvania",
        "MIT"
      ],
      [],
      [
        "",
        ",",
        " USA"
      ],
      [
        "",
        "USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      2,
      3,
      ", College Park, MD",
      "University of California",
      "Santa Barbara,",
      "New Haven",
      "Ann Arbor",
      "MD",
      "NYU",
      " , ",
      ", Ithaca, New York, USA",
      "California, Santa Barbara",
      "Santa Barbara, CA, USA",
      "USA",
      "College Park, MD",
      ", Cambridge, MA",
      "CT, USA",
      "University of California, Santa Barbara",
      "Los Angeles",
      " University of",
      "Berkeley",
      ", USA",
      "Maryland",
      "Storrs, CT, USA",
      ", Ann Arbor, MI, USA",
      ", Phialdelphia, PA, USA",
      "College Park, MD, USA",
      "University ",
      "Pennsylvania",
      "TX, USA",
      "University",
      100,
      "California,",
      "MIT",
      "Houston, TX, USA",
      "Los Angeles, CA, USA",
      "University of Connecticut",
      "New ",
      "USA,",
      "California, ",
      "University of Pennsylvania",
      "Berkeley, CA",
      "IL",
      "TX",
      " University",
      "Urbana",
      ", Berkeley, CA",
      " ,",
      "College Park,",
      "CT",
      "College",
      "Temple University",
      "University of California,",
      "NY,",
      "Cambridge, MA, USA",
      "MI",
      "Philadelphia",
      "Rice University",
      "New Haven, CT, USA",
      "Philadelphia, PA, USA",
      ", Los Angeles, CA",
      "Cambridge",
      "Los Angeles, CA",
      "Urbana, IL, USA",
      " of ",
      "University of Michigan",
      "Ithaca",
      ", Urbana, IL",
      "University of ",
      " USA",
      "Urbana, IL",
      " ",
      "Ann Arbor, MI, USA",
      "MD, USA",
      "MI, USA",
      "New York,",
      "University of Maryland College Park",
      "University of Maryland",
      "UCLA",
      "United States of America",
      ", ",
      "Phialdelphia, PA, USA",
      ",",
      "Ithaca, New York, USA",
      "Houston",
      "New York",
      " of",
      "California",
      ", New Haven, CT, USA",
      "Ithaca, NY, USA",
      "MA, USA",
      "Connecticut",
      "PA, USA",
      "University,",
      ", Philadelphia, PA, USA",
      "University of Illinois",
      "UIUC",
      "Penn",
      "Yale University",
      " College Park",
      "PA",
      "MA",
      "Columbia University",
      "Cambridge, MA",
      "University of",
      "NY, USA",
      "IL, USA",
      "University, ",
      "Cornell University",
      "New Haven University",
      "Berkeley, CA, USA",
      "Phialdelphia",
      "New York, NY, USA",
      ", Houston, TX",
      ", New York, NY, USA",
      "Storrs",
      "CA, USA",
      "College Park",
      "Houston, TX",
      "NY",
      "Drexel University",
      "CA",
      "Santa Barbara",
      "UC Berkeley",
      "Harvard University"
    ]
  },
  "phone-5-long.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 1 (- (str.indexof name \" \") 1)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"106\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"106\")",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "\"(str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n    (str.at name 1))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.substr name 1 3))\"",
      "\"(ite (= (str.len name) 4) (str.substr name 1 3) (ite (= (str.len name) 5) (str.substr name 1 2) (str.substr name 1 1)))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "(str.substr name 1 3))",
      "(str.at name 1)",
      "(str.at name 1)",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "(str.substr name 1 3))",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(str.substr name 1 3))",
      "(str.at name 1)",
      "(str.at name 1)",
      "(str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "\"(str.at name 1)\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f ((name String)) String (str.at name 1))",
      "(define-fun f ((name String)) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "(str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.at name 1)\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\"",
      "\"(str.substr name 1 3))\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.substr name 1 (- (str.indexof name \" \") 1)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"106\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"106\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(ite (= (str.len name) 4) (str.substr name 1 3) (ite (= (str.len name) 5) (str.substr name 1 2) (str.substr name 1 1)))\")",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      null,
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.at name 1)\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")"
    ],
    "time_diff_ms": 1121.153,
    "constants": [
      [
        1,
        " "
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "106"
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        "106"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(ite (= (str.len name) 4) (str.substr name 1 3) (ite (= (str.len name) 5) (str.substr name 1 2) (str.substr name 1 1)))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      null,
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.at name 1)"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        "(str.substr name 1 3))"
      ]
    ],
    "all_constants": [
      0,
      1,
      3,
      " ",
      "(str.substr name 1 3))",
      "(ite (= (str.len name) 4) (str.substr name 1 3) (ite (= (str.len name) 5) (str.substr name 1 2) (str.substr name 1 1)))",
      "(str.at name 1)",
      "106"
    ]
  },
  "phone-5-short.sl": {
    "completions": [
      "(str.at name 1)",
      "(str.at name 1)",
      "(str.at name 1 2))",
      "(str.at name 1)",
      "(str.at name 1)",
      "(str.at name 1)",
      "(str.at name 1 2))",
      "(str.at name 1)",
      "(str.at name 1)",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n    (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "\"(str.substr name 1 (str.indexof name \\\" \\\")))\"",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) name)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \"-\" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(str.at name 0 2))",
      "(ite (str.prefixof name \"+\") (str.at name 1) (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(str.at name 1)",
      "(define-fun f (name String) String (str.at name 1))",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at (str.replace name \" \" \"\") 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(str.substr name 1 (str.indexof name \" \"))",
      "(str.at name 1)",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.at name 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.at name 1))",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) (str.substr name 1 (str.indexof name \"-\")))",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "\"(str.at (str.replace (str.replace name \\\"-\\\" \\\"\\\") \\\"+\\\" \\\"\\\") 1)\"",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(str.at name 1)",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "\"(str.at (str.substr name 1 (- (str.indexof name \\\" \\\") 1)) 1 3))\"",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.at name 2))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(str.at name 1)",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.at name 1))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String (str.at name 1))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String \"(str.substr name 1 (str.indexof name \\\" \\\")))\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) name))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 0 2))",
      "(define-fun f (name String) String (ite (str.prefixof name \"+\") (str.at name 1) (str.substr name 1 2)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at (str.replace name \" \" \"\") 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \")))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String (str.at name 2))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \")) (str.substr name 1 (str.indexof name \"-\"))))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at (str.replace (str.replace name \\\"-\\\" \\\"\\\") \\\"+\\\" \\\"\\\") 1)\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String \"(str.at (str.substr name 1 (- (str.indexof name \\\" \\\") 1)) 1 3))\")",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.at name 2))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.at name 1))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.at name 1))"
    ],
    "time_diff_ms": 1042.011,
    "constants": [
      [
        1
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.substr name 1 (str.indexof name \" \")))"
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        "-"
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2,
        "+"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1
      ],
      [
        "",
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        0,
        1,
        "-"
      ],
      [
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        " ",
        "-"
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ],
      [
        "(str.at (str.replace (str.replace name \"-\" \"\") \"+\" \"\") 1)"
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1,
        2
      ],
      [
        1
      ],
      [
        "(str.at (str.substr name 1 (- (str.indexof name \" \") 1)) 1 3))"
      ],
      [
        1
      ],
      [
        1,
        3
      ],
      [
        2
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      "(str.at (str.replace (str.replace name \"-\" \"\") \"+\" \"\") 1)",
      "(str.at (str.substr name 1 (- (str.indexof name \" \") 1)) 1 3))",
      3,
      "-",
      " ",
      "(str.substr name 1 (str.indexof name \" \")))",
      "+"
    ]
  },
  "11604909.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.++ \" \" (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) -1)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 4)))",
      "(str.substr _arg_0\n               (+ (str.indexof _arg_0 \" \" 0) 1)\n               (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \")\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" 1))",
      "(define-fun f ((s String)) String\n  (str.substr s\n              (+ (str.indexof s \" \" 0) 1)\n              (str.indexof s \" \" (+ (str.indexof s \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (ite (str.contains _arg_0 \".\") (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \")) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f ((s String)) String\n  (str.++ \" \"\n          (str.substr s (+ 1 (str.indexof s \" \")) (- (str.indexof s \" \") 1)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) 0))",
      "(ite (str.contains _arg_0 \"Linux\")\n     (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"Linux\")) (+ 3 (str.indexof _arg_0 \"Linux\")))\n     (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (+ 3 (str.indexof _arg_0 \" \"))))",
      "(define-fun f ((s String)) String\n  (str.substr s\n              (+ (str.indexof s \" \" 0) 1)\n              (str.indexof s \" \" (str.indexof s \" \" 0))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \")))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\"",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f ((s String)) String\n  (str.substr s \n              (+ (str.indexof s \" \" 0) 1) \n              (- (str.indexof s \" \" 0) 1)))",
      "\"(str.to.int (str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")))\"",
      "(str.substr _arg_0 \n             (+ (str.indexof _arg_0 \" \" 0) 1) \n             (- \n               (str.indexof _arg_0 \" \" 0) \n               (+ (str.indexof (str.substr _arg_0 \n                                         (+ (str.indexof _arg_0 \" \" 0) 1) \n                                         (str.len _arg_0)) \n                                  \" \" 0) 1)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \")\n            (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (- (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1)))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (+ (str.indexof _arg_0 \\\".\\\") 1))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\"))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) )\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) -1))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \" \"))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 0)\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 3))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(str.substr _arg_0\n           (str.indexof _arg_0 \" \")\n           (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))))))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \")\n            (str.indexof _arg_0 \" \" 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) 100) 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) 0))",
      "\"(str.to.int (str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")))\"",
      "(str.substr _arg_0\n           (str.indexof _arg_0 \" \")\n           (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \")\n            (str.indexof _arg_0 \" \" 1))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \")\n            (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) -1))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 \" \" 0) \n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0\n           (+ (str.indexof _arg_0 \" \" 0) 1)\n           (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \")\n            (str.indexof _arg_0 \" \" 1)) )",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0\n            (+ (str.indexof _arg_0 \" \")\n               1)\n            (str.indexof _arg_0 \" \" (+\n               (str.indexof _arg_0 \" \")\n               1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0\n              (str.indexof _arg_0 \" \")\n              (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) -1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len \" \") (str.indexof _arg_0 \" \"))) 1))",
      "(str.substr _arg_0\n            (+ (str.indexof _arg_0 \" \") 1)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 (str.to.str (+ 1 (str.indexof _arg_0 \" \"))) 0)\n            (-\n              (str.indexof _arg_0 \".\")\n              (str.indexof _arg_0 (str.to.str (+ 1 (str.indexof _arg_0 \" \"))) 0)\n            )\n)",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) 3))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 \" \" 0) \n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 \" \" 0) \n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0\n             (str.indexof _arg_0 \" \")\n             (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) 3))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \")))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (str.indexof _arg_0 \\\" \\\")))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \")))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\" 0) (str.indexof _arg_0 \\\" \\\" (- (str.len _arg_0) 1)))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \".\" 0) 3))\"",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (+ (str.indexof _arg_0 \\\".\\\") 1))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \")))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\""
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.++ \" \" (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" 1)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \" \" 0) 1) (str.indexof s \" \" (+ (str.indexof s \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (ite (str.contains _arg_0 \".\") (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \")) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))))",
      "(define-fun f (_arg_0 String) String (str.++ \" \" (str.substr s (+ 1 (str.indexof s \" \")) (- (str.indexof s \" \") 1))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) 0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"Linux\") (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"Linux\")) (+ 3 (str.indexof _arg_0 \"Linux\"))) (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (+ 3 (str.indexof _arg_0 \" \")))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \" \" 0) 1) (str.indexof s \" \" (str.indexof s \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \" \" 0) 1) (- (str.indexof s \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.to.int (str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (- (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1)))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (+ (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\"))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) )\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) -1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)) \" \")))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") 0)\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 3))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.substr _arg_0 (- (str.indexof _arg_0 \" \") 1) 100) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) 0)))",
      "(define-fun f (_arg_0 String) String \"(str.to.int (str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 (str.at _arg_0 (- (str.len _arg_0) 1)) -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len \" \") (str.indexof _arg_0 \" \"))) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (str.to.str (+ 1 (str.indexof _arg_0 \" \"))) 0) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 (str.to.str (+ 1 (str.indexof _arg_0 \" \"))) 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) 3))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) 3))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\" \\\") 1) (str.indexof _arg_0 \\\" \\\")))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\" 0) (str.indexof _arg_0 \\\" \\\" (- (str.len _arg_0) 1)))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (+ (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \".\") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\")"
    ],
    "time_diff_ms": 1672.549,
    "constants": [
      [
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        4
      ],
      [
        0,
        1,
        " "
      ],
      [
        " "
      ],
      [
        1,
        " ",
        "."
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " ",
        "."
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))"
      ],
      [
        1,
        " ",
        "."
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        3,
        "Linux",
        6,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " ",
        "."
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.to.int (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (+ (str.indexof _arg_0 \".\") 1))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        1,
        " ",
        "."
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) )"
      ],
      [
        1,
        " ",
        "."
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \")))"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") 0)"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 3))"
      ],
      [
        1,
        " ",
        "."
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        100
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "(str.to.int (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))"
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        3
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))"
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (+ (str.indexof _arg_0 \".\") 1))"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        "."
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))"
      ]
    ],
    "all_constants": [
      0,
      1,
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") 0)",
      3,
      4,
      "Linux",
      6,
      " ",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (+ (str.indexof _arg_0 \".\") 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (+ (str.indexof _arg_0 \".\") 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 3))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) )",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))",
      100,
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 ",
      ".",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.to.int (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      -1
    ]
  },
  "phone-9-long.sl": {
    "completions": [
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \"-\" \".\"))\"",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "\"(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\") \"\") \"-\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\") \".\") \"+\") \"0\") \"0\") \"1\") \"1\") \"2\") \"2\") \"3\") \"3\") \"4\") \"4\") \"5\") \"5\") \"6\") \"6\") \"7\") \"7\") \"8\") \"8\") \"9\") \"9\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\"))\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\"\n          (str.substr name 4 3) \".\"\n          (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                name \" \" \"\") \"+\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3) \".\"\n    (str.substr name 12 3)\n  )\n)",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3) \".\"\n    (str.substr name 12 3)))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\") \"+\") \".\") \"-\") \" \") \"+\") \"-\") \".\") (str.at name 0) (str.at name 1)) (str.at name 2)) (str.at name 3) (str.at name 4) (str.at name 5) (str.at name 6) (str.at name 7) (str.at name 8) (str.at name 9) (str.at name 10) (str.at name 11) (str.at name 12) (str.at name 13) (str.at name 14) (str.at name 15) (str.at name 16) (str.at name 17) (str.at name 18) (str.at name 19) (str.at name 20) (str.at name 21) (str.at name 22) (str.at name 23) (str.at name 24) (str.at name 25) (str.at name 26) (str.at name 27) (str.at name 28) (str.at name 29) (str.at name 30) (str.at name 31) (str.at name 32) (str.at name 33) (str.at name 34) (str.at name 35) (str.at name 36) (str.at name 37) (str.at name 38) (str.at name 39) (str.at name 40) (str.at name 41) (str.at name 42) (str.at name 43) (str.at name 44) (str.at name 45) (str.at name 46) (str.at name 47) (str.at name 48) (str.at name 49) (str.at name 50) (str.at name 51) (str.at name 52) (str.at name 53) (str.at name 54) (str.at name 55) (str.at name 56) (str.at name 57) (str.at name 58) (str.at name 59) (str.at name 60) (str.at name 61) (str.at name 62) (str.at name 63) (str.at name 64) (str.at name 65) (str.at name 66) (str.at name 67) (str.at name 68) (str.at name 69) (str.at name 70) (str.at name 71) (str.at name 72) (str.at name 73) (str.at name 74) (str.at name 75) (str.at name 76) (str.at name 77) (str.at name 78) (str.at name 79) (str.at name 80) (str.at name 81) (str.at name 82) (str.at name 83) (str.at name 84) (str.at name 85) (str.at name 86) (str.at name 87) (str.at name 88) (str.at name 89) (str.at name 90) (str.at name 91) (str.at name 92) (str.at name 93) (str.at name 94) (str.at name 95) (str.at name 96) (str.at name 97) (str.at name 98) (str.at name 99) (str.at name 100) (str.at name 101) (str.at name 102) (str.at name 103) (str.at name 104) (str.at name 105) (str.at name 106) (str.at name 107) (str.at name 108) (str.at name 109) (str.at name 110) (str.at name 111) (str.at name 112) (str.at name 113) (str.at name 114) (str.at name 115) (str.at name 116) (str.at name 117) (str.at name 118) (str.at name 119) (str.at name 120) (str.at name 121) (str.at name 122) (str.at name 123) (str.at name 124) (str.at name 125) (str.at name 126) (str.at name 127) (str.at name 128) (str.at name 129) (str.at name 130) (str.at name 131) (str.at name 132) (str.at name 133) (str.at name 134) (str.at name 135) (str.at name 136) (str.at name 137) (str.at name 138) (str.at name 139) (str.at name 140) (str.at name 141) (str.at name 142) (str.at name 143) (str.at name 144) (str.at name 145) (str.at name 146) (str.at name 147) (str.at name 148) (str.at name 149) (str.at name 150) (str.at name 151) (str.at name 152) (str.at name 153) (str.at name 154) (str.at name 155) (str.at name 156) (str.at name 157) (str.at name 158) (str.at name 159) (str.at name 160) (str.at name 161) (str.at name 162) (str.at name 163) (str.at name 164) (str.at name 165) (str.at name 166) (str.at name 167) (str.at name 168) (str.at name 169) (str.at name 170) (str.at name 171) (str.at name 172) (str.at name 173) (str.at name 174) (str.at name 175) (str.at name 176) (str.at name 177) (str.at name 178) (str.at name 179) (str.at name 180) (str.at name 181) (str.at name 182) (str.at name 183) (str.at name 184) (str.at name 185) (str.at name 186) (str.at name 187) (str.at name 188) (str.at name 189) (str.at name 190) (str.at name 191) (str.at name 192) (str.at name 193) (str.at name 194) (str.at name 195) (str.at name 196) (str.at name 197) (str.at name 198) (str.at name 199) (str.at name 200) (str.at name 201) (str.at name 202) (str.at name 203) (str.at name 204) (str.at name 205) (str.at name 206) (str.at name 207) (str.at name 208) (str.at name 209) (str.at name 210) (str.at name 211) (str.at name 212) (str.at name 213) (str.at name 214) (str.at name 215) (str.at name 216) (str.at name 217) (str.at name 218) (str.at name 219) (str.at name 220) (str.at name 221) (str.at name 222) (str.at name 223) (str.at name 224) (str.at name 225) (str.at name 226) (str.at name 227) (str.at name 228) (str.at name 229) (str.at name 230) (str.at name 231) (str.at name 232) (str.at name 233) (str.at name 234) (str.at name 235) (str.at name 236) (str.at name 237) (str.at name 238) (str.at name 239) (str.at name 240) (str.at name 241) (str.at name 242) (str.at name 243) (str.at name 244) (str.at name 245) (str.at name 246) (str.at name 247) (str.at name 248) (str.at name 249) (str.at name 250) (str.at name 251) (str.at name 252) (str.at name 253) (str.at name 254) (str.at name 255) (str.at name 256) (str.at name 257) (str.at name 258) (str.at name 259) (str.at name 260) (str.at name 261) (str.at name 262) (str.at name 263) (str.at name 264) (str.at name 265) (str.at name 266) (str.at name 267) (str.at name 268) (str.at name 269) (str.at name 270) (str.at name 271) (str.at name 272) (str.at name 273) (str.at name 274) (str.at name 275) (str.at name 276) (str.at name 277) (str.at name 278) (str.at name 279) (str.at name 280) (str.at name 281) (str.at name 282) (str.at name 283) (str.at name 284) (str.at name 285) (str.at name 286) (str.at name 287) (str.at name 288) (str.at name 289) (str.at name 290) (str.at name 291) (str.at name 292) (str.at name 293) (str.at name 294) (str.at name 295) (str.at name 296) (str.at name 297) (str.at name 298) (str.at name 299) (str.at name 300) (str.at name 301) (str.at name 302) (str.at name 303) (str.at name 304) (str.at name 305) (str.at name 306) (str.at name 307) (str.at name 308) (str.at name 309) (str.at name 310) (str.at name 311) (str.at name 312) (str.at name 313) (str.at name 314) (str.at name 315) (str.at name 316) (str.at name 317) (str.at name 318) (str.at name 319) (str.at name 320) (str.at name 321) (str.at name 322) (str.at name 323) (str.at name 324) (str.at name 325) (str.at name 326) (str.at name 327) (str.at name 328) (str.at name 329) (str.at name 330) (str.at name 331) (str.at name 332) (str.at name 333) (str.at name 334) (str.at name 335) (str.at name 336) (str.at name 337) (str.at name 338) (str.at name 339) (str.at name 340) (str.at name 341) (str.at name 342) (str.at name 343) (str.at name 344) (str.at name 345) (str.at name 346) (str.at name 347) (str.at name 348) (str.at name 349) (str.at name 350) (str.at name 351) (str.at name 352) (str.at name 353) (str.at name 354) (str.at name 355) (str.at name 356) (str.at name 357) (str.at name 358) (str.at name 359) (str.at name 360) (str.at name 361) (str.at name 362) (str.at name 363) (str.at name 364) (str.at name 365) (str.at name 366) (str.at name 367) (str.at name 368) (str.at name 369) (str.at name 370) (str.at name 371) (str.at name 372) (str.at name 373) (str.at name 374) (str.at name 375) (str.at name 376) (str.at name 377) (str.at name 378) (str.at name 379) (str.at name 380) (str.at name 381) (str.at name 382) (str.at name 383) (str.at name 384) (str.at name 385) (str.at name 386) (str.at name 387) (str.at name 388) (str.at name 389) (str.at name 390) (str.at name 391) (str.at name 392) (str.at name 393) (str.at name 394) (str.at name 395) (str.at name 396) (str.at name 397) (str.at name 398) (str.at name 399) (str.at name 400) (str.at name 401) (str.at name 402) (str.at name 403) (str.at name 404) (str.at name 405) (str.at name 406) (str.at name 407) (str.at name 408) (str.at name 409) (str.at name 410) (str.at name 411) (str.at name 412) (str.at name 413) (str.at name 414) (str.at name 415) (str.at name 416) (str.at name 417) (str.at name 418) (str.at name 419) (str.at name 420) (str.at name 421) (str.at name 422) (str.at name 423) (str.at name 424) (str.at name 425) (str.at name 426) (str.at name 427) (str.at name 428) (str.at name 429) (str.at name 430) (str.at name 431) (str.at name 432) (str.at name 433) (str.at name 434) (str.at name 435) (str.at name 436) (str.at name 437) (str.at name 438) (str.at name 439) (str.at name 440) (str.at name 441) (str.at name 442) (str.at name 443) (str.at name 444) (str.at name 445) (str.at name 446) (str.at name 447) (str.at name 448) (str.at name 449) (str.at name 450) (str.at name 451) (str.at name 452) (str.at name 453) (str.at name 454) (str.at name 455) (str.at name 456) (str.at name 457) (str.at name 458) (str.at name 459) (str.at name 460) (str.at name 461) (str.at name 462) (str.at name 463) (str.at name 464) (str.at name 465) (str.at name 466) (str.at name 467) (str.at name 468) (str.at name 469) (str.at name 470) (str.at name 471) (str.at name 472) (str.at name 473) (str.at name 474) (str.at name 475) (str.at name 476) (str.at name 477) (str.at name 478) (str.at name 479) (str.at name 480) (str.at name 481) (str.at name 482) (str.at name 483) (str.at name 484) (str.at name 485) (str.at name 486) (str.at name 487) (str.at name 488) (str.at name 489) (str.at name 490) (str.at name 491) (str.at name 492) (str.at name 493) (str.at name 494) (str.at name 495) (str.at name 496) (str.at name 497) (str.at name 498) (str.at name 499) (str.at name 500) (str.at name 501) (str.at name 502) (str.at name 503) (str.at name 504) (str.at name 505) (str.at name 506) (str.at name 507) (str.at name 508) (str.at name 509) (str.at name 510) (str.at name 511) (str.at name 512) (str.at name 513) (str.at name 514) (str.at name 515) (str.at name 516) (str.at name 517) (str.at name 518) (str.at name 519) (str.at name 520) (str.at name 521) (str.at name 522) (str.at name 523) (str.at name 524) (str.at name 525) (str.at name 526) (str.at name 527) (str.at name 528) (str.at name 529) (str.at name 530) (str.at name 531) (str.at name 532) (str.at name 533) (str.at name 534) (str.at name 535) (str.at name 536) (str.at name 537) (str.at name 538) (str.at name 539) (str.at name 540) (str.at name 541) (str.at name 542) (str.at name 543) (str.at name 544) (str.at name 545) (str.at name 546) (str.at name 547) (str.at name 548) (str.at name 549) (str.at name 550) (str.at name 551",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\"\n          (str.substr name 4 3) \".\"\n          (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\"\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"\\\" \\\"+\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")))",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"\\\" \\\"+\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\"\\\") \\\" \\\" \\\"\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"..\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.++ (str.substr name 0 3) \\\".\\\" (str.substr name 4 3) \\\".\\\" (str.substr name 8 3))\"",
      "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\""
    ],
    "solutions": [
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      null,
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      null,
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\"\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\"))\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"+\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      null,
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      null,
      null,
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\"\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"\\\" \\\"+\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"\\\" \\\"+\\\")\")",
      null,
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\"\\\") \\\" \\\" \\\"\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace ()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"..\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 3) \\\".\\\" (str.substr name 4 3) \\\".\\\" (str.substr name 8 3))\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\".\\\" \\\".\\\")\")"
    ],
    "time_diff_ms": 857.163,
    "constants": [
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        "."
      ],
      null,
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\")"
      ],
      [
        "-",
        " ",
        "."
      ],
      null,
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"+\" \"\") \" \" \".\"))"
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      null,
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      null,
      null,
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \"\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"+\" \"\")"
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"\" \"+\")"
      ],
      [
        "-",
        " ",
        "+",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"+\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"\" \"+\")"
      ],
      null,
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \"\") \" \" \"\") \" \" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"..\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))"
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")"
      ]
    ],
    "all_constants": [
      0,
      "",
      3,
      4,
      8,
      " ",
      12,
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \"\") \".\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \"\") \" \" \"\") \" \" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"+\" \"\") \" \" \".\"))",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "-",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"\" \"+\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"+\" \".\")",
      "(str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \" \" \".\")",
      "(str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3))",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \"\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"+\" \"\")",
      "(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \".\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "+",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))",
      ".",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \"\") \"+\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"..\" \".\")"
    ]
  },
  "univ_4_short.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" , \" \"\") \" , USA\" \"\") \" , PA\" \"\") \" , CT\" \"\") \" , CA\" \"\") \" , MD\" \"\") \" , New York\" \"\") \" , NY\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York\" \"\") \" , New York",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 2 100) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace col2 \"USA\" \"\") 1 (- (str.len (str.replace col2 \"USA\" \"\")) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", \" 0) 1)))",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\",\\\" \\\", USA\\\") \\\", PA\\\" \\\", USA\\\") \\\", CT\\\" \\\", USA\\\") \\\", CA\\\" \\\", USA\\\") \\\", MD\\\" \\\", USA\\\") \\\", NY\\\" \\\", USA\\\") \\\", New York\\\" \\\", NY\\\") \\\", Ithaca\\\" \\\", NY\\\") \\\", Philadelphia\\\" \\\", PA\\\") \\\", College Park\\\" \\\", MD\\\") \\\", Ann Arbor\\\" \\\", MI\\\") \\\", Los Angeles\\\" \\\", CA\\\") \\\", Phialdelphia\\\" \\\", PA\\\") 0 (str.len col1))\"",
      "(define-fun f (col1 String col2 String) String\n  (str.substr \n    (str.replace \n      (str.++ col1 \", \" col2 \", USA\") \n      \"Phialdelphia\" \"Philadelphia\") \n    0 25))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"PA\\\" \\\"PA\\\") \\\"MI\\\" \\\"MI\\\") \\\"MD\\\" \\\"MD\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"NY\\\" \\\"NY\\\")\"",
      "\"(str.substr (str.substr (str.replace (str.++ col1 \\\",\\\" col2) \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.++ col1 \\\",\\\" col2) \\\",\\\" 0) 1) (- (str.len (str.indexof (str.++ col1 \\\",\\\" col2) \\\",\\\" 0)) 1)) 2 (- (str.len (str.indexof (str.++ col1 \\\",\\\" col2) \\\",\\\" 0)) 1))\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"PA\\\" \\\"PA\\\") \\\"MI\\\" \\\"MI\\\")\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \", PA\" \", PA, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") \", NY\" \", NY, USA\") \"New York, NY\" \"New York, NY, USA\") \"New York, New York\" \"New York, NY, USA\"))",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (str.len col2)) \\\", USA\\\")\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"New York\\\" \\\"New York\\\") \\\"PA\\\" \\\"PA\\\") \\\"CT\\\" \\\"CT\\\") \\\"CA\\\" \\\"CA\\\") \\\"MD\\\" \\\"MD\\\") \\\"NY\\\" \\\"NY\\\") \\\"MI\\\" \\\"MI\\\") 0 100)\"",
      "(define-fun f (col1 String col2 String) String\n  (str.++ \n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))\n    (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)))\n    \", USA\"))",
      "\"(str.substr (str.replace (str.substr (str.replace (str.replace (str.++ col1 \\\",\\\" col2) \\\"New York\\\" \\\"NY\\\") \\\", USA\\\" \\\", USA\\\") 0 (- (str.indexof (str.replace col1 \\\",\\\" \\\",\\\") \\\",\\\" 1) 1)) 0 (- (str.indexof (str.replace col1 \\\",\\\" \\\",\\\") \\\",\\\" 1) 1) col1) 0 (- (str.indexof (str.replace col1 \\\",\\\" \\\",\\\") \\\",\\\" 1) 1) col1)\"",
      "(define-fun f (col1 String col2 String) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\")\n               \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\"\n               \"Los Angeles, CA\" \"Los Angeles, CA, USA\"\n               \"Ithaca, New York, USA\" \"Ithaca, NY, USA\"\n               \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\"\n               \"College Park, MD\" \"College Park, MD, USA\"\n               \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\"\n               \"New York, NY, USA\" \"New York, NY, USA\"\n               \"New York, New York, USA\" \"New York, NY, USA\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of \\\" \\\"\\\") \\\"University \\\" \\\"\\\") \\\" of \\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\"Michigan\\\" \\\"Ann Arbor\\\") \\\"Ithaca, New York\\\" \\\"Ithaca, NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\")\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") 0 8)\"",
      "\"(str.substr (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" , \" \"\") \" , \" \"\") \", \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \"\") \" , \" \") 0 (- (str.indexof col2 \",\") 1) col2) 0 (- (str.indexof (str.replace col2 \", USA\" \"\") \",\") 1) col2))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 0 100))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"College Park\" \"MD\")\n    0 999))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 0 (- (str.len \"Phialdelphia, PA, USA\") 4)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.at (str.replace (str.replace col2 col1 \"\") \",\" \"\") 1)\n    \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.replace col2 \"New York\" \"NY\")\n        \"University of \" \"\")\n      \"College Park\" \"CP\")\n    0\n    (-\n      (str.indexof col2 \",\" 0)\n      1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.++ col1 \", \" col2 \", USA\") \n      \", USA\" \n      \"\") \n    0 \n    (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", USA\" 0) \n       2)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Ithaca, New York\" \"Ithaca, NY\") \"College Park\" \"College Park, MD\") \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\") \"New York, New York\" \"New York, NY\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Philadelphia, PA\" \"Philadelphia, PA, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                col1\n                                                                                                \"University of Pennsylvania\"\n                                                                                                \"Phialdelphia\")\n                                                                                              \"UCLA\"\n                                                                                              \"Los Angeles\")\n                                                                                            \"Cornell University\"\n                                                                                            \"Ithaca\")\n                                                                                          \"Penn\"\n                                                                                          \"Philadelphia\")\n                                                                                        \"University of Maryland College Park\"\n                                                                                        \"College Park\")\n                                                                                      \"University of Michigan\"\n                                                                                      \"Ann Arbor\")\n                                                                                    \"Columbia University\"\n                                                                                    \"New York\")\n                                                                                  \"NYU\"\n                                                                                  \"New York\")\n                                                                                \"Phialdelphia\"\n                                                                                \"PA\")\n                                                                              \"Los Angeles\"\n                                                                              \"CA\")\n                                                                            \"Ithaca\"\n                                                                            \"NY\")\n                                                                          \"Philadelphia\"\n                                                                          \"PA\")\n                                                                        \"College Park\"\n                                                                        \"MD\")\n                                                                      \"Ann Arbor\"\n                                                                      \"MI\")\n                                                                    \"New York\"\n                                                                    \"NY\")\n                                                                  \"New York\"\n                                                                  \"NY\")\n                                                                \"New York\"\n                                                                \"NY\")\n                                                              \"New York\"\n                                                              \"NY\")\n                                                            \"New York\"\n                                                            \"NY\")\n                                                          \"New York\"\n                                                          \"NY\")\n                                                        \"New York\"\n                                                        \"NY\")\n                                                      \"New York\"\n                                                      \"NY\")\n                                                    \"New York\"\n                                                    \"NY\")\n                                                  \"New York\"\n                                                  \"NY\")\n                                                \"New York\"\n                                                \"NY\")\n                                              \"New York\"\n                                              \"NY\")\n                                            \"New York\"\n                                            \"NY\")\n                                          \"New York\"\n                                          \"NY\")\n                                        \"New York\"\n                                        \"NY\")\n                                      \"New York\"\n                                      \"NY\")\n                                    \"New York\"\n                                    \"NY\")\n                                  \"New York\"\n                                  \"NY\")\n                                \"New York\"\n                                \"NY\")\n                              \"New York\"\n                              \"NY\")\n                            \"New York\"\n                            \"NY\")\n                          \"New York\"\n                          \"NY\")\n                        \"New York\"\n                        \"NY\")\n                      \"New York\"\n                      \"NY\")\n                    \"New York\"\n                    \"NY\")\n                  \"New York\"\n                  \"NY\")\n                \"New York\"\n                \"NY\")\n              \"New York\"\n              \"NY\")\n            \"New York\"\n            \"NY\")\n          \"New York\"\n          \"NY\")\n        \"New York\"\n        \"NY\")\n      \"New York\"\n      \"NY\")\n    \"New York\"\n    \"NY\"))))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\")\n    0\n    (- (str.indexof col2 \",\" 0) 1)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.++ col1 \", \" col2 \", USA\")\n      \"Phialdelphia, PA, USA\"\n      \"Philadelphia, PA, USA\")\n    0\n    (- (str.len col1) 2)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                col2\n                                                                                                                                                \"New York\"\n                                                                                                                                                \"NY\")\n                                                                                                                                              \"New York\"\n                                                                                                                                              \"NY\")\n                                                                            \"Michigan\"\n                                                                            \"MI\")\n                                                                          \"Maryland\"\n                                                                          \"MD\")\n                                                                      \"California\"\n                                                                      \"CA\")\n                                                                    \"Connecticut\"\n                                                                    \"CT\")\n                                                                \"Pennsylvania\"\n                                                                \"PA\")\n                                                              \"Philadelphia\"\n                                                              \"PA\")\n                                                            \"Phialdelphia\"\n                                                            \"PA\")\n                                                          \"University of\"\n                                                          \"\")\n                                                        \"University of\"\n                                                        \"\")\n                                                      \"University of\"\n                                                      \"\")\n                                                    \"University of\"\n                                                    \"\")\n                                                  \"University of\"\n                                                  \"\")\n                                                \"University of\"\n                                                \"\")\n                                              \"University of\"\n                                              \"\")\n                                            \"University of\"\n                                            \"\")\n                                          \"University of\"\n                                          \"\")\n                                        \"University of\"\n                                        \"\")\n                                      \"University of\"\n                                      \"\")\n                                    \"University of\"\n                                    \"\")\n                                  \"University of\"\n                                  \"\")\n                                \"University of\"\n                                \"\")\n                              \"University of\"\n                              \"\")\n                            \"University of\"\n                            \"\")\n                          \"University of\"\n                          \"\")\n                        \"University of\"\n                        \"\")\n                      \"University of\"\n                      \"\")\n                    \"University of\"\n                    \"\")\n                  \"University of\"\n                  \"\")\n                \"University of\"\n                \"\")\n              \"University of\"\n              \"\")\n            \"University of\"\n            \"\")\n          \"University of\"\n          \"\")\n        \"University of\"\n        \"\")\n      \"University of \"\n      \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace col2 col1 \"\") 1 (- (str.len (str.replace col2 col1 \"\")) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \", Phialdelphia, PA, USA\" \"\") \"UCLA\" \"Los Angeles\") \", Los Angeles, CA\" \"\") \"Cornell University\" \"Ithaca\") \", Ithaca, New York, USA\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia\") \", Philadelphia, PA, USA\" \"\") \"University of Maryland College Park\" \"College Park\") \", College Park, MD\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor\") \", Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\") \"Columbia University\" \"New York\") \", New York, NY, USA\" \"New York, NY, USA\") \"NYU\" \"New York\") \", New York, NY, USA\" \"New York, NY, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.++ col1 \", \" col2 \", USA\") \n      \"Phialdelphia\" \"Philadelphia\") \n    0 29))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\")\n               \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\"\n               \"Los Angeles, CA\" \"Los Angeles, CA, USA\"\n               \"Ithaca, New York, USA\" \"Ithaca, NY, USA\"\n               \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\"\n               \"College Park, MD\" \"College Park, MD, USA\"\n               \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\"\n               \"New York, NY, USA\" \"New York, NY, USA\"\n               \"New York, New York, USA\" \"New York, NY, USA\"))",
      "\"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"Phialdelphia, PA, USA\\\" \\\"Phialdelphia, PA, USA\\\") 13 999)\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.replace col1 \"University of \" \"\")\n        \"University\" \"\")\n      \"College Park\" \"CP\")\n    0\n    (str.indexof col1 \",\" 0)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.at col1 0 0) \n    (str.at col1 1 1) \n    \", \" \n    (str.at col1 3 0) \n    (str.at col1 4 1) \n    \", USA\"))",
      "\"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\"",
      "\"(lambda (col1 col2) (str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") 0 (- (str.len col2) 5)))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.replace \n      (str.replace \n        (str.replace col2 \"New York\" \"NY\") \n        \"University of \" \"\") \n      \"University \" \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 3 100)\n    \", \"\n    (str.substr col2 0 2)\n    \", USA\"\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.substr (str.++ col1 \", \" col2 \", USA\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", \" 0) 1) (- (str.len (str.++ col1 \", \" col2 \", USA\")) 5) \"USA\" \"PA\" \"CT\" \"CA\" \"MD\" \"NY\" \"New York\" \"MI\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col1 0 (str.indexof col1 \",\" 0))\n    \", \"\n    (str.substr col2 1 (str.indexof col2 \",\" 0))\n    \", USA\"\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col2 3 100) \", \" (str.substr col1 (- (str.len col1) 4) 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))\n    \", \"\n    (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)))\n    \", USA\"\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr \n        (str.replace \n            (str.++ col1 \", \" col2 \", USA\") \n            \"Phialdelphia\" \"Philadelphia\") \n        0 \n        (- (str.indexof col1 \",\" 0) 1)\n    )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca, New York\" \"Ithaca, NY\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca, New York\" \"Ithaca, NY\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") 0 100))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (ite (str.contains col2 \"New York\") \"New York\" (str.at col2 0))\n    \", \"\n    (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 (+ (str.indexof col2 \" \" 0) 1)))\n    \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace col2 \"New York\" \"NY\") \n      \"New York\" \"NY\") \n    0 \n    (- (str.indexof col2 \",\" 0) 1)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  col1 \"University of Pennsylvania\" \"Phialdelphia\") \n                                                \"UCLA\" \"Los Angeles\") \n                                              \"Cornell University\" \"Ithaca\") \n                                            \"Penn\" \"Philadelphia\") \n                                          \"University of Maryland College Park\" \"College Park\") \n                                        \"University of Michigan\" \"Ann Arbor\") \n                                      \"Columbia University\" \"New York\") \n                                    \"NYU\" \"New York\") \n                                  \"New York\" \"New York\") \n                                \"PA\" \"PA\") \n                              \"CA\" \"CA\") \n                            \"NY\" \"NY\") \n                          \"MI\" \"MI\") \n                        \"MD\" \"MD\") \n                      \"USA\" \"USA\") \n                    \" \" \", \") \n                  \"New York\" \"NY\") \n                \"New York\" \"NY\") \n              \"New York\" \"NY\") \n            \"New York\" \"NY\") \n          \"New York\" \"NY\") \n        \"New York\" \"NY\") \n      \"New York\" \"NY\") \n    \"New York\" \"NY\"))",
      "\"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))\n    (ite \n      (str.contains col2 \",\")\n      \", USA\"\n      \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.replace (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \",\" \"USA\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace col2 \" \" \", \") 0 (str.indexof col2 \",\" 0)) (str.substr (str.replace col2 \" \" \", \") (+ 2 (str.indexof col2 \",\" 0)) (str.len col2)) \", USA\"))",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of\\\" \\\"\\\") \\\"University\\\" \\\"\\\") \\\"Cornell\\\" \\\"\\\") \\\"Penn\\\" \\\"\\\") \\\"College Park\\\" \\\"\\\") \\\"Michigan\\\" \\\"\\\") \\\"Columbia\\\" \\\"\\\") \\\"NYU\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1)) 2 (- (str.indexof col1 \\\",\\\" 0) (str.indexof col1 \\\",\\\" 0 1)))\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Los Angeles\\\" \\\"CA\\\") \\\"Philadelphia\\\" \\\"PA\\\") \\\"Ithaca\\\" \\\"NY\\\") \\\"College Park\\\" \\\"MD\\\") \\\"Ann Arbor\\\" \\\"MI\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2)) \", USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA\" \"Philadelphia, PA\"\n    \"Los Angeles, CA\" \"Los Angeles, CA, USA\"\n    \"Ithaca, New York\" \"Ithaca, NY, USA\"\n    \"College Park, MD\" \"College Park, MD, USA\"\n    \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\"\n    \"New York, New York\" \"New York, NY, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                col1 \"University of\" \"\")\n                                                                                                                                              \"University\" \"\")\n                                                                            \"College Park\" \"MD\")\n                                                                          \"University of Maryland\" \"College Park\")\n                                                                        \"University of Michigan\" \"Ann Arbor\")\n                                                                      \"University of Pennsylvania\" \"Philadelphia\")\n                                                                    \"Columbia University\" \"New York\")\n                                                                  \"Cornell University\" \"Ithaca\")\n                                                                \"UCLA\" \"Los Angeles\")\n                                                              \"NYU\" \"New York\")\n                                                            \"NY\" \"New York\")\n                                                          \"MI\" \"Ann Arbor\")\n                                                        \"PA\" \"Philadelphia\")\n                                                      \"USA\" \"\")\n                                                    \"CA\" \"USA\")\n                                                  \"CT\" \"CT\")\n                                                \"MD\" \"MD\")\n                                              \"NY\" \"New York\")\n                                            \"Phialdelphia\" \"Philadelphia\")\n                                          \"Los Angeles\" \"Los Angeles\")\n                                        \"Ithaca\" \"Ithaca\")\n                                      \"Ann Arbor\" \"Ann Arbor\")\n                                    \"New York\" \"New York\")\n                                  \"Philadelphia\" \"Philadelphia\")\n                                \"New York\" \"New York\")\n                              \"New York\" \"New York\")\n                            \"New York\" \"New York\")\n                          \"New York\" \"New York\")\n                        \"New York\" \"New York\")\n                      \"New York\" \"New York\")\n                    \"New York\" \"New York\")\n                  \"New York\" \"New York\")\n                \"New York\" \"New York\")\n              \"New York\" \"New York\")\n            \"New York\" \"New York\")\n          \"New York\" \"New York\")\n        \"New York\" \"New York\")\n      \"New York\" \"New York\")\n    \"New York\" \"New York\")\n  0 100))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace \n    (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace \n      (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace \n        (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\")\n        \"College Park\" \"College Park,\")\n      \"College\" \"College,\")\n    \"University\" \"University,\")\n  \"University of\" \"University of,\")\n\"University of
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \" of\" \"\") \",\") \"\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"New York\" \"NY\") \"Philadelphia\" \"Philadelphia\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.++ \n        (ite (str.contains col1 \"University\") \n            (str.substr col2 0 2)\n            (str.substr col2 0 3))\n        \", \" \n        (ite (str.contains col1 \"University\") \n            (str.substr col2 (- (str.len col2) 2) 2)\n            (ite (str.contains col1 \"New York\") \n                \"NY, USA\"\n                (str.substr col2 (- (str.len col2) 3) 2))\n        )\n    )\n)",
      "\"(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\") 0 (- (str.indexof col2 col1 0) 2))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of\\\" \\\"\\\") \\\"University\\\" \\\"\\\") \\\" of\\\" \\\"\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Cornell\\\" \\\"\\\") \\\"College Park\\\" \\\"\\\") \\\"University of Maryland\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"Columbia\\\" \\\"\\\") \\\"NYU\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof col1 \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 26))",
      "\"(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") col1 \"\") \", USA\" \"\") 2 (- (str.len (str.replace (str.replace (str.replace col2 col1 \"\") col1 \"\") \", USA\" \"\")) 2))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of \\\" \\\"\\\") \\\"University \\\" \\\"\\\") \\\" of \\\" \\\"\\\") \\\" College Park\\\" \\\"\\\") \\\" College\\\" \\\"\\\") \\\" Park\\\" \\\"\\\") \\\"University\\\" \\\"\\\") \\\"UCLA\\\" \\\"\\\") \\\"Cornell\\\" \\\"\\\") \\\"Penn\\\" \\\"\\\") \\\"University of Maryland\\\" \\\"\\\") \\\"University of Michigan\\\" \\\"\\\") 0 (- (str.len col1) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col1 0 (str.indexof col1 \",\" 0))\n    \", \"\n    (str.substr col2 0 (str.indexof col2 \",\" 0))\n    \", USA\"\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))\n    \", \"\n    (ite \n      (str.contains col2 \"Philadelphia\") \"PA\"\n      (ite \n        (str.contains col2 \"Los Angeles\") \"CA\"\n        (ite \n          (str.contains col2 \"Ithaca\") \"NY\"\n          (ite \n            (str.contains col2 \"College Park\") \"MD\"\n            (ite \n              (str.contains col2 \"Ann Arbor\") \"MI\"\n              (ite \n                (str.contains col2 \"New York\") \"NY\"\n                \"USA\"\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" , \" \"\") \" ,\") \"\") \", \" \"\") \" ,\" \"\") \" ,\") \"\" \"USA\") 0 (- (str.indexof col2 \",\") 1))",
      "\"(lambda (col1 col2) (str.substr (str.replace (str.replace (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") 0 (- (str.len col2) 1)))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of \\\" \\\"\\\") \\\"University \\\" \\\"\\\") \\\" of \\\" \\\"\\\") \\\" College Park\\\" \\\"\\\") \\\" College\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\" , USA\\\" \\\"\\\") \\\"New York\\\" \\\"NY\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1)) 100)\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" \"USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"USA\\\" ) col1 \\\"New York\\\") \\\", \\\" \\\", USA)\"",
      "\"(str.substr (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") col2 \\\"\\\") 1 (- (str.len col2) 1))\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ col2 (str.at col1 0) (str.at col1 1) \\\", USA\\\")\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") 0 (- (str.indexof col2 \\\",\\\" 0) 1)) 2)\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"CA\\\" \\\"Los Angeles\\\") \\\"New York\\\" \\\"NY\\\") \\\"Michigan\\\" \\\"Ann Arbor\\\") \\\"Ithaca\\\" \\\"Ithaca, NY\\\") \\\"MD\\\" \\\"College Park\\\") \\\"CT\\\" \\\"CT, USA\\\") \\\"PA\\\" \\\"PA, USA\\\") \\\"NY\\\" \\\"NY, USA\\\") \\\"USA\\\" \\\"USA\\\") 0 (- (str.len col1) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 23))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"College\" \"\") \" of\" \"\") \" , \" \"\") \", \" \"\") \"Ithaca\" \"Ithaca, NY\") \"Los Angeles\" \"Los Angeles, CA\") \"Ann Arbor\" \"Ann Arbor, MI\") \"Philadelphia\" \"Philadelphia, PA\") \"New York\" \"New York, NY\") \"Phialdelphia\" \"Phialdelphia, PA\") \"Los Angeles\" \"Los Angeles, CA\") \"Ithaca\" \"Ithaca, NY\") \"Philadelphia\" \"Philadelphia, PA\") \"College Park\" \"College Park, MD\") \"MI\" \"MI, USA\") \"NY\" \"NY, USA\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"MD\" \"MD, USA\") \"USA\" \"USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"Philadelphia, PA, USA\\\" \\\"Phialdelphia, PA, USA\\\") \\\"Los Angeles, CA\\\" \\\"Los Angeles, CA, USA\\\") \\\"Ithaca, New York, USA\\\" \\\"Ithaca, NY, USA\\\") \\\"Philadelphia, PA, USA\\\" \\\"Philadelphia, PA, USA\\\") \\\"College Park, MD\\\" \\\"College Park, MD, USA\\\") \\\"Ann Arbor, MI, USA\\\" \\\"Ann Arbor, MI, USA\\\") \\\"New York, NY, USA\\\" \\\"New York, NY, USA\\\") \\\"New York, New York, USA\\\" \\\"New York, NY, USA\\\") 0 (- (str.len col2) 5))\"",
      "\"(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\",\\\" 0)) (str.len col1)) 2 (str.len (str.replace col2 \\\",\\\" \\\"USA\\\")))\"",
      "\"(ite (str.contains col2 \\\",\\\") (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \\\",\\\" 0) 2))) (ite (str.contains col2 \\\", USA\\\") (str.substr col2 (+ (str.indexof col2 \\\", USA\\\") 2) (- (str.len col2) (+ (str.indexof col2 \\\", USA\\\") 2))) (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) (+ (str.indexof col2 \\\",\\\") 2)))))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (str.indexof col2 \",\" 0))\n    \", \"\n    (ite \n      (str.contains col2 \"PA\")\n      \"PA, USA\"\n      (ite \n        (str.contains col2 \"CT\")\n        \"CT, USA\"\n        (ite \n          (str.contains col2 \"CA\")\n          \"CA, USA\"\n          (ite \n            (str.contains col2 \"MD\")\n            \"MD, USA\"\n            (ite \n              (str.contains col2 \"NY\")\n              (ite \n                (str.contains col2 \"New York\")\n                \"New York, NY, USA\"\n                \"NY, USA\")\n              col2)))))))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\")\n               \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\"\n               \"Los Angeles, CA\" \"Los Angeles, CA, USA\"\n               \"Ithaca, New York, USA\" \"Ithaca, NY, USA\"\n               \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\"\n               \"College Park, MD\" \"College Park, MD, USA\"\n               \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\"\n               \"New York, NY, USA\" \"New York, NY, USA\"\n               \"New York, New York, USA\" \"New York, NY, USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\")\n               \"Phialdelphia, PA\" \"Philadelphia, PA\"\n               \"Los Angeles, CA\" \"Los Angeles, CA, USA\"\n               \"Ithaca, New York\" \"Ithaca, NY\"\n               \"College Park, MD\" \"College Park, MD, USA\"\n               \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\"\n               \"New York, New York\" \"New York, NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))))",
      "\"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\", USA\\\" 0) 1) )\"",
      "\"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") 0 12) 0 11) 0 10)\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\") \\\"Ithaca, New York\\\") \\\"Philadelphia\\\") \\\"College Park\\\") \\\"Ann Arbor\\\") \\\"New York, New York\\\") \\\"New York\\\") \\\"PA\\\" \\\"PA, USA\\\") \\\"CA\\\" \\\"CA, USA\\\") \\\"MD\\\" \\\"MD, USA\\\") \\\"NY\\\" \\\"NY, USA\\\")\""
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" , \" \"\") \" , USA\" \"\") \" , PA\" \"\") \" , CT\" \"\") \" , CA\" \"\") \" , MD\" \"\") \" , New York\" \"\") \" , NY\" \"\") \" , New York\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 100) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace col2 \"USA\" \"\") 1 (- (str.len (str.replace col2 \"USA\" \"\")) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"University of Maryland College Park\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"NYU\\\" \\\"New York\\\") \\\",\\\" \\\", USA\\\") \\\", PA\\\" \\\", USA\\\") \\\", CT\\\" \\\", USA\\\") \\\", CA\\\" \\\", USA\\\") \\\", MD\\\" \\\", USA\\\") \\\", NY\\\" \\\", USA\\\") \\\", New York\\\" \\\", NY\\\") \\\", Ithaca\\\" \\\", NY\\\") \\\", Philadelphia\\\" \\\", PA\\\") \\\", College Park\\\" \\\", MD\\\") \\\", Ann Arbor\\\" \\\", MI\\\") \\\", Los Angeles\\\" \\\", CA\\\") \\\", Phialdelphia\\\" \\\", PA\\\") 0 (str.len col1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 25))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"PA\\\" \\\"PA\\\") \\\"MI\\\" \\\"MI\\\") \\\"MD\\\" \\\"MD\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"NY\\\" \\\"NY\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.substr (str.replace (str.++ col1 \\\",\\\" col2) \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.++ col1 \\\",\\\" col2) \\\",\\\" 0) 1) (- (str.len (str.indexof (str.++ col1 \\\",\\\" col2) \\\",\\\" 0)) 1)) 2 (- (str.len (str.indexof (str.++ col1 \\\",\\\" col2) \\\",\\\" 0)) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"PA\\\" \\\"PA\\\") \\\"MI\\\" \\\"MI\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" ) \\\",\\\" \\\"\\\") \\\"USA\\\" \\\"USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \", PA\" \", PA, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") \", NY\" \", NY, USA\") \"New York, NY\" \"New York, NY, USA\") \"New York, New York\" \"New York, NY, USA\"))))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (str.len col2)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"New York\\\" \\\"New York\\\") \\\"PA\\\" \\\"PA\\\") \\\"CT\\\" \\\"CT\\\") \\\"CA\\\" \\\"CA\\\") \\\"MD\\\" \\\"MD\\\") \\\"NY\\\" \\\"NY\\\") \\\"MI\\\" \\\"MI\\\") 0 100)\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.substr (str.replace (str.replace (str.++ col1 \\\",\\\" col2) \\\"New York\\\" \\\"NY\\\") \\\", USA\\\" \\\", USA\\\") 0 (- (str.indexof (str.replace col1 \\\",\\\" \\\",\\\") \\\",\\\" 1) 1)) 0 (- (str.indexof (str.replace col1 \\\",\\\" \\\",\\\") \\\",\\\" 1) 1) col1) 0 (- (str.indexof (str.replace col1 \\\",\\\" \\\",\\\") \\\",\\\" 1) 1) col1)\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\" \"Los Angeles, CA\" \"Los Angeles, CA, USA\" \"Ithaca, New York, USA\" \"Ithaca, NY, USA\" \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\" \"College Park, MD\" \"College Park, MD, USA\" \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\" \"New York, NY, USA\" \"New York, NY, USA\" \"New York, New York, USA\" \"New York, NY, USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of \\\" \\\"\\\") \\\"University \\\" \\\"\\\") \\\" of \\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\"Michigan\\\" \\\"Ann Arbor\\\") \\\"Ithaca, New York\\\" \\\"Ithaca, NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\") 0 8)\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\", USA\\\" 0) 1))\")",
      null,
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 0 100))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"College Park\" \"MD\") 0 999))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 0 (- (str.len \"Phialdelphia, PA, USA\") 4)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at (str.replace (str.replace col2 col1 \"\") \",\" \"\") 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"College Park\" \"CP\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \", USA\" \"\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", USA\" 0) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Ithaca, New York\" \"Ithaca, NY\") \"College Park\" \"College Park, MD\") \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\") \"New York, New York\" \"New York, NY\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Philadelphia, PA\" \"Philadelphia, PA, USA\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"Phialdelphia\" \"PA\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"Philadelphia\" \"PA\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Philadelphia, PA, USA\") 0 (- (str.len col1) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"Michigan\" \"MI\") \"Maryland\" \"MD\") \"California\" \"CA\") \"Connecticut\" \"CT\") \"Pennsylvania\" \"PA\") \"Philadelphia\" \"PA\") \"Phialdelphia\" \"PA\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of\" \"\") \"University of \" \"\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace col2 col1 \"\") 1 (- (str.len (str.replace col2 col1 \"\")) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \", Phialdelphia, PA, USA\" \"\") \"UCLA\" \"Los Angeles\") \", Los Angeles, CA\" \"\") \"Cornell University\" \"Ithaca\") \", Ithaca, New York, USA\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia\") \", Philadelphia, PA, USA\" \"\") \"University of Maryland College Park\" \"College Park\") \", College Park, MD\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor\") \", Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\") \"Columbia University\" \"New York\") \", New York, NY, USA\" \"New York, NY, USA\") \"NYU\" \"New York\") \", New York, NY, USA\" \"New York, NY, USA\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 29))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\" \"Los Angeles, CA\" \"Los Angeles, CA, USA\" \"Ithaca, New York, USA\" \"Ithaca, NY, USA\" \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\" \"College Park, MD\" \"College Park, MD, USA\" \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\" \"New York, NY, USA\" \"New York, NY, USA\" \"New York, New York, USA\" \"New York, NY, USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"Phialdelphia, PA, USA\\\" \\\"Phialdelphia, PA, USA\\\") 13 999)\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University\" \"\") \"College Park\" \"CP\") 0 (str.indexof col1 \",\" 0)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 0 0) (str.at col1 1 1) \", \" (str.at col1 3 0) (str.at col1 4 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(lambda (col1 col2) (str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") 0 (- (str.len col2) 5)))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 3 100) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.substr (str.++ col1 \", \" col2 \", USA\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", \" 0) 1) (- (str.len (str.++ col1 \", \" col2 \", USA\")) 5) \"USA\" \"PA\" \"CT\" \"CA\" \"MD\" \"NY\" \"New York\" \"MI\")))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\" 0)) \", \" (str.substr col2 1 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 3 100) \", \" (str.substr col1 (- (str.len col1) 4) 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof col1 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca, New York\" \"Ithaca, NY\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca, New York\" \"Ithaca, NY\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (ite (str.contains col2 \"New York\") \"New York\" (str.at col2 0)) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 (+ (str.indexof col2 \" \" 0) 1))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"New York\" \"New York\") \"PA\" \"PA\") \"CA\" \"CA\") \"NY\" \"NY\") \"MI\" \"MI\") \"MD\" \"MD\") \"USA\" \"USA\") \" \" \", \") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (ite (str.contains col2 \",\") \", USA\" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.replace (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \",\" \"USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace col2 \" \" \", \") 0 (str.indexof col2 \",\" 0)) (str.substr (str.replace col2 \" \" \", \") (+ 2 (str.indexof col2 \",\" 0)) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of\\\" \\\"\\\") \\\"University\\\" \\\"\\\") \\\"Cornell\\\" \\\"\\\") \\\"Penn\\\" \\\"\\\") \\\"College Park\\\" \\\"\\\") \\\"Michigan\\\" \\\"\\\") \\\"Columbia\\\" \\\"\\\") \\\"NYU\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1)) 2 (- (str.indexof col1 \\\",\\\" 0) (str.indexof col1 \\\",\\\" 0 1)))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Los Angeles\\\" \\\"CA\\\") \\\"Philadelphia\\\" \\\"PA\\\") \\\"Ithaca\\\" \\\"NY\\\") \\\"College Park\\\" \\\"MD\\\") \\\"Ann Arbor\\\" \\\"MI\\\") \\\"New York\\\" \\\"NY\\\") \\\"New York\\\" \\\"NY\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA\" \"Philadelphia, PA\" \"Los Angeles, CA\" \"Los Angeles, CA, USA\" \"Ithaca, New York\" \"Ithaca, NY, USA\" \"College Park, MD\" \"College Park, MD, USA\" \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\" \"New York, New York\" \"New York, NY, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"MD\") \"University of Maryland\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"University of Pennsylvania\" \"Philadelphia\") \"Columbia University\" \"New York\") \"Cornell University\" \"Ithaca\") \"UCLA\" \"Los Angeles\") \"NYU\" \"New York\") \"NY\" \"New York\") \"MI\" \"Ann Arbor\") \"PA\" \"Philadelphia\") \"USA\" \"\") \"CA\" \"USA\") \"CT\" \"CT\") \"MD\" \"MD\") \"NY\" \"New York\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"Philadelphia\" \"Philadelphia\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") 0 100)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"College Park\" \"College Park,\") \"College\" \"College,\") \"University\" \"University,\") \"University of\" \"University of,\") \"University of \" \"\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\") \", \" \",\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \" of\" \"\") \",\") \"\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"New York\" \"NY\") \"Philadelphia\" \"Philadelphia\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (ite (str.contains col1 \"University\") (str.substr col2 0 2) (str.substr col2 0 3)) \", \" (ite (str.contains col1 \"University\") (str.substr col2 (- (str.len col2) 2) 2) (ite (str.contains col1 \"New York\") \"NY, USA\" (str.substr col2 (- (str.len col2) 3) 2)))))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace col2 col1 \")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of\\\" \\\"\\\") \\\"University\\\" \\\"\\\") \\\" of\\\" \\\"\\\") \\\"Penn\\\" \\\"Philadelphia\\\") \\\"UCLA\\\" \\\"Los Angeles\\\") \\\"Cornell University\\\" \\\"Ithaca\\\") \\\"Cornell\\\" \\\"\\\") \\\"College Park\\\" \\\"\\\") \\\"University of Maryland\\\" \\\"College Park\\\") \\\"University of Michigan\\\" \\\"Ann Arbor\\\") \\\"Columbia University\\\" \\\"New York\\\") \\\"Columbia\\\" \\\"\\\") \\\"NYU\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof col1 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 26))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace col2 col1 \")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of \\\" \\\"\\\") \\\"University \\\" \\\"\\\") \\\" of \\\" \\\"\\\") \\\" College Park\\\" \\\"\\\") \\\" College\\\" \\\"\\\") \\\" Park\\\" \\\"\\\") \\\"University\\\" \\\"\\\") \\\"UCLA\\\" \\\"\\\") \\\"Cornell\\\" \\\"\\\") \\\"Penn\\\" \\\"\\\") \\\"University of Maryland\\\" \\\"\\\") \\\"University of Michigan\\\" \\\"\\\") 0 (- (str.len col1) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\" 0)) \", \" (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (ite (str.contains col2 \"Philadelphia\") \"PA\" (ite (str.contains col2 \"Los Angeles\") \"CA\" (ite (str.contains col2 \"Ithaca\") \"NY\" (ite (str.contains col2 \"College Park\") \"MD\" (ite (str.contains col2 \"Ann Arbor\") \"MI\" (ite (str.contains col2 \"New York\") \"NY\" \"USA\"))))))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" , \" \"\") \" ,\") \"\") \", \" \"\") \" ,\" \"\") \" ,\") \"\" \"USA\") 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String \"(lambda (col1 col2) (str.substr (str.replace (str.replace (str.replace (str.++ col1 \\\",\\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") 0 (- (str.len col2) 1)))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of \\\" \\\"\\\") \\\"University \\\" \\\"\\\") \\\" of \\\" \\\"\\\") \\\" College Park\\\" \\\"\\\") \\\" College\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\" ,\\\" \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") \\\" , USA\\\" \\\"\\\") \\\"New York\\\" \\\"NY\\\") 0 (- (str.indexof col1 \\\",\\\" 0) 1)) 100)\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"USA\\\" ) col1 \\\"New York\\\") \\\", \\\" \\\", USA)\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") col2 \\\"\\\") 1 (- (str.len col2) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 (str.at col1 0) (str.at col1 1) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"New York\\\" \\\"NY\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\" \\\"Los Angeles\\\") \\\"Ithaca\\\" \\\"Ithaca\\\") \\\"College Park\\\" \\\"College Park\\\") \\\"Ann Arbor\\\" \\\"Ann Arbor\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") \\\"New York\\\" \\\"New York\\\") 0 (- (str.indexof col2 \\\",\\\" 0) 1)) 2)\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"CA\\\" \\\"Los Angeles\\\") \\\"New York\\\" \\\"NY\\\") \\\"Michigan\\\" \\\"Ann Arbor\\\") \\\"Ithaca\\\" \\\"Ithaca, NY\\\") \\\"MD\\\" \\\"College Park\\\") \\\"CT\\\" \\\"CT, USA\\\") \\\"PA\\\" \\\"PA, USA\\\") \\\"NY\\\" \\\"NY, USA\\\") \\\"USA\\\" \\\"USA\\\") 0 (- (str.len col1) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 23))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"College\" \"\") \" of\" \"\") \" , \" \"\") \", \" \"\") \"Ithaca\" \"Ithaca, NY\") \"Los Angeles\" \"Los Angeles, CA\") \"Ann Arbor\" \"Ann Arbor, MI\") \"Philadelphia\" \"Philadelphia, PA\") \"New York\" \"New York, NY\") \"Phialdelphia\" \"Phialdelphia, PA\") \"Los Angeles\" \"Los Angeles, CA\") \"Ithaca\" \"Ithaca, NY\") \"Philadelphia\" \"Philadelphia, PA\") \"College Park\" \"College Park, MD\") \"MI\" \"MI, USA\") \"NY\" \"NY, USA\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"MD\" \"MD, USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"Philadelphia, PA, USA\\\" \\\"Phialdelphia, PA, USA\\\") \\\"Los Angeles, CA\\\" \\\"Los Angeles, CA, USA\\\") \\\"Ithaca, New York, USA\\\" \\\"Ithaca, NY, USA\\\") \\\"Philadelphia, PA, USA\\\" \\\"Philadelphia, PA, USA\\\") \\\"College Park, MD\\\" \\\"College Park, MD, USA\\\") \\\"Ann Arbor, MI, USA\\\" \\\"Ann Arbor, MI, USA\\\") \\\"New York, NY, USA\\\" \\\"New York, NY, USA\\\") \\\"New York, New York, USA\\\" \\\"New York, NY, USA\\\") 0 (- (str.len col2) 5))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\",\\\" 0)) (str.len col1)) 2 (str.len (str.replace col2 \\\",\\\" \\\"USA\\\")))\")",
      "(define-fun f (col1 String col2 String) String \"(ite (str.contains col2 \\\",\\\") (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \\\",\\\" 0) 2))) (ite (str.contains col2 \\\", USA\\\") (str.substr col2 (+ (str.indexof col2 \\\", USA\\\") 2) (- (str.len col2) (+ (str.indexof col2 \\\", USA\\\") 2))) (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) (+ (str.indexof col2 \\\",\\\") 2)))))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", \" (ite (str.contains col2 \"PA\") \"PA, USA\" (ite (str.contains col2 \"CT\") \"CT, USA\" (ite (str.contains col2 \"CA\") \"CA, USA\" (ite (str.contains col2 \"MD\") \"MD, USA\" (ite (str.contains col2 \"NY\") (ite (str.contains col2 \"New York\") \"New York, NY, USA\" \"NY, USA\") col2)))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\" \"Los Angeles, CA\" \"Los Angeles, CA, USA\" \"Ithaca, New York, USA\" \"Ithaca, NY, USA\" \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\" \"College Park, MD\" \"College Park, MD, USA\" \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\" \"New York, NY, USA\" \"New York, NY, USA\" \"New York, New York, USA\" \"New York, NY, USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA\" \"Philadelphia, PA\" \"Los Angeles, CA\" \"Los Angeles, CA, USA\" \"Ithaca, New York\" \"Ithaca, NY\" \"College Park, MD\" \"College Park, MD, USA\" \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\" \"New York, New York\" \"New York, NY\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\", USA\\\" \\\"\\\") 0 (- (str.indexof (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\", USA\\\" 0) 1) )\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Phialdelphia\\\" \\\"Philadelphia\\\") 0 12) 0 11) 0 10)\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \\\"Phialdelphia\\\" \\\"Philadelphia\\\") \\\"Los Angeles\\\") \\\"Ithaca, New York\\\") \\\"Philadelphia\\\") \\\"College Park\\\") \\\"Ann Arbor\\\") \\\"New York, New York\\\") \\\"New York\\\") \\\"PA\\\" \\\"PA, USA\\\") \\\"CA\\\" \\\"CA, USA\\\") \\\"MD\\\" \\\"MD, USA\\\") \\\"NY\\\" \\\"NY, USA\\\")\")"
    ],
    "time_diff_ms": 1065.325,
    "constants": [
      [
        "",
        " , ",
        " , PA",
        " of ",
        " , USA",
        " , New York",
        " , CA",
        " , MD",
        "University ",
        "University of ",
        " , CT",
        " , NY"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        ", USA"
      ],
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Ithaca",
        "CA",
        "New York",
        "Los Angeles"
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        0,
        2,
        100,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        1,
        "USA",
        ", USA"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        "Phialdelphia",
        "Philadelphia",
        "NY",
        "New York"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \",\" \", USA\") \", PA\" \", USA\") \", CT\" \", USA\") \", CA\" \", USA\") \", MD\" \", USA\") \", NY\" \", USA\") \", New York\" \", NY\") \", Ithaca\" \", NY\") \", Philadelphia\" \", PA\") \", College Park\" \", MD\") \", Ann Arbor\" \", MI\") \", Los Angeles\" \", CA\") \", Phialdelphia\" \", PA\") 0 (str.len col1))"
      ],
      [
        0,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        25
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"PA\" \"PA\") \"MI\" \"MI\") \"MD\" \"MD\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"NY\" \"NY\")"
      ],
      [
        "(str.substr (str.substr (str.replace (str.++ col1 \",\" col2) \", USA\" \"\") 0 (- (str.indexof (str.++ col1 \",\" col2) \",\" 0) 1) (- (str.len (str.indexof (str.++ col1 \",\" col2) \",\" 0)) 1)) 2 (- (str.len (str.indexof (str.++ col1 \",\" col2) \",\" 0)) 1))"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"PA\" \"PA\") \"MI\" \"MI\")"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\" ) \",\" \"\") \"USA\" \"USA\")"
      ],
      [
        ", MD",
        "Penn",
        "University of Maryland College Park",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        ", MD, USA",
        "NYU",
        "New York, New York",
        ", NY, USA",
        ", CA, USA",
        ", PA",
        "New York",
        "Los Angeles",
        "Cornell University",
        ", NY",
        "Philadelphia",
        "Phialdelphia",
        "New York, NY, USA",
        "College Park",
        "New York, NY",
        "University of Michigan",
        ", CA",
        "Ithaca",
        ", PA, USA",
        "University of Pennsylvania"
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\")"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"Ann Arbor\" \"Ann Arbor\") \"College Park\" \"College Park\") \"New York\" \"New York\") \"PA\" \"PA\") \"CT\" \"CT\") \"CA\" \"CA\") \"MD\" \"MD\") \"NY\" \"NY\") \"MI\" \"MI\") 0 100)"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ","
      ],
      [
        "(str.substr (str.replace (str.substr (str.replace (str.replace (str.++ col1 \",\" col2) \"New York\" \"NY\") \", USA\" \", USA\") 0 (- (str.indexof (str.replace col1 \",\" \",\") \",\" 1) 1)) 0 (- (str.indexof (str.replace col1 \",\" \",\") \",\" 1) 1) col1) 0 (- (str.indexof (str.replace col1 \",\" \",\") \",\" 1) 1) col1)"
      ],
      [
        "New York, New York, USA",
        ", USA",
        ", ",
        "New York, NY, USA",
        "Phialdelphia, PA, USA",
        "Ann Arbor, MI, USA",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Los Angeles, CA, USA",
        "Ithaca, NY, USA",
        "College Park, MD",
        "Los Angeles, CA",
        "Ithaca, New York, USA"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \",\" \"\") \"Michigan\" \"Ann Arbor\") \"Ithaca, New York\" \"Ithaca, NY\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\")"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") 0 8)"
      ],
      [
        "(str.substr (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") 0 (- (str.indexof (str.++ col1 \",\" col2 \", USA\") \", USA\" 0) 1))"
      ],
      null,
      [
        0,
        100,
        ", USA",
        ", ",
        "Phialdelphia, PA, USA"
      ],
      [
        0,
        "MD",
        999,
        "NY",
        "Ithaca",
        "CA",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        4,
        ", USA",
        ", ",
        "Phialdelphia, PA, USA"
      ],
      [
        "",
        1,
        ", USA",
        ","
      ],
      [
        "",
        0,
        1,
        "CP",
        ",",
        "NY",
        "University of ",
        "College Park",
        "New York"
      ],
      [
        "",
        0,
        2,
        ", USA",
        ", "
      ],
      [
        "New York, NY",
        "Ithaca, New York",
        "Ithaca, NY",
        "New York, New York",
        "Philadelphia",
        "Phialdelphia",
        "Ann Arbor, MI",
        "Ann Arbor, MI, USA",
        "Philadelphia, PA, USA",
        "Los Angeles, CA, USA",
        "College Park, MD",
        "Los Angeles, CA",
        "College Park",
        "Philadelphia, PA"
      ],
      [
        "Penn",
        "University of Maryland College Park",
        "PA",
        "MD",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "NYU",
        "New York",
        "Los Angeles",
        "Cornell University",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "College Park",
        "University of Michigan",
        "Ithaca",
        "NY",
        "CA",
        "University of Pennsylvania"
      ],
      [
        0,
        1,
        "Philadelphia",
        "Phialdelphia",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "Phialdelphia, PA, USA",
        "Philadelphia, PA, USA"
      ],
      [
        "",
        "Maryland",
        "MI",
        "Connecticut",
        "Philadelphia",
        "Phialdelphia",
        "University of",
        "California",
        "NY",
        "Michigan",
        "CT",
        "CA",
        "PA",
        "Pennsylvania",
        "University of ",
        "MD",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "",
        1
      ],
      [
        "",
        "Penn",
        "Ann Arbor, MI, USA",
        ", College Park, MD",
        "University of Maryland College Park",
        "UCLA",
        "Ann Arbor",
        "Columbia University",
        "NYU",
        ", Ithaca, New York, USA",
        "New York",
        "Los Angeles",
        "Cornell University",
        "Philadelphia",
        "Phialdelphia",
        ", Ann Arbor, MI, USA",
        ", New York, NY, USA",
        "New York, NY, USA",
        ", Phialdelphia, PA, USA",
        ", Los Angeles, CA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "College Park",
        "University of Michigan",
        "Ithaca",
        ", Philadelphia, PA, USA",
        "University of Pennsylvania"
      ],
      [
        0,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        29
      ],
      [
        "New York, New York, USA",
        ", USA",
        ", ",
        "New York, NY, USA",
        "Phialdelphia, PA, USA",
        "Ann Arbor, MI, USA",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Los Angeles, CA, USA",
        "Ithaca, NY, USA",
        "College Park, MD",
        "Los Angeles, CA",
        "Ithaca, New York, USA"
      ],
      [
        "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 13 999)"
      ],
      [
        "",
        0,
        "University",
        "CP",
        ",",
        "University of ",
        "College Park"
      ],
      [
        0,
        1,
        3,
        4,
        ", USA",
        ", "
      ],
      [
        "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))"
      ],
      [
        "(lambda (col1 col2) (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len col2) 5)))"
      ],
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        0,
        2,
        3,
        100,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        "MD",
        5,
        ", USA",
        ", ",
        "MI",
        "USA",
        "NY",
        "CT",
        "PA",
        "CA",
        "New York"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "",
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "University of ",
        "CA",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        2,
        3,
        100,
        4,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        ","
      ],
      [
        "",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "Ithaca, New York",
        "Ithaca, NY",
        "Philadelphia",
        "Phialdelphia",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        " ",
        "NY",
        "New York"
      ],
      [
        "",
        "NY",
        "University of ",
        "CA",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        1,
        ",",
        "NY",
        "New York"
      ],
      [
        "Penn",
        " ",
        "University of Maryland College Park",
        "PA",
        "MD",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "NYU",
        ", ",
        "USA",
        "New York",
        "Los Angeles",
        "Cornell University",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "College Park",
        "University of Michigan",
        "Ithaca",
        "NY",
        "CA",
        "University of Pennsylvania"
      ],
      [
        "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))"
      ],
      [
        0,
        1,
        "",
        ", USA",
        ","
      ],
      [
        0,
        1,
        2,
        "USA",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        " ",
        ","
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"Cornell\" \"\") \"Penn\" \"\") \"College Park\" \"\") \"Michigan\" \"\") \"Columbia\" \"\") \"NYU\" \"\") \" ,\" \"\") \" ,\" \"\") \" ,\" \"\") \" ,\" \"\") \" ,\" \"\") 0 (- (str.indexof col1 \",\" 0) 1)) 2 (- (str.indexof col1 \",\" 0) (str.indexof col1 \",\" 0 1)))"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Philadelphia\" \"PA\") \"Ithaca\" \"NY\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\") \"New York\" \"NY\")"
      ],
      [
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "Ithaca, New York",
        "Phialdelphia, PA",
        ", USA",
        "New York, New York",
        ", ",
        "New York, NY, USA",
        "Ann Arbor, MI",
        "Ann Arbor, MI, USA",
        "College Park, MD, USA",
        "Los Angeles, CA, USA",
        "Ithaca, NY, USA",
        "College Park, MD",
        "Los Angeles, CA",
        "Philadelphia, PA"
      ],
      [
        "",
        0,
        "University of Maryland",
        "PA",
        "MD",
        "UCLA",
        "Ann Arbor",
        "Columbia University",
        "NYU",
        "USA",
        "University of",
        "CT",
        "New York",
        "Los Angeles",
        "Cornell University",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "College Park",
        "University",
        100,
        "University of Michigan",
        "Ithaca",
        "NY",
        "CA",
        "University of Pennsylvania"
      ],
      [
        "",
        "College,",
        "University of,",
        ", ",
        "University",
        "College Park,",
        "University of",
        ",",
        "University ",
        "College",
        "University of ",
        "University,",
        "College Park"
      ],
      [
        "",
        " of",
        "College Park",
        "Philadelphia",
        "Phialdelphia",
        "University of",
        ",",
        "Ithaca",
        "NY",
        "Ann Arbor",
        "University",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        2,
        3,
        ", ",
        "NY, USA",
        "University",
        "New York"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace col2 col1 "
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \" of\" \"\") \"Penn\" \"Philadelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Cornell\" \"\") \"College Park\" \"\") \"University of Maryland\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"Columbia\" \"\") \"NYU\" \"\") \",\" \"\") \", USA\" \"\") \",\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") 0 (- (str.indexof col1 \",\") 1))"
      ],
      [
        0,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        26
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace col2 col1 "
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" College Park\" \"\") \" College\" \"\") \" Park\" \"\") \"University\" \"\") \"UCLA\" \"\") \"Cornell\" \"\") \"Penn\" \"\") \"University of Maryland\" \"\") \"University of Michigan\" \"\") 0 (- (str.len col1) 2))"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        "MD",
        "MI",
        "Philadelphia",
        ", ",
        "USA",
        ",",
        "Ithaca",
        "NY",
        "PA",
        "CA",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "",
        " , ",
        0,
        1,
        " of ",
        ", ",
        " ,",
        "USA",
        ",",
        "University ",
        "University of "
      ],
      [
        "(lambda (col1 col2) (str.substr (str.replace (str.replace (str.replace (str.++ col1 \",\" col2 \", USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") 0 (- (str.len col2) 1)))"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" College Park\" \"\") \" College\" \"\") \",\" \"\") \" ,\" \"\") \",\" \"\") \", USA\" \"\") \" , USA\" \"\") \"New York\" \"NY\") 0 (- (str.indexof col1 \",\" 0) 1)) 100)"
      ],
      [
        0,
        1,
        ", ",
        "USA",
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"USA\" ) col1 \"New York\") \", \" \", USA)"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") col2 \"\") 1 (- (str.len col2) 1))"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ col2 (str.at col1 0) (str.at col1 1) \", USA\")"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") 0 (- (str.indexof col2 \",\" 0) 1)) 2)"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"CA\" \"Los Angeles\") \"New York\" \"NY\") \"Michigan\" \"Ann Arbor\") \"Ithaca\" \"Ithaca, NY\") \"MD\" \"College Park\") \"CT\" \"CT, USA\") \"PA\" \"PA, USA\") \"NY\" \"NY, USA\") \"USA\" \"USA\") 0 (- (str.len col1) 2))"
      ],
      [
        0,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        23
      ],
      [
        "",
        "Ithaca, NY",
        "MI, USA",
        "MD, USA",
        "PA",
        "MD",
        "Ann Arbor",
        " , ",
        "Phialdelphia, PA",
        ", ",
        "University of",
        "College",
        "College Park, MD",
        "New York",
        "NY, USA",
        "Philadelphia, PA",
        "Los Angeles",
        " of",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "Ann Arbor, MI",
        "Los Angeles, CA",
        "CA, USA",
        "College Park",
        "University",
        "New York, NY",
        "PA, USA",
        "Ithaca",
        "NY",
        "CA"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Philadelphia, PA, USA\" \"Phialdelphia, PA, USA\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Ithaca, New York, USA\" \"Ithaca, NY, USA\") \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\") \"College Park, MD\" \"College Park, MD, USA\") \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\") \"New York, NY, USA\" \"New York, NY, USA\") \"New York, New York, USA\" \"New York, NY, USA\") 0 (- (str.len col2) 5))"
      ],
      [
        "(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" 0)) (str.len col1)) 2 (str.len (str.replace col2 \",\" \"USA\")))"
      ],
      [
        "(ite (str.contains col2 \",\") (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) (ite (str.contains col2 \", USA\") (str.substr col2 (+ (str.indexof col2 \", USA\") 2) (- (str.len col2) (+ (str.indexof col2 \", USA\") 2))) (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2)))))"
      ],
      [
        0,
        "MD",
        ", ",
        "New York, NY, USA",
        "MD, USA",
        ",",
        "PA, USA",
        "NY",
        "CT",
        "PA",
        "CA",
        "CA, USA",
        "NY, USA",
        "CT, USA",
        "New York"
      ],
      [
        "New York, New York, USA",
        ", USA",
        ", ",
        "New York, NY, USA",
        "Phialdelphia, PA, USA",
        "Ann Arbor, MI, USA",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Los Angeles, CA, USA",
        "Ithaca, NY, USA",
        "College Park, MD",
        "Los Angeles, CA",
        "Ithaca, New York, USA"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "New York, NY",
        "Ithaca, New York",
        "Phialdelphia, PA",
        "Ithaca, NY",
        ", USA",
        "New York, New York",
        ", ",
        "Ann Arbor, MI",
        "Ann Arbor, MI, USA",
        "College Park, MD, USA",
        "Los Angeles, CA, USA",
        "College Park, MD",
        "Los Angeles, CA",
        "Philadelphia, PA"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \", USA\" \"\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", USA\" 0) 1) )"
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") 0 12) 0 11) 0 10)"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\") \"Ithaca, New York\") \"Philadelphia\") \"College Park\") \"Ann Arbor\") \"New York, New York\") \"New York\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"MD\" \"MD, USA\") \"NY\" \"NY, USA\")"
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      2,
      4,
      3,
      5,
      ", College Park, MD",
      "MD",
      23,
      25,
      "Ann Arbor",
      26,
      29,
      "NYU",
      " , ",
      ", Ithaca, New York, USA",
      "USA",
      "CP",
      "(str.replace (str.replace (str.replace col2 col1 \"\" ) \",\" \"\") \"USA\" \"USA\")",
      "College Park, MD",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \",\" \"\") \"Michigan\" \"Ann Arbor\") \"Ithaca, New York\" \"Ithaca, NY\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\")",
      "CT, USA",
      "Los Angeles",
      "Philadelphia, PA",
      "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \", USA\" \"\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", USA\" 0) 1) )",
      ", USA",
      "Maryland",
      ", Ann Arbor, MI, USA",
      "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))",
      ", Phialdelphia, PA, USA",
      "College Park, MD, USA",
      "University ",
      "Pennsylvania",
      " , CT",
      "University",
      100,
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"Ann Arbor\" \"Ann Arbor\") \"College Park\" \"College Park\") \"New York\" \"New York\") \"PA\" \"PA\") \"CT\" \"CT\") \"CA\" \"CA\") \"MD\" \"MD\") \"NY\" \"NY\") \"MI\" \"MI\") 0 100)",
      "Los Angeles, CA, USA",
      "University of Pennsylvania",
      "Ithaca, NY",
      " , New York",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") 0 8)",
      "(str.replace (str.replace (str.replace col2 col1 \"USA\" ) col1 \"New York\") \", \" \", USA)",
      ", MD, USA",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"PA\" \"PA\") \"MI\" \"MI\")",
      "New York, New York",
      " ,",
      "College Park,",
      "Michigan",
      "CT",
      "College",
      "(str.++ col2 (str.at col1 0) (str.at col1 1) \", USA\")",
      "(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" 0)) (str.len col1)) 2 (str.len (str.replace col2 \",\" \"USA\")))",
      ", CA, USA",
      "(str.substr (str.replace (str.replace (str.replace col2 col1 ",
      ", NY",
      "University of,",
      "MI",
      "Philadelphia",
      "(str.substr (str.replace (str.substr (str.replace (str.replace (str.++ col1 \",\" col2) \"New York\" \"NY\") \", USA\" \", USA\") 0 (- (str.indexof (str.replace col1 \",\" \",\") \",\" 1) 1)) 0 (- (str.indexof (str.replace col1 \",\" \",\") \",\" 1) 1) col1) 0 (- (str.indexof (str.replace col1 \",\" \",\") \",\" 1) 1) col1)",
      "Philadelphia, PA, USA",
      ", Los Angeles, CA",
      "Los Angeles, CA",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" College Park\" \"\") \" College\" \"\") \" Park\" \"\") \"University\" \"\") \"UCLA\" \"\") \"Cornell\" \"\") \"Penn\" \"\") \"University of Maryland\" \"\") \"University of Michigan\" \"\") 0 (- (str.len col1) 2))",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Philadelphia, PA, USA\" \"Phialdelphia, PA, USA\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Ithaca, New York, USA\" \"Ithaca, NY, USA\") \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\") \"College Park, MD\" \"College Park, MD, USA\") \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\") \"New York, NY, USA\" \"New York, NY, USA\") \"New York, New York, USA\" \"New York, NY, USA\") 0 (- (str.len col2) 5))",
      "New York, NY",
      " of ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Philadelphia\" \"PA\") \"Ithaca\" \"NY\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\") \"New York\" \"NY\")",
      "University of Michigan",
      "Ithaca",
      "University of ",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"Cornell\" \"\") \"Penn\" \"\") \"College Park\" \"\") \"Michigan\" \"\") \"Columbia\" \"\") \"NYU\" \"\") \" ,\" \"\") \" ,\" \"\") \" ,\" \"\") \" ,\" \"\") \" ,\" \"\") 0 (- (str.indexof col1 \",\" 0) 1)) 2 (- (str.indexof col1 \",\" 0) (str.indexof col1 \",\" 0 1)))",
      " ",
      "Ann Arbor, MI, USA",
      "MI, USA",
      "MD, USA",
      "University of Maryland College Park",
      "CA",
      "University of Maryland",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") 0 12) 0 11) 0 10)",
      "UCLA",
      "(str.++ col2 \", USA\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"NY\" \"NY\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"PA\" \"PA\") \"MI\" \"MI\") \"MD\" \"MD\")",
      "New York, New York, USA",
      "Phialdelphia, PA",
      ", ",
      "Phialdelphia, PA, USA",
      ",",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" College Park\" \"\") \" College\" \"\") \",\" \"\") \" ,\" \"\") \",\" \"\") \", USA\" \"\") \" , USA\" \"\") \"New York\" \"NY\") 0 (- (str.indexof col1 \",\" 0) 1)) 100)",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "Ithaca, New York, USA",
      ", PA",
      "New York",
      "(lambda (col1 col2) (str.substr (str.replace (str.replace (str.replace (str.++ col1 \",\" col2 \", USA\") \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") 0 (- (str.len col2) 1)))",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \",\" \", USA\") \", PA\" \", USA\") \", CT\" \", USA\") \", CA\" \", USA\") \", MD\" \", USA\") \", NY\" \", USA\") \", New York\" \", NY\") \", Ithaca\" \", NY\") \", Philadelphia\" \", PA\") \", College Park\" \", MD\") \", Ann Arbor\" \", MI\") \", Los Angeles\" \", CA\") \", Phialdelphia\" \", PA\") 0 (str.len col1))",
      " of",
      " , USA",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\") \"Ithaca, New York\") \"Philadelphia\") \"College Park\") \"Ann Arbor\") \"New York, New York\") \"New York\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"MD\" \"MD, USA\") \"NY\" \"NY, USA\")",
      "(ite (str.contains col2 \",\") (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) (ite (str.contains col2 \", USA\") (str.substr col2 (+ (str.indexof col2 \", USA\") 2) (- (str.len col2) (+ (str.indexof col2 \", USA\") 2))) (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2)))))",
      "California",
      "Ithaca, NY, USA",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") \"New York\" \"New York\") 0 (- (str.indexof col2 \",\" 0) 1)) 2)",
      "College,",
      "Connecticut",
      ", CA",
      "(lambda (col1 col2) (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len col2) 5)))",
      " , CA",
      "PA, USA",
      "University,",
      ", Philadelphia, PA, USA",
      ", MD",
      "(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") col2 \"\") 1 (- (str.len col2) 1))",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \" of\" \"\") \"Penn\" \"Philadelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Cornell\" \"\") \"College Park\" \"\") \"University of Maryland\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"Columbia\" \"\") \"NYU\" \"\") \",\" \"\") \", USA\" \"\") \",\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") \", USA\" \"\") 0 (- (str.indexof col1 \",\") 1))",
      "Penn",
      "PA",
      "Columbia University",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\")",
      " , PA",
      "University of",
      ", NY, USA",
      "(str.substr (str.substr (str.replace (str.++ col1 \",\" col2) \", USA\" \"\") 0 (- (str.indexof (str.++ col1 \",\" col2) \",\" 0) 1) (- (str.len (str.indexof (str.++ col1 \",\" col2) \",\" 0)) 1)) 2 (- (str.len (str.indexof (str.++ col1 \",\" col2) \",\" 0)) 1))",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      " , NY",
      "NY, USA",
      "Cornell University",
      "Phialdelphia",
      "New York, NY, USA",
      "Ann Arbor, MI",
      ", New York, NY, USA",
      " , MD",
      "CA, USA",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"CA\" \"Los Angeles\") \"New York\" \"NY\") \"Michigan\" \"Ann Arbor\") \"Ithaca\" \"Ithaca, NY\") \"MD\" \"College Park\") \"CT\" \"CT, USA\") \"PA\" \"PA, USA\") \"NY\" \"NY, USA\") \"USA\" \"USA\") 0 (- (str.len col1) 2))",
      "College Park",
      "Ithaca, New York",
      "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 13 999)",
      999,
      "(str.substr (str.replace (str.++ col1 \",\" col2 \", USA\") \", USA\" \"\") 0 (- (str.indexof (str.++ col1 \",\" col2 \", USA\") \", USA\" 0) 1))",
      "NY",
      ", PA, USA"
    ]
  },
  "phone-10-long.sl": {
    "completions": [
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ (str.substr name 0 5) \\\" (\\\" (str.substr name 5 3) \\\") \\\" (str.substr name 8 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \") (\" \") \") -> (str.++ (str.++ (str.++ \"+(\" (str.substr name 0 3)) \") \" (str.substr name 3 3)) \"-\" (str.substr name 7 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)))",
      "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "(str.++ (str.at name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n        (str.substr name 0 3)\n        \" (\"\n        (str.substr name 3 3)\n        \") \"\n        (str.substr name 6 3)\n        \"-\"\n        (str.substr name 9 3))",
      "(str.++ \"+ \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.at name 0) \" (\"\n          (str.substr name 1 3) \") \"\n          (str.substr name 5 3) \"-\"\n          (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ (str.at name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)\"\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)\"",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "\"(str.replace (str.replace name \" \" \"\") \"(\\d{3})(\\d{3})(\\d{3})\" \"( $1 ) $2-$3)\")\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-(str.substr name 9 3))\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-(str.substr name 9 3))\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      "(str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 9 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 9 3))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "\"(str.++ \"+ \" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 4 3)\n         \") \"\n         (str.substr name 8 3))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.replace (str.replace (str.replace name \"-\" \" \") \"-\" \") \"-\" \"\"))",
      "\"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 5) \\\" (\\\" (str.substr name 5 3) \\\") \\\" (str.substr name 8 3))\")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ (str.at name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+ \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0 1) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-(str.substr name 9 3))\"))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-(str.substr name 9 3))\"))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      null,
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 4) \\\" (\\\" (str.substr name 4 3) \\\") \\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))"
    ],
    "time_diff_ms": 528.429,
    "constants": [
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 5) \" (\" (str.substr name 5 3) \") \" (str.substr name 8 3))"
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        4,
        7,
        "-",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+ ",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        5,
        9,
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        3,
        6,
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        "(str.replace (str.replace name "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-(str.substr name 9 3))",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-(str.substr name 9 3))",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        "+",
        "(",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      null,
      [
        "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))"
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ]
    ],
    "all_constants": [
      0,
      1,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      "+ ",
      "-(str.substr name 9 3))",
      "-",
      "(str.++ ",
      "(str.++ (str.substr name 0 5) \" (\" (str.substr name 5 3) \") \" (str.substr name 8 3))",
      "(str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace name ",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      " (",
      ") ",
      "+",
      "("
    ]
  },
  "phone-9.sl": {
    "completions": [
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\"))\"",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"\n    (str.replace name \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3)))",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 1 3) \".\"\n    (str.substr name 5 3) \".\"\n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \"\") \"([0-9]{3})([0-9]{3})([0-9]{3})\" \"\\\\1.\\\\2.\\\\3\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\") \" \" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"\n",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\") \" \" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\".\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\") \"-\" \"\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\"))\"",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "\"(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))\"",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                name\n                                                                                                                                                \" \" \"\"\n                                                                              )\n                                                                            \"+\"\n                                                                            \".\"\n                                                                          )\n                                                                        \"-\"\n                                                                        \".\"\n                                                                      )\n                                                                    \".\"\n                                                                    \".\"\n                                                                  )\n                                                                \".\"\n                                                                \".\"\n                                                              )\n                                                            \".\"\n                                                            \".\"\n                                                          )\n                                                        \".\"\n                                                        \".\"\n                                                      )\n                                                    \".\"\n                                                    \".\"\n                                                  )\n                                                \".\"\n                                                \".\"\n                                              )\n                                            \".\"\n                                            \".\"\n                                          )\n                                        \".\"\n                                        \".\"\n                                      )\n                                    \".\"\n                                    \".\"\n                                  )\n                                \".\"\n                                \".\"\n                              )\n                            \".\"\n                            \".\"\n                          )\n                        \".\"\n                        \".\"\n                      )\n                    \".\"\n                    \".\"\n                  )\n                \".\"\n                \".\"\n              )\n            \".\"\n            \".\"\n          )\n        \".\"\n        \".\"\n      )\n    \".\"\n    \".\"\n  )))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n    (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      name\n                      \" \" \"\")\n                    \"-\")\n                  \"-\")\n                \"-\")\n              \"-\")\n            \"-\")\n          \"-\")\n        \"-\")\n      \"-\")\n    \"-\"\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\") \" \" \"\") \"-\" \".\")\"",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"..\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")\"",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3) \".\"\n    (str.substr name 12 3)))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\" (str.replace name \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \"\") \"([0-9]{3})([0-9]{3})([0-9]{3})\" \"\\\\1.\\\\2.\\\\3\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"-\\\" \\\".\\\") \\\"+\\\" \\\"\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"+\" \".\") \"-\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\") \".\" \".\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\") \"-\") \"-\") \"-\") \"-\") \"-\") \"-\") \"-\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"..\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))"
    ],
    "time_diff_ms": 1007.8209999999999,
    "constants": [
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \".\")"
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\")"
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "",
        "([0-9]{3})([0-9]{3})([0-9]{3})",
        "-",
        " ",
        "+",
        "\\1.\\2.\\3"
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "+",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        ".",
        ".."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace name "
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ]
    ],
    "all_constants": [
      0,
      "",
      1,
      3,
      4,
      5,
      8,
      9,
      " ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      12,
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name ",
      "..",
      "-",
      "(str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace name ",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\")",
      "([0-9]{3})([0-9]{3})([0-9]{3})",
      "\\1.\\2.\\3",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\") \"-\" \".\") \"+\" \"\")",
      "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \".\")",
      "+",
      ".",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name "
    ]
  },
  "clean-and-reformat-telephone-numbers.sl": {
    "completions": [
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\") \"-\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\") \">\" \"\") \" \" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\") \">\" \"\") \" \" \"\") \"(\" \"\") \")\") \"-\") \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \" \" \"\") \"-\" \"\") \".\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\")",
      "(str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\") \">\" \"\") \" \" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\") \"-\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\") \">\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\") \">\" \"\") \" \" \"\") \"(\" \"\") \")\") \"-\") \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \" \" \"\") \"-\" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \" \" \"\") \".\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\") \">\" \"\") \" \" \"\"))"
    ],
    "time_diff_ms": 1410.408,
    "constants": [
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        ">",
        "<",
        "-"
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "<",
        "-",
        " ",
        ".",
        ">"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        ")",
        "<",
        "-",
        " ",
        ".",
        "(",
        ">"
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        "<",
        "."
      ],
      [
        "",
        "-",
        " ",
        "."
      ],
      [
        "",
        "<",
        "-",
        " ",
        ".",
        ">"
      ]
    ],
    "all_constants": [
      "",
      ")",
      "<",
      "-",
      " ",
      ".",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")",
      "(",
      ">"
    ]
  },
  "stackoverflow7.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)) (str.substr _arg_0 (+ (str.indexof _arg_0 _arg_1) (str.len _arg_1)) (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.++ _arg_0 \" -> \" (str.replace _arg_1 _arg_0 \"\"))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(ite (str.contains _arg_0 _arg_1)\n     (str.replace _arg_0 _arg_1 \"\")\n     _arg_0)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.++ \"Item \" (ite (str.contains _arg_0 _arg_1) (str.replace _arg_0 _arg_1 \"\") _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.++ \"Item \" (str.replace _arg_0 _arg_1 \"\"))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.++ \"Item \" (str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0))",
      "(str.replace _arg_0 _arg_1 \"\")",
      "(str.replace _arg_0 _arg_1 \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)) (str.substr _arg_0 (+ (str.indexof _arg_0 _arg_1) (str.len _arg_1)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.++ _arg_0 \" -> \" (str.replace _arg_1 _arg_0 \"\")))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (ite (str.contains _arg_0 _arg_1) (str.replace _arg_0 _arg_1 \"\") _arg_0))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.++ \"Item \" (ite (str.contains _arg_0 _arg_1) (str.replace _arg_0 _arg_1 \"\") _arg_0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.++ \"Item \" (str.replace _arg_0 _arg_1 \"\")))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.++ \"Item \" (str.substr _arg_0 5 (- (str.len _arg_0) 5))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1 0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_0 _arg_1 \"\"))"
    ],
    "time_diff_ms": 1683.851,
    "constants": [
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        "",
        " -> "
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        "",
        "Item "
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        "",
        "Item "
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        "Item ",
        5
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ]
    ],
    "all_constants": [
      0,
      "",
      5,
      "Item ",
      " -> "
    ]
  },
  "univ_4-long-repeat.sl": {
    "completions": [
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (ite (str.contains col1 \",\") (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.indexof col1 \",\") 2))) col1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "\"(str.replace (str.replace (str.replace col1 col2 \"\") \", \" \",\") \"USA\" \"\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\"",
      "\"(str.++ (str.++ col1 \\\", \\\" col2) \\\", USA\\\")\"",
      "\"(str.++ (str.replace col2 col1 \\\"USA\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.++ col1 col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\", USA\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.++ col1 \\\",\\\" col2) \\\", USA\\\" \\\"\\\"))\"",
      "\"(str.++ (str.replace (str.replace col1 \\\", \\\" \\\",\\\") col2 \\\",\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\"",
      "\"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") col1 \\\"\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\"",
      "\"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (str.++ col1 \", \" \"USA\")))",
      "\"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "\"(str.++ (str.replace (str.++ col1 col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\"",
      "(define-fun f (col1 String col2 String) String\n  (str.++ \n    (str.replace \n      (str.replace col1 \"University of \" \"\")\n      \"New York\" \"NY\")\n    (str.replace \n      (str.replace \n        (str.replace col2 \"New York\" \"NY\")\n        \"University of \" \"\")\n      \"New York\" \"NY\")\n    \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ (str.at col1 0) (str.at colol1 1) \", \" (str.at col2 0) (str.at col2 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.replace (str.replace col1 \"University of \" \"\") \",\" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")\n            \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "\"(str.replace (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York, New York\\\" \\\"New York, NY\\\") \\\"New Haven, CT, USA\\\" \\\"New Haven, CT\\\")\"",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.replace (str.replace col1 \", \" \"\") \", USA\" \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ \n    (str.replace \n      (str.replace \n        (str.replace col2 \"New York\" \"NY\") \n        \"New Haven\" \"New Haven\") \n      \"University\" \"\")))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.substr col1 0 (str.indexof col1 \",\" 0)) \", \"\n           (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ \n        (str.replace \n            (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \n        \"USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.indexof col2 \",\" 0) 1) (+ (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\"",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 \", \" col2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "\"(str.++ (str.++ (str.replace col1 col2 \\\" \\\") \\\",\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\",\\\") (str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\"))\"",
      "\"(str.++ (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.++ col1 \\\",\\\" col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.at col1 0) (str.at col1 1) (str.at col1 2) (str.at col1 3) (str.at col1 4) (str.at col1 5) (str.at col1 6) (str.at col1 7) (str.at col1 8) (str.at col1 9) (str.at col1 10) (str.at col1 11) (str.at col1 12) (str.at col1 13) (str.at col1 14) (str.at col1 15) (str.at col1 16) (str.at col1 17) (str.at col1 18) (str.at col1 19) (str.at col1 20) (str.at col1 21) (str.at col1 22) (str.at col1 23) (str.at col1 24) (str.at col1 25) (str.at col1 26) (str.at col1 27) (str.at col1 28) (str.at col1 29) (str.at col1 30) (str.at col1 31) (str.at col1 32) (str.at col1 33) (str.at col1 34) (str.at col1 35) (str.at col1 36) (str.at col1 37) (str.at col1 38) (str.at col1 39) (str.at col1 40) (str.at col1 41) (str.at col1 42) (str.at col1 43) (str.at col1 44) (str.at col1 45) (str.at col1 46) (str.at col1 47) (str.at col1 48) (str.at col1 49) (str.at col1 50) (str.at col1 51) (str.at col1 52) (str.at col1 53) (str.at col1 54) (str.at col1 55) (str.at col1 56) (str.at col1 57) (str.at col1 58) (str.at col1 59) (str.at col1 60) (str.at col1 61) (str.at col1 62) (str.at col1 63) (str.at col1 64) (str.at col1 65) (str.at col1 66) (str.at col1 67) (str.at col1 68) (str.at col1 69) (str.at col1 70) (str.at col1 71) (str.at col1 72) (str.at col1 73) (str.at col1 74) (str.at col1 75) (str.at col1 76) (str.at col1 77) (str.at col1 78) (str.at col1 79) (str.at col1 80) (str.at col1 81) (str.at col1 82) (str.at col1 83) (str.at col1 84) (str.at col1 85) (str.at col1 86) (str.at col1 87) (str.at col1 88) (str.at col1 89) (str.at col1 90) (str.at col1 91) (str.at col1 92) (str.at col1 93) (str.at col1 94) (str.at col1 95) (str.at col1 96) (str.at col1 97) (str.at col1 98) (str.at col1 99) (str.at col1 100) (str.at col1 101) (str.at col1 102) (str.at col1 103) (str.at col1 104) (str.at col1 105) (str.at col1 106) (str.at col1 107) (str.at col1 108) (str.at col1 109) (str.at col1 110) (str.at col1 111) (str.at col1 112) (str.at col1 113) (str.at col1 114) (str.at col1 115) (str.at col1 116) (str.at col1 117) (str.at col1 118) (str.at col1 119) (str.at col1 120) (str.at col1 121) (str.at col1 122) (str.at col1 123) (str.at col1 124) (str.at col1 125) (str.at col1 126) (str.at col1 127) (str.at col1 128) (str.at col1 129) (str.at col1 130) (str.at col1 131) (str.at col1 132) (str.at col1 133) (str.at col1 134) (str.at col1 135) (str.at col1 136) (str.at col1 137) (str.at col1 138) (str.at col1 139) (str.at col1 140) (str.at col1 141) (str.at col1 142) (str.at col1 143) (str.at col1 144) (str.at col1 145) (str.at col1 146) (str.at col1 147) (str.at col1 148) (str.at col1 149) (str.at col1 150) (str.at col1 151) (str.at col1 152) (str.at col1 153) (str.at col1 154) (str.at col1 155) (str.at col1 156) (str.at col1 157) (str.at col1 158) (str.at col1 159) (str.at col1 160) (str.at col1 161) (str.at col1 162) (str.at col1 163) (str.at col1 164) (str.at col1 165) (str.at col1 166) (str.at col1 167) (str.at col1 168) (str.at col1 169) (str.at col1 170) (str.at col1 171) (str.at col1 172) (str.at col1 173) (str.at col1 174) (str.at col1 175) (str.at col1 176) (str.at col1 177) (str.at col1 178) (str.at col1 179) (str.at col1 180) (str.at col1 181) (str.at col1 182) (str.at col1 183) (str.at col1 184) (str.at col1 185) (str.at col1 186) (str.at col1 187) (str.at col1 188) (str.at col1 189) (str.at col1 190) (str.at col1 191) (str.at col1 192) (str.at col1 193) (str.at col1 194) (str.at col1 195) (str.at col1 196) (str.at col1 197) (str.at col1 198) (str.at col1 199) (str.at col1 200) (str.at col1 201) (str.at col1 202) (str.at col1 203) (str.at col1 204) (str.at col1 205) (str.at col1 206) (str.at col1 207) (str.at col1 208) (str.at col1 209) (str.at col1 210) (str.at col1 211) (str.at col1 212) (str.at col1 213) (str.at col1 214) (str.at col1 215) (str.at col1 216) (str.at col1 217) (str.at col1 218) (str.at col1 219) (str.at col1 220) (str.at col1 221) (str.at col1 222) (str.at col1 223) (str.at col1 224) (str.at col1 225) (str.at col1 226) (str.at col1 227) (str.at col1 228) (str.at col1 229) (str.at col1 230) (str.at col1 231) (str.at col1 232) (str.at col1 233) (str.at col1 234) (str.at col1 235) (str.at col1 236) (str.at col1 237) (str.at col1 238) (str.at col1 239) (str.at col1 240) (str.at col1 241) (str.at col1 242) (str.at col1 243) (str.at col1 244) (str.at col1 245) (str.at col1 246) (str.at col1 247) (str.at col1 248) (str.at col1 249) (str.at col1 250) (str.at col1 251) (str.at col1 252) (str.at col1 253) (str.at col1 254) (str.at col1 255) (str.at col1 256) (str.at col1 257) (str.at col1 258) (str.at col1 259) (str.at col1 260) (str.at col1 261) (str.at col1 262) (str.at col1 263) (str.at col1 264) (str.at col1 265) (str.at col1 266) (str.at col1 267) (str.at col1 268) (str.at col1 269) (str.at col1 270) (str.at col1 271) (str.at col1 272) (str.at col1 273) (str.at col1 274) (str.at col1 275) (str.at col1 276) (str.at col1 277) (str.at col1 278) (str.at col1 279) (str.at col1 280) (str.at col1 281) (str.at col1 282) (str.at col1 283) (str.at col1 284) (str.at col1 285) (str.at col1 286) (str.at col1 287) (str.at col1 288) (str.at col1 289) (str.at col1 290) (str.at col1 291) (str.at col1 292) (str.at col1 293) (str.at col1 294) (str.at col1 295) (str.at col1 296) (str.at col1 297) (str.at col1 298) (str.at col1 299) (str.at col1 300) (str.at col1 301) (str.at col1 302) (str.at col1 303) (str.at col1 304) (str.at col1 305) (str.at col1 306) (str.at col1 307) (str.at col1 308) (str.at col1 309) (str.at col1 310) (str.at col1 311) (str.at col1 312) (str.at col1 313) (str.at col1 314) (str.at col1 315) (str.at col1 316) (str.at col1 317) (str.at col1 318) (str.at col1 319) (str.at col1 320) (str.at col1 321) (str.at col1 322) (str.at col1 323) (str.at col1 324) (str.at col1 325) (str.at col1 326) (str.at col1 327) (str.at col1 328) (str.at col1 329) (str.at col1 330) (str.at col1 331) (str.at col1 332) (str.at col1 333) (str.at col1 334) (str.at col1 335) (str.at col1 336) (str.at col1 337) (str.at col1 338) (str.at col1 339) (str.at col1 340) (str.at col1 341) (str.at col1 342) (str.at col1 343) (str.at col1 344) (str.at col1 345) (str.at col1 346) (str.at col1 347) (str.at col1 348) (str.at col1 349) (str.at col1 350) (str.at col1 351) (str.at col1 352) (str.at col1 353) (str.at col1 354) (str.at col1 355) (str.at col1 356) (str.at col1 357) (str.at col1 358) (str.at col1 359) (str.at col1 360) (str.at col1 361) (str.at col1 362) (str.at col1 363) (str.at col1 364) (str.at col1 365) (str.at col1 366) (str.at col1 367) (str.at col1 368) (str.at col1 369) (str.at col1 370) (str.at col1 371) (str.at col1 372) (str.at col1 373) (str.at col1 374) (str.at col1 375) (str.at col1 376) (str.at col1 377) (str.at col1 378) (str.at col1 379) (str.at col1 380) (str.at col1 381) (str.at col1 382) (str.at col1 383) (str.at col1 384) (str.at col1 385) (str.at col1 386) (str.at col1 387) (str.at col1 388) (str.at col1 389) (str.at col1 390) (str.at col1 391) (str.at col1 392) (str.at col1 393) (str.at col1 394) (str.at col1 395) (str.at col1 396) (str.at col1 397) (str.at col1 398) (str.at col1 399) (str.at col1 400) (str.at col1 401) (str.at col1 402) (str.at col1 403) (str.at col1 404) (str.at col1 405) (str.at col1 406) (str.at col1 407) (str.at col1 408) (str.at col1 409) (str.at col1 410) (str.at col1 411) (str.at col1 412) (str.at col1 413) (str.at col1 414) (str.at col1 415) (str.at col1 416) (str.at col1 417) (str.at col1 418) (str.at col1 419) (str.at col1 420) (str.at col1 421) (str.at col1 422) (str.at col1 423) (str.at col1 424) (str.at col1 425) (str.at col1 426) (str.at col1 427) (str.at col1 428) (str.at col1 429) (str.at col1 430) (str.at col1 431) (str.at col1 432) (str.at col1 433) (str.at col1 434) (str.at col1 435) (str.at col1 436) (str.at col1 437) (str.at col1 438) (str.at col1 439) (str.at col1 440) (str.at col1 441) (str.at col1 442) (str.at col1 443) (str.at col1 444) (str.at col1 445) (str.at col1 446) (str.at col1 447) (str.at col1 448) (str.at col1 449) (str.at col1 450) (str.at col1 451) (str.at col1 452) (str.at col1 453) (str.at col1 454) (str.at col1 455) (str.at col1 456) (str.at col1 457) (str.at col1 458) (str.at col1 459) (str.at col1 460) (str.at col1 461) (str.at col1 462) (str.at col1 463) (str.at col1 464) (str.at col1 465) (str.at col1 466) (str.at col1 467) (str.at col1 468) (str.at col1 469) (str.at col1 470) (str.at col1 471) (str.at col1 472) (str.at col1 473) (str.at col1 474) (str.at col1 475) (str.at col1 476) (str.at col1 477) (str.at col1 478) (str.at col1 479) (str.at col1 480) (str.at col1 481) (str.at col1 482) (str.at col1 483) (str.at col1 484) (str.at col1 485) (str.at col1 486) (str.at col1 487) (str.at col1 488) (str.at col1 489) (str.at col1 490) (str.at col1 491) (str.at col1 492) (str.at col1 493) (str.at col1 494) (str.at col1 495) (str.at col1 496) (str.at col1 497) (str.at col1 498) (str.at col1 499) (str.at col1 500) (str.at col1 501) (str.at col1 502) (str.at col1 503) (str.at col1 504) (str.at col1 505) (str.at col1 506) (str.at col1 507) (str.at col1 508) (str.at col1 509) (str.at col1 510) (str.at col",
      "\"(str.++ (str.replace (str.replace col1 col2 \"\") \", USA\" \"\") \", \" \"USA\")\"",
      "\"(str.++ (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.replace col1 col2 \\\"USA\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\"",
      "\"(str.++ (str.replace col1 col2 \\\"USA\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace col1 \"University of \" \"\") 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col1 \"University of \" \"\") \",\" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.++ (str.replace col1 \", \" \", \") col2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ (str.replace (str.replace col1 \"University of \" \"\") \",\" \"\") (str.replace col2 \",\" \", USA\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "\"(str.replace (str.replace (str.replace col1 \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") col2 \\\"\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n",
      "(str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \", \" \", \")",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "\"(str.++ (str.replace col2 col1 \\\"\\\") \\\", USA\\\")\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"USA\\\")) \\\"PA\\\" \\\"PA, USA\\\")\"",
      "\"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\"",
      "\"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.replace col2 col1 \\\"USA\\\" ) col1 \\\"\\\") \\\", USA\\\")\"",
      "\"(str.++ (str.replace (str.replace col2 col1 \\\"USA\\\")) col1 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (ite (str.contains col1 \",\") (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.indexof col1 \",\") 2))) col1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col1 col2 \")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.++ col1 \\\", \\\" col2) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace col2 col1 \\\"USA\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\", USA\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\",\\\" col2) \\\", USA\\\" \\\"\\\"))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col1 \\\", \\\" \\\",\\\") col2 \\\",\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") col1 \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (str.++ col1 \", \" \"USA\")))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col1 \"University of \" \"\") \"New York\" \"NY\") (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"New York\" \"NY\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 0) (str.at colol1 1) \", \" (str.at col2 0) (str.at col2 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col1 \"University of \" \"\") \",\" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York, New York\\\" \\\"New York, NY\\\") \\\"New Haven, CT, USA\\\" \\\"New Haven, CT\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col1 \", \" \"\") \", USA\" \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"NH\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace col1 \"University of \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \"University\" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\" 0)) \", \" (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.indexof col2 \",\" 0) 1) (+ (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"New Haven\" \"New Haven\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ col1 \", \" col2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.++ (str.replace col1 col2 \\\" \\\") \\\",\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\",\\\") (str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\"))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\",\\\" col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\")",
      null,
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col1 col2 \")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\", \\\" col2 \\\", USA\\\") \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace col1 col2 \\\"USA\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace col1 col2 \\\"USA\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\", USA\\\" \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace col1 \"University of \" \"\") 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col1 \"University of \" \"\") \",\" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ (str.replace col1 \", \" \", \") col2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col1 \"University of \" \"\") \",\" \"\") (str.replace col2 \",\" \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col1 \\\",\\\" \\\"\\\") \\\", USA\\\" \\\"\\\") col2 \\\"\\\")\")",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace col2 col1 \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"USA\\\")) \\\"PA\\\" \\\"PA, USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", \\\" (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA)\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.++ col1 \\\", \\\" col2) \\\"New York\\\" \\\"NY\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col2 col1 \\\"USA\\\" ) col1 \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col2 col1 \\\"USA\\\")) col1 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))"
    ],
    "time_diff_ms": 1768.9679999999998,
    "constants": [
      [
        ", USA",
        ", "
      ],
      [
        2,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        "(str.replace (str.replace (str.replace col1 col2 "
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA)"
      ],
      [
        "(str.++ (str.++ col1 \", \" col2) \", USA\")"
      ],
      [
        "(str.++ (str.replace col2 col1 \"USA\") \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.++ col1 col2) \", USA\" \"\") \", USA\")"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA)"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.replace col2 col1 \"\") \",\" \", USA\") \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.++ col1 \",\" col2) \", USA\" \"\"))"
      ],
      [
        "(str.++ (str.replace (str.replace col1 \", \" \",\") col2 \",\") \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \", USA\")"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA)"
      ],
      [
        "(str.++ (str.replace (str.replace col2 col1 \"\") col1 \"\") \", USA\")"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA)"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA)"
      ],
      [
        "(str.++ (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \", USA\")"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        "USA",
        ", "
      ],
      [
        "(str.++ col2 \", \" col1 \", USA\")"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.replace (str.++ col1 col2) \", USA\" \"\") \", USA\")"
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", "
      ],
      [
        "",
        ", USA",
        ",",
        "University of "
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, New York\" \"New York, NY\") \"New Haven, CT, USA\" \"New Haven, CT\")"
      ],
      [
        "",
        ", USA",
        ", "
      ],
      [
        ", USA",
        "NY",
        "NH",
        "New Haven",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        "University of ",
        ", "
      ],
      [
        "",
        "NY",
        "New Haven",
        "University",
        "New York"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        ", USA",
        ", ",
        "USA",
        "NY",
        "New York"
      ],
      [
        "",
        "University ",
        "University of "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ",",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA)"
      ],
      [
        "NY",
        "New Haven",
        "New York",
        ", USA"
      ],
      [
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.++ (str.replace col1 col2 \" \") \",\") \", USA\")"
      ],
      [
        "(str.++ (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \",\") (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))"
      ],
      [
        "(str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \", USA\")"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\")"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.++ col1 \",\" col2) \", USA\" \"\") \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.++ col1 \", \" col2) \", USA\" \"\") \", USA\")"
      ],
      null,
      [
        "(str.++ (str.replace (str.replace col1 col2 "
      ],
      [
        "(str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \", USA\")"
      ],
      [
        "(str.++ (str.replace col1 col2 \"USA\") \", USA\")"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\")"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\")"
      ],
      [
        "(str.++ (str.replace col1 col2 \"USA\") \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.++ col1 \", \" col2) \", USA\" \"\") \", USA\")"
      ],
      [
        "(str.++ col2 \", USA\")"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        ", ",
        "University ",
        "University of "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        0,
        1,
        2,
        ", USA",
        ", ",
        ",",
        "University of "
      ],
      [
        "",
        ", USA",
        ",",
        "University of "
      ],
      [
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        ",",
        "University of "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.replace (str.replace (str.replace col1 \",\" \"\") \", USA\" \"\") col2 \"\")"
      ],
      null,
      [
        "",
        "University ",
        "University of ",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.replace col2 col1 \"\") \", USA\")"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"USA\")) \"PA\" \"PA, USA\")"
      ],
      [
        "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA)"
      ],
      [
        "(str.++ (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \", USA\")"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.replace col2 col1 \"USA\" ) col1 \"\") \", USA\")"
      ],
      [
        "(str.++ (str.replace (str.replace col2 col1 \"USA\")) col1 \", USA\")"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      "(str.++ (str.replace (str.replace col2 col1 \"USA\")) col1 \", USA\")",
      "(str.++ (str.replace col2 col1 \"\") \", USA\")",
      "(str.++ (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \",\") (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(str.++ (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \", USA\")",
      "(str.replace (str.replace (str.replace col1 \",\" \"\") \", USA\" \"\") col2 \"\")",
      "(str.replace (str.replace (str.replace col1 col2 ",
      "New Haven",
      "(str.++ col2 \", USA\")",
      "(str.++ (str.replace (str.++ col1 \",\" col2) \", USA\" \"\"))",
      "(str.++ (str.replace (str.replace col2 col1 \"\") \",\" \", USA\") \", USA\")",
      "(str.replace (str.replace (str.replace col2 col1 \"USA\")) \"PA\" \"PA, USA\")",
      "(str.++ (str.replace (str.++ col1 \", \" col2) \", USA\" \"\") \", USA\")",
      ", ",
      "(str.++ (str.replace (str.replace col2 col1 \"\") col1 \"\") \", USA\")",
      "USA",
      ",",
      "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA)",
      "(str.++ col2 \", \" col1 \", USA\")",
      "New York",
      "(str.++ (str.replace (str.++ col1 col2) \", USA\" \"\") \", USA\")",
      "(str.++ (str.++ col1 \", \" col2) \", USA\")",
      "(str.++ (str.replace (str.replace col1 \", \" \",\") col2 \",\") \", USA\")",
      ", USA",
      "(str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, New York\" \"New York, NY\") \"New Haven, CT, USA\" \"New Haven, CT\")",
      "University ",
      "(str.++ (str.++ (str.replace col1 col2 \" \") \",\") \", USA\")",
      "(str.++ (str.replace (str.++ col1 \",\" col2) \", USA\" \"\") \", USA\")",
      "University",
      "(str.++ (str.replace col1 col2 \"USA\") \", USA\")",
      "(str.++ (str.replace col2 col1 \"USA\") \", USA\")",
      "(str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\")",
      "(str.++ (str.replace (str.replace col1 col2 ",
      "NY",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\")",
      "NH",
      "(str.++ (str.replace (str.replace col2 col1 \"USA\" ) col1 \"\") \", USA\")",
      "University of ",
      "(str.++ (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \", USA\")"
    ]
  },
  "strip-numeric-characters-from-cell.sl": {
    "completions": [
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\"))",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\"))",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 1) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\") )",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 1) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "\"(str.replace _arg_0 (int.to.str 0) \\\"\\\")\"",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"1234567890\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (str.to.int _arg_0) \"\"))",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 1) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (str.to.int _arg_0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\"))",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 1) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 1) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (str.to.int _arg_0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 (int.to.str 0) \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")",
      "(str.replace _arg_0 \"0123456789\" \"\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str 0) \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"1234567890\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.to.int _arg_0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.to.int _arg_0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 1) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (str.to.int _arg_0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 (int.to.str 0) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0123456789\" \"\"))"
    ],
    "time_diff_ms": 2619.585,
    "constants": [
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        "",
        1
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        1
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ],
      [
        "(str.replace _arg_0 (int.to.str 0) \"\")"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "0",
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "1234567890"
      ],
      [
        "0",
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        1
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        "",
        1
      ],
      [
        0,
        ""
      ],
      [
        "",
        1
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        0,
        ""
      ],
      [
        0,
        ""
      ],
      [
        "",
        "0123456789"
      ],
      [
        "",
        "0123456789"
      ]
    ],
    "all_constants": [
      0,
      "",
      1,
      "0",
      "0123456789",
      "1234567890",
      "(str.replace _arg_0 (int.to.str 0) \"\")"
    ]
  },
  "36462127.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) (+ (str.indexof _arg_0 \"/\") 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.len (str.replace _arg_0 \"/\" \"\")))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.len _arg_0)) 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (- (str.len _arg_0) (+ 1 (str.indexof (str.replace _arg_0 \"/\" \" \") _arg_0 (- (str.len _arg_0) 1))) (str.len (str.replace _arg_0 \"/\" \" \"))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.len _arg_0)) 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) (+ (str.indexof _arg_0 \"/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.len (str.replace _arg_0 \"/\" \"\")))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.len _arg_0)) 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) (+ 1 (str.indexof (str.replace _arg_0 \"/\" \" \") _arg_0 (- (str.len _arg_0) 1))) (str.len (str.replace _arg_0 \"/\" \" \")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (str.len _arg_0)) 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))"
    ],
    "time_diff_ms": 1002.298,
    "constants": [
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        "",
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/",
        " "
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      "",
      1,
      "/",
      0,
      " "
    ]
  },
  "exceljet3.sl": {
    "completions": [
      "(str.++ (str.substr _arg_0 5 4) \" \" (str.substr _arg_0 0 4))",
      "(str.substr _arg_0 5 (- (str.len _arg_0) 5))",
      "(str.++ _arg_0 \"\")",
      "(str.++ _arg_0 \"\")",
      "(str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9) (str.at _arg_0 10) (str.at _arg_0 11) (str.at _arg_0 12) (str.at _arg_0 13) (str.at _arg_0 14) (str.at _arg_0 15) (str.at _arg_0 16) (str.at _arg_0 17) (str.at _arg_0 18) (str.at _arg_0 19) (str.at _arg_0 20) (str.at _arg_0 21) (str.at _arg_0 22) (str.at _arg_0 23) (str.at _arg_0",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ _arg_0 \"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 4 (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"=\") (+ (str.indexof _arg_0 \"=\") 1)))",
      "(str.++ \"year=\" _arg_0)",
      "(str.substr _arg_0 4 (str.len _arg_0))",
      "(str.replace _arg_0 \"=\" \"\")",
      "(str.substr _arg_0 4 (str.len _arg_0))",
      "(str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 4 (str.len _arg_0))",
      "(str.++ \"year=\" _arg_0)",
      "(str.++ _arg_0 \"\")",
      "(str.++ \"fuel economy=\" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 0)))",
      "(str.++ \"fuel economy=\" (str.at _arg_0 0) \"/\" (str.at _arg_0 1) (str.at _arg_0 2) (str.at _arg_0 3))",
      "(str.++ _arg_0 \"\")",
      "(str.substr _arg_0 4 (str.len _arg_0))",
      "(str.replace _arg_0 \"=[^=]*$\"\"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) \"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 (str.indexof _arg_0 \"=\" 0) (str.len _arg_0))",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \" \"\")",
      "(str.++ _arg_0 \"\")",
      "(str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) (str.substr _arg_0 0 4))",
      "(str.replace _arg_0 \"=[^=]*\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(str.substr _arg_0 4 (str.len _arg_0))",
      "(str.++ _arg_0 \"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) _arg_0))",
      "(str.substr _arg_0 4 (str.len _arg_0))",
      "(str.at _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ _arg_0 \"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 4 (str.len _arg_0))",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.substr _arg_0 5 (str.len _arg_0)))",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(str.++ \"fuel economy=\" _arg_0)",
      "(str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) \"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ \"year= \" (str.substr _arg_0 5 (str.len _arg_0)))",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ \"fuel economy=\" _arg_0)",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) (str.substr _arg_0 0 4))",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.at _arg_0 5) (str.at _arg_0 7) (str.at _arg_0 9) (str.at _arg_0 11))",
      "(str.substr _arg_0 5 (str.len _arg_0))",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) _arg_0)",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 5 (str.len _arg_0))",
      "(str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9) (str.at _arg_0 10))",
      "(str.++ \"year=\" (str.substr _arg_0 5 (str.len _arg_0)))",
      "(str.replace _arg_0 \".*= \")",
      "(str.at _arg_0 5 2)",
      "(str.++ \"fuel economy= \" _arg_0)",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 5 (str.len _arg_0))",
      "(str.substr _arg_0 5 (- (str.indexof _arg_0 \"=\") 5))",
      "(str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(str.substr _arg_0 5 (str.len _arg_0))",
      "(str.substr _arg_0 5 (str.indexof _arg_0 \"=\"))",
      "(str.++ _arg_0 \"\")",
      "(str.replace _arg_0 \".*=\" \"\")",
      "(str.++ \"fuel economy=\" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 0)))",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 5 (str.len _arg_0))",
      "(str.replace _arg_0 \".*= \")",
      "(str.++ (str.substr _arg_0 5 4))",
      "(str.++ _arg_0 \"\")",
      "(str.replace _arg_0 \".*= \")",
      "(str.substr _arg_0 5 (- (str.len _arg_0) 5))",
      "(str.substr _arg_0 5 (- (str.len _arg_0) 5))",
      "(str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) (str.substr _arg_0 0 4))",
      "(str.substr _arg_0 5 (- (str.len _arg_0) 5)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 4) \" \" (str.substr _arg_0 0 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9) (str.at _arg_0 10) (str.at _arg_0 11) (str.at _arg_0 12) (str.at _arg_0 13) (str.at _arg_0 14) (str.at _arg_0 15) (str.at _arg_0 16) (str.at _arg_0 17) (str.at _arg_0 18) (str.at _arg_0 19) (str.at _arg_0 20) (str.at _arg_0 21) (str.at _arg_0 22) (str.at _arg_0 23) (str.at _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 4 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"=\") (+ (str.indexof _arg_0 \"=\") 1)))",
      "(define-fun f (_arg_0 String) String (str.++ \"year=\" _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 4 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"=\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 4 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 4 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.++ \"year=\" _arg_0))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"fuel economy=\" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String) String (str.++ \"fuel economy=\" (str.at _arg_0 0) \"/\" (str.at _arg_0 1) (str.at _arg_0 2) (str.at _arg_0 3)))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 4 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"=[^=]*$\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"=\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) (str.substr _arg_0 0 4)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"=[^=]*\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 4 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 4 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 4 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(define-fun f (_arg_0 String) String (str.++ \"fuel economy=\" _arg_0))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"year= \" (str.substr _arg_0 5 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"fuel economy=\" _arg_0))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) (str.substr _arg_0 0 4)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 5) (str.at _arg_0 7) (str.at _arg_0 9) (str.at _arg_0 11)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9) (str.at _arg_0 10)))",
      "(define-fun f (_arg_0 String) String (str.++ \"year=\" (str.substr _arg_0 5 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 5 2))",
      "(define-fun f (_arg_0 String) String (str.++ \"fuel economy= \" _arg_0))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.indexof _arg_0 \"=\") 5)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*=\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ \"fuel economy=\" (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 4)))",
      "(define-fun f (_arg_0 String) String (str.++ _arg_0 \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \".*= \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.len _arg_0) 5)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 (- (str.len _arg_0) 5)) (str.substr _arg_0 0 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 5 (- (str.len _arg_0) 5)))"
    ],
    "time_diff_ms": 2469.807,
    "constants": [
      [
        0,
        " ",
        4,
        5
      ],
      [
        5
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        5
      ],
      [
        5
      ],
      [
        ".*= "
      ],
      [
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23
      ],
      [
        ".*= "
      ],
      [
        ""
      ],
      [
        ".*= "
      ],
      [
        0,
        "="
      ],
      [
        ".*= "
      ],
      [
        4
      ],
      [
        0,
        "="
      ],
      [
        ".*= "
      ],
      [
        5,
        6,
        7,
        8,
        9
      ],
      [
        "=",
        1
      ],
      [
        "year="
      ],
      [
        4
      ],
      [
        "",
        "="
      ],
      [
        4
      ],
      [
        "",
        5
      ],
      [
        0,
        "="
      ],
      [
        ".*= "
      ],
      [
        4
      ],
      [
        "year="
      ],
      [
        ""
      ],
      [
        0,
        "fuel economy=",
        "/"
      ],
      [
        0,
        1,
        "/",
        2,
        3,
        "fuel economy="
      ],
      [
        ""
      ],
      [
        4
      ],
      [
        "",
        "=[^=]*$"
      ],
      [
        ".*= "
      ],
      [
        "",
        5
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        0,
        "="
      ],
      [
        ".*= "
      ],
      [
        "",
        ".*= "
      ],
      [
        ""
      ],
      [
        0,
        4,
        5
      ],
      [
        "",
        "=[^=]*"
      ],
      [
        0,
        "="
      ],
      [
        4
      ],
      [
        ""
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        5
      ],
      [
        4
      ],
      [
        0,
        "=",
        1
      ],
      [
        ".*= "
      ],
      [
        ""
      ],
      [
        ".*= "
      ],
      [
        4
      ],
      [
        ".*= "
      ],
      [
        5
      ],
      [
        ".*= "
      ],
      [
        5
      ],
      [
        "fuel economy="
      ],
      [
        "",
        5
      ],
      [
        ".*= "
      ],
      [
        "year= ",
        5
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        "fuel economy="
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        0,
        4,
        5
      ],
      [
        ".*= "
      ],
      [
        "",
        " "
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        "",
        " "
      ],
      [
        ".*= "
      ],
      [
        9,
        11,
        5,
        7
      ],
      [
        5
      ],
      [
        ".*= "
      ],
      [
        5
      ],
      [
        ".*= "
      ],
      [
        5
      ],
      [
        5,
        6,
        7,
        8,
        9,
        10
      ],
      [
        "year=",
        5
      ],
      [
        ".*= "
      ],
      [
        2,
        5
      ],
      [
        "fuel economy= "
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        ".*= "
      ],
      [
        5
      ],
      [
        "=",
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        "=",
        5
      ],
      [
        ""
      ],
      [
        "",
        ".*="
      ],
      [
        0,
        "fuel economy=",
        "/"
      ],
      [
        ".*= "
      ],
      [
        5
      ],
      [
        ".*= "
      ],
      [
        4,
        5
      ],
      [
        ""
      ],
      [
        ".*= "
      ],
      [
        5
      ],
      [
        5
      ],
      [
        0,
        4,
        5
      ],
      [
        5
      ]
    ],
    "all_constants": [
      0,
      "",
      1,
      ".*= ",
      4,
      5,
      6,
      7,
      8,
      9,
      " ",
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      3,
      "=[^=]*$",
      "/",
      2,
      "year= ",
      ".*=",
      "fuel economy=",
      "=[^=]*",
      "=",
      "fuel economy= ",
      "year="
    ]
  },
  "stackoverflow3.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))) 1)) 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at (str.replace _arg_0 \" \" \"9\") (- (str.len _arg_0) 1))) -1) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.len _arg_0) 1)) 1)) 1) 1))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 10)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" 0))))))))))))))))))) (str.len _arg_0))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.len (str.replace _arg_0 \" \" \"\")))) 1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof (str.to.int 9) (str.to.int 0) -1) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \" 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) 1))",
      "(str.substr _arg_0 (+ (str.indexof (str.to.int 9) (str.replace (str.replace (str.replace _arg_0 \"0\" \"\") \"1\" \"\") \"2\" \"\") -1) 1))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.len _arg_0) 1)) 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"X\"))) 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \" 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \"1\" \" \"))) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.len _arg_0))) (str.len \"0\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)) 1) 1))",
      "(str.substr _arg_0 (+ (str.rindexof _arg_0 \"1\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof (str.to.int (str.substr _arg_0 0 (- (str.len _arg_0) 1))) _arg_0 (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr (str.replace _arg_0 \" \" \"\") (- (str.len (str.replace _arg_0 \" \")) 1) 1)))))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \")) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\")) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"1234567890\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 10 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 10))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof (_arg_0 \"1\") _arg_0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"9\"))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) _arg_0 -1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof (str.replace _arg_0 \" \" \"\") (str.to.int (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.len (str.replace _arg_0 \" \" \"\"))) 1) (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (str.to.int (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.len (str.replace _arg_0 \" \" \"\"))) 1)))))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 10)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (- (str.len _arg_0) 1))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.len _arg_0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 0 (str.len _arg_0)))) 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.len _arg_0))) (str.len \"0\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" -1) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"1\" -1)))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (- (str.len _arg_0) (+ 1 (str.rindexof _arg_0 \"0123456789\")))))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \" 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"0\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str (- 9 1)) 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"0\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)) 1) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" 0) 1) (- (str.len _arg_0) (str.indexof (str.reverse _arg_0) \"1\" 0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr (_arg_0) 0 (str.len (_arg_0)))))) 1) (str.len (_arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr (_arg_0) (- (str.indexof (_arg_0) (int.to.str (str.to.int (_arg_0))) 1) 1) 1))))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str (- 1 (str.len _arg_0))) 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 0 (str.len _arg_0)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)) -1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1))) _arg_0 0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)) )",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" 9) -1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))) 1)))))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (- (str.len (str.replace _arg_0 \" \" \"\")) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" 0) 1) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \"\" ) (int.to.str (- 1 (str.to.int (str.at (str.replace _arg_0 \" \" \"\" ) (- (str.len (str.replace _arg_0 \" \" \"\" )) 1)) 0))))) )",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"1234567890\")) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" 0))))))))))))))))))) (str.len _arg_0)) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 0 (str.len _arg_0)))) 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))) 1)) 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at (str.replace _arg_0 \" \" \"9\") (- (str.len _arg_0) 1))) -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.len _arg_0) 1)) 1)) 1) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 10)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" 0))))))))))))))))))) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.len (str.replace _arg_0 \" \" \"\")))) 1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.to.int 9) (str.to.int 0) -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.to.int 9) (str.replace (str.replace (str.replace _arg_0 \"0\" \"\") \"1\" \"\") \"2\" \"\") -1) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.len _arg_0) 1)) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"X\"))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \"1\" \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.len _arg_0))) (str.len \"0\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)) 1) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.rindexof _arg_0 \"1\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.to.int (str.substr _arg_0 0 (- (str.len _arg_0) 1))) _arg_0 (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr (str.replace _arg_0 \" \" \"\") (- (str.len (str.replace _arg_0 \" \")) 1) 1)))))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"1234567890\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 10 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 10))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof (_arg_0 \"1\") _arg_0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"9\"))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int (str.substr _arg_0 0 (str.len _arg_0))) _arg_0 -1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof (str.replace _arg_0 \" \" \"\") (str.to.int (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.len (str.replace _arg_0 \" \" \"\"))) 1) (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (str.to.int (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.len (str.replace _arg_0 \" \" \"\"))) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 10)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.len _arg_0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 0 (str.len _arg_0)))) 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.len _arg_0))) (str.len \"0\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" -1) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"1\" -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (- (str.len _arg_0) (+ 1 (str.rindexof _arg_0 \"0123456789\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \" \" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"0\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str (- 9 1)) 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"0\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)) 1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" 0) 1) (- (str.len _arg_0) (str.indexof (str.reverse _arg_0) \"1\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr (_arg_0) 0 (str.len (_arg_0)))))) 1) (str.len (_arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr (_arg_0) (- (str.indexof (_arg_0) (int.to.str (str.to.int (_arg_0))) 1) 1) 1))))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 (int.to.str (- 1 (str.len _arg_0))) 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 0 (str.len _arg_0)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1)) -1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1))) _arg_0 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.indexof (_arg_0) (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" 9) -1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (- (str.len (str.replace _arg_0 \" \" \"\")) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"\") (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"1\" 0) 1) (- (str.len _arg_0) (str.indexof (str.replace _arg_0 \" \" \"\") (int.to.str (- 1 (str.to.int (str.at (str.replace _arg_0 \" \" \"\") (- (str.len (str.replace _arg_0 \" \" \"\")) 1)) 0)))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"1234567890\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.at _arg_0 (- (str.len _arg_0) 1)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0\" (+ 1 (str.rindexof _arg_0 \"1\" (+ 1 (str.rindexof _arg_0 \"2\" (+ 1 (str.rindexof _arg_0 \"3\" (+ 1 (str.rindexof _arg_0 \"4\" (+ 1 (str.rindexof _arg_0 \"5\" (+ 1 (str.rindexof _arg_0 \"6\" (+ 1 (str.rindexof _arg_0 \"7\" (+ 1 (str.rindexof _arg_0 \"8\" (+ 1 (str.rindexof _arg_0 \"9\" 0))))))))))))))))))) (str.len _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 0 (str.len _arg_0)))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1)))))"
    ],
    "time_diff_ms": 675.316,
    "constants": [
      [
        "",
        0,
        " ",
        1
      ],
      [
        0,
        1
      ],
      [
        1,
        "0123456789"
      ],
      [
        "9",
        1,
        " ",
        -1
      ],
      [
        1,
        "0123456789"
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        "0123456789"
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " ",
        10
      ],
      [
        "0",
        1,
        "8",
        0,
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        "",
        1,
        " "
      ],
      [
        0,
        9,
        -1,
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        0,
        1
      ],
      [
        "0",
        "",
        1,
        9,
        "2",
        "1",
        -1
      ],
      [
        "",
        1,
        " "
      ],
      [
        "1",
        1
      ],
      [
        1,
        "0123456789"
      ],
      [
        0,
        " ",
        "X"
      ],
      [
        0,
        1,
        " "
      ],
      [
        "1",
        " ",
        1
      ],
      [
        "0",
        1
      ],
      [
        "",
        1,
        " "
      ],
      [
        "1",
        1
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        "",
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0
      ],
      [
        0,
        1
      ],
      [
        "0",
        1
      ],
      [
        0
      ],
      [
        "",
        0,
        " "
      ],
      [
        1,
        "1234567890"
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        "0123456789"
      ],
      [
        "",
        1,
        " ",
        10
      ],
      [
        0,
        1
      ],
      [
        "1"
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        "0123456789"
      ],
      [
        0,
        1
      ],
      [
        "9",
        0,
        " "
      ],
      [
        0,
        1,
        -1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        0,
        1
      ],
      [
        1,
        "0123456789"
      ],
      [
        "",
        1,
        " ",
        10
      ],
      [
        "0",
        1
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        "0",
        1
      ],
      [
        1,
        "0123456789"
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        "0",
        1
      ],
      [
        0,
        1
      ],
      [
        0
      ],
      [
        "1",
        -1,
        1
      ],
      [
        1,
        "0123456789"
      ],
      [
        0,
        1,
        " "
      ],
      [
        "0",
        1
      ],
      [
        0,
        1,
        9
      ],
      [
        "0",
        1
      ],
      [
        1,
        "123456789"
      ],
      [
        1
      ],
      [
        0,
        "1",
        1
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        1
      ],
      [
        "1",
        1
      ],
      [
        "1",
        1
      ],
      [
        0,
        1
      ],
      [
        0
      ],
      [
        1,
        "0123456789"
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        0
      ],
      [
        "",
        1,
        " ",
        -1
      ],
      [
        0,
        1
      ],
      [
        "1",
        -1,
        1
      ],
      [
        "",
        1,
        " "
      ],
      [
        "1",
        1
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        1,
        "0123456789"
      ],
      [
        1,
        " ",
        9,
        -1
      ],
      [
        "",
        1,
        " ",
        0
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        0,
        1
      ],
      [
        "",
        1,
        " "
      ],
      [
        0,
        1,
        "",
        " ",
        "1"
      ],
      [
        1,
        "1234567890"
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        "0",
        1,
        "8",
        0,
        "6",
        "9",
        "5",
        "2",
        "7",
        "3",
        "4",
        "1"
      ],
      [
        0
      ],
      [
        0,
        1
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      9,
      " ",
      "0123456789",
      10,
      "2",
      "4",
      "123456789",
      "8",
      "7",
      "6",
      "9",
      "5",
      "1234567890",
      "3",
      "1",
      "0",
      "X",
      -1
    ]
  },
  "univ_5-long.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 col2 \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, New York\" \"New York, NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \" University\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 col1 \"\") \", \" \",\") \", USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "\"(str.replace col1 col2 \"\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \" \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "\"(str.substr col2 0 (- (str.len col2) 5))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace col2 \", USA\" \"\") \", \" \",\") \", USA\") 0 (- (str.len col2) 5)))",
      "\"(str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) 2))\"",
      "\"(str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) 2))\"",
      "\"(str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace col1 \"University of \" \"\"))",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 2))",
      "(str.substr (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \"University, \" \"\") 0 (str.indexof col2 \",\" 0)) 0 (- (str.indexof col2 \",\" 0) 1))",
      "(str.substr col2 (str.indexof col2 \", \" 0) (str.len col2))",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "(str.replace (str.replace (str.replace col2 \", USA\" \"\") \", \" \"\") \", \" \"\")",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "(str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \"University of\" \"\") 2 (str.len (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \"University of\" \"\")))",
      "(str.substr (str.substr col2 0 (str.indexof col2 \",\" 0)) 1 (str.len (str.substr col2 0 (str.indexof col2 \",\" 0))))\", USA\")",
      "(str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", USA, \")",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \"California, \" \"CA, \")",
      "\"(str.substr col2 0 (- (str.indexof col2 col1 0) 2))\"",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      "\"(str.substr col2 0 (- (str.indexof col2 col1 0) 2))\"",
      "(str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University\" \"\")",
      "(str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \",\" \"\")",
      "(str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \", \" \"\")",
      "\"(str.replace col1 col2 \"\")\"",
      "(str.replace (str.replace (str.replace col2 \"New York,\" \"NY,\") \"New York\" \"NY\") \"USA\" \"USA\")",
      "(str.substr (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) 0 (- (str.len (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2))) 4))",
      "(str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, New York\" \"New York, NY\")",
      "(str.substr (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 1 (- (str.len (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))) 1))",
      "\"(str.substr (str.replace (str.++ col1 col2) col1 \\\"\\\") 1 (- (str.len (str.replace (str.++ col1 col2) col1 \\\"\\\")) 1))\"",
      "(str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2))",
      "(str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, NY\" \"NY\")",
      "(str.substr col2 (str.indexof col2 \", \" 0) (str.len col2))",
      "(str.substr (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)) 0 (- (str.indexof col2 \", \" 0) 1))",
      "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")) 2))",
      "(str.substr col2 0 (- (str.len col2) 4))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", USA, \")",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace col2 \", USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \" of \" \", \" \", \")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (ite (str.contains col1 \"New York\")\n       (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY, USA\")\n       (str.replace col2 \"New York\" \"NY, USA\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col2 \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \",\" \" \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col2 \"USA\" \"\"))",
      "(str.substr (str.replace (str.replace (str.replace col2 \", USA\" \"\") \", \" \",\") \"New York\" \"NY\") 2 100))",
      "(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \"New York\" \"NY\") 0 (- (str.indexof col2 \",\") 1))",
      "(str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \"\")",
      "(str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \",\") 1))",
      "(str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2))",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "(str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \" , \" \", \") \", USA\")",
      "(str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \" , \" \", \") \" , \") \"USA\" \"\") \"USA\" \"\") 0 (- (str.indexof col2 \",\") 1)) (- (str.len col2) (+ 2 (str.indexof col2 \",\") 1)))",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\" USA\\\")\"",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      "(str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (+ (str.indexof col2 \", \") 2) (- (str.len col2) 1))",
      "(str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (+ (str.indexof col2 \",\") 2) (str.len col2))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2))",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      "\"(str.substr col2 (+ 1 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, \" \"NY, \") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \",\" \" \"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \",\" \" \"))",
      "\"(str.replace (str.replace col1 col2 \\\", USA\\\") \\\",\\\" \\\"\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col1 \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace col1 \", \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.substr (str.replace col1 \"University of \" \"\") 0 2) 0 2) 0 2))",
      "(define-fun f (col1 String col2 String) String\n  (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 3 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 col2 \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\"))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, New York\" \"New York, NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \" University\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 col1 \"\") \", \" \",\") \", USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace col1 col2 \")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \" \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.len col2) 5))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \", USA\" \"\") \", \" \",\") \", USA\") 0 (- (str.len col2) 5)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \"University, \" \"\") 0 (str.indexof col2 \",\" 0)) 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (str.indexof col2 \", \" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \", USA\" \"\") \", \" \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \"University of\" \"\") 2 (str.len (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \"University of\" \"\"))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (str.indexof col2 \",\" 0)) 1 (str.len (str.substr col2 0 (str.indexof col2 \",\" 0)))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", USA, \"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \"California, \" \"CA, \"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 col1 0) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 col1 0) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace col1 col2 \")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York,\" \"NY,\") \"New York\" \"NY\") \"USA\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) 0 (- (str.len (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2))) 4)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, New York\" \"New York, NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 1 (- (str.len (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))) 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 col2) col1 \\\"\\\") 1 (- (str.len (str.replace (str.++ col1 col2) col1 \\\"\\\")) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, NY\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (str.indexof col2 \", \" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)) 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.len col2) 4)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", USA, \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace col2 \", USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \" of \" \", \" \", \")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (ite (str.contains col1 \"New York\") (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY, USA\") (str.replace col2 \"New York\" \"NY, USA\")))",
      "(define-fun f (col1 String col2 String) String (str.replace col2 \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \",\" \" \"))",
      "(define-fun f (col1 String col2 String) String (str.replace col2 \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \", USA\" \"\") \", \" \",\") \"New York\" \"NY\") 2 100))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \"New York\" \"NY\") 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \" , \" \", \") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \" , \" \", \") \" , \") \"USA\" \"\") \"USA\" \"\") 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\",\\\" \\\"\\\") \\\", USA\\\" \\\" USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (+ (str.indexof col2 \", \") 2) (- (str.len col2) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (+ (str.indexof col2 \",\") 2) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 1 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York, \" \"NY, \") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \",\" \" \"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \",\" \" \"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace col1 col2 \\\", USA\\\") \\\",\\\" \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col1 \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.substr (str.replace col1 \"University of \" \"\") 0 2) 0 2) 0 2))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 3 100))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))"
    ],
    "time_diff_ms": 1672.687,
    "constants": [
      [
        0,
        1,
        ","
      ],
      [
        ""
      ],
      [
        "",
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        ", "
      ],
      [
        "Phialdelphia",
        "Philadelphia",
        ", USA",
        ", "
      ],
      [
        "",
        "University of "
      ],
      [
        "New York, NY",
        "New York, New York",
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "NY",
        "",
        "New York",
        " University"
      ],
      [
        "",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", USA",
        ",",
        ", "
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        "(str.replace col1 col2 "
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        " ",
        ", "
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        "(str.substr col2 0 (- (str.len col2) 5))"
      ],
      [
        "",
        0,
        ", USA",
        5,
        ", ",
        ","
      ],
      [
        "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2))"
      ],
      [
        "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2))"
      ],
      [
        "(str.replace (str.replace col2 col1 \"\") \", USA\" \"\")"
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        " , ",
        ", USA",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        "University of "
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        0,
        1,
        ",",
        "NY",
        "University ",
        "University of ",
        "New York",
        "University, "
      ],
      [
        0,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        2,
        "University of",
        "NY",
        "University",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        ", USA, ",
        "New York"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "",
        "NY",
        "CA, ",
        "California, ",
        "University",
        "New York"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 col1 0) 2))"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 col1 0) 2))"
      ],
      [
        "",
        "NY",
        "University of ",
        "University",
        "New York"
      ],
      [
        "",
        ",",
        "NY",
        "University",
        "New York"
      ],
      [
        "",
        ", ",
        "University of",
        "NY",
        "New York"
      ],
      [
        "(str.replace col1 col2 "
      ],
      [
        "NY,",
        "USA",
        "New York,",
        "NY",
        "New York"
      ],
      [
        0,
        2,
        4,
        ", "
      ],
      [
        "New York, NY",
        "New York, New York",
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "(str.substr (str.replace (str.++ col1 col2) col1 \"\") 1 (- (str.len (str.replace (str.++ col1 col2) col1 \"\")) 1))"
      ],
      [
        2,
        ", "
      ],
      [
        "New York, NY",
        "NY",
        ", USA",
        ", "
      ],
      [
        0,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        0,
        4
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        ", USA, ",
        "New York"
      ],
      [
        "",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", USA"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        " of ",
        ", ",
        "NY",
        "University",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "NY",
        "",
        "University",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "NY",
        "NY, USA",
        "New York"
      ],
      [
        "",
        "USA"
      ],
      [
        "NY",
        "",
        "University",
        "New York"
      ],
      [
        "NY",
        "",
        "University",
        "New York"
      ],
      [
        "",
        " ",
        ","
      ],
      [
        "",
        "USA"
      ],
      [
        "",
        2,
        100,
        ", USA",
        ", ",
        ",",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        ",",
        "NY",
        "New York"
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        " , ",
        ", USA",
        ", ",
        "NY",
        "University",
        "New York"
      ],
      [
        "",
        " , ",
        0,
        1,
        ", ",
        "USA",
        ",",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \", USA\" \" USA\")"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ", ",
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "(str.substr col2 (+ 1 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))"
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "NY, ",
        ", USA",
        ", ",
        "NY",
        "New York",
        "New York, "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        " ",
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "",
        "University of "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        " ",
        ","
      ],
      [
        "(str.replace (str.replace col1 col2 \", USA\") \",\" \"\")"
      ],
      [
        "",
        " , ",
        "University of ",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", "
      ],
      [
        "",
        0,
        2,
        "University of "
      ],
      [
        "",
        "University of "
      ],
      [
        3,
        100
      ],
      [
        2,
        100
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      4,
      5,
      "(str.substr col2 (+ 1 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))",
      3,
      " ",
      "New York,",
      "(str.replace (str.replace col2 col1 \"\") \", USA\" \"\")",
      ", USA, ",
      "(str.substr (str.replace (str.++ col1 col2) col1 \"\") 1 (- (str.len (str.replace (str.++ col1 col2) col1 \"\")) 1))",
      "New York, ",
      " University",
      " , ",
      "(str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \", USA\" \" USA\")",
      "New York, New York",
      ", ",
      "(str.substr col2 0 (- (str.len col2) 5))",
      "USA",
      ",",
      "University of",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      "New York",
      "NY, USA",
      "University, ",
      "NY,",
      "(str.replace col1 col2 ",
      ", USA",
      "Philadelphia",
      "Phialdelphia",
      "University ",
      "University",
      "New York, NY",
      "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2))",
      " of ",
      100,
      "NY, ",
      "(str.replace (str.replace col1 col2 \", USA\") \",\" \"\")",
      "NY",
      "(str.substr col2 0 (- (str.indexof col2 col1 0) 2))",
      "University of ",
      "CA, ",
      "California, "
    ]
  },
  "exceljet2.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" -1) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 4)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" (- (str.len _arg_0) 4) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" -1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" -1) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 4)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" (- (str.len _arg_0) 4) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\" -1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" -1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))"
    ],
    "time_diff_ms": 1237.27,
    "constants": [
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        1,
        -1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        4,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        -1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      4,
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))",
      ".",
      -1
    ]
  },
  "univ_6.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr (str.substr col2 0 (str.indexof col2 \",\")) 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.at col2 1) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col2 1) (str.at col2 2) \", \" (str.at col2 0) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.substr (str.++ (str.substr col2 1 (str.indexof col2 \",\")) \", \" (str.at col2 (- (str.len col2) 3))) 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.substr col2 (- (str.indexof col2 \", \" 0) 3) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col2 \", \" (ite (str.contains col2 \",\") (str.substr col2 0 (str.indexof col2 \",\" 0)) col2) (ite (str.contains col2 \",\") (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \"USA\")) \"New York\" \"NY\")",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col1 0) (str.at col1 1) \", \" (str.at col2 0) (str.at col2 1) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))))",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") col1 \\\"\\\") \\\", USA\\\" \\\"\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 1 (str.indexof col2 \",\"))) )",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 (- (str.len col2) 4)))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col1 1) (str.at col1 2) \", \" (str.at col2 1) (str.at col2 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col1 (+ (str.indexof col1 \",\") 2) (str.len col1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.++ \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.substr (str.replace col2 \" \" \"\") 0 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.substr col2 (str.indexof col2 \", \" 0 1) 3)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.indexof col2 \",\" 0))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.substr (str.replace (str.substr col2 0 (str.indexof col2 \",\")) 0 (str.indexof (str.replace col2 \"New York\" \"NY\") \",\")) 0 (str.indexof (str.replace (str.replace col1 \"University of\" \"\") \",\")) \",\" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \", \")) (str.substr col2 1 (str.indexof col2 \", \"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (ite (str.contains col2 \"New York\") \"New York\" (str.at col2 0)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") \"College Park\" \"MD\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.++ (str.substr col2 1 (str.indexof col2 \",\")) \", USA\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.substr col2 (str.indexof col2 \",\" 2) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.++ \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String\n\t(str.++ \n\t\t(ite (str.contains col2 \",\") \n\t\t\t(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (str.len col2)) \n\t\t\tcol2) \n\t\t\", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.len col2) 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace \n    (str.replace \n      (ite \n        (str.contains col1 \",\") \n        (str.substr col1 (+ (str.indexof col1 \",\") 2) (str.len col1)) \n        col1) \n      \"New York\" \n      \"NY\") \n    \"USA\" \n    \"USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ \n        (str.replace \n            (str.replace \n                (str.replace col2 \"New York\" \"NY\") \n            \"University of\" \"\") \n        \", \" \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (str.indexof col2 \",\")) \n    \", \" \n    (str.substr col2 (+ 2 (str.indexof col2 \",\")) (str.len col2))\n    \", USA\"\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.++ \", \" (str.substr col2 0 (str.indexof col2 \",\"))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \n    \", \" \n    (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2))\n    \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 1) (str.substr col1 (str.indexof col1 \",\" 0) (str.indexof col1 \",\" 0)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ \n    (str.substr col2 3 2) \", \" \n    (ite \n      (str.contains col2 \"New York\") \"NY\" \n      (str.at col2 0)) \n    \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col1 0) (str.at col2 0) \", \" (ite (str.= (str.substr col2 0 2) \"Ne\") \"New York\" (str.substr col2 0 2)) \", \" (ite (str.= (str.substr col2 (- (str.len col2) 2) 2) \"York\") \"NY\" (str.substr col2 (- (str.len col2) 2) 2)) \", USA\"))",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) (+ (str.indexof col2 \\\",\\\") 2))) \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col1 0) (str.at col1 1) \", \" (str.at col2 0) (str.at col2 1) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.at col2 0) (str.at col2 1) \", USA\"))",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.++ \\\", \\\" (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) (+ (str.len col1) 2))) \\\", USA\\\"))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "\"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 1) (str.substr col2 1 1) \", \" (str.substr col2 0 2) \", USA\"))",
      "\"(str.++ col2 (str.at col1 0) (str.at col1 (+ 1 (str.indexof col1 \",\" 0))))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 3) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "\"(str.substr (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\"New York\\\" \\\"NY\\\") 2 (- (str.len col2) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 1))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace col2 \"New York\" \"NY\") 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\" ) \\\",\\\" \\\", USA\\\")\"",
      "\"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 4))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 (+ (str.indexof col2 \",\") 2))) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"Philadelphia\" \"PA\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"USA\" \"\") \"AK\" \"USA\") \"AZ\" \"USA\") \"AR\" \"USA\") \"CA\" \"USA\") \"CO\" \"USA\") \"CT\" \"USA\") \"DE\" \"USA\") \"FL\" \"USA\") \"GA\" \"USA\") \"HI\" \"USA\") \"ID\" \"USA\") \"IL\" \"USA\") \"IN\" \"USA\") \"IA\" \"USA\") \"KS\" \"USA\") \"KY\" \"USA\") \"LA\" \"USA\") \"ME\" \"USA\") \"MD\" \"USA\") \"MA\" \"USA\") \"MI\" \"USA\") \"MN\" \"USA\") \"MS\" \"USA\") \"MO\" \"USA\") \"MT\" \"USA\") \"NE\" \"USA\") \"NV\" \"USA\") \"NH\" \"USA\") \"NJ\" \"USA\") \"NM\" \"USA\") \"NY\" \"USA\") \"NC\" \"USA\") \"ND\" \"USA\") \"OH\" \"USA\") \"OK\" \"USA\") \"OR\" \"USA\") \"PA\" \"USA\") \"RI\" \"USA\") \"SC\" \"USA\") \"SD\" \"USA\") \"TN\" \"USA\") \"TX\" \"USA\") \"UT\" \"USA\") \"VT\" \"USA\") \"VA\" \"USA\") \"WA\" \"USA\") \"WV\" \"USA\") \"WI\" \"USA\")) 0 (str.indexof col2 \", \" 0) (- (str.len col2) (str.indexof col2 \", \" 0))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 1 (str.indexof col2 \", \" 0)))",
      "\"(str.++ (str.substr col2 0 (str.indexof col2 \\\",\\\" 0)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)) \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (str.indexof col2 \",\" 0))\n    \", \"\n    (ite \n      (= (str.indexof col2 \",\" 0) -1) \n      (str.substr col2 0 (str.indexof col2 \",\" 0))\n      (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (str.len col2))\n    )\n    \", USA\"\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (ite (str.contains col1 \"New York\") \"NY\" (str.at col2 0 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.++ \n        (str.substr col2 0 (str.indexof col2 \",\" 0))\n        \", \"\n        (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.indexof col2 \",\" (+ (str.indexof col2 \",\" 0) 1)))\n        \", USA\"\n    )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (ite (= col2 \"New York\") \"NY\" (str.at col2 0 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col2 \", \" col1 \", \" \"USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col2 1) (str.at col2 2) \", \" (str.at col2 1) (str.at col2 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ \n        (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \n        (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \n        \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.at col1 0) (str.at col1 (- (str.len col1) 2)) \", \" (str.at col2 0) (str.at col2 (- (str.len col2) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col2 \", \" col1 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 1 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 1 (str.indexof col2 \",\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr (str.substr col2 0 (str.indexof col2 \",\")) 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.at col2 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col2 1) (str.at col2 2) \", \" (str.at col2 0) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.substr (str.++ (str.substr col2 1 (str.indexof col2 \",\")) \", \" (str.at col2 (- (str.len col2) 3))) 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.substr col2 (- (str.indexof col2 \", \" 0) 3) 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col2 \", \" (ite (str.contains col2 \",\") (str.substr col2 0 (str.indexof col2 \",\" 0)) col2) (ite (str.contains col2 \",\") (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \"USA\")) \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 0) (str.at col1 1) \", \" (str.at col2 0) (str.at col2 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") col1 \\\"\\\") \\\", USA\\\" \\\"\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 1 (str.indexof col2 \",\"))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 (- (str.len col2) 4)))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 1) (str.at col1 2) \", \" (str.at col2 1) (str.at col2 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col1 (+ (str.indexof col1 \",\") 2) (str.len col1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.++ \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.substr (str.replace col2 \" \" \"\") 0 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.substr col2 (str.indexof col2 \", \" 0 1) 3)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.indexof col2 \",\" 0))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.substr (str.replace (str.substr col2 0 (str.indexof col2 \",\")) 0 (str.indexof (str.replace col2 \"New York\" \"NY\") \",\")) 0 (str.indexof (str.replace (str.replace col1 \"University of\" \"\") \",\")) \",\" \"USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \", \")) (str.substr col2 1 (str.indexof col2 \", \"))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (ite (str.contains col2 \"New York\") \"New York\" (str.at col2 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.++ col1 \", \" col2) \"New York\" \"NY\") \"University of \" \"\") \"College Park\" \"MD\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.++ (str.substr col2 1 (str.indexof col2 \",\")) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.substr col2 (str.indexof col2 \",\" 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.++ \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (ite (str.contains col2 \",\") (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (str.len col2)) col2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) (str.substr col1 (+ (str.indexof col1 \",\") 2) (- (str.len col1) (+ (str.len col2) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (ite (str.contains col1 \",\") (str.substr col1 (+ (str.indexof col1 \",\") 2) (str.len col1)) col1) \"New York\" \"NY\") \"USA\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \", \" \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ 2 (str.indexof col2 \",\")) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.++ \", \" (str.substr col2 0 (str.indexof col2 \",\"))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 1) (str.substr col1 (str.indexof col1 \",\" 0) (str.indexof col1 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 3 2) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 0) (str.at col2 0) \", \" (ite (str.= (str.substr col2 0 2) \"Ne\") \"New York\" (str.substr col2 0 2)) \", \" (ite (str.= (str.substr col2 (- (str.len col2) 2) 2) \"York\") \"NY\" (str.substr col2 (- (str.len col2) 2) 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) (+ (str.indexof col2 \\\",\\\") 2))) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 0) (str.at col1 1) \", \" (str.at col2 0) (str.at col2 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.at col2 0) (str.at col2 1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.++ \\\", \\\" (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (- (str.len col2) (+ (str.len col1) 2))) \\\", USA\\\"))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\")) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 1) (str.substr col2 1 1) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 (str.at col1 0) (str.at col1 (+ 1 (str.indexof col1 \")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 3) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\"New York\\\" \\\"NY\\\") 2 (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 1))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace col2 \"New York\" \"NY\") 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\" ) \\\",\\\" \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 4))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 (+ (str.indexof col2 \",\") 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"Philadelphia\" \"PA\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"USA\" \"\") \"AK\" \"USA\") \"AZ\" \"USA\") \"AR\" \"USA\") \"CA\" \"USA\") \"CO\" \"USA\") \"CT\" \"USA\") \"DE\" \"USA\") \"FL\" \"USA\") \"GA\" \"USA\") \"HI\" \"USA\") \"ID\" \"USA\") \"IL\" \"USA\") \"IN\" \"USA\") \"IA\" \"USA\") \"KS\" \"USA\") \"KY\" \"USA\") \"LA\" \"USA\") \"ME\" \"USA\") \"MD\" \"USA\") \"MA\" \"USA\") \"MI\" \"USA\") \"MN\" \"USA\") \"MS\" \"USA\") \"MO\" \"USA\") \"MT\" \"USA\") \"NE\" \"USA\") \"NV\" \"USA\") \"NH\" \"USA\") \"NJ\" \"USA\") \"NM\" \"USA\") \"NY\" \"USA\") \"NC\" \"USA\") \"ND\" \"USA\") \"OH\" \"USA\") \"OK\" \"USA\") \"OR\" \"USA\") \"PA\" \"USA\") \"RI\" \"USA\") \"SC\" \"USA\") \"SD\" \"USA\") \"TN\" \"USA\") \"TX\" \"USA\") \"UT\" \"USA\") \"VT\" \"USA\") \"VA\" \"USA\") \"WA\" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 1 (str.indexof col2 \", \" 0)))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (str.indexof col2 \\\",\\\" 0)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", \" (ite (= (str.indexof col2 \",\" 0) -1) (str.substr col2 0 (str.indexof col2 \",\" 0)) (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (str.len col2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (ite (str.contains col1 \"New York\") \"NY\" (str.at col2 0 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.indexof col2 \",\" (+ (str.indexof col2 \",\" 0) 1))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (ite (= col2 \"New York\") \"NY\" (str.at col2 0 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col2 \", \" col1 \", \" \"USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col2 1) (str.at col2 2) \", \" (str.at col2 1) (str.at col2 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.at col1 0) (str.at col1 (- (str.len col1) 2)) \", \" (str.at col2 0) (str.at col2 (- (str.len col2) 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col2 \", \" col1 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 1 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (str.indexof col1 \",\")) \", \" (str.substr col2 1 (str.indexof col2 \",\"))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))"
    ],
    "time_diff_ms": 880.037,
    "constants": [
      [
        0,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        2,
        3,
        ", USA",
        ", ",
        ","
      ],
      [
        "NY",
        "",
        "New York",
        "USA"
      ],
      [
        0,
        1,
        2,
        3,
        ", USA",
        ", ",
        ",",
        "NY",
        "New York"
      ],
      [
        "",
        " , ",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        2,
        ", ",
        "USA",
        ",",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\") col1 \"\") \", USA\" \"\")"
      ],
      [
        0,
        1,
        ",",
        ", "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        4,
        ", ",
        ",",
        "NY",
        "New York"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        1,
        2,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        2,
        ", USA",
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        "",
        2,
        ", USA",
        ", ",
        " ",
        ",",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        3,
        ", USA",
        ", ",
        ",",
        "NY",
        "New York"
      ],
      [
        0,
        ",",
        ", "
      ],
      [
        0,
        "",
        "USA",
        ",",
        "University of",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        ", USA",
        ", ",
        ",",
        "New York"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        0,
        1,
        ", ",
        ",",
        "NY",
        "University of ",
        "MD",
        "College Park",
        "New York"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        " , ",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ", USA",
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ","
      ],
      [
        2,
        "USA",
        ",",
        "NY",
        "New York"
      ],
      [
        "",
        ", USA",
        ", ",
        "University of",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        2,
        3,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        0,
        2,
        "Ne",
        ", USA",
        "York",
        ", ",
        "NY",
        "New York"
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))) \", USA\")"
      ],
      [
        0,
        1,
        ", USA",
        ", "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.++ \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.len col1) 2))) \", USA\"))"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \", USA\")"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", "
      ],
      [
        "(str.++ col2 (str.at col1 0) (str.at col1 (+ 1 (str.indexof col1 "
      ],
      [
        0,
        2,
        3,
        ", USA",
        ", "
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        "(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \"New York\" \"NY\") 2 (- (str.len col2) 2))"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        0,
        ", USA",
        ",",
        "NY",
        "New York"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\" ) \",\" \", USA\")"
      ],
      [
        "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 4))"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ",",
        "NY",
        "New York"
      ],
      [
        "",
        "OR",
        "IN",
        "MT",
        "OK",
        "HI",
        "IL",
        "GA",
        "PA",
        "MA",
        "UT",
        "MD",
        "AK",
        "Ann Arbor",
        "AR",
        "KY",
        "MN",
        "NM",
        "RI",
        "TX",
        "KS",
        "USA",
        "CT",
        "ID",
        "TN",
        "New York",
        "Los Angeles",
        "MS",
        "NV",
        "MI",
        "Philadelphia",
        "NJ",
        "VA",
        "SC",
        "ME",
        "WA",
        "College Park",
        "MO",
        "SD",
        "IA",
        "NC",
        "LA",
        "VT",
        "NY",
        "Ithaca",
        "DE",
        "NH",
        "OH",
        "AZ",
        "CA",
        "NE",
        "CO",
        "ND",
        "FL"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        "NY",
        "",
        "New York",
        "University of"
      ],
      [
        0,
        1,
        ", "
      ],
      [
        "(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \", USA\")"
      ],
      [
        "",
        " , ",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        ",",
        -1
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        "NY",
        "USA",
        "New York",
        ", "
      ],
      [
        1,
        2,
        ", USA",
        ", "
      ],
      [
        0,
        1,
        2,
        ", USA",
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", "
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        0,
        1,
        ",",
        ", "
      ],
      [
        "",
        ",",
        "NY",
        "University of ",
        "New York"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      "",
      4,
      "OK",
      "HI",
      "MD",
      "Ann Arbor",
      "MN",
      " , ",
      "KS",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.++ \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.len col1) 2))) \", USA\"))",
      "USA",
      "ID",
      "Los Angeles",
      "MS",
      ", USA",
      "NJ",
      "WA",
      "LA",
      "OH",
      "MT",
      "OR",
      "IN",
      "IL",
      "GA",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))) \", USA\")",
      "UT",
      "RI",
      "TX",
      "NM",
      "CT",
      "NV",
      "MI",
      "Philadelphia",
      "ME",
      "(str.replace (str.replace (str.replace col2 col1 \"\") col1 \"\") \", USA\" \"\")",
      "(str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \"New York\" \"NY\") 2 (- (str.len col2) 2))",
      "NC",
      "Ithaca",
      "DE",
      "AZ",
      "University of ",
      "NE",
      "CO",
      "ND",
      "(str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\" ) \",\" \", USA\")",
      "Ne",
      " ",
      "AK",
      "KY",
      ", ",
      ",",
      "(str.++ (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \", USA\")",
      "TN",
      "New York",
      "VA",
      "MO",
      "NH",
      "(str.++ col2 (str.at col1 0) (str.at col1 (+ 1 (str.indexof col1 ",
      "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 4))",
      "(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)) \", USA\")",
      "PA",
      "MA",
      "AR",
      "York",
      "University of",
      "SC",
      "College Park",
      "SD",
      "IA",
      "VT",
      "NY",
      "CA",
      -1,
      "FL"
    ]
  },
  "stackoverflow2.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" _arg_0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.replace _arg_0 \" korea\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.replace _arg_0 \"korea\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.replace _arg_0 \" korea\" \"\")",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f ((_arg_0 String)) String (str.++ (str.substr _arg_0 0 5) \" \"))",
      "(str.replace _arg_0 \" korea\" \"\")",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.len _arg_0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.join \" \" (str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.++ \"indonesia\" \" \" \"korea\")",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" _arg_0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.replace _arg_0 \" \" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" \"india china japan indonesia korea\"))))",
      "(str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" \"india china japan indonesia korea\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(ite (str.contains _arg_0 \"china\") \"india china\" (ite (str.contains _arg_0 \"korea\") \"indonesia\" \"\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" \"india china japan indonesia korea\"))))",
      "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" \"india china japan indonesia korea\"))",
      "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" _arg_0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(define-fun f ((_arg_0 String)) String (str.++ (str.substr _arg_0 0 5) \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" \"india china japan indonesia korea\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.replace _arg_0 \" korea\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" \"india china japan indonesia korea\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.filter (lambda (x) (str.contains x \" \")) _arg_0))",
      "(str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" _arg_0))",
      "(str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \"))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" korea\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"korea\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" korea\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 5) \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" korea\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.join \" \" (str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.++ \"indonesia\" \" \" \"korea\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" \"india china japan indonesia korea\")))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" \"india china japan indonesia korea\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"china\") \"india china\" (ite (str.contains _arg_0 \"korea\") \"indonesia\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" \"india china japan indonesia korea\")))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" \"india china japan indonesia korea\")))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 5) \" \"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" \"india china japan indonesia korea\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" korea\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \" \"india china japan indonesia korea\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (x) (str.contains x \" \")) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (s) (str.contains s _arg_0)) (str.split \" \" _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.filter (lambda (x) (str.contains x _arg_0)) (str.split \" \")))"
    ],
    "time_diff_ms": 1095.918,
    "constants": [
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        " korea"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        "korea"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        " korea"
      ],
      [
        "",
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        5
      ],
      [
        "",
        " korea"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "",
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "indonesia",
        " ",
        "korea"
      ],
      [
        "",
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        " "
      ],
      [
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        "india china japan indonesia korea"
      ],
      [
        " ",
        "india china japan indonesia korea"
      ],
      [
        0,
        " "
      ],
      [
        "",
        "china",
        "indonesia",
        "korea",
        "india china"
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        "india china japan indonesia korea"
      ],
      [
        " ",
        "india china japan indonesia korea"
      ],
      [
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        5
      ],
      [
        0,
        " "
      ],
      [
        " ",
        "india china japan indonesia korea"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "",
        " korea"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        "india china japan indonesia korea"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        " "
      ],
      [
        " "
      ],
      [
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      5,
      " ",
      "china",
      "india china japan indonesia korea",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "indonesia",
      "korea",
      "india china",
      " korea"
    ]
  },
  "phone-6-long-repeat.sl": {
    "completions": [
      "\"(str.at name 4)\"",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(str.at name 4)",
      "\"(str.at name 4)\"",
      "(str.substr name 4 3))",
      "(str.substr name 4 3))",
      "(str.substr name 4 3))",
      "(str.substr name 5 3))",
      "(str.at name 4 3))",
      "(str.substr name 5 3))",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "(str.substr name 4 3))",
      "(str.at name 4))",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "(str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "\"(str.at name 5)\"",
      "(ite (str.contains name \" \")\n     (str.substr name 5 3)\n     (str.substr name 3 3))",
      "\"(str.at name 5)\"",
      "(str.at name 4)",
      "(str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 4 3))",
      "(str.substr name 5 3))",
      "(str.substr name 4 3))",
      "(str.substr name 4 3))",
      "(str.substr name 4 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.at name 4))",
      "(str.substr name 5 3))",
      "\"(str.at name 4)\"",
      "\"(str.substr name 5 3))\"",
      "(str.substr name 4 3))",
      "\"(str.substr name 5 3))\"",
      "(str.substr name 4 3))",
      "\"(str.at name 5)\"",
      "\"(str.at name 5)\"",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "(define-fun f (name String) String\n    (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n    (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "\"(str.at name 4)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.at name 4)\"",
      "(str.substr name 4 3))",
      "\"(str.at name 4)\"",
      "(ite (= (str.indexof name \" \") (- (str.indexof name \"-\") 1))\n     (str.substr name (+ (str.indexof name \" \") 1) (- (str.indexof name \"-\") (str.indexof name \" \") 1))\n     (str.substr name (+ (str.indexof name \" \") 1) (- (str.indexof name \".\") (str.indexof name \" \") 1)))",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 5)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 5)\"",
      "\"(str.at name 5)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.at name 5)\"",
      "(define-fun f (name String) String\n    (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n    (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 4))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.at name 5))",
      "\"(str.at name 4)\"",
      "\"(str.at name 5)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "(ite (= (str.len name) 14) (str.substr name 4 3) (ite (= (str.len name) 13) (str.substr name 3 3) (str.substr name 2 3)))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (= (str.len name) 13) (str.substr name 5 3) (str.substr name 6 3)))",
      "\"(str.at name 4)\"",
      "\"(str.substr name 5 3))\"",
      "\"(str.at name 5)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\"",
      "\"(str.at name 4)\""
    ],
    "solutions": [
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 5 3) (str.substr name 3 3)))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") (- (str.indexof name \"-\") 1)) (str.substr name (+ (str.indexof name \" \") 1) (- (str.indexof name \"-\") (str.indexof name \" \") 1)) (str.substr name (+ (str.indexof name \" \") 1) (- (str.indexof name \".\") (str.indexof name \" \") 1))))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 4))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.at name 5))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String (ite (= (str.len name) 14) (str.substr name 4 3) (ite (= (str.len name) 13) (str.substr name 3 3) (str.substr name 2 3))))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (= (str.len name) 13) (str.substr name 5 3) (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.at name 5)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")",
      "(define-fun f (name String) String \"(str.at name 4)\")"
    ],
    "time_diff_ms": 894.505,
    "constants": [
      [
        "(str.at name 4)"
      ],
      [
        3,
        5
      ],
      [
        4
      ],
      [
        "(str.at name 4)"
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        3,
        4
      ],
      [
        4
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        4
      ],
      [
        5
      ],
      [
        "(str.at name 5)"
      ],
      [
        " ",
        3,
        5
      ],
      [
        "(str.at name 5)"
      ],
      [
        4
      ],
      [
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        4
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        4
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        4
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        5
      ],
      [
        5
      ],
      [
        4
      ],
      [
        4
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        5
      ],
      [
        4
      ],
      [
        4
      ],
      [
        5
      ],
      [
        5
      ],
      [
        "(str.at name 4)"
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 4)"
      ],
      [
        3,
        4
      ],
      [
        "(str.at name 4)"
      ],
      [
        "-",
        " ",
        1,
        "."
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        3,
        5
      ],
      [
        "(str.at name 5)"
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        5
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        5
      ],
      [
        3,
        4
      ],
      [
        5
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        2,
        3,
        4,
        13,
        14
      ],
      [
        3,
        5
      ],
      [
        5,
        3,
        13,
        6
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.at name 5)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ],
      [
        "(str.at name 4)"
      ]
    ],
    "all_constants": [
      1,
      2,
      3,
      4,
      5,
      "(str.at name 5)",
      6,
      "(str.substr name 5 3))",
      " ",
      "-",
      13,
      14,
      ".",
      "(str.at name 4)"
    ]
  },
  "25239569.sl": {
    "completions": [
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((s String)) String\n    (str.replace s \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" _BRD \" \" _Branding \") )",
      "(define-fun f ((x String)) String (str.replace x \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String\n  (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\" \"LDS\" \"Leads\" \"DRS\" \"Direct Response\"))",
      "(define-fun f ((s String)) String\n    (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String\n    (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String\n    (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String\n    (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String\n    (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String\n    (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f ((s String)) String\n  (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f ((x String)) String (str.replace x \"BRD\" \"Branding\"))",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")",
      "(str.replace _arg_0 \"BRD\" \"Branding\")"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace x \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\" \"LDS\" \"Leads\" \"DRS\" \"Direct Response\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace x \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))"
    ],
    "time_diff_ms": 151.481,
    "constants": [
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Direct Response",
        "Branding",
        "LDS",
        "DRS",
        "Leads"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        " _Branding ",
        " _BRD "
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ],
      [
        "BRD",
        "Branding"
      ]
    ],
    "all_constants": [
      "BRD",
      "Direct Response",
      "Branding",
      " _Branding ",
      "LDS",
      "DRS",
      "Leads",
      " _BRD "
    ]
  },
  "univ_5_short.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col1 \"University of \" \"\") \" College Park\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 4)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ (str.indexof col2 \", \" 0) 2) (- (str.len col2) (+ (str.len col1) 2))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col1 \"University of \" \"\") \" , \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 4)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (str.len col2)))",
      "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 1))",
      "(str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 5))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (str.len col2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr \n        (str.replace \n            (str.++ col1 \", \" col2 \", USA\") \n            \", New York\" \", NY\") \n        2 \n        (- (str.len col1) 2)\n    )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col1 \",\" 0)) (- (str.len col2) (+ 2 (str.indexof col1 \",\" 0)))))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\")\n    0 (- (str.len col2) 5)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 col1 \"\") \"USA\" \"\") \",\" \"\"))",
      "\"(str.substr col2 (+ 2 (str.indexof col2 \\\", \\\")) (- (str.len col2) 4))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2\n              (+ 1 (str.indexof col2 \",\"))\n              (- (str.len col2) (+ 1 (str.indexof col2 \",\")))))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, \" \"\")\n                0\n                (- (str.len col1) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"College Park\" \"\") 0 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"College\" \"\") \" of
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" 1) col1 \\\"\\\" 1) \\\", \\\" \\\", USA, \\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"USA\" \"\") 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "\"(str.substr (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) 2 (- (str.len (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.++ col2 \", USA\") 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.++ col2 \", \" \" USA\") \"New York, \" \"NY, \") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \") \" USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.++ col2 \", USA\") 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace col2 \"New York\" \"NY\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \"of \" \"\")) )",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace col2 col1 \"\") 1 (- (str.len (str.replace col2 col1 \"\")) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 3 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2\n              (+ 2 (str.indexof col2 \",\"))\n              (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \"College Park\" \"CP\") 0 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.replace (str.replace col2 col1 \"\") \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) (+ 2 (str.indexof col2 \",\" 0)))) \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) (+ 2 (str.indexof col2 \", \" 0)))))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace col2 \"New York\" \"NY\") \n          \"New York\" \"NY\") \n        \"New York\" \"NY\") \n      \"New York\" \"NY\")\n    0\n    (- (str.indexof col2 \",\" 0) 1)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace col2 \"New York\" \"NY\") \n            \"University of \" \"\") \n          \"University \" \"\") \n        \"College Park\" \"MD\") \n      \"College\" \"MD\") \n    0 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"New York\" \"NY\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \"University\" \"\") \"College\" \"\") \"Columbia\" \"\") \"UCLA\" \"Los Angeles\") \"University\" \"\") 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))\n    0 (- (str.indexof col2 \",\" 0) 1)) \"USA\")",
      "(str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 5))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\",\\\")\"",
      "\"(str.substr col2 1 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr (str.replace (str.++ col1 col2) col1 \"\") 1 (- (str.len (str.replace (str.++ col1 col2) col1 \"\")) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") 2 (- (str.len (str.replace (str.replace col2 col1 \"\") \", USA\" \"\")) 2)))",
      "\"(str.substr (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") 2 100)\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \", \" 0)))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \"College \" \"\") \", \" \",\") \"Los Angeles\" \"LA\") \"Ann Arbor\" \"MI\") \"Ithaca\" \"NY\") 0 13))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 6)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 1 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.++ col2 \", USA\")\n    (+ 2 (str.indexof col2 \",\" 0))\n    (- (str.len col2) 2)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 5)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 1 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 1 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \") \"USA\") 0 (- (str.len col2) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2\n              (+ 2 (str.indexof col2 \",\"))\n              (- (str.indexof col2 \", USA\") (+ 2 (str.indexof col2 \",\")))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.++ col1 \", \" col2 \", \") \"New York, \" \"\") \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace \n    (str.replace \n      (str.replace col2 col1 \"\") \n      \", USA\" \"\") \n    \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.len col2) 4)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) (+ (str.len col2) (str.indexof col2 \", \"))))))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col1 \"University of \" \"\") \" College Park\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 4)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \" 0) 2) (- (str.len col2) (+ (str.len col1) 2))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col1 \"University of \" \"\") \" , \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 4)))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 5)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \", New York\" \", NY\") 2 (- (str.len col1) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col1 \",\" 0)) (- (str.len col2) (+ 2 (str.indexof col1 \",\" 0)))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") 0 (- (str.len col2) 5)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 col1 \"\") \"USA\" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 2 (str.indexof col2 \\\", \\\")) (- (str.len col2) 4))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 1 (str.indexof col2 \",\")) (- (str.len col2) (+ 1 (str.indexof col2 \",\")))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, \" \"\") 0 (- (str.len col1) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"College Park\" \"\") 0 100))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"College\" \"\") \" of \" \"\") \" , \" \"\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\") \" ,\"))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\" 1) col1 \\\"\\\" 1) \\\", \\\" \\\", USA, \\\")\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"USA\" \"\") 2 100)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) 2 (- (str.len (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.++ col2 \", USA\") 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.++ col2 \", \" \" USA\") \"New York, \" \"NY, \") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \") \" USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.++ col2 \", USA\") 2 100))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace col2 \"New York\" \"NY\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University\" \"\") \"of \" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace col2 col1 \"\") 1 (- (str.len (str.replace col2 col1 \"\")) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 3 100))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \",\")) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \"College Park\" \"CP\") 0 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) (+ 2 (str.indexof col2 \",\" 0)))))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) (+ 2 (str.indexof col2 \", \" 0)))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \"College Park\" \"MD\") \"College\" \"MD\") 0 100)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"New York\" \"NY\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \"University\" \"\") \"College\" \"\") \"Columbia\" \"\") \"UCLA\" \"Los Angeles\") \"University\" \"\") 2 100)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 5)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\",\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 1 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.++ col1 col2) col1 \")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") 2 (- (str.len (str.replace (str.replace col2 col1 \"\") \", USA\" \"\")) 2)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") 2 100)\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \", \" 0)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") \"College \" \"\") \", \" \",\") \"Los Angeles\" \"LA\") \"Ann Arbor\" \"MI\") \"Ithaca\" \"NY\") 0 13))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 6)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 1 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.++ col2 \", USA\") (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 5)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 1 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 1 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \") \"USA\") 0 (- (str.len col2) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \",\")) (- (str.indexof col2 \", USA\") (+ 2 (str.indexof col2 \",\")))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.++ col1 \", \" col2 \", \") \"New York, \" \"\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.len col2) 4)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) 100))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) (+ (str.len col2) (str.indexof col2 \", \")))))"
    ],
    "time_diff_ms": 1706.958,
    "constants": [
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        " College Park",
        "University of "
      ],
      [
        2,
        100
      ],
      [
        "",
        ",",
        "University of",
        "NY",
        "New York"
      ],
      [
        2,
        4,
        ", "
      ],
      [
        "",
        "University ",
        "University of "
      ],
      [
        "",
        "University of "
      ],
      [
        "",
        ", "
      ],
      [
        0,
        2,
        ", "
      ],
      [
        "",
        " , ",
        "University of "
      ],
      [
        2,
        4,
        ", "
      ],
      [
        "",
        "University of "
      ],
      [
        0,
        2,
        ", "
      ],
      [
        1,
        2,
        ","
      ],
      [
        0,
        2,
        5,
        ", "
      ],
      [
        "",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        2,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        ", NY",
        2,
        ", USA",
        ", ",
        ", New York"
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        0,
        5,
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        "",
        "USA",
        ","
      ],
      [
        "(str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 4))"
      ],
      [
        2,
        ", "
      ],
      [
        2,
        ", "
      ],
      [
        2,
        ", "
      ],
      [
        1,
        ","
      ],
      [
        "",
        0,
        2,
        ", USA",
        ", ",
        "Phialdelphia, "
      ],
      [
        2,
        ","
      ],
      [
        "",
        0,
        100,
        "NY",
        "University of ",
        "College Park",
        "New York"
      ],
      [
        "",
        " , ",
        " of ",
        "College Park",
        " ,",
        "University of",
        "College",
        "University"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\" 1) col1 \"\" 1) \", \" \", USA, \")"
      ],
      [
        "",
        2,
        100,
        "Philadelphia",
        "Phialdelphia",
        "USA",
        "NY",
        "Ithaca",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "(str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 2 (- (str.len (str.substr col2 0 (- (str.indexof col2 \",\") 1))) 1))"
      ],
      [
        0,
        1,
        ", "
      ],
      [
        2,
        100,
        ", USA"
      ],
      [
        "NY, ",
        ", ",
        "NY",
        " USA",
        "New York",
        "New York, "
      ],
      [
        "",
        " , ",
        ", ",
        "NY",
        "University of ",
        " USA",
        "New York"
      ],
      [
        2,
        100,
        ", USA"
      ],
      [
        "NY",
        "New York",
        ", USA"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        "of ",
        "NY",
        "University",
        "New York"
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        "",
        1
      ],
      [
        3,
        100
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        ","
      ],
      [
        "",
        ", "
      ],
      [
        "",
        0,
        100,
        "CP",
        "NY",
        "University ",
        "University of ",
        "College Park",
        "New York"
      ],
      [
        0,
        1,
        ",",
        "NY",
        "New York"
      ],
      [
        "",
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        2,
        ", "
      ],
      [
        0,
        1,
        ",",
        "NY",
        "New York"
      ],
      [
        "",
        0,
        100,
        "NY",
        "University ",
        "College",
        "University of ",
        "MD",
        "College Park",
        "New York"
      ],
      [
        2,
        ", "
      ],
      [
        "",
        "University of "
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "",
        2,
        100,
        "University of",
        "NY",
        "College",
        "UCLA",
        "University",
        "New York",
        "Columbia",
        "Los Angeles"
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        2,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        5,
        ", "
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \",\" \",\")"
      ],
      [
        "(str.substr col2 1 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr (str.replace (str.++ col1 col2) col1 "
      ],
      [
        "",
        2,
        ", USA"
      ],
      [
        "(str.substr (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") 2 100)"
      ],
      [
        0,
        ", "
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "",
        0,
        "MI",
        ", ",
        "LA",
        ",",
        13,
        "NY",
        "Ithaca",
        "University ",
        "University of ",
        "Ann Arbor",
        "New York",
        "College ",
        "Los Angeles"
      ],
      [
        0,
        2,
        ", "
      ],
      [
        2,
        6,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ",",
        ", USA"
      ],
      [
        2,
        100
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        ","
      ],
      [
        "",
        "USA",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        5,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        100
      ],
      [
        "",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        " , ",
        0,
        1,
        ", ",
        "USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        ", "
      ],
      [
        0,
        2,
        ", "
      ],
      [
        2,
        ", "
      ],
      [
        2,
        ", USA",
        ","
      ],
      [
        "",
        "USA",
        "New York, ",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        "University of "
      ],
      [
        "",
        ", USA",
        ", "
      ],
      [
        0,
        4
      ],
      [
        2,
        100
      ],
      [
        "NY",
        "New York"
      ],
      [
        "",
        "University of "
      ],
      [
        0,
        2,
        ","
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        2,
        100,
        ", "
      ],
      [
        2,
        ", "
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      2,
      4,
      5,
      3,
      6,
      13,
      " College Park",
      ", New York",
      "MD",
      "Ann Arbor",
      "UCLA",
      "(str.substr (str.replace (str.++ col1 col2) col1 ",
      "New York, ",
      "Phialdelphia, ",
      "(str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 4))",
      "Columbia",
      " , ",
      "(str.substr (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") 2 100)",
      ", ",
      "(str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \",\" \",\")",
      " ,",
      "USA",
      ",",
      "University of",
      "CP",
      "College",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      "New York",
      "(str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 2 (- (str.len (str.substr col2 0 (- (str.indexof col2 \",\") 1))) 1))",
      "Los Angeles",
      ", NY",
      ", USA",
      "of ",
      "Philadelphia",
      "Phialdelphia",
      "MI",
      "University ",
      "College Park",
      "University",
      "(str.replace (str.replace (str.replace col2 col1 \"\" 1) col1 \"\" 1) \", \" \", USA, \")",
      100,
      " of ",
      "NY, ",
      "LA",
      "NY",
      "Ithaca",
      "University of ",
      " USA",
      "College ",
      "(str.substr col2 1 (- (str.indexof col2 \",\") 1))"
    ]
  },
  "remove-text-by-position.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.len \"/users/dave/\"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 0 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 1) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ 1 (str.len \"/users/dave/\"))) 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len \"/users/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))"
    ],
    "time_diff_ms": 2160.308,
    "constants": [
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/dave/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        0,
        1,
        " ",
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/dave/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/",
        "/users/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/",
      " ",
      "/users/",
      "/users/dave/"
    ]
  },
  "univ_6-long-repeat.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String \"USA\")",
      "(define-fun f ((col1 String) (col2 String)) String \"USA\")",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String \"USA\")",
      "(define-fun f ((col1 String) (col2 String)) String \"USA\")",
      "(define-fun f ((col1 String) (col2 String)) String \"USA\")",
      "(define-fun f ((col1 String) (col2 String)) String \"USA\")",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (ite (str.contains col2 \",\") \"USA\" \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" (ite (str.contains col2 \",\") (str.substr col1 0 (str.indexof col1 \",\" 0)) col1) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ col1 \", \" col2 \", \") \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "\"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\"",
      "\"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "\"(str.++ col2 (str.++ \\\", \\\" col1) \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 \", \" col2 \", \") \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 \", \" col2 \", \") \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ col2 \", \" col1 \", USA\"))",
      "\"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\"",
      "(define-fun f (col1 String col2 String) String\n    (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n    (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n  (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col1 \", \" col2 \", USA\"))",
      "\"(str.++ col2 (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", USA\\\")\"",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 \", \" col2 \", \") \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", \" \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", \" \"USA\"))",
      "\"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"USA\")",
      "(define-fun f (col1 String col2 String) String \"USA\")",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"USA\")",
      "(define-fun f (col1 String col2 String) String \"USA\")",
      "(define-fun f (col1 String col2 String) String \"USA\")",
      "(define-fun f (col1 String col2 String) String \"USA\")",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (ite (str.contains col2 \",\") \"USA\" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" (ite (str.contains col2 \",\") (str.substr col1 0 (str.indexof col1 \",\" 0)) col1) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ col1 \", \" col2 \", \") \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 (str.++ \\\", \\\" col1) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ col1 \", \" col2 \", \") \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ col1 \", \" col2 \", \") \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 (str.substr col1 0 (- (str.indexof col1 \\\",\\\" 0) 1)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.++ col1 \", \" col2 \", \") \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col1 \", \" col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 \\\", \\\" col1 \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))"
    ],
    "time_diff_ms": 2669.156,
    "constants": [
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA"
      ],
      [
        "USA"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA"
      ],
      [
        "USA"
      ],
      [
        "USA"
      ],
      [
        "USA"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "",
        "USA",
        ",",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        0,
        ", USA",
        ",",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "(str.++ col2 \", \" col1 \", USA\")"
      ],
      [
        "(str.++ col2 \", \" col1 \", USA\")"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "(str.++ col2 (str.++ \", \" col1) \", USA\")"
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "(str.++ col2 \", \" col1 \", USA\")"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "(str.++ col2 (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", USA\")"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        "USA",
        ", "
      ],
      [
        "(str.++ col2 \", \" col1 \", USA\")"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA",
        ", "
      ]
    ],
    "all_constants": [
      "",
      0,
      ", USA",
      ", ",
      "USA",
      ",",
      "(str.++ col2 (str.++ \", \" col1) \", USA\")",
      "(str.++ col2 \", \" col1 \", USA\")",
      "(str.++ col2 (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", USA\")"
    ]
  },
  "univ_4.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") 0 12) 0 (- (str.indexof col2 \"PA\" 0) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"PA\" \"PA\") \"CA\" \"CA\") \"MD\" \"MD\") \"NY\" \"NY\") \"MI\" \"MI\") \"USA\" \"USA\") 0 27))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"Michigan\" \"MI\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Philadelphia\" \"PA\") \"USA\" \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" \" \") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"MI\" \"MI, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ col2 \", USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (str.len col2)) \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia, PA\" \"Philadelphia, PA, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, Pennsylvania\" \"Phialdelphia, PA\"\n              \"Los Angeles, California\" \"Los Angeles, CA\"\n              \"New York, New York\" \"New York, NY\"\n              \"College Park, Maryland\" \"College Park, MD\"\n              \"Ann Arbor, Michigan\" \"Ann Arbor, MI\"\n              \"New York, New York\" \"New York, NY\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.substr col2 0 (+ (str.indexof col2 \\\",\\\" 0) 2))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr \n        (str.replace \n            (str.++ col1 \", \" col2 \", USA\") \n            \"New York\" \"NY\") \n        0 \n        (- (str.len col1) 2)\n    )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                                                                                                col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\")",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    col2 \"New York\" \"NY\") \n                                                                  \"New York\" \"NY\") \n                                                                \"New York\" \"NY\") \n                                                              \"New York\" \"NY\") \n                                                            \"New York\" \"NY\") \n                                                          \"New York\" \"NY\") \n                                                        \"New York\" \"NY\") \n                                                      \"New York\" \"NY\") \n                                                    \"New York\" \"NY\") \n                                                  \"New York\" \"NY\") \n                                                \"New York\" \"NY\") \n                                              \"New York\" \"NY\") \n                                            \"New York\" \"NY\") \n                                          \"New York\" \"NY\") \n                                        \"New York\" \"NY\") \n                                      \"New York\" \"NY\") \n                                    \"New York\" \"NY\") \n                                  \"New York\" \"NY\") \n                                \"New York\" \"NY\") \n                              \"New York\" \"NY\") \n                            \"New York\" \"NY\") \n                          \"New York\" \"NY\") \n                        \"New York\" \"NY\") \n                      \"New York\" \"NY\") \n                    \"New York\" \"NY\") \n                  \"New York\" \"NY\") \n                \"New York\" \"NY\") \n              \"New York\" \"NY\") \n            \"New York\" \"NY\") \n          \"New York\" \"NY\") \n        \"New York\" \"NY\") \n      \"New York\" \"NY\") \n    \"New York\" \"NY\" 0 (- (str.len col2) 4)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\")\n               \"Phialdelphia\" \"Philadelphia\"\n               \"Los Angeles\" \"Los Angeles\"\n               \"Ithaca, New York\" \"Ithaca, NY\"\n               \"College Park\" \"College Park\"\n               \"Ann Arbor\" \"Ann Arbor\"\n               \"New York\" \"New York\"\n               \"New York, New York\" \"New York, NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia, PA, USA\") \"UCLA\" \"Los Angeles, CA, USA\") \"Cornell University\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia, PA, USA\") \"University of Maryland College Park\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor, MI, USA\") \"Columbia University\" \"New York, NY, USA\") \"NYU\" \"New York, NY, USA\") \"New York, New York\" \"New York, NY, USA\") \"Phialdelphia, PA\" \"Phialdelphia, PA, USA\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Ithaca, NY\" \"Ithaca, NY, USA\") \"College Park, MD\" \"College Park, MD, USA\") \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University\" \"\") \"College\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace col1 \"University of \" \"\") 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                col1 \"University of\" \"\")\n                                                                                                                                              \"College Park\" \"MD\")\n                                                                                                                                            \"Ann Arbor\" \"MI\")\n                                                                                                                                          \"Ithaca\" \"NY\")\n                                                                                                                                        \"Los Angeles\" \"CA\")\n                                                                                                                                      \"Philadelphia\" \"PA\")\n                                                                                                                                    \"New York\" \"NY\")\n                                                                                                                                  \"Philadelphia\" \"PA\")\n                                                                                                                                \"USA\" \"\")\n                                                                                                                              \"USA\" \"\")\n                                                                                                                            \"USA\" \"\")\n                                                                                                                          \"USA\" \"\")\n                                                                                                                        \"USA\" \"\")\n                                                                                                                      \"USA\" \"\")\n                                                                                                                    \"USA\" \"\")\n                                                                                                                  \"USA\" \"\")\n                                                                                                                \"USA\" \"\")\n                                                                                                              \"USA\" \"\")\n                                                                                                            \"USA\" \"\")\n                                                                                                          \"USA\" \"\")\n                                                                                                        \"USA\" \"\")\n                                                                                                      \"USA\" \"\")\n                                                                                                    \"USA\" \"\")\n                                                                                                  \"USA\" \"\")\n                                                                                                \"USA\" \"\")\n                                                                                              \"USA\" \"\")\n                                                                                            \"USA\" \"\")\n                                                                                          \"USA\" \"\")\n                                                                                        \"USA\" \"\")\n                                                                                      \"USA\" \"\")\n                                                                                    \"USA\" \"\")\n                                                                                  \"USA\" \"\")\n                                                                                \"USA\" \"\")\n                                                                              \"USA\" \"\")\n                                                                            \"USA\" \"\")\n                                                                          \"USA\" \"\")\n                                                                        \"USA\" \"\")\n                                                                      \"USA\" \"\")\n                                                                    \"USA\" \"\")\n                                                                  \"USA\" \"\")\n                                                                \"USA\" \"\")\n                                                              \"USA\" \"\")\n                                                            \"USA\" \"\")\n                                                          \"USA\" \"\")\n                                                        \"USA\" \"\")\n                                                      \"USA\" \"\")\n                                                    \"USA\" \"\")\n                                                  \"USA\" \"\")\n                                                \"USA\" \"\")\n                                              \"USA\" \"\")\n                                            \"USA\" \"\")\n                                          \"USA\" \"\")\n                                        \"USA\" \"\")\n                                      \"USA\" \"\")\n                                    \"USA\" \"\")\n                                  \"USA\" \"\")\n                                \"USA\" \"\")\n                              \"USA\" \"\")\n                            \"USA\" \"\")\n                          \"USA\" \"\")\n                        \"USA\" \"\")\n                      \"USA\" \"\")\n                    \"USA\" \"\")\n                  \"USA\" \"\")\n                \"USA\" \"\")\n              \"USA\" \"\")\n            \"USA\" \"\")\n          \"USA\" \"\")\n        \"USA\" \"\")\n      \"USA\" \"\")\n    0\n    (- \n      (str.indexof col2 \",\" 0) \n      (str.indexof col2 \" \" 0)\n    )\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                col2\n                                                                                                                                                \"New York\" \"NY\")\n                                                                                                                                              \"New York\" \"NY\")\n                                                                            \"New York\" \"NY\")\n                                                                          \"New York\" \"NY\")\n                                                                        \"New York\" \"NY\")\n                                                                      \"New York\" \"NY\")\n                                                                    \"New York\" \"NY\")\n                                                                  \"New York\" \"NY\")\n                                                                \"New York\" \"NY\")\n                                                              \"New York\" \"NY\")\n                                                            \"New York\" \"NY\")\n                                                          \"New York\" \"NY\")\n                                                        \"New York\" \"NY\")\n                                                      \"New York\" \"NY\")\n                                                    \"New York\" \"NY\")\n                                                  \"New York\" \"NY\")\n                                                \"New York\" \"NY\")\n                                              \"New York\" \"NY\")\n                                            \"New York\" \"NY\")\n                                          \"New York\" \"NY\")\n                                        \"New York\" \"NY\")\n                                      \"New York\" \"NY\")\n                                    \"New York\" \"NY\")\n                                  \"New York\" \"NY\")\n                                \"New York\" \"NY\")\n                              \"New York\" \"NY\")\n                            \"New York\" \"NY\")\n                          \"New York\" \"NY\")\n                        \"New York\" \"NY\")\n                      \"New York\" \"NY\")\n                    \"New York\" \"NY\")\n                  \"New York\" \"NY\")\n                \"New York\" \"NY\")\n              \"New York\" \"NY\")\n            \"New York\" \"NY\")\n          \"New York\" \"NY\")\n        \"New York\" \"NY\")\n      \"New York\" \"NY\")\n    \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2) 4)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \",\" \",\") \", PA\" \", PA, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") \", MI\" \", MI, USA\") \", NY\" \", NY, USA\") \"New York\" \"NY\") \"Phialdelphia\" \"PA\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"Philadelphia\" \"PA\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 2 100) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.substr col2 0 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                col1 \"University of \" \"\")\n                                                                                                                                              \"University\" \"U\")\n                                                                            \" of\" \"\")\n                                                                          \", \" \"\")\n                                                                        \"Phialdelphia\" \"Philadelphia\")\n                                                                      \"PA\" \"PA, USA\")\n                                                                    \"USA\" \"USA\")\n                                                                  \"UCLA\" \"Los Angeles\")\n                                                                \"CA\" \"CA, USA\")\n                                                              \"Cornell\" \"\")\n                                                            \"Ithaca\" \"Ithaca, NY\")\n                                                          \"New York\" \"NY, USA\")\n                                                        \"Penn\" \"\")\n                                                      \"Philadelphia\" \"Philadelphia, PA\")\n                                                    \"College Park\" \"College Park, MD\")\n                                                  \"MD\" \"MD, USA\")\n                                                \"Michigan\" \"\")\n                                              \"Ann Arbor\" \"Ann Arbor, MI\")\n                                            \"MI\" \"MI, USA\")\n                                          \"Columbia\" \"\")\n                                        \"New York\" \"New York, NY\")\n                                      \"NYU\" \"\")\n                                    \"New York\" \"New York, NY\")\n                                  \"NY\" \"NY, USA\")\n                                \"NY\" \"NY, USA\")\n                              \"NY\" \"NY, USA\")\n                            \"NY\" \"NY, USA\")\n                          \"NY\" \"NY, USA\")\n                        \"NY\" \"NY, USA\")\n                      \"NY\" \"NY, USA\")\n                    \"NY\" \"NY, USA\")\n                  \"NY\" \"NY, USA\")\n                \"NY\" \"NY, USA\")\n              \"NY\" \"NY, USA\")\n            \"NY\" \"NY, USA\")\n          \"NY\" \"NY, USA\")\n        \"NY\" \"NY, USA\")\n      \"NY\" \"NY, USA\")\n    \"NY\" \"NY, USA\")))))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"Phialdelphia, PA\" \"Phialdelphia, PA, USA\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Ithaca, New York\" \"Ithaca, NY, USA\") \"Philadelphia, PA\" \"Philadelphia, PA, USA\") \"College Park, MD\" \"College Park, MD, USA\") \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\") \"New York, NY\" \"New York, NY, USA\") \"New York, New York\" \"New York, NY, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca, New York\" \"Ithaca, NY\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\"))",
      "\"(str.replace (str.replace (str.++ col2 \\\", \\\" col1) \\\"New York\\\" \\\"NY\\\") \\\"MI\\\" \\\"MI, USA\\\")\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (str.indexof col2 \\\",\\\" 0))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(ite (str.contains col1 \\\",\\\") (str.substr col2 2 (- (str.len col2) 2)) (str.replace (str.replace col2 \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\"))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\" \\\" \\\",\\\") \\\"USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            col1 \"University of \" \"\"\n                          ) \"University \" \"\"\n                        ) \" of \" \"\"\n                      ) \" College Park\" \"\"\n                    ) \" College\" \"\"\n                  ) \"University\" \"\"\n                ) \"University\" \"\"\n              ) \"Columbia\" \"New York\"\n            ) \"Cornell\" \"Ithaca\"\n          ) \"UCLA\" \"Los Angeles\"\n        ) \"Michigan\" \"Ann Arbor\"\n      ) \"Penn\" \"Philadelphia\"\n    ) \"NYU\" \"New York\"\n  ) 0 100\n)",
      "\"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \n    \", \" \n    (ite \n      (str.contains col2 \", USA\") \n      \"USA\" \n      (str.substr col2 (+ (str.indexof col2 \", \" 0) 2) (- (str.indexof col2 \", USA\" 0) (+ (str.indexof col2 \", \" 0) 2)))\n    )\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") col2 \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace \n    (str.replace \n      (str.replace \n        (str.replace col2 \"New York\" \"NY\") \n        \"Phialdelphia\" \"Philadelphia\") \n      \"Los Angeles\" \"Los Angeles, CA\") \n    \"Ithaca\" \"Ithaca, NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", USA\" 0) 2)) )",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr (str.replace (str.replace (str.++ col2 \", \" col1 \", \") \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.indexof col1 \",\" 0) 1))\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace col2 \"New York\" \"NY\") \n            \"Phialdelphia\" \"Philadelphia\") \n          \"Los Angeles\" \"Los Angeles\") \n        \"Ithaca\" \"Ithaca\") \n      \"College Park\" \"College Park\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Michigan\" \"MI\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"Phialdelphia\" \"Phialdelphia, PA, USA\") \"Los Angeles\" \"Los Angeles, CA, USA\") \"Ithaca\" \"Ithaca, NY, USA\") \"Philadelphia\" \"Philadelphia, PA, USA\") \"College Park\" \"College Park, MD, USA\") \"Ann Arbor\" \"Ann Arbor, MI, USA\") \"New York\" \"New York, NY, USA\") \"New York\" \"New York, NY, USA\") \"New York\" \"New York, NY, USA\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"NY\" \"NY, USA\") \"MD\" \"MD, USA\") \"MI\" \"MI, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr \n        (str.replace \n            (str.++ col1 \", \" col2 \", USA\") \n            \"Phialdelphia\" \"Philadelphia\") \n        0 \n        (- \n            (str.indexof \n                (str.++ col1 \", \" col2 \", USA\") \n                \"Phialdelphia, PA, USA\" \n                0) \n            1)\n    )\n)",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.indexof (str.++ col1 \", \" col2 \", USA\") \"USA\" 0) 2) 2)) )",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"UCLA\" \"Los Angeles\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"University\" \"\") \"UCLA\" \"Los Angeles\") \"Cornell\" \"Ithaca\") \"Penn\" \"\") \"University of\" \"\") \"University\" \"\") \"University of\" \"\") \"University\" \"\") \"University of\" \"\") \"University\" \"\") \"University of\" \"\") \"University\" \"\"))",
      "\"(str.++ col2 (str.++ \\\", \\\" col1) \\\", USA\\\")\"",
      "\"(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\",\\\" 0)) (str.len col1)) 2 (str.len (str.replace (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\",\\\" 0)) (str.len col1)))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(lambda (col1 col2) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \\\"University of Pennsylvania\\\" \\\"Phialdelphia, PA, USA\\\") \\\"UCLA\\\" \\\"Los Angeles, CA, USA\\\") \\\"Cornell University\\\" \\\"Ithaca, NY, USA\\\") \\\"Penn\\\" \\\"Philadelphia, PA, USA\\\") \\\"University of Maryland College Park\\\" \\\"College Park, MD, USA\\\") \\\"University of Michigan\\\" \\\"Ann Arbor, MI, USA\\\") \\\"Columbia University\\\" \\\"New York, NY, USA\\\") \\\"NYU\\\" \\\"New York
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ \n    (str.replace \n      (str.replace \n        (str.replace col2 \"New York\" \"NY\") \n        \"University of \" \"\") \n      \"University \" \"\")))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.++ col2 (str.at col1 0) (str.at col1 1) \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace col1 \"University of \" \"\")\n                  \"University \" \"\")\n                \" of \" \"\")\n              \"College \" \"\")\n            \"Penn \" \"\")\n          \"NYU \" \"\")\n        \"Columbia \" \"\")\n      \"UCLA \" \"\")\n    0 \n    (- \n      (str.indexof col2 \",\" 0) \n      2)\n  )\n)",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col2 2 100) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) (str.substr col1 (+ (str.indexof col1 \",\" 0) 2) (str.len col1)) \", USA\"))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.replace (str.++ col1 \", \" col2 \", USA\")\n               \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\"\n               \"Los Angeles, CA\" \"Los Angeles, CA, USA\"\n               \"Ithaca, New York, USA\" \"Ithaca, NY, USA\"\n               \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\"\n               \"College Park, MD\" \"College Park, MD, USA\"\n               \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\"\n               \"New York, NY, USA\" \"New York, NY, USA\"\n               \"New York, New York, USA\" \"New York, NY, USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace (str.++ col1 \", \" col2) \"Phialdelphia, PA\" \"Philadelphia, PA\") 0 13) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"University\" \"\") \"College Park\" \"\") \"College\" \"\") \"University of\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr (str.replace col2 \"New York\" \"NY\") 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                col2\n                                                                                                                                                \"New York\"\n                                                                                                                                                \"NY\")\n                                                                                                                                              \"New York\"\n                                                                                                                                              \"NY\")\n                                                                            \"New York\"\n                                                                            \"NY\")\n                                                                          \"New York\"\n                                                                          \"NY\")\n                                                                        \"New York\"\n                                                                        \"NY\")\n                                                                      \"New York\"\n                                                                      \"NY\")\n                                                                    \"New York\"\n                                                                    \"NY\")\n                                                                  \"New York\"\n                                                                  \"NY\")\n                                                                \"New York\"\n                                                                \"NY\")\n                                                              \"New York\"\n                                                              \"NY\")\n                                                            \"New York\"\n                                                            \"NY\")\n                                                          \"New York\"\n                                                          \"NY\")\n                                                        \"New York\"\n                                                        \"NY\")\n                                                      \"New York\"\n                                                      \"NY\")\n                                                    \"New York\"\n                                                    \"NY\")\n                                                  \"New York\"\n                                                  \"NY\")\n                                                \"New York\"\n                                                \"NY\")\n                                              \"New York\"\n                                              \"NY\")\n                                            \"New York\"\n                                            \"NY\")\n                                          \"New York\"\n                                          \"NY\")\n                                        \"New York\"\n                                        \"NY\")\n                                      \"New York\"\n                                      \"NY\")\n                                    \"New York\"\n                                    \"NY\")\n                                  \"New York\"\n                                  \"NY\")\n                                \"New York\"\n                                \"NY\")\n                              \"New York\"\n                              \"NY\")\n                            \"New York\"\n                            \"NY\")\n                          \"New York\"\n                          \"NY\")\n                        \"New York\"\n                        \"NY\")\n                      \"New York\"\n                      \"NY\")\n                    \"New York\"\n                    \"NY\")\n                  \"New York\"\n                  \"NY\")\n                \"New York\"\n                \"NY\")\n              \"New York\"\n              \"NY\")\n            \"New York\"\n            \"NY\")\n          \"New York\"\n          \"NY\")\n        \"New York\"\n        \"NY\")\n      \"New York\"\n      \"NY\")\n    0\n    2))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 3 2) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 0)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2) 4)) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\"))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia\" \"Philadelphia\") 0 12) 0 (- (str.indexof col2 \"PA\" 0) 2)))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"PA\" \"PA\") \"CA\" \"CA\") \"MD\" \"MD\") \"NY\" \"NY\") \"MI\" \"MI\") \"USA\" \"USA\") 0 27)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"Michigan\" \"MI\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"CA\") \"Philadelphia\" \"PA\") \"USA\" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" \" \") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"MI\" \"MI, USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\") 2) (str.len col2)) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Phialdelphia, PA\" \"Philadelphia, PA, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, Pennsylvania\" \"Phialdelphia, PA\" \"Los Angeles, California\" \"Los Angeles, CA\" \"New York, New York\" \"New York, NY\" \"College Park, Maryland\" \"College Park, MD\" \"Ann Arbor, Michigan\" \"Ann Arbor, MI\" \"New York, New York\" \"New York, NY\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (+ (str.indexof col2 \\\",\\\" 0) 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \\\",\\\" 0) 2) (str.len col2)))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len col1) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      null,
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\" 0 (- (str.len col2) 4)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\" \"Los Angeles\" \"Los Angeles\" \"Ithaca, New York\" \"Ithaca, NY\" \"College Park\" \"College Park\" \"Ann Arbor\" \"Ann Arbor\" \"New York\" \"New York\" \"New York, New York\" \"New York, NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia, PA, USA\") \"UCLA\" \"Los Angeles, CA, USA\") \"Cornell University\" \"Ithaca, NY, USA\") \"Penn\" \"Philadelphia, PA, USA\") \"University of Maryland College Park\" \"College Park, MD, USA\") \"University of Michigan\" \"Ann Arbor, MI, USA\") \"Columbia University\" \"New York, NY, USA\") \"NYU\" \"New York, NY, USA\") \"New York, New York\" \"New York, NY, USA\") \"Phialdelphia, PA\" \"Phialdelphia, PA, USA\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Ithaca, NY\" \"Ithaca, NY, USA\") \"College Park, MD\" \"College Park, MD, USA\") \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University\" \"\") \"College\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace col1 \"University of \" \"\") 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 0 2) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"Ithaca\" \"NY\") \"Los Angeles\" \"CA\") \"Philadelphia\" \"PA\") \"New York\" \"NY\") \"Philadelphia\" \"PA\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") \"USA\" \"\") 0 (- (str.indexof col2 \",\" 0) (str.indexof col2 \" \" 0))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2) 4)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \",\" \",\") \", PA\" \", PA, USA\") \", CA\" \", CA, USA\") \", MD\" \", MD, USA\") \", MI\" \", MI, USA\") \", NY\" \", NY, USA\") \"New York\" \"NY\") \"Phialdelphia\" \"PA\") \"Los Angeles\" \"CA\") \"Ithaca\" \"NY\") \"Philadelphia\" \"PA\") \"College Park\" \"MD\") \"Ann Arbor\" \"MI\") \"New York\" \"NY\")))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 100) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.substr col2 0 2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University\" \"U\") \" of\" \"\") \", \" \"\") \"Phialdelphia\" \"Philadelphia\") \"PA\" \"PA, USA\") \"USA\" \"USA\") \"UCLA\" \"Los Angeles\") \"CA\" \"CA, USA\") \"Cornell\" \"\") \"Ithaca\" \"Ithaca, NY\") \"New York\" \"NY, USA\") \"Penn\" \"\") \"Philadelphia\" \"Philadelphia, PA\") \"College Park\" \"College Park, MD\") \"MD\" \"MD, USA\") \"Michigan\" \"\") \"Ann Arbor\" \"Ann Arbor, MI\") \"MI\" \"MI, USA\") \"Columbia\" \"\") \"New York\" \"New York, NY\") \"NYU\" \"\") \"New York\" \"New York, NY\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\") \"NY\" \"NY, USA\"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"Phialdelphia, PA\" \"Phialdelphia, PA, USA\") \"Los Angeles, CA\" \"Los Angeles, CA, USA\") \"Ithaca, New York\" \"Ithaca, NY, USA\") \"Philadelphia, PA\" \"Philadelphia, PA, USA\") \"College Park, MD\" \"College Park, MD, USA\") \"Ann Arbor, MI\" \"Ann Arbor, MI, USA\") \"New York, NY\" \"New York, NY, USA\") \"New York, New York\" \"New York, NY, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca, New York\" \"Ithaca, NY\") \"College Park\" \"College Park\") \"Ann Arbor\" \"Ann Arbor\") \"New York\" \"New York\") \"New York\" \"New York\")))",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.++ col2 \\\", \\\" col1) \\\"New York\\\" \\\"NY\\\") \\\"MI\\\" \\\"MI, USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 2))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\") 1)) \", \" (str.substr col2 1 (- (str.indexof col2 \",\") 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (str.indexof col2 \\\",\\\" 0))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(ite (str.contains col1 \\\",\\\") (str.substr col2 2 (- (str.len col2) 2)) (str.replace (str.replace col2 \\\", USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\"))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\" \\\" \\\",\\\") \\\"USA\\\" \\\"\\\") \\\",\\\" \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \" College Park\" \"\") \" College\" \"\") \"University\" \"\") \"University\" \"\") \"Columbia\" \"New York\") \"Cornell\" \"Ithaca\") \"UCLA\" \"Los Angeles\") \"Michigan\" \"Ann Arbor\") \"Penn\" \"Philadelphia\") \"NYU\" \"New York\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 2 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (ite (str.contains col2 \", USA\") \"USA\" (str.substr col2 (+ (str.indexof col2 \", \" 0) 2) (- (str.indexof col2 \", USA\" 0) (+ (str.indexof col2 \", \" 0) 2))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") col2 \"New York\" \"NY\"))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles, CA\") \"Ithaca\" \"Ithaca, NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \", USA\" 0) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col2 \", \" col1 \", \") \"New York\" \"NY\") \"University of \" \"\") 0 (- (str.indexof col1 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"Los Angeles\") \"Ithaca\" \"Ithaca\") \"College Park\" \"College Park\")))",
      null,
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace ())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Michigan\" \"MI\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of Pennsylvania\" \"Phialdelphia\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"NYU\" \"New York\") \"Phialdelphia\" \"Phialdelphia, PA, USA\") \"Los Angeles\" \"Los Angeles, CA, USA\") \"Ithaca\" \"Ithaca, NY, USA\") \"Philadelphia\" \"Philadelphia, PA, USA\") \"College Park\" \"College Park, MD, USA\") \"Ann Arbor\" \"Ann Arbor, MI, USA\") \"New York\" \"New York, NY, USA\") \"New York\" \"New York, NY, USA\") \"New York\" \"New York, NY, USA\") \"PA\" \"PA, USA\") \"CA\" \"CA, USA\") \"NY\" \"NY, USA\") \"MD\" \"MD, USA\") \"MI\" \"MI, USA\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"Los Angeles\" \"CA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 0 (- (str.indexof (str.indexof (str.++ col1 \", \" col2 \", USA\") \"USA\" 0) 2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Phialdelphia\" \"Philadelphia\") \"UCLA\" \"Los Angeles\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of\" \"\") \"University\" \"\") \"College Park\" \"\") \"University\" \"\") \"UCLA\" \"Los Angeles\") \"Cornell\" \"Ithaca\") \"Penn\" \"\") \"University of\" \"\") \"University\" \"\") \"University of\" \"\") \"University\" \"\") \"University of\" \"\") \"University\" \"\") \"University of\" \"\") \"University\" \"\")))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 (str.++ \\\", \\\" col1) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\",\\\" 0)) (str.len col1)) 2 (str.len (str.replace (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1)) \\\",\\\" 0)) (str.len col1)))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      null,
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\")))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 (str.at col1 0) (str.at col1 1) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \" of \" \"\") \"College \" \"\") \"Penn \" \"\") \"NYU \" \"\") \"Columbia \" \"\") \"UCLA \" \"\") 0 (- (str.indexof col2 \",\" 0) 2)))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 100) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) (str.substr col1 (+ (str.indexof col1 \",\" 0) 2) (str.len col1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col1 0 (- (str.indexof col1 \",\" 0) 1)) \", \" (str.substr col2 1 (- (str.len col2) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\" \"Los Angeles, CA\" \"Los Angeles, CA, USA\" \"Ithaca, New York, USA\" \"Ithaca, NY, USA\" \"Philadelphia, PA, USA\" \"Philadelphia, PA, USA\" \"College Park, MD\" \"College Park, MD, USA\" \"Ann Arbor, MI, USA\" \"Ann Arbor, MI, USA\" \"New York, NY, USA\" \"New York, NY, USA\" \"New York, New York, USA\" \"New York, NY, USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace (str.++ col1 \", \" col2) \"Phialdelphia, PA\" \"Philadelphia, PA\") 0 13) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"University \" \"\") \"University\" \"\") \"College Park\" \"\") \"College\" \"\") \"University of\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr (str.replace col2 \"New York\" \"NY\") 0 (str.indexof col2 \",\")) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") \"New York\" \"NY\") 0 2))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 3 2) \", \" (ite (str.contains col2 \"New York\") \"NY\" (str.at col2 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) (+ (str.indexof col2 \",\") 2) 4)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \", \" (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (- (str.len col2) (+ (str.indexof col2 \",\" 0) 2)) \", USA\")))"
    ],
    "time_diff_ms": 731.7570000000001,
    "constants": [
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Ithaca",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        "Philadelphia",
        "Phialdelphia",
        12,
        "PA"
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        0,
        "MD",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        27,
        "USA",
        "NY",
        "Ithaca",
        "PA",
        "CA",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "NY",
        "New York",
        "MI",
        "Michigan"
      ],
      [
        "",
        "Philadelphia",
        "USA",
        "NY",
        "PA",
        "CA",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        1,
        " ",
        ",",
        "NY",
        "New York"
      ],
      [
        "NY",
        "",
        "New York",
        "USA"
      ],
      [
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "MI, USA",
        "NY",
        "New York",
        "Los Angeles"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\")"
      ],
      [
        "Phialdelphia, PA",
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Philadelphia, PA, USA",
        "New York"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "New York, NY",
        "Phialdelphia, PA",
        ", USA",
        "New York, New York",
        ", ",
        "College Park, Maryland",
        "Ann Arbor, MI",
        "Los Angeles, California",
        "Phialdelphia, Pennsylvania",
        "College Park, MD",
        "Los Angeles, CA",
        "Ann Arbor, Michigan"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.substr col2 0 (+ (str.indexof col2 \",\" 0) 2))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)))"
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      null,
      [
        "NY",
        0,
        "New York",
        4
      ],
      [
        "New York, NY",
        "Ithaca, New York",
        "Ithaca, NY",
        ", USA",
        "New York, New York",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "Ithaca, NY",
        "Penn",
        "Ann Arbor, MI, USA",
        "University of Maryland College Park",
        "UCLA",
        "Columbia University",
        "NYU",
        "Phialdelphia, PA",
        "New York, New York",
        "Phialdelphia, PA, USA",
        "College Park, MD",
        "Cornell University",
        "New York, NY, USA",
        "Ann Arbor, MI",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "Los Angeles, CA",
        "University of Michigan",
        "Los Angeles, CA, USA",
        "University of Pennsylvania"
      ],
      [
        "",
        "College",
        "University",
        "University of "
      ],
      [
        "NY",
        "New York"
      ],
      [
        "",
        0,
        1,
        2,
        ", USA",
        ", ",
        ",",
        "University of "
      ],
      [
        "",
        0,
        "MI",
        "Philadelphia",
        " ",
        "USA",
        "University of",
        ",",
        "Ithaca",
        "NY",
        "CA",
        "PA",
        "MD",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "NY",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        2,
        4,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        ", MD",
        "Penn",
        "University of Maryland College Park",
        "CA",
        "PA",
        "MD",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        ", MD, USA",
        "NYU",
        ", MI",
        ",",
        ", NY, USA",
        ", CA, USA",
        ", PA",
        "New York",
        "Los Angeles",
        "Cornell University",
        ", MI, USA",
        ", NY",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "College Park",
        "University of Michigan",
        ", CA",
        "Ithaca",
        "NY",
        ", PA, USA",
        "University of Pennsylvania"
      ],
      [
        0,
        2,
        100,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "",
        "Ithaca, NY",
        "Penn",
        "U",
        "MD, USA",
        "MI, USA",
        "PA",
        "MD",
        "UCLA",
        "Ann Arbor",
        "Cornell",
        "Columbia",
        "NYU",
        ", ",
        "USA",
        "Michigan",
        "College Park, MD",
        "New York",
        "NY, USA",
        "Los Angeles",
        "Philadelphia, PA",
        " of",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "Ann Arbor, MI",
        "CA, USA",
        "University",
        "College Park",
        "New York, NY",
        "PA, USA",
        "Ithaca",
        "NY",
        "University of ",
        "CA"
      ],
      [
        "Penn",
        "Ann Arbor, MI, USA",
        "University of Maryland College Park",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "NYU",
        "Phialdelphia, PA",
        "New York, New York",
        "Phialdelphia, PA, USA",
        "College Park, MD",
        "New York",
        "Los Angeles",
        "Cornell University",
        "Philadelphia, PA",
        "Philadelphia",
        "Phialdelphia",
        "New York, NY, USA",
        "Ann Arbor, MI",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "Los Angeles, CA",
        "College Park",
        "New York, NY",
        "Ithaca, New York",
        "University of Michigan",
        "Ithaca",
        "Los Angeles, CA, USA",
        "University of Pennsylvania"
      ],
      [
        "Ithaca, New York",
        "Ithaca, NY",
        "Philadelphia",
        "Phialdelphia",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "(str.replace (str.replace (str.++ col2 \", \" col1) \"New York\" \"NY\") \"MI\" \"MI, USA\")"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 2))"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (str.indexof col2 \",\" 0))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(ite (str.contains col1 \",\") (str.substr col2 2 (- (str.len col2) 2)) (str.replace (str.replace col2 \", USA\" \"\") \",\" \", USA\"))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \" \" \",\") \"USA\" \"\") \",\" \", USA\")"
      ],
      [
        "",
        " of ",
        "Cornell",
        "Ann Arbor",
        "Penn",
        "Philadelphia",
        " College",
        "Ithaca",
        "Michigan",
        "University ",
        " College Park",
        "University of ",
        "NYU",
        "UCLA",
        "University",
        "New York",
        "Columbia",
        "Los Angeles"
      ],
      [
        "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        "USA",
        ","
      ],
      [
        "Columbia University",
        "Ann Arbor",
        "New York",
        "Penn",
        "Phialdelphia",
        "Philadelphia",
        "University of Michigan",
        "Ithaca",
        "NY",
        "University of Maryland College Park",
        "NYU",
        "UCLA",
        "College Park",
        "University of Pennsylvania",
        "Los Angeles",
        "Cornell University"
      ],
      [
        "Ithaca, NY",
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Ithaca",
        "Los Angeles, CA",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        2,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", "
      ],
      [
        "",
        0,
        1,
        ", ",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "Ithaca",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      null,
      [],
      [
        "",
        "MI",
        "NY",
        "Michigan",
        "University of ",
        "New York"
      ],
      [
        "Penn",
        "MD, USA",
        "Ann Arbor, MI, USA",
        "MI, USA",
        "University of Maryland College Park",
        "PA",
        "MD",
        "Ann Arbor",
        "UCLA",
        "Columbia University",
        "NYU",
        "Phialdelphia, PA, USA",
        "New York",
        "NY, USA",
        "Los Angeles",
        "Cornell University",
        "MI",
        "Philadelphia",
        "Phialdelphia",
        "New York, NY, USA",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Ithaca, NY, USA",
        "CA, USA",
        "College Park",
        "University of Michigan",
        "PA, USA",
        "Ithaca",
        "NY",
        "Los Angeles, CA, USA",
        "CA",
        "University of Pennsylvania"
      ],
      [
        0,
        1,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        "Phialdelphia, PA, USA"
      ],
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "CA",
        "New York",
        "Los Angeles"
      ],
      [
        0,
        2,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", ",
        "USA"
      ],
      [
        "Philadelphia",
        "Phialdelphia",
        "NY",
        "UCLA",
        "New York",
        "Los Angeles"
      ],
      [
        "",
        "Cornell",
        "College Park",
        "Penn",
        "University of",
        "Ithaca",
        "UCLA",
        "University",
        "Los Angeles"
      ],
      [
        "(str.++ col2 (str.++ \", \" col1) \", USA\")"
      ],
      [
        "(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" 0)) (str.len col1)) 2 (str.len (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" 0)) (str.len col1)))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      null,
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.++ col2 (str.at col1 0) (str.at col1 1) \", USA\")"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "",
        0,
        "Penn ",
        2,
        " of ",
        "UCLA ",
        ",",
        "Columbia ",
        "University ",
        "University of ",
        "NYU ",
        "College "
      ],
      [
        2,
        100,
        ", USA"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        ","
      ],
      [
        "New York, New York, USA",
        ", USA",
        ", ",
        "New York, NY, USA",
        "Phialdelphia, PA, USA",
        "Ann Arbor, MI, USA",
        "Philadelphia, PA, USA",
        "College Park, MD, USA",
        "Los Angeles, CA, USA",
        "Ithaca, NY, USA",
        "College Park, MD",
        "Los Angeles, CA",
        "Ithaca, New York, USA"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        ", USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "Phialdelphia",
        "Philadelphia",
        ", USA",
        ", "
      ],
      [
        0,
        "Phialdelphia, PA",
        ", USA",
        ", ",
        13,
        "Philadelphia, PA"
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ],
      [
        "",
        "University",
        "University of",
        "University ",
        "College",
        "University of ",
        "College Park"
      ],
      [
        0,
        ", USA",
        ",",
        "NY",
        "New York"
      ],
      [
        "NY",
        0,
        2,
        "New York"
      ],
      [
        0,
        2,
        3,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        2,
        4,
        ", USA",
        ", ",
        ","
      ],
      [
        "NY",
        "",
        "New York",
        "University of "
      ],
      [
        0,
        1,
        2,
        ", USA",
        ", ",
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      4,
      3,
      12,
      13,
      "(str.substr col2 0 (- (str.indexof col2 \",\") 2))",
      "MD",
      "Ann Arbor",
      27,
      "NYU",
      "USA",
      "College Park, MD",
      "Los Angeles",
      ", MI, USA",
      "Philadelphia, PA",
      "(str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" 0)) (str.len col1)) 2 (str.len (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \",\" 0)) (str.len col1)))",
      ", USA",
      " College",
      "(str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))",
      "College Park, MD, USA",
      "University ",
      "University",
      "Ann Arbor, Michigan",
      100,
      "Los Angeles, CA, USA",
      "University of Pennsylvania",
      "College ",
      "Ithaca, NY",
      "(str.++ col2 (str.++ \", \" col1) \", USA\")",
      ", MD, USA",
      "New York, New York",
      "Michigan",
      "College",
      "(str.++ col2 (str.at col1 0) (str.at col1 1) \", USA\")",
      ", CA, USA",
      ", NY",
      "MI",
      "Philadelphia",
      "Philadelphia, PA, USA",
      "Los Angeles, CA",
      "NYU ",
      "New York, NY",
      " of ",
      "University of Michigan",
      "Ithaca",
      "Columbia ",
      "University of ",
      " ",
      "MI, USA",
      "Ann Arbor, MI, USA",
      "U",
      "MD, USA",
      "University of Maryland College Park",
      "CA",
      "Phialdelphia, Pennsylvania",
      "UCLA",
      "Columbia",
      "Phialdelphia, PA",
      "New York, New York, USA",
      ", ",
      "(ite (str.contains col1 \",\") (str.substr col2 2 (- (str.len col2) 2)) (str.replace (str.replace col2 \", USA\" \"\") \",\" \", USA\"))",
      "Phialdelphia, PA, USA",
      ",",
      "Los Angeles, California",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "Ithaca, New York, USA",
      ", PA",
      "New York",
      "(str.substr col2 0 (str.indexof col2 \",\" 0))",
      " of",
      "UCLA ",
      "Ithaca, NY, USA",
      ", CA",
      "PA, USA",
      ", MD",
      "(str.substr col2 0 (+ (str.indexof col2 \",\" 0) 2))",
      "Penn",
      "College Park, Maryland",
      " College Park",
      "PA",
      "Columbia University",
      "Cornell",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\") 1)) (str.substr col2 (+ (str.indexof col2 \",\") 2) (str.len col2)) \", USA\")",
      "(str.replace (str.replace (str.++ col2 \", \" col1) \"New York\" \"NY\") \"MI\" \"MI, USA\")",
      ", MI",
      "Penn ",
      "University of",
      ", NY, USA",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      "NY, USA",
      "Cornell University",
      "(str.++ (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) (str.substr col2 (+ (str.indexof col2 \",\" 0) 2) (str.len col2)))",
      "Phialdelphia",
      "New York, NY, USA",
      "Ann Arbor, MI",
      "(str.replace (str.replace (str.replace col2 col1 \" \" \",\") \"USA\" \"\") \",\" \", USA\")",
      "CA, USA",
      "College Park",
      "Ithaca, New York",
      "NY",
      ", PA, USA"
    ]
  },
  "phone-10-long-repeat.sl": {
    "completions": [
      "(str.++ \"+106 (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+106 (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+106 (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+106 (\" (str.at name 0) (str.at name 1) (str.at name 2) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\"\n         (str.substr name 0 2)\n         \" (\"\n         (str.substr name 2 3)\n         \") \"\n         (str.substr name 5 3)\n         \"-\"\n         (str.substr name 9 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3))",
      "(str.++ \"+\"\n  (str.substr name 0 3)\n  \" (\"\n  (str.substr name 3 3)\n  \") \"\n  (str.substr name 6 3)\n  \"-\"\n  (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 1 2) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 1 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\"\n(str.substr name 0 3)\n\" (\"\n(str.substr name 3 3)\n\") \"\n(str.substr name 6 3)\n\"-\"\n(str.substr name 10 3))",
      "(str.++ \"+\" (str.substr name 1 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3))",
      "\"(str.++ \"+\" (str.at name 1) (str.at name 2) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))\"",
      "(str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" \"(\" (str.at name 0) (str.at name 1) (str.at name 2) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\"\n         (str.substr name 1 2)\n         \" (\"\n         (str.substr name 4 3)\n         \") \"\n         (str.substr name 8 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 7 3)\n         \"-\"\n         (str.substr name 11 3)\n         )",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3)\n         \"-\" \n         (str.substr name 13 3))",
      "(str.++ \"+\" (str.substr name 1 2) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3) \"-\" (str.substr name 12 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.replace (str.replace name \"-\" \") \") \"-\")",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3)\n         \"-\" \n         (str.substr name 13 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n  (str.substr name 0 3)\n  \" (\"\n  (str.substr name 3 3)\n  \") \"\n  (str.substr name 6 3)\n  \"-\"\n  (str.substr name 9 3)\n  )",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 1 2) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3) \"-\" (str.substr name 12 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n  (str.substr name 0 3)\n  \" (\"\n  (str.substr name 3 3)\n  \") \"\n  (str.substr name 6 3)\n  \"-\"\n  (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 9 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 2)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 7 3)\n         \"-\"\n         (str.substr name 11 3)\n         \"-\" \n         (str.substr name 15 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3))",
      "(str.++ \"+\" (str.substr name 1 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "\"(str.++ \"+ \" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\"",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n          (str.substr name 0 3)\n          \" (\"\n          (str.substr name 3 3)\n          \") \"\n          (str.substr name 6 3)\n          \"-\"\n          (str.substr name 10 3))",
      "(str.++ \"+\"\n  (str.substr name 0 3)\n  \" (\"\n  (str.substr name 3 3)\n  \") \"\n  (str.substr name 6 3)\n  \"-\"\n  (str.substr name 10 3)\n)",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 9 3))",
      "(str.++ \"+\"\n  (str.substr name 0 3)\n  \" (\"\n  (str.substr name 3 3)\n  \") \"\n  (str.substr name 7 3)\n  \"-\"\n  (str.substr name 11 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3)\n         \"-\" \n         (str.substr name 13 3))",
      "(str.++ \"+\"\n  (str.substr name 0 3)\n  \" (\"\n  (str.substr name 3 3)\n  \") \"\n  (str.substr name 7 3)\n  \"-\"\n  (str.substr name 11 3)\n  \"-\" \n  (str.substr name 15 3))",
      "(str.++ \"+\"\n        (str.substr name 0 3)\n        \" (\"\n        (str.substr name 3 3)\n        \") \"\n        (str.substr name 7 3)\n        \"-\"\n        (str.substr name 11 3)\n        )",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3)\n         \"-\" \n         (str.substr name 13 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ \"+ name \" (str.substr \"+ name \" 0 3) \\\") \\\" (str.substr \"+ name \" 4 3) \\\"-\\\" (str.substr \"+ name \" 7 3))\"",
      "(str.++ \"+\"\n  (str.substr name 0 3)\n  \" (\"\n  (str.substr name 3 3)\n  \") \"\n  (str.substr name 6 3)\n  \"-\"\n  (str.substr name 9 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 10 3)\n         \"-\" \n         (str.substr name 13 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+\"\n         (str.substr name 0 3)\n         \" (\"\n         (str.substr name 3 3)\n         \") \"\n         (str.substr name 6 3)\n         \"-\"\n         (str.substr name 9 3))",
      "(str.++ \"+\"\n  (str.substr name 0 3)\n  \" (\"\n  (str.substr name 3 3)\n  \") \"\n  (str.substr name 6 3)\n  \"-\"\n  (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\"\n          (str.substr name 0 3)\n          \" (\"\n          (str.substr name 3 3)\n          \") \"\n          (str.substr name 6 3)\n          \"-\"\n          (str.substr name 10 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3))",
      "\"(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))\""
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ \"+106 (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (\" (str.at name 0) (str.at name 1) (str.at name 2) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 2 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 1 2) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 1 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 1 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" \"(\" (str.at name 0) (str.at name 1) (str.at name 2) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 1 2) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 1 2) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3) \"-\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.replace (str.replace name \"-\" \") \") \"-\"))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 1 2) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3) \"-\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.at name 0) \" (\" (str.substr name 1 3) \") \" (str.substr name 5 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3) \"-\" (str.substr name 15 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 1 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3) \"-\" (str.substr name 15 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String \"(str.++ \")"
    ],
    "time_diff_ms": 1689.7640000000001,
    "constants": [
      [
        0,
        3,
        4,
        8,
        "-",
        "+106 (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        "+106 (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        "+106 (",
        ") "
      ],
      [
        0,
        1,
        2,
        3,
        4,
        8,
        "-",
        "+106 (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        5,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        1,
        2,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        1,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        1,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        4,
        7,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        2,
        3,
        6,
        "-",
        9,
        "+",
        "(",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        1,
        2,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        13,
        " (",
        ") "
      ],
      [
        1,
        2,
        3,
        4,
        8,
        "-",
        "+",
        12,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "-",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        1,
        2,
        3,
        4,
        8,
        "-",
        "+",
        12,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        1,
        3,
        5,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        4,
        8,
        "-",
        "+",
        "(",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        2,
        3,
        7,
        "-",
        "+",
        11,
        15,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        1,
        3,
        4,
        8,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        15,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "-",
        "+",
        11,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        13,
        " (",
        ") "
      ],
      [
        0,
        3,
        7,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        9,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "-",
        10,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        0,
        3,
        6,
        "+",
        " (",
        ") "
      ],
      [
        "(str.++ "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      15,
      "-",
      "(str.++ ",
      " (",
      ") ",
      "+",
      "+106 (",
      "("
    ]
  },
  "univ_5.sl": {
    "completions": [
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \", \" \"\"))",
      "\"(str.++ (str.substr col2 2 100) (str.substr col1 2 100) \\\", USA\\\")\"",
      "(str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \"\")",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\" \"New York\" \"NY\" \"Los Angeles\" \"CA\" \"Philadelphia\" \"PA\" \"Ithaca\" \"NY\" \"College Park\" \"MD\" \"Ann Arbor\" \"MI\"))",
      "\"(str.substr col2 (+ 1 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \", \" \"\"))",
      "\"(str.++ col2 (str.at col1 0) (str.at col1 1) \\\", USA\\\")\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\"",
      "\"(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))\"",
      "\"(str.substr col2 (+ 1 (str.indexof col2 \\\",\\\" 0)) (str.len col2))\"",
      "\"(str.substr col2 2 (- (str.indexof col2 \\\",\\\") 2))\"",
      "\"(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))\"",
      "(str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2))",
      "\"(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))\"",
      "(str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 2 (- (str.len col2) 2))",
      "(str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\",\\\")\"",
      "\"(str.substr (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) 2 (str.len (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))))\"",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "\"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") col1 \\\"\\\") \\\", \\\" \\\", USA\\\")\"",
      "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2))",
      "(str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2))",
      "(str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 4))",
      "\"(str.replace col1 col2 \"\")\"",
      "(str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace col2 \", USA\" \"\") \n        \"New York\" \"NY\") \n      \"New York\" \"NY\") \n    2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \"New York\" \"NY\") \"USA\" \"\")\n              1\n              (- (str.len (str.replace (str.replace (str.replace col2 col1 \"\") \"New York\" \"NY\") \"USA\" \"\")) 1))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col2 2 100) \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \"University\" \"\") \" , \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", , USA\" \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr \n        (str.replace \n            (str.replace \n                (str.replace \n                    (str.replace \n                        (str.replace col2 \"New York\" \"NY\") \n                        \"Los Angeles\" \"LA\") \n                    \"University of\" \"\") \n                \"University\" \"\") \n            \"USA\" \"\")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") 0 (- (str.len col2) 5)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \" , \" col2) \" , USA\" \"\") 2 (- (str.len col2) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace \n              (str.replace \n                (str.replace \n                  (str.replace \n                    (str.replace \n                      (str.replace \n                        (str.replace \n                          (str.replace \n                            (str.replace \n                              (str.replace \n                                (str.replace \n                                  (str.replace \n                                    (str.replace \n                                      (str.replace \n                                        (str.replace \n                                          (str.replace \n                                            (str.replace \n                                              (str.replace \n                                                (str.replace \n                                                  (str.replace \n                                                    (str.replace \n                                                      (str.replace \n                                                        (str.replace \n                                                          (str.replace \n                                                            (str.replace \n                                                              (str.replace \n                                                                (str.replace \n                                                                  (str.replace \n                                                                    (str.replace \n                                                                      (str.replace \n                                                                        (str.replace \n                                                                          (str.replace \n                                                                            (str.replace \n                                                                              (str.replace \n                                                                                (str.replace \n                                                                                  (str.replace \n                                                                                    (str.replace \n                                                                                      (str.replace \n                                                                                        (str.replace \n                                                                                          (str.replace \n                                                                                            (str.replace \n                                                                                              (str.replace \n                                                                                                (str.replace \n                                                                                                  (str.replace \n                                                                                                    (str.replace \n                                                                                                      (str.replace \n                                                                                                        (str.replace \n                                                                                                          (str.replace \n                                                                                                            (str.replace \n                                                                                                              (str.replace \n                                                                                                                (str.replace \n                                                                                                                  (str.replace \n                                                                                                                    (str.replace \n                                                                                                                      (str.replace \n                                                                                                                        (str.replace \n                                                                                                                          (str.replace \n                                                                                                                            (str.replace \n                                                                                                                              (str.replace \n                                                                                                                                (str.replace \n                                                                                                                                  (str.replace \n                                                                                                                                    (str.replace \n                                                                                                                                      (str.replace \n                                                                                                                                        (str.replace \n                                                                                                                                          (str.replace \n                                                                                                                                            (str.replace \n                                                                                                                                              (str.replace \n                                                                                                                                                (str.replace \n                                                                                                                                                  (str.replace \n                                                                                                                                                    (str.replace \n                                                                                                                                                      (str.replace \n                                                                                                                                                        (str.replace \n                                                                                                                                                          (str.replace \n                                                                                                                                                            (str.replace \n                                                                                                                                                              (str.replace \n                                                                                                                                                                (str.replace \n                                                                                                                                                                  (str.replace \n                                                                                                                                                                    (str.replace \n                                                                                                                                                                      (str.replace \n                                                                                                                                                                        (str.replace \n                                                                                                                                                                          (str.replace \n                                                                                                                                                                            (str.replace \n                                                                                                                                                                              (str.replace \n                                                                                                                                                                                (str.replace \n                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                              (str.replace \n                                                                                                                                                                                                (str.replace \n                                                                                                                                                                                                  (str.replace \n                                                                                                                                                                                                    (str.replace \n                                                                                                                                                                                                      (str.replace \n                                                                                                                                                                                                        (str.replace \n                                                                                                                                                                                                          (str.replace \n                                                                                                                                                                                                            (str.replace \n                                                                                                                                                                                                              (str.replace \n                                                                                                                                                col1 \"University of \" \"\")\n                                                                                                                                            \"College Park\" \"CP\")\n                                                                                                                                          \"University\" \"\")\n                                                                                                                                        \"Columbia\" \"\")\n                                                                                                                                      \"Cornell\" \"\")\n                                                                                                                                    \"UCLA\" \"\")\n                                                                                                                                  \"NYU\" \"\")\n                                                                                                                                \"University\" \"\")\n                                                                                                                              \"University\" \"\")\n                                                                                                                            \"University\" \"\")\n                                                                                                                          \"University\" \"\")\n                                                                                                                        \"University\" \"\")\n                                                                                                                      \"University\" \"\")\n                                                                                                                    \"University\" \"\")\n                                                                                                                  \"University\" \"\")\n                                                                                                                \"University\" \"\")\n                                                                                                              \"University\" \"\")\n                                                                                                            \"University\" \"\")\n                                                                                                          \"University\" \"\")\n                                                                                                        \"University\" \"\")\n                                                                                                      \"University\" \"\")\n                                                                                                    \"University\" \"\")\n                                                                                                  \"University\" \"\")\n                                                                                                \"University\" \"\")\n                                                                                              \"University\" \"\")\n                                                                                            \"University\" \"\")\n                                                                                          \"University\" \"\")\n                                                                                        \"University\" \"\")\n                                                                                      \"University\" \"\")\n                                                                                    \"University\" \"\")\n                                                                                  \"University\" \"\")\n                                                                                \"University\" \"\")\n                                                                              \"University\" \"\")\n                                                                            \"University\" \"\")\n                                                                          \"University\" \"\")\n                                                                        \"University\" \"\")\n                                                                      \"University\" \"\")\n                                                                    \"University\" \"\")\n                                                                  \"University\" \"\")\n                                                                \"University\" \"\")\n                                                              \"University\" \"\")\n                                                            \"University\" \"\")\n                                                          \"University\" \"\")\n                                                        \"University\" \"\")\n                                                      \"University\" \"\")\n                                                    \"University\" \"\")\n                                                  \"University\" \"\")\n                                                \"University\" \"\")\n                                              \"University\" \"\")\n                                            \"University\" \"\")\n                                          \"University\" \"\")\n                                        \"University\" \"\")\n                                      \"University\" \"\")\n                                    \"University\" \"\")\n                                  \"University\" \"\")\n                                \"University\" \"\")\n                              \"University\" \"\")\n                            \"University\" \"\")\n                          \"University\" \"\")\n                        \"University\" \"\")\n                      \"University\" \"\")\n                    \"University\" \"\")\n                  \"University\" \"\")\n                \"University\" \"\")\n              \"University\" \"\")\n            \"University\" \"\")\n          \"University\" \"\")\n        \"University\" \"\")\n      \"University\" \"\")\n    \"University\" \"\")\n  \", USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \" , \" col2) \" , USA\" \"\") 2 (- (str.len (str.replace (str.++ col1 \" , \" col2) \" , USA\" \"\")) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\")) )",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of Pennsylvania\" \"Phialdelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \") \"USA\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 3 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) 0 (- (str.indexof col2 \", \" 0) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \"\") 0 (- (str.len (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \")) 4)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr\n    (str.replace\n      (str.replace\n        (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"New York\" \"NY\") 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \")))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 100))",
      "\"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\"",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) \", \" 0)) (str.len col1) (str.len (str.replace (str.at col2 (+ (str.indexof col2 \", \" 0) 2)) \" \" \"\")) 3))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 1 (+ (str.indexof col2 \",\" 0) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") 0 (- (str.len col2) 5)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 3 100))",
      "(define-fun f ((col1 String) (col2 String)) String\n    (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 2)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace col2 \", \" \",\") 0 (str.indexof (str.replace col2 \", \" \",\") \",\")))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2 0 (- (str.len col2) 5)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 0 (str.indexof col2 \",\")) \", USA\")",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 3 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2) \"New York, New York, USA\" \"New York, NY, USA\") \"University of \" \"\") 0 (- (str.len (str.replace (str.replace (str.++ col1 \", \" col2) \"New York, New York, USA\" \"New York, NY, USA\") \"University of \" \"\")) 5)))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2 0 (+ 2 (str.indexof col2 \",\" 0))))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr col2 2 100))",
      "(define-fun f ((col1 String) (col2 String)) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f ((col1 String) (col2 String)) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")) 2))",
      "(define-fun f ((col1 String) (col2 String)) String\n  (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (str.len col2)))"
    ],
    "solutions": [
      "(define-fun f (col1 String col2 String) String (str.replace col1 \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ (str.substr col2 2 100) (str.substr col1 2 100) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\" \"New York\" \"NY\" \"Los Angeles\" \"CA\" \"Philadelphia\" \"PA\" \"Ithaca\" \"NY\" \"College Park\" \"MD\" \"Ann Arbor\" \"MI\"))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 1 (str.indexof col2 \\\",\\\" 0)) (- (str.len col2) 2))\")",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \", \" \"\"))",
      "(define-fun f (col1 String col2 String) String \"(str.++ col2 (str.at col1 0) (str.at col1 1) \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\" 0) 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ 1 (str.indexof col2 \\\",\\\" 0)) (str.len col2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 2 (- (str.indexof col2 \\\",\\\") 2))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))\")",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia\" \"Philadelphia\") 2 (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") \\\", USA\\\" \\\"\\\") \\\",\\\" \\\",\\\")\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1)) 2 (str.len (str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))))\")",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String \"(str.replace (str.replace (str.replace col2 col1 \\\"\\\") col1 \\\"\\\") \\\", \\\" \\\", USA\\\")\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \", \") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 4)))",
      "(define-fun f (col1 String col2 String) String \"(str.replace col1 col2 \")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \", USA\" \"\") \"New York\" \"NY\") \"New York\" \"NY\") 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 col1 \"\") \",\" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 col1 \"\") \"New York\" \"NY\") \"USA\" \"\") 1 (- (str.len (str.replace (str.replace (str.replace col2 col1 \"\") \"New York\" \"NY\") \"USA\" \"\")) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.++ (str.substr col2 2 100) \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"Phialdelphia, PA, USA\" \"Phialdelphia, PA, USA\") 0 (- (str.len (str.++ col1 \", \" col2 \", USA\")) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of\" \"\") \"University\" \"\") \" , \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", , USA\" \", USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"Los Angeles\" \"LA\") \"University of\" \"\") \"University\" \"\") \"USA\" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") 0 (- (str.len col2) 5)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \" , \" col2) \" , USA\" \"\") 2 (- (str.len col2) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col1 \"University of \" \"\") \"College Park\" \"CP\") \"University\" \"\") \"Columbia\" \"\") \"Cornell\" \"\") \"UCLA\" \"\") \"NYU\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \"University\" \"\") \", USA\"))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \" , \" col2) \" , USA\" \"\") 2 (- (str.len (str.replace (str.++ col1 \" , \" col2) \" , USA\" \"\")) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \")) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of Pennsylvania\" \"Phialdelphia\") \"University of Maryland College Park\" \"College Park\") \"University of Michigan\" \"Ann Arbor\") \"Columbia University\" \"New York\") \"UCLA\" \"Los Angeles\") \"Cornell University\" \"Ithaca\") \"Penn\" \"Philadelphia\")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \") \"USA\"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 3 100))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")) 1)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \",\" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)) \"New York\" \"NY\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) 0 (- (str.indexof col2 \", \" 0) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \"\") 0 (- (str.len (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \")) 4)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") \"New York\" \"NY\") 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \" , \" \", \")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\") 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 100))",
      "(define-fun f (col1 String col2 String) String \"(str.substr col2 0 (- (str.indexof col2 \\\",\\\") 1))\")",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) 0 (- (str.indexof (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)) \", \" 0)) (str.len col1) (str.len (str.replace (str.at col2 (+ (str.indexof col2 \", \" 0) 2)) \" \" \"\")) 3)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 1 (+ (str.indexof col2 \",\" 0) 2)))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.replace col2 \"New York\" \"NY\") \"University of \" \"\") \"University \" \"\") 0 (- (str.len col2) 5)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ (str.indexof col2 \",\") 2) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \", \" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 3 100))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \", \" 0)) (- (str.len col2) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace col2 \", \" \",\") 0 (str.indexof (str.replace col2 \", \" \",\") \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.len col2) 5)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (- (str.indexof col2 \",\" 0) 1)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (str.indexof col2 \",\")))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 3 100))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.replace (str.++ col1 \", \" col2) \"New York, New York, USA\" \"New York, NY, USA\") \"University of \" \"\") 0 (- (str.len (str.replace (str.replace (str.++ col1 \", \" col2) \"New York, New York, USA\" \"New York, NY, USA\") \"University of \" \"\")) 5)))",
      "(define-fun f (col1 String col2 String) String (str.replace col1 \"University of \" \"\"))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.replace col2 col1 \"\") \", \" \", \"))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 0 (+ 2 (str.indexof col2 \",\" 0))))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 2 100))",
      "(define-fun f (col1 String col2 String) String (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\"))",
      "(define-fun f (col1 String col2 String) String (str.substr (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\") 0 (- (str.len (str.replace (str.++ col1 \", \" col2 \", USA\") \"New York\" \"NY\")) 2)))",
      "(define-fun f (col1 String col2 String) String (str.substr col2 (+ 2 (str.indexof col2 \",\" 0)) (str.len col2)))"
    ],
    "time_diff_ms": 1413.942,
    "constants": [
      [
        "",
        ", "
      ],
      [
        "(str.++ (str.substr col2 2 100) (str.substr col1 2 100) \", USA\")"
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "MD",
        ", USA",
        "MI",
        ", ",
        "Philadelphia",
        "NY",
        "Ithaca",
        "PA",
        "CA",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles"
      ],
      [
        "(str.substr col2 (+ 1 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))"
      ],
      [
        "",
        ", "
      ],
      [
        "(str.++ col2 (str.at col1 0) (str.at col1 1) \", USA\")"
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        2,
        ", "
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))"
      ],
      [
        "(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))"
      ],
      [
        "(str.substr col2 (+ 1 (str.indexof col2 \",\" 0)) (str.len col2))"
      ],
      [
        "(str.substr col2 2 (- (str.indexof col2 \",\") 2))"
      ],
      [
        "(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))"
      ],
      [
        2,
        ", "
      ],
      [
        "(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))"
      ],
      [
        2,
        ", USA",
        "Philadelphia",
        "Phialdelphia",
        ", "
      ],
      [
        2,
        ", "
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \",\" \",\")"
      ],
      [
        "(str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 2 (str.len (str.substr col2 0 (- (str.indexof col2 \",\") 1))))"
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        "(str.replace (str.replace (str.replace col2 col1 \"\") col1 \"\") \", \" \", USA\")"
      ],
      [
        2,
        ","
      ],
      [
        2,
        ", "
      ],
      [
        2,
        4,
        ", "
      ],
      [
        "(str.replace col1 col2 "
      ],
      [
        2,
        ","
      ],
      [
        "",
        2,
        100,
        ", USA",
        "NY",
        "New York"
      ],
      [
        0,
        1,
        ",",
        "NY",
        "New York"
      ],
      [
        "",
        ","
      ],
      [
        2,
        100
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        1,
        "USA",
        "NY",
        "New York"
      ],
      [
        "",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        2,
        100,
        ", USA"
      ],
      [
        0,
        1,
        ", USA",
        ", ",
        "Phialdelphia, PA, USA"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        " , ",
        "University of",
        "NY",
        "University",
        "New York"
      ],
      [
        "",
        ", USA",
        "NY",
        ", , USA",
        "University of ",
        "New York"
      ],
      [
        "",
        "LA",
        "USA",
        "University of",
        "NY",
        "University",
        "New York",
        "Los Angeles"
      ],
      [
        "",
        0,
        5,
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        "",
        " , ",
        2,
        1,
        " , USA"
      ],
      [
        "",
        "Cornell",
        ", USA",
        "College Park",
        "CP",
        "University of ",
        "UCLA",
        "University",
        "Columbia",
        "NYU"
      ],
      [
        "",
        " , ",
        2,
        " , USA"
      ],
      [
        "",
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        ", "
      ],
      [
        2,
        100
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "University of Pennsylvania",
        "Columbia University",
        "UCLA",
        "Penn",
        "Phialdelphia",
        "Philadelphia",
        "University of Michigan",
        "NY",
        "Ithaca",
        "University of Maryland College Park",
        "Ann Arbor",
        "College Park",
        "New York",
        "Los Angeles",
        "Cornell University"
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ", "
      ],
      [
        "",
        " , ",
        ", ",
        "USA",
        "NY",
        "University of ",
        "New York"
      ],
      [
        3,
        100
      ],
      [],
      [
        0,
        1,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "",
        ",",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ",",
        "NY",
        "New York"
      ],
      [
        0,
        2,
        ", ",
        "NY",
        "New York"
      ],
      [
        0,
        2,
        ", "
      ],
      [
        "",
        " , ",
        0,
        4,
        "NY",
        "University of ",
        "New York"
      ],
      [
        2,
        100,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        " , ",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        100
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        100
      ],
      [
        "(str.substr col2 0 (- (str.indexof col2 \",\") 1))"
      ],
      [
        2,
        100
      ],
      [
        0,
        "",
        2,
        3,
        ", ",
        " "
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        "",
        ", ",
        "NY",
        "University of ",
        "New York"
      ],
      [
        "",
        0,
        5,
        "NY",
        "University ",
        "University of ",
        "New York"
      ],
      [
        0,
        2,
        ", "
      ],
      [
        2,
        ","
      ],
      [
        0,
        1,
        ", "
      ],
      [
        3,
        100
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ", "
      ],
      [
        0,
        ",",
        ", "
      ],
      [
        0,
        5
      ],
      [
        0,
        1,
        ","
      ],
      [
        2,
        100
      ],
      [
        0,
        ","
      ],
      [
        3,
        100
      ],
      [
        "",
        0,
        "New York, New York, USA",
        5,
        ", ",
        "New York, NY, USA",
        "University of "
      ],
      [
        "",
        "University of "
      ],
      [
        "",
        ", "
      ],
      [
        0,
        2,
        ","
      ],
      [
        2,
        100
      ],
      [
        "NY",
        "New York",
        ", USA",
        ", "
      ],
      [
        0,
        2,
        ", USA",
        ", ",
        "NY",
        "New York"
      ],
      [
        0,
        2,
        ","
      ]
    ],
    "all_constants": [
      "",
      0,
      "(str.substr col2 (+ 1 (str.indexof col2 \",\" 0)) (- (str.len col2) 2))",
      1,
      2,
      4,
      "(str.++ (str.substr col2 2 100) (str.substr col1 2 100) \", USA\")",
      5,
      "Penn",
      3,
      " ",
      "University of Maryland College Park",
      "PA",
      "MD",
      "Ann Arbor",
      "(str.substr col2 (+ 1 (str.indexof col2 \",\" 0)) (str.len col2))",
      "Cornell",
      "UCLA",
      "Columbia",
      "(str.substr col2 2 (- (str.indexof col2 \",\") 2))",
      "NYU",
      "Columbia University",
      " , ",
      "New York, New York, USA",
      ", ",
      "(str.substr col2 (+ (str.indexof col2 col1 0) (str.len col1)) (str.len col2))",
      "(str.replace (str.replace (str.replace col2 col1 \"\") \", USA\" \"\") \",\" \",\")",
      "Phialdelphia, PA, USA",
      "USA",
      ",",
      "University of",
      "CP",
      "(str.++ col2 (str.at col1 0) (str.at col1 1) \", USA\")",
      ", , USA",
      "(str.substr col2 0 (- (str.indexof col2 \",\" 0) 1))",
      "(str.substr col2 0 (- (str.indexof col2 \",\") 1))",
      "New York",
      "Los Angeles",
      "Cornell University",
      "(str.replace col1 col2 ",
      ", USA",
      "MI",
      "Philadelphia",
      "Phialdelphia",
      "(str.replace (str.replace (str.replace col2 col1 \"\") col1 \"\") \", \" \", USA\")",
      " , USA",
      "New York, NY, USA",
      "University ",
      "College Park",
      "University",
      100,
      "LA",
      "University of Michigan",
      "(str.substr (str.substr col2 0 (- (str.indexof col2 \",\") 1)) 2 (str.len (str.substr col2 0 (- (str.indexof col2 \",\") 1))))",
      "NY",
      "Ithaca",
      "University of ",
      "CA",
      "University of Pennsylvania"
    ]
  },
  "stackoverflow1.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.replace _arg_0 \" Inc.\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\") 1))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" Inc\\\"))\"",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\") 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" Inc\\\"))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc.\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc.\" 0)))"
    ],
    "time_diff_ms": 961.3800000000001,
    "constants": [
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " "
      ],
      [
        0,
        "Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        1,
        "Inc"
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        "",
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        " Inc."
      ],
      [
        0,
        " Inc."
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      "Inc",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))",
      " ",
      " Inc",
      " Inc."
    ]
  },
  "exceljet1.sl": {
    "completions": [
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (str.indexof _arg_1 \"_\" (+ (str.len _arg_0) 2)) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))) 0 (str.len (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr (str.substr _arg_1 0 (- (str.indexof _arg_1 \"_\") 1)) (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \"_\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \"_\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \"_\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \"_\"))) )",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "\"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\"",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\")))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (str.indexof _arg_1 \"_\" (+ (str.len _arg_0) 2)) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))) 0 (str.len (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr (str.substr _arg_1 0 (- (str.indexof _arg_1 \"_\") 1)) (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \"_\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \"_\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \"_\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \"_\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String \"(str.substr _arg_1 (+ (str.indexof _arg_1 \\\"_\\\" 0) 1) (str.len _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (- (str.len _arg_1) (str.indexof _arg_1 \".\"))))"
    ],
    "time_diff_ms": 1188.5140000000001,
    "constants": [
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        2,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        1,
        "_"
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_"
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_",
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      ".",
      "_",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (str.len _arg_1))"
    ]
  },
  "initials-long-repeat.sl": {
    "completions": [
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 0 1))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \") 1)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \" 0) 1)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 7 100) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at (str.substr name 0 1) 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) (- (str.indexof name \" \" 0) 1)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \" 0) 1)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 7 (str.len name)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \" 0) 1)) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 7 100) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 7 100) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0) \".\")",
      "(str.++ (str.at (str.substr name 0 1) 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ 1 (str.indexof name \" \"))) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \".\") 1 2))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) (str.indexof name \" \" (+ (str.indexof name \" \" 0) 1))) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \" 0) 1)) 0) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0) \".\")",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.len name) 1)) 0))",
      "(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0))"
    ],
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \") 1)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \" 0) 1)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 7 100) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at (str.substr name 0 1) 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) (- (str.indexof name \" \" 0) 1)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \" 0) 1)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \")) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 7 (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \" 0) 1)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 7 100) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 7 100) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at (str.substr name 0 1) 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \"\") 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.replace name \" \" \"\") 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ 1 (str.indexof name \" \"))) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.replace name \" \" \".\") 1 2)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) (str.indexof name \" \" (+ (str.indexof name \" \" 0) 1))) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.indexof name \" \" 0) 1)) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.at name 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (str.indexof name \" \" 0)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \") 1) 1) 0) \".\"))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name 1 (- (str.len name) 1)) 0)))",
      "(define-fun f (name String) String (str.++ (str.at name 0) \".\" (str.at (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0)))"
    ],
    "time_diff_ms": 1474.045,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        100,
        7,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        7,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        100,
        7,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        100,
        7,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        "",
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      2,
      100,
      7,
      " ",
      "."
    ]
  },
  "find-nth-occurrence-of-character.sl": {
    "completions": [
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" (+ 1 (str.indexof _arg_0 \", \" (+ 1 (str.indexof _arg_0 \", \" _arg_1)))))",
      "(str.indexof _arg_0 \", _\" (+ _arg_1 1))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \"_\" _arg_1))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" _arg_1)))",
      "(str.indexof _arg_0 \"_\" _arg_1)",
      "(str.indexof (str.replace (str.replace _arg_0 \"_\" \"\") \", and \" \"\") \"_\" _arg_1)",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 1)",
      "(+ (str.indexof _arg_0 \", \" 0) 1)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(+ (str.indexof _arg_0 \", \" (- _arg_1 1) 0) 1)",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 2)",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \"_\") 1) 1) 1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" 0) 0) 0) 1)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(+ (str.indexof _arg_0 \", \" 0) 1)",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 1)",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 10)",
      "(str.indexof _arg_0 \", \" (- _arg_1 1) 0)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 1)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1)))))",
      "(+ (str.indexof _arg_0 \", \" 0) 1) 10) 2) 15) 3) 30))",
      "(+ (str.indexof _arg_0 \", \" 0) 6)",
      "(+ (str.indexof _arg_0 \", \" 0) 1)",
      "(str.indexof _arg_0 \",\" (- (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" 0) 1) 1)",
      "(str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" (+ _arg_1 1))))",
      "(str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" _arg_1))",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(str.indexof _arg_0 \"_\" _arg_1)",
      "(str.indexof _arg_0 \"_\" (+ 1 (str.indexof _arg_0 \"_\" (+ 1 (str.indexof _arg_0 \"_\" _arg_1)))))",
      "(str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1)))))",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(str.indexof _arg_0 \",\" _arg_1)",
      "(str.indexof _arg_0 \"_\" _arg_1)",
      "(str.indexof _arg_0 \", \" (- _arg_1 1))",
      "(str.indexof _arg_0 \"_\" _arg_1))",
      "(str.indexof _arg_0 \",\" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(+ (str.indexof _arg_0 \", \" 0) 1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(+ (str.indexof _arg_0 \", \" (ite (= _arg_1 1) 0 (str.indexof _arg_0 \", \" (ite (= _arg_1 2) 0 (str.indexof _arg_0 \", \" 0)))))) 11)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (+ _arg_1 1)) (+ _arg_1 1)) (+ _arg_1 1))",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \",\" (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\")))) \",\" 0) (ite (= _arg_1 3) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\")))) \",\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\")))) \",\" 0))))))) 0)",
      "(str.indexof _arg_0 \", \" (- _arg_1 1))",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", and \" _arg_1)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(str.indexof _arg_0 \"_\" _arg_1)",
      "(str.indexof _arg_0 \",\" _arg_1))",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(+ (str.indexof _arg_0 \"_\" _arg_1) 1)",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(str.indexof _arg_0 \", \" _arg_1))",
      "(str.indexof _arg_0 \", \" (_arg_1 0) (_arg_1 1))",
      "(+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \"_\") + 1) + 1) 1)",
      "(+ (str.indexof _arg_0 \", \" 0) (* _arg_1 6))",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(str.indexof _arg_0 \"_\" _arg_1)",
      "(str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1)))))",
      "(str.indexof _arg_0 \"_\" _arg_1))",
      "(+ (str.indexof _arg_0 \", \" (- _arg_1 1)) 1)",
      "(+ (str.indexof _arg_0 \", \" (- _arg_1 1) 0) 1)",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 10)",
      "(str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1)))))",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(+ (str.indexof (str.indexof _arg_0 \",\" _arg_1) \",\" 1) 1)",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(+ (str.indexof _arg_0 \", \" (- _arg_1 1)) 1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(+ (str.indexof _arg_0 \", \" 0) 1)",
      "(str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" _arg_1) _arg_1) _arg_1))",
      "(+ (str.indexof _arg_0 \",\" _arg_1) 1)",
      "(str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" -1) -1)) -1))",
      "(str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2)))",
      "(+ (str.indexof _arg_0 \", \" _arg_1) 1)",
      "(+ (str.indexof _arg_0 \", \" (- _arg_1 1)) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \", \" (- _arg_1 1)) 2) (str.len _arg_0)) \", \"))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \", \" _arg_1)"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (str.indexof _arg_0 \", \" (+ 1 (str.indexof _arg_0 \", \" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", _\" (+ _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof (str.replace (str.replace _arg_0 \"_\" \"\") \", and \" \"\") \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (- _arg_1 1) 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 2))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \"_\") 1) 1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" 0) 0) 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 10))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (- _arg_1 1) 0))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" -1) -1) 1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 6))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (- (str.indexof _arg_0 \",\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" 0) 1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" (str.indexof _arg_0 \",\" (+ _arg_1 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" (+ 1 (str.indexof _arg_0 \"_\" (+ 1 (str.indexof _arg_0 \"_\" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (ite (= _arg_1 1) 0 (str.indexof _arg_0 \", \" (ite (= _arg_1 2) 0 (str.indexof _arg_0 \", \" 0)))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (+ _arg_1 1)) (+ _arg_1 1)) (+ _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\")))) \",\" 0) (ite (= _arg_1 3) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\")))) \",\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\")) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\")))) \",\" 0))))))) 0))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", and \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \"_\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (_arg_1 0) (_arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \"_\") + 1) + 1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) (* _arg_1 6)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (- _arg_1 1)) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (- _arg_1 1) 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 10))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof (str.indexof _arg_0 \",\" _arg_1) \",\" 1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (- _arg_1 1)) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" 0) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" (str.indexof _arg_0 \", \" _arg_1) _arg_1) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \",\" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" (+ (str.indexof _arg_0 \", \" -1) -1)) -1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" (+ 1 (* (- _arg_1 1) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" _arg_1) 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (+ (str.indexof _arg_0 \", \" (- _arg_1 1)) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \", \" (- _arg_1 1)) 2) (str.len _arg_0)) \", \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))"
    ],
    "time_diff_ms": 1417.628,
    "constants": [
      [
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        ", _",
        1
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        "_"
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        "_"
      ],
      [
        "",
        "_",
        ", and "
      ],
      [
        1,
        -1,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        2,
        -1,
        ", "
      ],
      [
        1,
        "_",
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        -1,
        ", "
      ],
      [
        1,
        10,
        -1,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        -1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        6,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        ","
      ],
      [
        ", "
      ],
      [
        1,
        ","
      ],
      [
        ", "
      ],
      [
        1,
        ","
      ],
      [
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        1,
        ","
      ],
      [
        1,
        ", "
      ],
      [
        ","
      ],
      [
        "_"
      ],
      [
        1,
        ", "
      ],
      [
        "_"
      ],
      [
        ","
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        ", "
      ],
      [
        0,
        1,
        2,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        ", "
      ],
      [
        0,
        1,
        2,
        3,
        ","
      ],
      [
        1,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        ", and "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        "_"
      ],
      [
        ","
      ],
      [
        1,
        ","
      ],
      [
        1,
        "_"
      ],
      [
        1,
        ","
      ],
      [
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        1,
        "_",
        ", "
      ],
      [
        0,
        6,
        ", "
      ],
      [
        1,
        ","
      ],
      [
        "_"
      ],
      [
        1,
        ","
      ],
      [
        "_"
      ],
      [
        1,
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        10,
        ", "
      ],
      [
        1,
        ","
      ],
      [
        1,
        2,
        ", "
      ],
      [
        1,
        ","
      ],
      [
        1,
        2,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ],
      [
        0,
        1,
        ", "
      ],
      [
        ", "
      ],
      [
        1,
        ","
      ],
      [
        -1,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        1,
        ", "
      ],
      [
        1,
        2,
        ", "
      ],
      [
        ", "
      ],
      [
        ", "
      ]
    ],
    "all_constants": [
      "",
      1,
      0,
      2,
      3,
      6,
      ", ",
      10,
      ",",
      ", _",
      "_",
      ", and ",
      -1
    ]
  },
  "extract-word-containing-specific-text.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 1 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1))) ) )",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (+ (str.indexof _arg_0 \" \") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.len \" \") (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.len \"_\") (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \") 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 1 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 1 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (+ (str.indexof _arg_0 \" \") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.len \" \") (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.len \"_\") (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 1 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))"
    ],
    "time_diff_ms": 1777.1180000000002,
    "constants": [
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "_"
    ]
  },
  "extract-nth-word-from-text-string.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))",
      "(str.at _arg_0 (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1))) (str.indexof _arg_0 \" \" _arg_1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))",
      "(str.at _arg_0 _arg_1)",
      "(str.at (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) _arg_1 (+ 1 (str.indexof (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (str.len (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" \"\")) (_arg_1 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.at _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(str.at _arg_0 _arg_1)",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \".\")))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (int.to.str _arg_1)) (+ (str.indexof _arg_0 \" \" (int.to.str _arg_1)) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1)))) (str.indexof _arg_0 \" \" (+ (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1))) 1)))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 \n            (+ (str.indexof _arg_0 \" \" 0) 1) \n            (-\n                (str.indexof \n                    (str.substr _arg_0 \n                        (+ (str.indexof _arg_0 \" \" 0) 1) \n                        (str.len _arg_0)) \n                    \" \" 0) \n                (+ (str.indexof _arg_0 \" \" 0) 1)\n            )\n)",
      "(str.at _arg_0 _arg_1)",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.at _arg_0 _arg_1)",
      "(str.at _arg_0 _arg_1)",
      "(str.at _arg_0 (str.indexof (str.++ _arg_0 \" \") _arg_0 _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.++ \"anything\" \" \")",
      "(str.++ (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1) ) ) (str.substr _arg_0 (ite (= _arg_1 1) (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))) (ite (= _arg_1 1) (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(str.++ \"anything\" \" you\" \" can\" \" do\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.++ (str.at _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0) 0) 0) 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0) 0) 0))",
      "(str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" _arg_1))) \" \" 1))) (if (= (str.indexof _arg_0 \" \" _arg_1) -1) _arg_0 \"\"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.++ \"anything\" \" \")",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 2)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (str.len _arg_0)) \" \" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (-\n  (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))\n  (str.indexof _arg_0 \" \" 0)))",
      "(str.at _arg_0 _arg_1)",
      "(str.replace (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)) \" \" \"\")",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))))) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.++ \"anything\" \" \")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (str.len _arg_0)) \" \" 1))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.++ \"anything\" \"can\" \"do\" \"everything\")",
      "(str.substr _arg_0 (int.to.str (str.indexof _arg_0 \" \" 0)) (+ 1 (str.indexof (str.substr _arg_0 0 (int.to.str (str.indexof _arg_0 \" \" 0))) \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (-\n  (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof\n  _arg_0 \" \" 0) 1))))",
      "(str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) \" \" 0))) (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) \" \" 0))) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) \" \" 0))) (str.len _arg_0)) \" \" 0)))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) 1))",
      "(str.++ \"anything\" \" \")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (-\n    (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))\n    (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (+ 1 1)))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.at _arg_0 _arg_1)",
      "(str.++ \"anything\" \"\")",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.++ (str.at _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1))))))",
      "(str.at _arg_0 _arg_1)",
      "(str.at _arg_0 _arg_1)",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.++ \"anything\" \" \")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.++ (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \" \" 0 (+ (str.indexof _arg_0 \" \" 0 _arg_1) 1))) (str.indexof _arg_0 \" \" 0 _arg_1)) (ite (= _arg_1 1) \"\" \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (str.len _arg_0)) \" \" 0))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))",
      "(str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) 1) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" _arg_1) 1) (- (str.indexof _arg_0 \" \" (+ _arg_1 1)) (str.indexof _arg_0 \" \" _arg_1))))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))) \" \" 0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1)))) (str.indexof _arg_0 \" \" (+ (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1))) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.at _arg_0 _arg_1)"
    ],
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1))) (str.indexof _arg_0 \" \" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) _arg_1 (+ 1 (str.indexof (str.substr _arg_0 0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (str.len (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" \"\")) (_arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \".\"))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (int.to.str _arg_1)) (+ (str.indexof _arg_0 \" \" (int.to.str _arg_1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1)))) (str.indexof _arg_0 \" \" (+ (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1))) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0) (- (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 (str.indexof (str.++ _arg_0 \" \") _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"anything\" \" \"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))) (str.substr _arg_0 (ite (= _arg_1 1) (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))) (ite (= _arg_1 1) (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"anything\" \" you\" \" can\" \" do\"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.at _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0) 0) 0) 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0) 0) 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" _arg_1))) \" \" 1))) (if (= (str.indexof _arg_0 \" \" _arg_1) -1) _arg_0 \"\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"anything\" \" \"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 2))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (str.len _arg_0)) \" \" 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.replace (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)) \" \" \"\"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))))) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"anything\" \" \"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (str.len _arg_0)) \" \" 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"anything\" \"can\" \"do\" \"everything\"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (int.to.str (str.indexof _arg_0 \" \" 0)) (+ 1 (str.indexof (str.substr _arg_0 0 (int.to.str (str.indexof _arg_0 \" \" 0))) \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) \" \" 0))) (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) \" \" 0))) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)) \" \" 0))) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"anything\" \" \"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (+ 1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"anything\" \"\"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.at _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1)))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ \"anything\" \" \"))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof _arg_0 \" \" 0 (+ (str.indexof _arg_0 \" \" 0 _arg_1) 1))) (str.indexof _arg_0 \" \" 0 _arg_1)) (ite (= _arg_1 1) \"\" \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) (str.len _arg_0)) \" \" 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 (str.indexof _arg_0 \" \" _arg_1) 1) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" _arg_1) 1) (- (str.indexof _arg_0 \" \" (+ _arg_1 1)) (str.indexof _arg_0 \" \" _arg_1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1)))) (str.indexof _arg_0 \" \" (+ (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" _arg_1))) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))"
    ],
    "time_diff_ms": 1907.275,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        "",
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        "."
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [],
      [],
      [
        0,
        1,
        " "
      ],
      [],
      [],
      [
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        "anything"
      ],
      [
        0,
        1,
        " "
      ],
      [
        "anything",
        " do",
        " you",
        " can"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "",
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        "anything"
      ],
      [
        0,
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " ",
        2
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " ",
        ""
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        "anything"
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        "anything",
        "everything",
        "do",
        "can"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        "anything"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [],
      [
        "",
        "anything"
      ],
      [],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [],
      [],
      [],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        "anything"
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        ""
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      []
    ],
    "all_constants": [
      0,
      1,
      "",
      "anything",
      " do",
      2,
      " ",
      "do",
      ".",
      "everything",
      " you",
      " can",
      -1,
      "can"
    ]
  }
}