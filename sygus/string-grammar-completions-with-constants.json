{
  "get-first-name-from-name-with-comma.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.split \",\" _arg_0) (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((split (str.split _arg_0 \", \")))\n  (ite (= _arg_1 1) \n       (str.at split 1) \n       (str.at split 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((s (str.split _arg_0 \",\")))\n  (ite (= _arg_1 1) (str.trim (nth 1 s)) (str.trim (nth 0 s)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((split (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))\n  (ite (= _arg_1 2) split (str.substr _arg_0 (+ (str.len split) 1) (- (str.len _arg_0) (+ (str.len split) 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((s (str.split _arg_0 \", \")))\n  (if (= _arg_1 1) \n      (str.at s 1) \n      (str.at s 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((names (str.split _arg_0 \",\")))\n  (if (= _arg_1 1)\n      (str.trim (nth names 1))\n      (str.trim (nth names 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.split _arg_0 \",\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((parts (str.split _arg_0 \",\")))\n  (ite (= _arg_1 1)\n    (str.trim (nth parts 1))\n    (str.trim (nth parts 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((parts (str.split _arg_0 \",\")))\n  (ite (= _arg_1 1) (str.trim (nth parts 1)) (str.trim (nth parts 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.split \",\" _arg_0) (- _arg_1 1)))"
    ],
    "time_ms": 22.629,
    "constants": [
      [
        1,
        ","
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        1,
        ", "
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      ",",
      ", "
    ]
  },
  "strip-html-from-text-or-numbers.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))"
    ],
    "time_ms": 462.152,
    "constants": [
      [
        "",
        "<b",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ]
    ],
    "all_constants": [
      "",
      "<b",
      "<b>"
    ]
  },
  "count-total-words-in-a-cell.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")) (- (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))",
      "(define-fun f (_arg_0 String) Int\n(str.len (str.replace _arg_0 \" \" \"\")))"
    ],
    "time_ms": 558.549,
    "constants": [
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ],
      [
        "",
        " "
      ]
    ],
    "all_constants": [
      "",
      " "
    ]
  },
  "stackoverflow8.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))"
    ],
    "time_ms": 355.496,
    "constants": [
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ]
    ],
    "all_constants": [
      0,
      "/",
      1
    ]
  },
  "phone-6-long.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name 4 3)"
    ],
    "time_ms": 693.278,
    "constants": [
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        3,
        4
      ],
      [
        3
      ],
      [
        3,
        4
      ],
      [
        3
      ],
      [
        3,
        4
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        3,
        4
      ]
    ],
    "all_constants": [
      0,
      1,
      3,
      4,
      " "
    ]
  },
  "phone-10.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \") \" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))) )",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \") \" (str.substr name 7 (- (str.len name) 7))) )",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))"
    ],
    "time_ms": 205.8,
    "constants": [
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        ") ",
        7,
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        ") ",
        7,
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ]
    ],
    "all_constants": [
      0,
      3,
      4,
      ") ",
      7,
      ")",
      "("
    ]
  },
  "phone-6.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)"
    ],
    "time_ms": 644.696,
    "constants": [
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3
      ],
      [
        3
      ]
    ],
    "all_constants": [
      3,
      4
    ]
  },
  "phone-7-short.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))"
    ],
    "time_ms": 34.938,
    "constants": [
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      3,
      1
    ]
  },
  "phone-7.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))"
    ],
    "time_ms": 77.604,
    "constants": [
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      3,
      1
    ]
  },
  "univ_6_short.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.replace (str.replace col2 \"New York\" \"NY\") \"USA\" \"USA, USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.replace col1 \"New York\" \"NY\") \", \" \"USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col1 (str.indexof col1 \",\" 0) (str.len col1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col1 (str.indexof col1 \",\" 0) (str.len col1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.replace col1 \"New York\" \"NY\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (+ (str.indexof col2 \",\" 0) 1)) \" USA\"))"
    ],
    "time_ms": 781.154,
    "constants": [
      [
        0,
        ", USA",
        ","
      ],
      [
        "New York",
        "USA, USA",
        "USA",
        "NY"
      ],
      [
        "New York",
        "USA",
        ", ",
        "NY"
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        "New York",
        ", USA",
        "NY"
      ],
      [
        0,
        1,
        " USA",
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      ", USA",
      "NY",
      "USA, USA",
      "USA",
      ",",
      "New York",
      ", ",
      " USA"
    ]
  },
  "stackoverflow9.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 1) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 1) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 1) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 1) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1 (- (str.len _arg_0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 1) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 1) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))"
    ],
    "time_ms": 746.495,
    "constants": [
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "phone-9-long-repeat.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))"
    ],
    "time_ms": 96.588,
    "constants": [
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "",
      "-",
      "+",
      " ",
      "."
    ]
  },
  "get-last-word.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))"
    ],
    "time_ms": 615.922,
    "constants": [
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ]
    ],
    "all_constants": [
      1,
      " "
    ]
  },
  "phone-10_short.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 (+ 1 (str.indexof name \" \" 0))) \"(\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 3) \")\" (str.substr name (+ 1 (+ 3 (str.indexof name \" \" 0))) (- (str.len name) (+ 1 (+ 3 (str.indexof name \" \" 0))))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))"
    ],
    "time_ms": 295.464,
    "constants": [
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        1,
        3,
        ")",
        "(",
        " "
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ]
    ],
    "all_constants": [
      0,
      1,
      3,
      4,
      7,
      ")",
      "(",
      " "
    ]
  },
  "17212077.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))"
    ],
    "time_ms": 742.446,
    "constants": [
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ]
    ],
    "all_constants": [
      0,
      3,
      4,
      6
    ]
  },
  "phone-5.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))"
    ],
    "time_ms": 199.471,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "39060015.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))"
    ],
    "time_ms": 18.456,
    "constants": [
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ]
    ],
    "all_constants": [
      "",
      "/delete words in the area /"
    ]
  },
  "phone-7-long-repeat.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))"
    ],
    "time_ms": 321.457,
    "constants": [
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      3,
      1
    ]
  },
  "38871714.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\")",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\")",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\")",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\"))"
    ],
    "time_ms": 895.138,
    "constants": [
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ]
    ],
    "all_constants": [
      "",
      ">",
      "<"
    ]
  },
  "43120683.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))"
    ],
    "time_ms": 831.641,
    "constants": [
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ],
      [
        "1",
        "apple"
      ]
    ],
    "all_constants": [
      "1",
      "apple"
    ]
  },
  "stackoverflow11.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.len _arg_0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (- (str.len _arg_0) (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))"
    ],
    "time_ms": 248.528,
    "constants": [
      [
        0,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        "_"
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "_"
    ]
  },
  "split-text-string-at-specific-character.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))))"
    ],
    "time_ms": 659.354,
    "constants": [
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ]
    ],
    "all_constants": [
      0,
      1,
      "_"
    ]
  },
  "get-domain-name-from-url.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 2 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 2 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 2 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 2 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (+ 1 (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 2 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 2 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 1 (str.indexof _arg_0 \"/\" 0))) \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 2 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (+ 1 (str.indexof _arg_0 \"/\" 0))))"
    ],
    "time_ms": 787.003,
    "constants": [
      [
        0,
        "/",
        2
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        1,
        "/",
        ""
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        1,
        "/"
      ]
    ],
    "all_constants": [
      0,
      "/",
      2,
      1,
      ""
    ]
  },
  "get-last-name-from-name-with-comma.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n(str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((first-name (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))\n      (last-name (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))\n  (str.++ first-name \",\" last-name)))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))"
    ],
    "time_ms": 452.065,
    "constants": [
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      ","
    ]
  },
  "initials.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (- (str.len name) (+ 1 (str.indexof name \" \" 0)))) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (- (str.len name) (+ 1 (str.indexof name \" \" 0)))) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (- (str.len name) (+ 1 (str.indexof name \" \" 0)))) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))"
    ],
    "time_ms": 646.294,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "univ_5-long-repeat.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" (ite (= col1 \"New York\") \"NY\" \"USA\")))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" (ite (= col1 \"New York\") \"NY\" \"USA\")))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" (ite (= col1 \"New York\") \"NY\" \"USA\")))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" (str.replace col1 \"New York\" \"NY\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" (str.replace col1 \"New York\" \"NY\") \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" (ite (= col1 \"New York\") \"NY\" \"USA\")))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" (ite (= col2 \"New York\") \"NY\" \"USA\")))"
    ],
    "time_ms": 363.982,
    "constants": [
      [
        ", USA"
      ],
      [
        "New York",
        "USA",
        ", ",
        "NY"
      ],
      [
        "New York",
        "USA",
        ", ",
        "NY"
      ],
      [
        "New York",
        "USA",
        ", ",
        "NY"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        "New York",
        ", USA",
        ", ",
        "NY"
      ],
      [
        "New York",
        ", USA",
        ", ",
        "NY"
      ],
      [
        "New York",
        "USA",
        ", ",
        "NY"
      ],
      [
        "New York",
        "USA",
        ", ",
        "NY"
      ]
    ],
    "all_constants": [
      ", USA",
      "NY",
      "USA",
      "New York",
      ", "
    ]
  },
  "stackoverflow10.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) 4))"
    ],
    "time_ms": 648.9,
    "constants": [
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        1,
        " ",
        4
      ]
    ],
    "all_constants": [
      1,
      " ",
      4
    ]
  },
  "phone-9-short.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))"
    ],
    "time_ms": 999.969,
    "constants": [
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "-",
      " ",
      "."
    ]
  },
  "phone-6-short.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)"
    ],
    "time_ms": 891.014,
    "constants": [
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ]
    ],
    "all_constants": [
      3,
      4
    ]
  },
  "43606446.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))"
    ],
    "time_ms": 151.47,
    "constants": [
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      ","
    ]
  },
  "initials-long.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))"
    ],
    "time_ms": 641.069,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "phone-5-long-repeat.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))"
    ],
    "time_ms": 834.122,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "phone-7-long.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))"
    ],
    "time_ms": 309.236,
    "constants": [
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      3,
      1
    ]
  },
  "univ_6-long.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 (str.len col1) (- (str.len col2) (str.len col1))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 (str.len col1) (- (str.len col2) (str.len col1))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 (str.indexof col2 \",\" 0) (+ (str.indexof col2 \",\" (str.indexof col2 \",\" 0)) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 (str.indexof col2 \",\" 0) (+ (str.indexof col2 \",\" (str.indexof col2 \",\" 0)) 1)) \", USA\"))"
    ],
    "time_ms": 164.12,
    "constants": [
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ","
      ]
    ],
    "all_constants": [
      0,
      ", USA",
      1,
      ","
    ]
  },
  "33619752.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Corporation\" \"\") \" Enterprises\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Corporation\" \"\") \" Enterprises\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"Inc\" \"\") \"Company\" \"\") \"Corporation\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\"))"
    ],
    "time_ms": 796.346,
    "constants": [
      [
        "",
        " Enterprises",
        " Inc",
        " Corporation"
      ],
      [
        "",
        " Company",
        " Inc",
        " Corporation"
      ],
      [
        "",
        " Company",
        " Inc",
        " Corporation"
      ],
      [
        "",
        " Company",
        " Inc",
        " Corporation"
      ],
      [
        "",
        " Enterprises",
        " Inc",
        " Corporation"
      ],
      [
        "",
        " Company",
        " Inc",
        " Corporation"
      ],
      [
        "",
        "Corporation",
        "Inc",
        "Company"
      ],
      [
        "",
        " Company",
        " Inc",
        " Corporation"
      ],
      [
        "",
        " Company",
        " Inc",
        " Corporation"
      ],
      [
        "",
        " Company",
        " Inc",
        " Corporation"
      ]
    ],
    "all_constants": [
      "",
      " Corporation",
      " Company",
      "Inc",
      "Company",
      " Enterprises",
      "Corporation",
      " Inc"
    ]
  },
  "extract-text-between-parentheses.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))"
    ],
    "time_ms": 977.332,
    "constants": [
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ]
    ],
    "all_constants": [
      0,
      1,
      ">",
      "<"
    ]
  },
  "remove-leading-and-trailing-spaces-from-text.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 \"  \" \" \") \n          \"  \" \" \") \n        \"  \" \" \") \n      \"  \" \" \") \n    \"  \" \" \") \n  1 \n  (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 (str.++ \" \" \" \") \" \") \n            (str.++ \" \" \" \") \" \") \n          (str.++ \" \" \" \") \" \") \n        (str.++ \" \" \" \") \" \") \n      (str.++ \" \" \" \") \" \") \n    1 \n    (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String\n(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"  \" \" \") \"  \" \" \") \"  \" \" \") \"  \" \" \") \"  \" \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 \"  \" \" \") \n          \"  \" \" \") \n        \"  \" \" \") \n      \"  \" \" \") \n    \"  \" \" \") \n  1 \n  (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n (str.substr \n  (str.replace \n   (str.replace \n    (str.replace \n     (str.replace \n      (str.replace _arg_0 (str.++ \" \" \" \") \" \") \n      (str.++ \" \" \" \") \" \") \n     (str.++ \" \" \" \") \" \") \n    (str.++ \" \" \" \") \" \") \n   (str.++ \" \" \" \") \" \") \n  1 \n  (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String\n(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"  \" \" \") \"  \" \" \") \"  \" \" \") \"  \" \" \") \"  \" \" \") 1 (- (str.len _arg_0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 \"  \" \" \") \n          \"  \" \" \") \n        \"  \" \" \") \n      \"  \" \" \") \n    \"  \" \" \") \n  1 \n  (str.len _arg_0)\n  )\n)",
      "(define-fun f (_arg_0 String) String\n(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite \n    (str.prefixof \" \" _arg_0) \n    \"\" \n    (str.at _arg_0 0)) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 \"  \" \" \") \n            \"  \" \" \") \n          \"  \" \" \") \n        \"  \" \" \") \n      \"  \" \" \") \n    1 \n    (str.len _arg_0)\n  )\n))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 \"  \" \" \") \n          \"  \" \" \") \n        \"  \" \" \") \n      \"  \" \" \") \n    \"  \" \" \") \n  1 \n  (- (str.len _arg_0) 1))))"
    ],
    "time_ms": 715.869,
    "constants": [
      [
        "",
        0,
        1,
        " ",
        "  "
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        1,
        " ",
        "  "
      ],
      [
        "",
        0,
        1,
        " ",
        "  "
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        1,
        " ",
        "  "
      ],
      [
        "",
        0,
        1,
        " ",
        "  "
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        1,
        " ",
        "  "
      ],
      [
        "",
        0,
        1,
        " ",
        "  "
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      " ",
      "  "
    ]
  },
  "strip-non-numeric-characters.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"%\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"%\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \" \" \"\") \"%\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"%\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"%\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"%\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" \" \"\") \"%\" \"\") \"a\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"%\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"1\" \"\") \"2\" \"\") \"3\" \"\") \"4\" \"\") \"5\" \"\") \"6\" \"\") \"7\" \"\") \"8\" \"\") \"9\" \"\") \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"%\" \"\"))"
    ],
    "time_ms": 564.448,
    "constants": [
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "",
        "%",
        " "
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "",
        "%",
        " ",
        "a"
      ],
      [
        "%",
        ""
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "%",
        ""
      ]
    ],
    "all_constants": [
      "%",
      "",
      "3",
      "7",
      "5",
      "8",
      "4",
      "a",
      "0",
      " ",
      "2",
      "1",
      "6",
      "9"
    ]
  },
  "get-middle-name-from-full-name.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(let ((firstSpace (str.indexof _arg_0 \" \" 0)))\n(let ((secondSpace (str.indexof _arg_0 \" \" (+ firstSpace 1))))\n(let ((thirdSpace (str.indexof _arg_0 \" \" (+ secondSpace 1))))\n(ite (and (= thirdSpace -1) (> secondSpace -1)) \n(str.substr _arg_0 (+ firstSpace 1) (- secondSpace (+ firstSpace 1)))\n(ite (and (> thirdSpace -1) (> secondSpace -1)) \n(str.substr _arg_0 (+ firstSpace 1) (- thirdSpace (+ firstSpace 1))) \"\"))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \" \" 0)) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \" \" 0)))) \" \" 0)))))",
      "(define-fun f (_arg_0 String) String\n(let ((first_space (str.indexof _arg_0 \" \" 0)) \n      (last_space (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))\n  (str.substr _arg_0 (+ first_space 1) (- last_space first_space 1))))",
      "(define-fun f (_arg_0 String) String\n(let ((first_space (str.indexof _arg_0 \" \" 0)) (second_space (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))\n  (ite (= first_space -1)\n    \"\"\n    (str.substr _arg_0 (+ 1 first_space) (- (- second_space first_space) 1)))))",
      "(define-fun f (_arg_0 String) String\n(let ((first_space (str.indexof _arg_0 \" \" 0)) (last_space (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))\n  (ite (= first_space -1) \"\" (str.substr _arg_0 (+ first_space 1) (- last_space first_space 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))",
      "(define-fun f (_arg_0 String) String\n(let ((mid (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))) \" \" 0) 2)))))\n    (str.substr mid 1 (- (str.len mid) 1))))",
      "(define-fun f (_arg_0 String) String\n(let ((middle (str.substr _arg_0 (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))) (- (str.len _arg_0) (+ (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))) (str.len (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))) 1))) 1))))))\n  (ite (= (str.indexof middle \" \" 0) -1) middle (str.substr middle 0 (str.indexof middle \" \" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(let ((firstSpace (str.indexof _arg_0 \" \" 0))\n      (lastSpace (str.indexof _arg_0 \" \" (+ firstSpace 1))))\n  (ite (= lastSpace -1)\n       \"\"\n       (str.substr _arg_0 (+ firstSpace 1) (- lastSpace firstSpace 1)))))"
    ],
    "time_ms": 817.118,
    "constants": [
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        2,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        2,
        " "
      ],
      [
        0,
        1,
        2,
        " "
      ],
      [
        0,
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      2,
      " ",
      -1
    ]
  },
  "initials_small.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (- (str.len name) (+ 1 (str.indexof name \" \" 0)))) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(let ((first (str.at name 0))\n      (last (str.at name (+ 1 (str.indexof name \" \" 0)))))\n  (str.++ (str.++ first \".\") (str.++ last \".\"))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (- (str.len name) (+ 1 (str.indexof name \" \" 0)))) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (- (str.len name) (+ 1 (str.indexof name \" \" 0)))) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at (str.substr name (+ 1 (str.indexof name \" \" 0)) (str.len name)) 0) \".\"))"
    ],
    "time_ms": 279.711,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "stackoverflow5.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))"
    ],
    "time_ms": 767.517,
    "constants": [
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ]
    ],
    "all_constants": [
      0,
      "="
    ]
  },
  "extract-word-that-begins-with-specific-character.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) 1) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) 0) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) 0) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) 0) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) 0) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) 0) \" \" 0))))"
    ],
    "time_ms": 773.99,
    "constants": [
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "_"
    ]
  },
  "35744094.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"http=//www.apple.com/uk/mac\" \"mac\") \"https=//www.microsoft.com/en-gb/windows\" \"windows\") \"https=//www.microsoft.com/\" \"microsoft\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 7)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" 7)))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"http=//www.apple.com/uk/mac\" \"mac\") \"https=//www.microsoft.com/en-gb/windows\" \"windows\") \"https=//www.microsoft.com/\" \"microsoft\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 2) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 2) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"http=//www.apple.com/uk/mac\" \"mac\") \"https=//www.microsoft.com/en-gb/windows\" \"windows\") \"https=//www.microsoft.com/\" \"microsoft\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"http=//www.apple.com/uk/mac\" \"mac\") \"https=//www.microsoft.com/en-gb/windows\" \"windows\") \"https=//www.microsoft.com/\" \"microsoft\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 2)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" 2)))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"https=//www.apple.com/uk/mac\" \"mac\") \"https=//www.microsoft.com/en-gb/windows\" \"windows\") \"https=//www.microsoft.com/\" \"microsoft\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 7)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" 7)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 2)) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \"/\" 2)))))"
    ],
    "time_ms": 957.194,
    "constants": [
      [
        "https=//www.microsoft.com/",
        "https=//www.microsoft.com/en-gb/windows",
        "windows",
        "mac",
        "http=//www.apple.com/uk/mac",
        "microsoft"
      ],
      [
        1,
        "/",
        7
      ],
      [
        "https=//www.microsoft.com/",
        "https=//www.microsoft.com/en-gb/windows",
        "windows",
        "mac",
        "http=//www.apple.com/uk/mac",
        "microsoft"
      ],
      [
        "/",
        2,
        1
      ],
      [
        "https=//www.microsoft.com/",
        "https=//www.microsoft.com/en-gb/windows",
        "windows",
        "mac",
        "http=//www.apple.com/uk/mac",
        "microsoft"
      ],
      [
        "https=//www.microsoft.com/",
        "https=//www.microsoft.com/en-gb/windows",
        "windows",
        "mac",
        "http=//www.apple.com/uk/mac",
        "microsoft"
      ],
      [
        1,
        2,
        "/"
      ],
      [
        "https=//www.microsoft.com/",
        "https=//www.microsoft.com/en-gb/windows",
        "windows",
        "https=//www.apple.com/uk/mac",
        "mac",
        "microsoft"
      ],
      [
        1,
        "/",
        7
      ],
      [
        1,
        2,
        "/"
      ]
    ],
    "all_constants": [
      "https=//www.microsoft.com/",
      1,
      "https=//www.microsoft.com/en-gb/windows",
      "/",
      "windows",
      2,
      7,
      "https=//www.apple.com/uk/mac",
      "mac",
      "http=//www.apple.com/uk/mac",
      "microsoft"
    ]
  },
  "get-last-line-in-cell.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"/n\")) (- (str.len _arg_0) (+ 1 (str.rindexof _arg_0 \"/n\")))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))"
    ],
    "time_ms": 586.421,
    "constants": [
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ]
    ],
    "all_constants": [
      1,
      "/n"
    ]
  },
  "31753108.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 1) 1) (+ (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 1) 1)) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (- (str.indexof _arg_0 \" \" 2) (str.indexof _arg_0 \" \" 1)))))"
    ],
    "time_ms": 753.091,
    "constants": [
      [
        0,
        1,
        2,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        2,
        " "
      ],
      [
        1,
        2,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        2,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      " "
    ]
  },
  "exceljet4.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"//\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 3))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"https=//\" \"\") \"ftp=//\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\" 0) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"://\" 0) 3))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"https=//\" \"\") \"ftp=//\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"//\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\" 0) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"://\" 0) 3))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"//\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\" 0) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"://\" 0) 3))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\" 0) 3) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"://\" 0) 3))))"
    ],
    "time_ms": 28.979,
    "constants": [
      [
        0,
        2,
        "//"
      ],
      [
        0,
        "/",
        2,
        3
      ],
      [
        "",
        "https=//",
        "ftp=//"
      ],
      [
        0,
        3,
        "://"
      ],
      [
        "",
        "https=//",
        "ftp=//"
      ],
      [
        0,
        2,
        "//"
      ],
      [
        0,
        3,
        "://"
      ],
      [
        0,
        2,
        "//"
      ],
      [
        0,
        3,
        "://"
      ],
      [
        0,
        3,
        "://"
      ]
    ],
    "all_constants": [
      0,
      "/",
      2,
      3,
      "",
      "https=//",
      "//",
      "ftp=//",
      "://"
    ]
  },
  "44789427.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(if (= _arg_1 1)\n    (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1) \n     (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) \n     (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1)\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1) \n     (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) \n     (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0)) (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(ite (= _arg_1 1)\n     (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" 0))\n     (str.substr _arg_0 (+ (str.indexof _arg_0 \"-\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"-\" 0) 1)))))"
    ],
    "time_ms": 181.444,
    "constants": [
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ]
    ],
    "all_constants": [
      0,
      1,
      "-"
    ]
  },
  "stackoverflow4.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \")"
    ],
    "time_ms": 850.108,
    "constants": [
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ]
    ],
    "all_constants": [
      "<",
      ">",
      " ",
      ","
    ]
  },
  "stackoverflow6.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))"
    ],
    "time_ms": 723.53,
    "constants": [
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ]
    ],
    "all_constants": [
      0,
      1,
      "="
    ]
  },
  "univ_4-long.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col1 (str.indexof col1 \",\" 0) (str.len col1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col1 (str.indexof col1 \",\" 0) (- (str.len col1) (str.indexof col1 \",\" 0))) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col1 (str.indexof col1 \",\" 0) (str.len col1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col1 (str.indexof col1 \",\" 0) (+ (str.indexof col1 \",\" (+ (str.indexof col1 \",\" 0) 1)) 1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col1 (str.indexof col1 \",\" 0) (str.len col1)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))"
    ],
    "time_ms": 871.092,
    "constants": [
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        ", USA"
      ]
    ],
    "all_constants": [
      0,
      ", USA",
      1,
      ","
    ]
  },
  "phone-5-long.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.to.int (str.substr name 1 3))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))"
    ],
    "time_ms": 726.786,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        1,
        3
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      3
    ]
  },
  "phone-5-short.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))"
    ],
    "time_ms": 854.359,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "11604909.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \".\" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.indexof _arg_0 \" \" 0) 1)) (+ 2 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \".\" (- (str.indexof _arg_0 \" \" 0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) \".\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 3))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) \".\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) (+ 3 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \" \" 1)) \".\" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 3))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) (+ 2 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) 1)))"
    ],
    "time_ms": 136.103,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        2,
        " ",
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        3,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        3,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        1,
        3,
        "."
      ],
      [
        1,
        2,
        " ",
        "."
      ],
      [
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      3,
      " ",
      "."
    ]
  },
  "phone-9-long.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\")",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))"
    ],
    "time_ms": 159.248,
    "constants": [
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "-",
      "",
      "+",
      " ",
      "."
    ]
  },
  "univ_4_short.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.replace col1 col2 \" \") \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col2 0 (str.indexof col2 \",\" 0)) \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ (str.substr col1 (str.indexof col1 \",\" 0) (+ (str.len col2) 1)) \", USA\"))"
    ],
    "time_ms": 404.203,
    "constants": [
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        ", USA",
        " "
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        ", USA"
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        ", USA",
        ","
      ],
      [
        0,
        1,
        ", USA",
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      ", USA",
      " ",
      ","
    ]
  },
  "phone-10-long.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8))))"
    ],
    "time_ms": 104.746,
    "constants": [
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ]
    ],
    "all_constants": [
      0,
      3,
      4,
      5,
      7,
      8,
      ")",
      "("
    ]
  },
  "phone-9.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))"
    ],
    "time_ms": 919.67,
    "constants": [
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "-",
      " ",
      "."
    ]
  },
  "clean-and-reformat-telephone-numbers.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))"
    ],
    "time_ms": 261.41,
    "constants": [
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "-",
      "",
      " ",
      "."
    ]
  },
  "stackoverflow7.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))"
    ],
    "time_ms": 260.278,
    "constants": [
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ]
    ],
    "all_constants": [
      ""
    ]
  },
  "univ_4-long-repeat.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" col1 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))"
    ],
    "time_ms": 913.431,
    "constants": [
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA"
      ],
      [
        ", USA",
        ", "
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ]
    ],
    "all_constants": [
      ", USA",
      ", "
    ]
  },
  "strip-numeric-characters-from-cell.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"0\" \"\")\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\")))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\")))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"0\" \"\")\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"0\" \"\")\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"0\" \"\")\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\"))"
    ],
    "time_ms": 892.042,
    "constants": [
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ]
    ],
    "all_constants": [
      "",
      "3",
      "8",
      "7",
      "5",
      "4",
      "0",
      "2",
      "1",
      "6",
      "9"
    ]
  },
  "36462127.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\")) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"/\")) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))"
    ],
    "time_ms": 734.65,
    "constants": [
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        "/",
        1
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        "/",
        1
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      1,
      "/"
    ]
  },
  "exceljet3.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))"
    ],
    "time_ms": 797.044,
    "constants": [
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ]
    ],
    "all_constants": [
      0,
      1,
      "="
    ]
  },
  "stackoverflow3.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"9\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"9\" 0)))))"
    ],
    "time_ms": 259.142,
    "constants": [
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ],
      [
        0,
        1,
        "9"
      ]
    ],
    "all_constants": [
      0,
      1,
      "9"
    ]
  },
  "univ_5-long.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \", \" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \", \" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))"
    ],
    "time_ms": 421.136,
    "constants": [
      [
        0,
        ","
      ],
      [
        0,
        ", "
      ],
      [
        0,
        ","
      ],
      [
        0,
        ", "
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ]
    ],
    "all_constants": [
      0,
      ", ",
      ","
    ]
  },
  "exceljet2.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))) )",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))"
    ],
    "time_ms": 975.981,
    "constants": [
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        0,
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      "."
    ]
  },
  "univ_6.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))"
    ],
    "time_ms": 926.935,
    "constants": [
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ]
    ],
    "all_constants": [
      ", USA"
    ]
  },
  "stackoverflow2.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))"
    ],
    "time_ms": 247.12,
    "constants": [
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ]
    ],
    "all_constants": [
      "",
      " japan"
    ]
  },
  "phone-6-long-repeat.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 1 (str.indexof name \" \" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)"
    ],
    "time_ms": 493.015,
    "constants": [
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      3
    ]
  },
  "25239569.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(let ((temp (str.replace _arg_0 \"BRD\" \"Branding\")))\n  (let ((temp2 (str.replace temp \"LDS\" \"Leads\")))\n    (str.replace temp2 \"DRS\" \"Direct Response\"))))",
      "(define-fun f (_arg_0 String) String\n(let ((temp (str.replace _arg_0 \"BRD\" \"Branding\")))\n  (let ((temp2 (str.replace temp \"LDS\" \"Leads\")))\n    (str.replace temp2 \"DRS\" \"Direct Response\"))))",
      "(define-fun f (_arg_0 String) String\n(let ((replaced (str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\")))\n  replaced))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(let ((_temp_1 (str.replace _arg_0 \"BRD\" \"Branding\")))\n  (let ((_temp_2 (str.replace _temp_1 \"LDS\" \"Leads\")))\n    (str.replace _temp_2 \"DRS\" \"Direct Response\"))))",
      "(define-fun f (_arg_0 String) String\n(let ((replaced (str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\")))\n  replaced))",
      "(define-fun f (_arg_0 String) String\n(let ((replaced (str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"LDS\" \"Leads\") \"DRS\" \"Direct Response\")))\n  replaced))",
      "(define-fun f (_arg_0 String) String\n(let ((temp (str.replace _arg_0 \"BRD\" \"Branding\")))\n  (let ((temp2 (str.replace temp \"LDS\" \"Leads\")))\n    (str.replace temp2 \"DRS\" \"Direct Response\"))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))"
    ],
    "time_ms": 942.443,
    "constants": [
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ]
    ],
    "all_constants": [
      "BRD",
      "DRS",
      "LDS",
      "Direct Response",
      "Leads",
      "Branding"
    ]
  },
  "univ_5_short.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 0 (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 0 (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (- (str.len col2) (str.indexof col2 \",\" 0))))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 0 (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 0 (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 0 (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 0 (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 0 (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))"
    ],
    "time_ms": 40.813,
    "constants": [
      [
        0
      ],
      [
        0
      ],
      [
        0,
        ","
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ]
    ],
    "all_constants": [
      0,
      ","
    ]
  },
  "remove-text-by-position.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" 0)))))"
    ],
    "time_ms": 925.053,
    "constants": [
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        0,
        1,
        "/"
      ]
    ],
    "all_constants": [
      0,
      1,
      "/"
    ]
  },
  "univ_6-long-repeat.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", \" \"USA\"))"
    ],
    "time_ms": 144.804,
    "constants": [
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        "USA",
        ", "
      ]
    ],
    "all_constants": [
      ", USA",
      "USA",
      ", "
    ]
  },
  "univ_4.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))",
      "(define-fun f (col1 String col2 String) String\n(str.++ col2 \", USA\"))"
    ],
    "time_ms": 710.903,
    "constants": [
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ],
      [
        ", USA"
      ]
    ],
    "all_constants": [
      ", USA"
    ]
  },
  "phone-10-long-repeat.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 (+ 1 (str.indexof name \" \" 0))) \"(\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 3) \")\" (str.substr name (+ 1 (+ 3 (str.indexof name \" \" 0))) (- (str.len name) (+ 1 (+ 3 (str.indexof name \" \" 0))))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 (+ 1 (str.indexof name \" \" 0))) \"(\" (str.substr name (+ 1 (str.indexof name \" \" 0)) (+ 1 (str.indexof name \"-\" 0))) \")\" (str.substr name (- (+ 1 (str.indexof name \" \" 0)) 1) (str.len name))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 (+ (str.indexof name \" \" 0) 1)) \"(\" (str.substr name (+ (str.indexof name \" \" 0) 1) 3) \")\" (str.substr name (+ (str.indexof name \" \" 0) 4) (- (str.len name) (+ (str.indexof name \" \" 0) 4)) ))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8))))"
    ],
    "time_ms": 940.95,
    "constants": [
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ],
      [
        0,
        1,
        3,
        ")",
        "(",
        " "
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ],
      [
        0,
        1,
        "-",
        ")",
        "(",
        " "
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ],
      [
        0,
        1,
        3,
        4,
        ")",
        "(",
        " "
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ]
    ],
    "all_constants": [
      0,
      1,
      "-",
      3,
      4,
      5,
      8,
      ")",
      "(",
      " "
    ]
  },
  "univ_5.sl": {
    "solutions": [
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col1 (str.indexof col1 \",\" 0) (str.len col1)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col1 (str.indexof col1 \", \" 0) (- (str.len col1) (str.indexof col1 \", \" 0))))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col1 (str.indexof col1 \", \" 0) (- (str.len col1) (str.indexof col1 \", \" 0))))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (str.len col2)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col1 (str.indexof col1 \",\" 0) (str.len col1)))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col2 (str.indexof col2 \",\" 0) (+ 1 (str.len col2))))",
      "(define-fun f (col1 String col2 String) String\n(str.substr col1 (str.indexof col1 \", \" 0) (str.len col1)))"
    ],
    "time_ms": 237.045,
    "constants": [
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        ", "
      ],
      [
        0,
        ", "
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        ", "
      ]
    ],
    "all_constants": [
      0,
      1,
      ", ",
      ","
    ]
  },
  "stackoverflow1.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))"
    ],
    "time_ms": 533.583,
    "constants": [
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ]
    ],
    "all_constants": [
      "",
      " Inc"
    ]
  },
  "exceljet1.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"_\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"_\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\") 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"_\") 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"_\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"_\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ 1 (str.indexof _arg_1 \"_\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"_\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"_\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"_\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))"
    ],
    "time_ms": 667.097,
    "constants": [
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "@"
      ]
    ],
    "all_constants": [
      0,
      1,
      "_",
      "@"
    ]
  },
  "initials-long-repeat.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ \n  (str.substr name 0 1) \n  \".\" \n  (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)\n  \".\"\n))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))",
      "(define-fun f (name String) String\n(str.++ (str.at name 0) \".\" (str.at name (+ 1 (str.indexof name \" \" 0))))"
    ],
    "time_ms": 310.371,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "find-nth-occurrence-of-character.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (- _arg_1 1)))"
    ],
    "time_ms": 431.873,
    "constants": [
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        "_"
      ],
      [
        1,
        "_"
      ]
    ],
    "all_constants": [
      1,
      "_"
    ]
  },
  "extract-word-containing-specific-text.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \".com\" 0) 4)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \".\" 0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \".\" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof _arg_0 \".\" (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \".com\" 0) 4)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof _arg_0 \".\" (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \".com\" 0) 4)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof _arg_0 \".\" (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof _arg_0 \".\" (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \".\" 0) 1)))"
    ],
    "time_ms": 946.062,
    "constants": [
      [
        0,
        4,
        "_",
        ".com"
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        4,
        "_",
        ".com"
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        4,
        "_",
        ".com"
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ],
      [
        0,
        1,
        "_",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      "_",
      4,
      ".com",
      "."
    ]
  },
  "extract-nth-word-from-text-string.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\\n\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.replace _arg_0 \" \" \"\") (- _arg_1 1)))"
    ],
    "time_ms": 328.786,
    "constants": [
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        1,
        " ",
        "\n"
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ]
    ],
    "all_constants": [
      "",
      1,
      " ",
      "\n"
    ]
  }
}