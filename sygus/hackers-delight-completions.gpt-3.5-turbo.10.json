{
  "hd-25.sl": {
    "completions": [
      "(bvlshr (bvmul x y) (_ bv32 64))",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) (BitVec 64) (bvudiv (bvmul x y) #x0000000000000002))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)\n  (bvudiv (bvmul x y) #x0000000000000002))",
      "(ite (>= (bvmul x y) #x8000000000000000) (bvlshr (bvmul x y) #x0000000000000040) #x0000000000000000)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)\n  (bvlshr (bvmul x y) (_ bv32 64)))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) (bvudiv (bvmul x y) #x0000000000000002))",
      "(bvlshr (bvmul x y) (_ bv32 64))",
      "(bvudiv (bvmul x y) #x0000000000000002)",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) (BitVec 64) (bvudiv (bvmul x y) #x0000000000000002))",
      "(bvudiv (bvmul x y) #x0000000000000002)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvlshr (bvmul x y) (_ bv32 64)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvmul x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvmul x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (>= (bvmul x y) \\#x8000000000000000) (bvlshr (bvmul x y) \\#x0000000000000040) \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvlshr (bvmul x y) (_ bv32 64)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvmul x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvlshr (bvmul x y) (_ bv32 64)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvmul x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvmul x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvmul x y) \\#x0000000000000002))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 2167.317
  },
  "hd-24.sl": {
    "completions": [
      "(bvshl x (bvadd #x0000000000000001 (bvashr x #x0000000000000001)))",
      "(ite (<= x #x0000000000000001)\n     #x0000000000000001\n     (bvshl #x0000000000000001\n            (bvclz x)))",
      "(ite (>= x #x0000000000000020) #x0000000000000020 (bvshl #x0000000000000001 (bvclz (bvsub x #x0000000000000001))))",
      "(ite (<= x #x0000000000000001) #x0000000000000000\n     (ite (<= x #x0000000000000002) #x0000000000000002\n          (bvshl #x0000000000000001 (bvadd (bvclz x) #x0000000000000001))))",
      "(ite (bvuge x #x00000000000000000000000000000000000000000000000000000000000000010) #x00000000000000000000000000000000000000000000000000000000000000020 (ite (bvuge x #x00000000000000000000000000000000000000000000000000000000000000008) #x00000000000000000000000000000000000000000000000000000000000000010 #x000000000000000000000000000000000000000000000000000000000000",
      "(ite (<= x #x0000000000000002) #x0000000000000002 (bvshl #x0000000000000001 (bvadd (bvclz x) #x0000000000000001)))",
      "(ite (<= x #x0000000000000002) #x0000000000000002 (bvshl #x0000000000000001 (bvclz (bvsub x #x0000000000000001))))",
      "(ite (<= x #x0000000000000002) #x0000000000000002 (bvshl #x0000000000000001 (bvadd (bvclz x) #x0000000000000001)))",
      "(bvshl x (bvadd #x0000000000000001 (bvclz x)))",
      "(ite (>= x #x0000000000000020) #x0000000000000020 (bvshl #x0000000000000001 (bvclz (bvsub x #x0000000000000001))))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvshl x (bvadd \\#x0000000000000001 (bvashr x \\#x0000000000000001))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (<= x \\#x0000000000000001) \\#x0000000000000001 (bvshl \\#x0000000000000001 (bvclz x))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (>= x \\#x0000000000000020) \\#x0000000000000020 (bvshl \\#x0000000000000001 (bvclz (bvsub x \\#x0000000000000001)))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (<= x \\#x0000000000000001) \\#x0000000000000000 (ite (<= x \\#x0000000000000002) \\#x0000000000000002 (bvshl \\#x0000000000000001 (bvadd (bvclz x) \\#x0000000000000001)))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvuge x \\#x00000000000000000000000000000000000000000000000000000000000000010) \\#x00000000000000000000000000000000000000000000000000000000000000020 (ite (bvuge x \\#x00000000000000000000000000000000000000000000000000000000000000008) \\#x00000000000000000000000000000000000000000000000000000000000000010 \\#x000000000000000000000000000000000000000000000000000000000000)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (<= x \\#x0000000000000002) \\#x0000000000000002 (bvshl \\#x0000000000000001 (bvadd (bvclz x) \\#x0000000000000001))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (<= x \\#x0000000000000002) \\#x0000000000000002 (bvshl \\#x0000000000000001 (bvclz (bvsub x \\#x0000000000000001)))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (<= x \\#x0000000000000002) \\#x0000000000000002 (bvshl \\#x0000000000000001 (bvadd (bvclz x) \\#x0000000000000001))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvshl x (bvadd \\#x0000000000000001 (bvclz x))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (>= x \\#x0000000000000020) \\#x0000000000000020 (bvshl \\#x0000000000000001 (bvclz (bvsub x \\#x0000000000000001)))))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1356.601
  },
  "hd-09.sl": {
    "completions": [
      "(bvabs x)",
      "(ite (bvsge x #x0000000000000000) x (bvneg x))",
      "(bvabs x)",
      "(bvabs x))",
      "(bvabs x)",
      "(bvand x (bvnot (bvneg x)))",
      "(bvite (bvslt x #x0000000000000000) (bvneg x) x))",
      "(bvand x (bvnot (bvslt x #x0000000000000000)))",
      "(bvabs x)",
      "(bvabs x)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvabs x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvsge x \\#x0000000000000000) x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvabs x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvabs x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvabs x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvnot (bvneg x))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvite (bvslt x \\#x0000000000000000) (bvneg x) x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvnot (bvslt x \\#x0000000000000000))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvabs x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvabs x))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1819.961
  },
  "hd-26.sl": {
    "completions": [
      "(bvadd x (bvsub (bvshl k (bvsdiv (bvadd x (bvsub k #x0000000000000001)) k)) x))",
      "(bvadd x (bvsub k (bvurem x k)))",
      "(bvadd x (bvsub k (bvurem x k)))",
      "(bvadd x (bvsub k (bvurem x k)))",
      "(bvadd x (bvsub k (bvurem x k)))",
      "(bvadd x (bvsub (bvadd k (bvneg (bvurem x k))) k))",
      "(bvadd x (bvsub (bvshl (bvadd x k) #x0000000000000001) #x0000000000000001))",
      "(bvadd x (bvlshr (bvsub k (bvadd x (bvsub k #x0000000000000001))) #x0000000000000001))",
      "(bvadd x (bvsub k (bvurem x k)))",
      "(bvadd x (bvsub k (bvurem x k)))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub (bvshl k (bvsdiv (bvadd x (bvsub k \\#x0000000000000001)) k)) x)))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub k (bvurem x k))))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub k (bvurem x k))))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub k (bvurem x k))))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub k (bvurem x k))))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub (bvadd k (bvneg (bvurem x k))) k)))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub (bvshl (bvadd x k) \\#x0000000000000001) \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvlshr (bvsub k (bvadd x (bvsub k \\#x0000000000000001))) \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub k (bvurem x k))))",
      "(define-fun f (x (BitVec 64) k (BitVec 64)) (BitVec 64) (bvadd x (bvsub k (bvurem x k))))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1223.5900000000001
  },
  "hd-27.sl": {
    "completions": [
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) (BitVec 64) (ite (= x #x0000000000000000) #x0000000000000000 x))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) x)",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) (BitVec 64) x)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)\n  x)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)\n  x)",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) (BitVec 64) (ite (= x y) x #b0))",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) (BitVec 64) (ite (= x #x0000000000000000) #x0000000000000000 (ite (= y #x0000000000000000) #x0000000000000000 (ite (= x y) x #x0000000000000000))))",
      "(bvand x y)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)\n  (ite (= x #x0000000000000000) #x0000000000000000\n    (ite (= y #x0000000000000000) #x0000000000000000\n      (ite (= x y) x\n        (ite (= y #x0000000000000001) #x0000000000000000\n          (ite (= x #x0000000000000064) #x0000000000000064\n            (ite (= y #x0000000000000064) #x0000000000000064\n              (ite (= y #x000000000000000a) #x0000000000000000\n                (ite (= x #x000000000000000a) #x0000000000000000\n                  (ite (= x #x0000000000002710) #x0000000000000064\n                    (ite (= y #x0000000000000064) #x0000000000000064\n                      (ite (= y #x0000000000000001) #x0000000000000000\n                        (ite (= x #x0000000000000001) #x0000000000000000\n                          (ite (= x y) x))))))))))))))",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) (BitVec 64)\n  (ite (= x y) x\n    0))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (= x \\#x0000000000000000) \\#x0000000000000000 x))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (= x y) x \\#b0))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (= x \\#x0000000000000000) \\#x0000000000000000 (ite (= y \\#x0000000000000000) \\#x0000000000000000 (ite (= x y) x \\#x0000000000000000))))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvand x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (= x \\#x0000000000000000) \\#x0000000000000000 (ite (= y \\#x0000000000000000) \\#x0000000000000000 (ite (= x y) x (ite (= y \\#x0000000000000001) \\#x0000000000000000 (ite (= x \\#x0000000000000064) \\#x0000000000000064 (ite (= y \\#x0000000000000064) \\#x0000000000000064 (ite (= y \\#x000000000000000a) \\#x0000000000000000 (ite (= x \\#x000000000000000a) \\#x0000000000000000 (ite (= x \\#x0000000000002710) \\#x0000000000000064 (ite (= y \\#x0000000000000064) \\#x0000000000000064 (ite (= y \\#x0000000000000001) \\#x0000000000000000 (ite (= x \\#x0000000000000001) \\#x0000000000000000 (ite (= x y) x))))))))))))))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (= x y) x 0))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64,
        0
      ]
    ],
    "all_constants": [
      64,
      0
    ],
    "time_diff_ms": 1305.033
  },
  "hd-08.sl": {
    "completions": [
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvnot (bvsub x #x0000000000000001)))",
      "(bvand x (bvneg (bvsub x #x0000000000000001)))",
      "(bvand x (bvneg (bvsub x #x0000000000000001)))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvneg (bvsub x #x0000000000000001)))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvnot (bvsub x \\#x0000000000000001))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg (bvsub x \\#x0000000000000001))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg (bvsub x \\#x0000000000000001))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg (bvsub x \\#x0000000000000001))))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1804.27
  },
  "hd-23.sl": {
    "completions": [
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvpopcount x))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvpopcount x))",
      "(ite (bvult x #x0000000000000001) #x0000000000000000 (ite (bvuge x #x000000000000003f) #x0000000000000020 (ite (bvuge x #x000000000000003e) #x000000000000001f (ite (bvuge x #x000000000000001f) #x000000000000001e (ite (bvuge x #x000000000000000f) #x0000000000000001f (ite (bvuge x #x000000000000000e) #x0000000000000001e (ite (bvuge x #x000000000000000d) #x0000000000000001d (ite (bvuge x #x000000000000000c) #x0000000000000001c (ite (bvuge x #x000000000000",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvpopcount x))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64)\n    (bvpopcnt x))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvpopcount x))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvpopcount x))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvpopcount x))",
      "(bvpopcount x)",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvpopcnt x))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcount x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcount x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvult x \\#x0000000000000001) \\#x0000000000000000 (ite (bvuge x \\#x000000000000003f) \\#x0000000000000020 (ite (bvuge x \\#x000000000000003e) \\#x000000000000001f (ite (bvuge x \\#x000000000000001f) \\#x000000000000001e (ite (bvuge x \\#x000000000000000f) \\#x0000000000000001f (ite (bvuge x \\#x000000000000000e) \\#x0000000000000001e (ite (bvuge x \\#x000000000000000d) \\#x0000000000000001d (ite (bvuge x \\#x000000000000000c) \\#x0000000000000001c (ite (bvuge x \\#x000000000000)))))))))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcount x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcnt x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcount x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcount x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcount x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcount x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvpopcnt x))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 2233.61
  },
  "hd-22.sl": {
    "completions": [
      "(bvurem x #x0000000000000002)",
      "(bvurem x #x0000000000000002)",
      "(bvurem x #x0000000000000002)",
      "(bvurem x #x0000000000000002)",
      "(bvurem x #x0000000000000002)",
      "(bvurem x #x0000000000000002)",
      "(bvxor x #x0000000000000000)",
      "(bvand x #x0000000000000001)",
      "(bvand x #x5555555555555555)",
      "(bvand x #x5555555555555555)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvurem x \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvurem x \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvurem x \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvurem x \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvurem x \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvurem x \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvxor x \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x \\#x5555555555555555))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x \\#x5555555555555555))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1825.117
  },
  "hd-18.sl": {
    "completions": [
      "(ite (and (= x #x0000000000000001) (not (= x #x0000000000000000))) true false)",
      "(= x #x0000000000000001))",
      "(ite (and (= x (bvshl #x0000000000000001 x)) (not (= x #x0000000000000000))) true false)",
      "(ite (= x #x0000000000000001) true false)",
      "(= x #x0000000000000001))",
      "(ite (bvuge x #x0000000000000001) false (= x (bvshl #x0000000000000001 x)))",
      "((= (bvand x (bvsub x #x0000000000000001)) #x0000000000000000))",
      "(and (bvult x #x0000000000000002) (not (= x #x0000000000000000)))",
      "(ite (= x #x0000000000000001) true false)",
      "(ite (= x #x0000000000000001) true false)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) Bool (ite (and (= x \\#x0000000000000001) (not (= x \\#x0000000000000000))) true false))",
      "(define-fun f (x (BitVec 64)) Bool (= x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) Bool (ite (and (= x (bvshl \\#x0000000000000001 x)) (not (= x \\#x0000000000000000))) true false))",
      "(define-fun f (x (BitVec 64)) Bool (ite (= x \\#x0000000000000001) true false))",
      "(define-fun f (x (BitVec 64)) Bool (= x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) Bool (ite (bvuge x \\#x0000000000000001) false (= x (bvshl \\#x0000000000000001 x))))",
      "(define-fun f (x (BitVec 64)) Bool ((= (bvand x (bvsub x \\#x0000000000000001)) \\#x0000000000000000)))",
      "(define-fun f (x (BitVec 64)) Bool (and (bvult x \\#x0000000000000002) (not (= x \\#x0000000000000000))))",
      "(define-fun f (x (BitVec 64)) Bool (ite (= x \\#x0000000000000001) true false))",
      "(define-fun f (x (BitVec 64)) Bool (ite (= x \\#x0000000000000001) true false))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 2139.2709999999997
  },
  "hd-20.sl": {
    "completions": [
      "(ite (bvugt x #x0000000000000000) (bvadd x #x0000000000000001) #x0000000000000001)",
      "(ite (bvugt x #x0000000000000000)\n     (bvadd x (bvand (bvnot x) (bvadd x #x0000000000000001)))\n     x)",
      "(ite (bvugt x #x0000000000000000) (bvadd x #x0000000000000001) #x0000000000000001))",
      "(ite (bvugt x #x0000000000000000)\n     (bvadd x (bvnot (bvsub (bvnot x) (bvand x (bvsub x #x0000000000000001)))))\n     #x0000000000000000)",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvadd x #x0000000000000001))",
      "(ite (bvugt x #x0000000000000000)\n     (bvadd x (bvnot (bvsub x #x0000000000000001)))\n     x)",
      "(ite (bvugt x #x0000000000000000) (bvadd x #x0000000000000001) #x0000000000000000)",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvadd x #x0000000000000001))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvadd x #x0000000000000001))",
      "(ite (bvugt x #x0000000000000000) (bvadd x #x0000000000000001) #x0000000000000000)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvugt x \\#x0000000000000000) (bvadd x \\#x0000000000000001) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvugt x \\#x0000000000000000) (bvadd x (bvand (bvnot x) (bvadd x \\#x0000000000000001))) x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvugt x \\#x0000000000000000) (bvadd x \\#x0000000000000001) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvugt x \\#x0000000000000000) (bvadd x (bvnot (bvsub (bvnot x) (bvand x (bvsub x \\#x0000000000000001))))) \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvadd x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvugt x \\#x0000000000000000) (bvadd x (bvnot (bvsub x \\#x0000000000000001))) x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvugt x \\#x0000000000000000) (bvadd x \\#x0000000000000001) \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvadd x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvadd x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvugt x \\#x0000000000000000) (bvadd x \\#x0000000000000001) \\#x0000000000000000))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1498.191
  },
  "hd-21.sl": {
    "completions": [
      "(bvand a (bvnot (bvand b c)))",
      "(bvand x (bvnot x))",
      "(bvand a (bvnot (bvand b c)))",
      "(bvand a (bvnot (bvor (bvnot b) c))))",
      "(bvand x (bvnot x))",
      "(bvadd a (ite (= x a) b (ite (= x b) c a)))",
      "(bvand x (bvnot x))",
      "(bvsrem x (+ a b c))",
      "(bvand a (bvnot (bvxor b c))))",
      "(bvand a (bvnot (bvor (bvor b c) (bvor a c))))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvand a (bvnot (bvand b c))))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvand x (bvnot x)))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvand a (bvnot (bvand b c))))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvand a (bvnot (bvor (bvnot b) c))))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvand x (bvnot x)))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvadd a (ite (= x a) b (ite (= x b) c a))))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvand x (bvnot x)))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvsrem x (+ a b c)))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvand a (bvnot (bvxor b c))))",
      "(define-fun f (x (BitVec 64) a (BitVec 64) b (BitVec 64) c (BitVec 64)) (BitVec 64) (bvand a (bvnot (bvor (bvor b c) (bvor a c)))))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1380.297
  },
  "hd-19.sl": {
    "completions": [
      "(ite (= (bvand x m) m) x (bvadd x (bvlshr (bvand x (bvnot m)) k)))",
      "(bvand x (bvnot m))",
      "(ite (bvuge (bvand x m) m) (bvor (bvlshr x k) (bvand x (bvnot m))) x)",
      "(ite (bvuge k #x0000000000000001) (bvlshr (bvlshr x m) k) x)",
      "(ite (bvult (bvand x m) (bvlshr x k)) (bvlshr (bvand x (bvnot m)) k) (bvand (bvlshr x k) m))",
      "(ite (bvult k m) (bvlshr (bvlshr x k) k) (ite (= k m) x (bvshl (bvand x (bvnot (bvshl #x0000000000000001 k))) k)))",
      "(ite (bvuge k #x0000000000000001)\n     (bvlshr (bvlshr x k) k)\n     x)",
      "(ite (bvuge k #x0000000000000001) (bvor (bvlshr x k) (bvand (bvlshr (bvlshr x k) m) m)) x)",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64)\n  x)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) (ite (= (bvand x m) m) x (bvadd x (bvlshr (bvand x (bvnot m)) k))))",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) (bvand x (bvnot m)))",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) (ite (bvuge (bvand x m) m) (bvor (bvlshr x k) (bvand x (bvnot m))) x))",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) (ite (bvuge k \\#x0000000000000001) (bvlshr (bvlshr x m) k) x))",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) (ite (bvult (bvand x m) (bvlshr x k)) (bvlshr (bvand x (bvnot m)) k) (bvand (bvlshr x k) m)))",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) (ite (bvult k m) (bvlshr (bvlshr x k) k) (ite (= k m) x (bvshl (bvand x (bvnot (bvshl \\#x0000000000000001 k))) k))))",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) (ite (bvuge k \\#x0000000000000001) (bvlshr (bvlshr x k) k) x))",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) (ite (bvuge k \\#x0000000000000001) (bvor (bvlshr x k) (bvand (bvlshr (bvlshr x k) m) m)) x))",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) m (BitVec 64) k (BitVec 64)) (BitVec 64) x)"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 426.457
  },
  "hd-07.sl": {
    "completions": [
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 951.284
  },
  "hd-10.sl": {
    "completions": [
      "(= (nlz x) (nlz y))",
      "(= (bvclz x) (bvclz y))",
      "(= (nlz x) (nlz y))",
      "(= (bvclz x) (bvclz y))",
      "(= (bvclz x) (bvclz y))",
      "(= (nlz x) (nlz y))",
      "(= (nlz x) (nlz y))",
      "(= (bvclz x) (bvclz y))",
      "(= (bvclz x) (bvclz y))",
      "(= (nlz x) (nlz y))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (bvclz x) (bvclz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (bvclz x) (bvclz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (bvclz x) (bvclz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (bvclz x) (bvclz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (bvclz x) (bvclz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (nlz x) (nlz y)))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1941.7859999999998
  },
  "hd-11.sl": {
    "completions": [
      "(ite (bvult x y) true false)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult x y))",
      "(ite (bvult x y) true false)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult (bvnl x) (bvnl y)))",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) Bool (bvult (nlz x) (nlz y)))",
      "(ite (bvult x y) true false)",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) Bool (bvult (bvnl x) (bvnl y)))",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) Bool (bvult x y))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult x y))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult x y))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (ite (bvult x y) true false))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (ite (bvult x y) true false))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult (bvnl x) (bvnl y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (ite (bvult x y) true false))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult (bvnl x) (bvnl y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult x y))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 2043.312
  },
  "hd-06.sl": {
    "completions": [
      "(bvadd x #x0000000000000001))",
      "(bvadd x #x0000000000000001))",
      "(bvadd x #x00000000000000000000000000000001))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor x (bvnot (bvsub #x0000000000000001 (bvand x (bvsub x #x0000000000000001))))))",
      "(bvadd x #x0000000000000001))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor x (bvnot (bvsub #x0000000000000001 x))))",
      "(bvior x (bvadd x #x0000000000000001))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvior x (bvadd x (_ bv1 64))))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor x (bvnot (bvsub x #x0000000000000001))))",
      "(ite (= ((_ extract 0 0) x) #b0) (bvadd x #x0000000000000001) x)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvadd x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvadd x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvadd x \\#x00000000000000000000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvor x (bvnot (bvsub \\#x0000000000000001 (bvand x (bvsub x \\#x0000000000000001))))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvadd x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvor x (bvnot (bvsub \\#x0000000000000001 x))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvior x (bvadd x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvior x (bvadd x (_ bv1 64))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvor x (bvnot (bvsub x \\#x0000000000000001))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (= ((_ extract 0 0) x) \\#b0) (bvadd x \\#x0000000000000001) x))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64,
        0
      ]
    ],
    "all_constants": [
      64,
      0
    ],
    "time_diff_ms": 1560.828
  },
  "hd-04.sl": {
    "completions": [
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvand x (bvneg x)))",
      "(ite (= x #x0000000000000000) #x0000000000000000 (bvand x (bvneg x)))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvand x (bvneg x)))",
      "(bvand x (bvneg x))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvand x (bvneg x)))",
      "(ite (bvuge x #x0000000000000001) (bvand x (bvneg x)) x)",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor x (bvneg (bvsub x (_ bv1 64)))))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (= x \\#x0000000000000000) \\#x0000000000000000 (bvand x (bvneg x))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvuge x \\#x0000000000000001) (bvand x (bvneg x)) x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvor x (bvneg (bvsub x (_ bv1 64)))))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1464.7420000000002
  },
  "hd-13.sl": {
    "completions": [
      "(bvnot x)",
      "(bvand x #x0000000000000001)",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (ite (bvslt x #x0000000000000000) #x0000000000000001 #x0000000000000000))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (ite (bvslt x #x0000000000000000) #x0000000000000001 #x0000000000000000))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (ite (= x #x00000000ffffffff) #x0000000000000001 (ite (= x #x0000000000000001) #x0000000000000001 (ite (= x #x0000000000000020) #x0000000000000001 (ite (= x #x5555555555555555) #x0000000000000000 (ite (= x #x7fffffffffffffff) #x0000000000000000 (ite (= x #x0000000000100000) #x0000000000000001 (ite (= x #x0000000000000000) #x0000000000000000 (ite (= x #xffffffffffffffff) #x0000000000000000 (ite (= x #x0000000000000001) #x0000000000000001 (ite (=",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (ite (= x #xffffffffffffffff) #x0000000000000001 #x0000000000000000))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (ite (= x #xffffffffffffffff) #x0000000000000001 #x0000000000000000))",
      "(bvand x #x0000000000000001))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (ite (bvslt x #x0000000000000000) #x0000000000000001 #x0000000000000000))",
      "(bvsdiv x (bvadd x x)))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvnot x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvslt x \\#x0000000000000000) \\#x0000000000000001 \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvslt x \\#x0000000000000000) \\#x0000000000000001 \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (= x \\#x00000000ffffffff) \\#x0000000000000001 (ite (= x \\#x0000000000000001) \\#x0000000000000001 (ite (= x \\#x0000000000000020) \\#x0000000000000001 (ite (= x \\#x5555555555555555) \\#x0000000000000000 (ite (= x \\#x7fffffffffffffff) \\#x0000000000000000 (ite (= x \\#x0000000000100000) \\#x0000000000000001 (ite (= x \\#x0000000000000000) \\#x0000000000000000 (ite (= x \\#xffffffffffffffff) \\#x0000000000000000 (ite (= x \\#x0000000000000001) \\#x0000000000000001 (ite (=))))))))))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (= x \\#xffffffffffffffff) \\#x0000000000000001 \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (= x \\#xffffffffffffffff) \\#x0000000000000001 \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvslt x \\#x0000000000000000) \\#x0000000000000001 \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsdiv x (bvadd x x)))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1255.246
  },
  "hd-12.sl": {
    "completions": [
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult (nlz x) (nlz y)))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult (nlz x) (nlz y)))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult x y))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult x y))",
      "(ite (bvult (bvlshr x (bvnot (nlz x))) (bvlshr y (bvnot (nlz y)))) true false)",
      "(ite (bvult x y) true false)",
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) Bool (bvult (nlz x) (nlz y)))",
      "(= (bvclz x) (bvclz y)))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) Bool (bvult (nlz x) (nlz y)))",
      "(ite (bvult x y) true false)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (ite (bvult (bvlshr x (bvnot (nlz x))) (bvlshr y (bvnot (nlz y)))) true false))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (ite (bvult x y) true false))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (= (bvclz x) (bvclz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (bvult (nlz x) (nlz y)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) Bool (ite (bvult x y) true false))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 2150.208
  },
  "hd-05.sl": {
    "completions": [
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor x (bvsub x #x0000000000000001)))",
      "(bvsub x (bvsub #x0000000000000001 (bvand x (bvneg x))))",
      "(bvor x (bvsub x #x0000000000000001))",
      "(bvsub x (bvsub #x0000000000000001 (bvand x (bvneg x))))",
      "(bvsub x (bvsub (bvnot x) (bvsub (bvnot x) (bvsub (bvnot x) (bvnot (bvsub x #b1))))))",
      "(bvsub x (bvsub #x0000000000000001 (bvor x (bvsub x (bvand x (bvneg x))))))",
      "(bvsub x (bvsub (bvnot x) (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvor x (bvsub x #x0000000000000001)))",
      "(bvsub x (bvsub #x0000000000000001 (bvand x (bvneg x))))",
      "(bvsub x (bvsub #x0000000000000001 (bvand x (bvneg x))))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvor x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub x (bvsub \\#x0000000000000001 (bvand x (bvneg x)))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvor x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub x (bvsub \\#x0000000000000001 (bvand x (bvneg x)))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub x (bvsub (bvnot x) (bvsub (bvnot x) (bvsub (bvnot x) (bvnot (bvsub x \\#b1)))))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub x (bvsub \\#x0000000000000001 (bvor x (bvsub x (bvand x (bvneg x)))))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub x (bvsub (bvnot x) (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x (bvsub x))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvor x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub x (bvsub \\#x0000000000000001 (bvand x (bvneg x)))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub x (bvsub \\#x0000000000000001 (bvand x (bvneg x)))))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1235.083
  },
  "hd-16.sl": {
    "completions": [
      "(define-fun f ((x (BitVec 64)) (y (BitVec 64))) (BitVec 64) (bvand x y))",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)\n  y)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) x)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)\n  x)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) x)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64)\n  x)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) x)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) (bvand x y))",
      "(bvand x y)",
      "(define-fun f ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) x)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvand x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) y)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvand x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvand x y))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) x)"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1133.201
  },
  "hd-01.sl": {
    "completions": [
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(ite (bvugt x #x0000000000000000) (bvand x (bvsub x #x0000000000000001)) #x0000000000000000)",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(bvand x (bvsub x #x0000000000000001))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (bvugt x \\#x0000000000000000) (bvand x (bvsub x \\#x0000000000000001)) \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 739.034
  },
  "hd-17.sl": {
    "completions": [
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvand x (bvsub x (bvnot x))))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvand x (bvsub x (_ bv1 64))))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64)\n  (bvand x (bvsub x (_ bv1 64))))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvand x (bvsub x (_ bv1 64))))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvand x (bvsub x (_ bv1 64))))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvand x (bvsub x #x0000000000000001)))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(define-fun f ((x (BitVec 64))) (BitVec 64) (bvand x (bvsub x #x0000000000000001)))",
      "(bvand x (bvsub x #x0000000000000001))",
      "(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvand x (bvsub x (_ bv1 64))))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x (bvnot x))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x (_ bv1 64))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x (_ bv1 64))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x (_ bv1 64))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x (_ bv1 64))))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x \\#x0000000000000001)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvsub x (_ bv1 64))))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1558.345
  },
  "hd-15.sl": {
    "completions": [
      "(ite (>= (bvadd x y) #x0000000000000000) (bvlshr (bvadd x y) #x0000000000000001) (bvsub #x0000000000000000 (bvlshr (bvsub x y) #x0000000000000001)))",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(ite (>= (bvadd x y) #x0000000000000000) (bvlshr (bvadd x y) #x0000000000000001) (bvsdiv (bvadd x y) #x0000000000000002))",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(bvashr (bvadd x y) #x0000000000000001)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (>= (bvadd x y) \\#x0000000000000000) (bvlshr (bvadd x y) \\#x0000000000000001) (bvsub \\#x0000000000000000 (bvlshr (bvsub x y) \\#x0000000000000001))))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (>= (bvadd x y) \\#x0000000000000000) (bvlshr (bvadd x y) \\#x0000000000000001) (bvsdiv (bvadd x y) \\#x0000000000000002)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1658.269
  },
  "hd-02.sl": {
    "completions": [
      "(bvsub (bvadd x #x0000000000000001) #x0000000000000001)",
      "(ite (= x #x0000000000000001) #x0000000000000001 #x0000000000000000)",
      "(bvnot x)",
      "(bvsub (bvshl #x0000000000000001 x) #x0000000000000001)",
      "(bvnot x)",
      "(bvsub (bvadd x x) #x0000000000000001)",
      "(bvsub (bvadd x #x0000000000000001) #x0000000000000001)",
      "(bvsub (bvadd x x) #x0000000000000001)",
      "(bvsub (bvshl #x0000000000000001 x) #x0000000000000001)",
      "(bvsub (bvadd x #x0000000000000001) #x0000000000000001)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub (bvadd x \\#x0000000000000001) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (ite (= x \\#x0000000000000001) \\#x0000000000000001 \\#x0000000000000000))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvnot x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub (bvshl \\#x0000000000000001 x) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvnot x))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub (bvadd x x) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub (bvadd x \\#x0000000000000001) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub (bvadd x x) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub (bvshl \\#x0000000000000001 x) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvsub (bvadd x \\#x0000000000000001) \\#x0000000000000001))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1488.0390000000002
  },
  "hd-03.sl": {
    "completions": [
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))",
      "(bvand x (bvneg x))"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))",
      "(define-fun f (x (BitVec 64)) (BitVec 64) (bvand x (bvneg x)))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 1870.037
  },
  "hd-14.sl": {
    "completions": [
      "(bvudiv (bvadd x y) #x0000000000000002)",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(bvudiv (bvadd x y) #x0000000000000002)",
      "(ite (<= x y) y (bvadd (bvudiv (bvadd x y) #x0000000000000002) #x0000000000000000))",
      "(bvudiv (bvadd x y) #x0000000000000002)",
      "(ite (>= y x) (bvurem (bvadd x y) #x0000000000000002) (bvsdiv (bvadd x y) #x0000000000000002))",
      "(ite (>= (bvadd x y) ((_ bv2 64))) ((_ bv1 64) ((_ bvashr (bvadd x y) ((_ bv1 64))) ((_ bv1 64))) ((_ bv0 64)))",
      "(bvashr (bvadd x y) #x0000000000000001)",
      "(bvudiv (bvadd x y) #x0000000000000002)",
      "(bvudiv (bvadd x y) #x0000000000000002)"
    ],
    "solutions": [
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvadd x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvadd x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (<= x y) y (bvadd (bvudiv (bvadd x y) \\#x0000000000000002) \\#x0000000000000000)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvadd x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (>= y x) (bvurem (bvadd x y) \\#x0000000000000002) (bvsdiv (bvadd x y) \\#x0000000000000002)))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (ite (>= (bvadd x y) ((_ bv2 64))) ((_ bv1 64) ((_ bvashr (bvadd x y) ((_ bv1 64))) ((_ bv1 64))) ((_ bv0 64)))))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvashr (bvadd x y) \\#x0000000000000001))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvadd x y) \\#x0000000000000002))",
      "(define-fun f (x (BitVec 64) y (BitVec 64)) (BitVec 64) (bvudiv (bvadd x y) \\#x0000000000000002))"
    ],
    "constants": [
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ],
      [
        64
      ]
    ],
    "all_constants": [
      64
    ],
    "time_diff_ms": 751.3509999999999
  }
}