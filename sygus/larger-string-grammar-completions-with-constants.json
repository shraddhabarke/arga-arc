{
  "exceljet2modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1))))))"
    ],
    "time_ms": 773.361,
    "constants": [
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ]
    ],
    "all_constants": [
      1,
      "."
    ]
  },
  "31753108modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (+ 1 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 1)) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \" \" 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 1 9))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \")) (- (str.len _arg_0) (+ 2 (str.indexof _arg_0 \" \")))))"
    ],
    "time_ms": 445.416,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        2,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        2,
        " "
      ],
      [
        0,
        1,
        2,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        2,
        " "
      ],
      [
        1,
        9
      ],
      [
        1,
        2,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      9,
      " "
    ]
  },
  "find-nth-occurrence-of-charactermodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" 0) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" 0))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" 0) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" (-1 _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" 0) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" 0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" 0) _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int\n(str.indexof _arg_0 \"_\" (str.indexof _arg_0 \"_\" 0) _arg_1))"
    ],
    "time_ms": 0.413,
    "constants": [
      [
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        "_",
        -1
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ]
    ],
    "all_constants": [
      0,
      1,
      "_",
      -1
    ]
  },
  "clean-and-reformat-telephone-numbersmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \".\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \"<\" \"\") \">\" \"\")",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\"))"
    ],
    "time_ms": 344.19,
    "constants": [
      [
        "-",
        "",
        "<",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        "<",
        "."
      ],
      [
        "-",
        "",
        "<",
        "."
      ],
      [
        "-",
        "",
        "<",
        "."
      ],
      [
        "-",
        "",
        "<",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        "",
        ">",
        "<"
      ],
      [
        "-",
        "",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "-",
      "",
      ">",
      " ",
      "<",
      "."
    ]
  },
  "17212077modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))"
    ],
    "time_ms": 221.965,
    "constants": [
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        3,
        4,
        6
      ]
    ],
    "all_constants": [
      0,
      3,
      4,
      6
    ]
  },
  "11604909modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(let ((x (str.indexof _arg_0 \".\" 0)))\n  (str.substr _arg_0 (- x 1) 3)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) (+ (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) 3)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.indexof _arg_0 \" \" 1) 1)) 3))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)) (+ 3 (str.indexof _arg_0 \".\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(let ((pos (str.indexof _arg_0 \".\" -1)))\n  (str.substr _arg_0 (- pos 1) 3)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \".\" (- (str.indexof _arg_0 \" \" 1) 1)) (+ 3 (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String\n(let ((pos (str.indexof _arg_0 \".\" 0)))\n  (str.substr _arg_0 (str.indexof _arg_0 \" \" pos) (+ 3 (str.indexof _arg_0 \" \" pos)))))",
      "(define-fun f (_arg_0 String) String\n(let ((x (str.indexof _arg_0 \".\" 0)))\n  (ite (= x -1) \"\"\n    (str.substr _arg_0 (- x 1) 3))))",
      "(define-fun f (_arg_0 String) String\n(let ((num (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"AIX \" \"\") \"VMware ESX Server \" \"\") \"Linux Linux \" \"\") \"Red Hat Enterprise AS 4 <\" \"\") \"Microsoft <R> Windows <R> 2000 Advanced Server \" \"\")))\n  (str.substr num 0 (str.indexof num \".\" (- (str.len num) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.substr _arg_0 0 (str.indexof (str.replace _arg_0 \".\" \" \") \" \" 0)) \".\" \"\"))"
    ],
    "time_ms": 107.513,
    "constants": [
      [
        0,
        1,
        3,
        "."
      ],
      [
        1,
        3,
        "."
      ],
      [
        3,
        1,
        " ",
        "."
      ],
      [
        1,
        3,
        "."
      ],
      [
        1,
        3,
        ".",
        -1
      ],
      [
        3,
        1,
        " ",
        "."
      ],
      [
        0,
        3,
        " ",
        "."
      ],
      [
        0,
        "",
        1,
        3,
        ".",
        -1
      ],
      [
        "",
        0,
        "AIX ",
        1,
        "VMware ESX Server ",
        "Red Hat Enterprise AS 4 <",
        "Microsoft <R> Windows <R> 2000 Advanced Server ",
        "Linux Linux ",
        "."
      ],
      [
        0,
        "",
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      3,
      "AIX ",
      "VMware ESX Server ",
      "Red Hat Enterprise AS 4 <",
      "Microsoft <R> Windows <R> 2000 Advanced Server ",
      " ",
      "Linux Linux ",
      ".",
      -1
    ]
  },
  "stackoverflow4modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 2) \" \" (str.substr _arg_0 11 2)))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 2) \" \" (str.substr _arg_0 11 2)))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 3) \" \" (str.substr _arg_0 4 3) \" \" (str.substr _arg_0 8 2) \" \" (str.substr _arg_0 11 2)))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))"
    ],
    "time_ms": 904.598,
    "constants": [
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        0,
        2,
        3,
        4,
        8,
        11,
        " "
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        0,
        2,
        3,
        4,
        8,
        11,
        " "
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        0,
        2,
        3,
        4,
        8,
        11,
        " "
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ],
      [
        ">",
        " ",
        "<",
        ","
      ]
    ],
    "all_constants": [
      0,
      2,
      ">",
      3,
      4,
      8,
      11,
      " ",
      "<",
      ","
    ]
  },
  "remove-text-by-positionmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))"
    ],
    "time_ms": 656.079,
    "constants": [
      [
        "/",
        1
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        1,
        "/"
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      "/",
      1
    ]
  },
  "44789427modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((index (str.indexof _arg_0 \"-\" 0)))\n  (ite (= _arg_1 1)\n    (str.substr _arg_0 0 index)\n    (str.substr _arg_0 (+ index 1) (- (str.len _arg_0) (+ index 1)))\n  )\n))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((i (str.indexof _arg_0 \"-\" 0)))\n  (ite (= _arg_1 1)\n    (str.substr _arg_0 0 i)\n    (str.substr _arg_0 (+ i 1) (- (str.len _arg_0) (+ i 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((x (str.indexof _arg_0 \"-\" 0)))\n  (ite (= _arg_1 1) \n    (str.substr _arg_0 0 x)\n    (str.substr _arg_0 (+ x 1) (- (str.len _arg_0) (+ x 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((index (str.indexof _arg_0 \"-\" 0)))\n  (ite (= _arg_1 1)\n    (str.substr _arg_0 0 index)\n    (str.substr _arg_0 (+ index 1) (- (str.len _arg_0) (+ index 1)))\n  )\n))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((index (str.indexof _arg_0 \"-\" 0)))\n    (ite (= _arg_1 1)\n         (str.substr _arg_0 0 index)\n         (str.substr _arg_0 (+ index 1) (- (str.len _arg_0) (+ index 1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((index (str.indexof _arg_0 \"-\" 0)))\n  (ite (= _arg_1 1)\n    (str.substr _arg_0 0 index)\n    (str.substr _arg_0 (+ index 1) (- (str.len _arg_0) (+ index 1)))\n  )\n))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((sep (str.indexof _arg_0 \"-\" 0)))\n  (ite (= _arg_1 1)\n    (str.substr _arg_0 0 sep)\n    (str.substr _arg_0 (+ sep 1) (- (str.len _arg_0) (+ sep 1)))\n  )\n))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((index (str.indexof _arg_0 \"-\" 0)))\n  (ite (= _arg_1 1)\n    (str.substr _arg_0 0 index)\n    (str.substr _arg_0 (+ index 1) (- (str.len _arg_0) (+ index 1)))\n  )\n))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((pos (str.indexof _arg_0 \"-\" 0)))\n  (ite (= _arg_1 1)\n    (str.substr _arg_0 0 pos)\n    (str.substr _arg_0 (+ pos 1) (- (str.len _arg_0) (+ pos 1))))))"
    ],
    "time_ms": 453.361,
    "constants": [
      [
        "-",
        0,
        1
      ],
      [
        0,
        1,
        "-"
      ],
      [
        "-",
        0,
        1
      ],
      [
        "-",
        0,
        1
      ],
      [
        "-",
        0,
        1
      ],
      [
        "-",
        0,
        1
      ],
      [
        "-",
        0,
        1
      ],
      [
        "-",
        0,
        1
      ],
      [
        "-",
        0,
        1
      ],
      [
        "-",
        0,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      1
    ]
  },
  "stackoverflow11modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (-1)) (-1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))"
    ],
    "time_ms": 223.929,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "_",
        -1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      "_",
      " ",
      -1
    ]
  },
  "stackoverflow3modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"6\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"6\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"6\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"6\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"6\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"6\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"6\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"6\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"6\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"6\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- 1 (str.len _arg_0)))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"6\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"6\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"6\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"6\" 0)))))"
    ],
    "time_ms": 227.913,
    "constants": [
      [
        0,
        1,
        "6"
      ],
      [
        0,
        1,
        "6"
      ],
      [
        0,
        1,
        "6"
      ],
      [
        0,
        1,
        "6"
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        "6"
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        "6"
      ],
      [
        0,
        1,
        "6"
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "6"
    ]
  },
  "initials-longmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))"
    ],
    "time_ms": 664.25,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "phone-7modified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))"
    ],
    "time_ms": 53.494,
    "constants": [
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      3,
      1
    ]
  },
  "43606446modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 1) 1))"
    ],
    "time_ms": 700.275,
    "constants": [
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ]
    ],
    "all_constants": [
      1
    ]
  },
  "extract-nth-word-from-text-stringmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (+ (str.indexof (str.++ _arg_0 \" \") \" \" (- _arg_1 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (+ (str.indexof (str.++ _arg_0 \" \") \" \" (- _arg_1 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (str.indexof (str.++ _arg_0 \" \") \" \" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (str.indexof (str.++ _arg_0 \" \") \" \" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (+ (str.indexof (str.++ _arg_0 \" \") \" \" (- _arg_1 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (+ _arg_1 (- (str.indexof (str.++ _arg_0 \" \") \" \" _arg_1) _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (+ (str.indexof (str.++ _arg_0 \" \") \" \" (- _arg_1 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (+ (str.indexof (str.++ _arg_0 \" \") \" \" (- _arg_1 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (+ (str.indexof (str.++ _arg_0 \" \") \" \" (- _arg_1 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.at (str.++ _arg_0 \" \") (str.indexof (str.++ _arg_0 \" \") \" \" _arg_1)))"
    ],
    "time_ms": 228.358,
    "constants": [
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        " "
      ]
    ],
    "all_constants": [
      1,
      " "
    ]
  },
  "remove-leading-and-trailing-spaces-from-textmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite \n    (str.prefixof \" \" _arg_0) \n    \"\" \n    (str.at _arg_0 0)\n  ) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 (str.++ \" \" \" \") \" \") \n            (str.++ \" \" \" \") \" \"\n          ) \n          (str.++ \" \" \" \") \" \"\n        ) \n        (str.++ \" \" \" \") \" \"\n      ) \n      (str.++ \" \" \" \") \" \"\n    ) \n    1 \n    (str.len _arg_0)\n  )\n)",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 (str.++ \" \" \" \") \" \") \n            (str.++ \" \" \" \") \" \") \n          (str.++ \" \" \" \") \" \") \n        (str.++ \" \" \" \") \" \") \n      (str.++ \" \" \" \") \" \") \n    1 \n    (str.len _arg_0)\n  )\n)",
      "(define-fun f (_arg_0 String) String\n(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n    (ite \n        (str.prefixof \" \" _arg_0) \n        \"\" \n        (str.at _arg_0 0)\n    ) \n    (str.substr \n        (str.replace \n            (str.replace \n                (str.replace \n                    (str.replace \n                        (str.replace _arg_0 \n                            (str.++ \" \" \" \") \n                            \" \"\n                        ) \n                        (str.++ \" \" \" \") \n                        \" \"\n                    ) \n                    (str.++ \" \" \" \") \n                    \" \"\n                ) \n                (str.++ \" \" \" \") \n                \" \"\n            ) \n            (str.++ \" \" \" \") \n            \" \"\n        ) \n        1 \n        (str.len _arg_0)\n    )\n))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 (str.++ \" \" \" \") \" \") \n            (str.++ \" \" \" \") \" \") \n          (str.++ \" \" \" \") \" \") \n        (str.++ \" \" \" \") \" \") \n      (str.++ \" \" \" \") \" \") \n    1 \n    (str.len _arg_0)\n  )\n))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n    (ite \n        (str.prefixof \" \" _arg_0) \n        \"\" \n        (str.at _arg_0 0)\n    ) \n    (str.substr \n        (str.replace \n            (str.replace \n                (str.replace \n                    (str.replace \n                        (str.replace _arg_0 \n                            (str.++ \" \" \" \") \n                            \" \"\n                        ) \n                        (str.++ \" \" \" \") \n                        \" \"\n                    ) \n                    (str.++ \" \" \" \") \n                    \" \"\n                ) \n                (str.++ \" \" \" \") \n                \" \"\n            ) \n            (str.++ \" \" \" \") \n            \" \"\n        ) \n        1 \n        (str.len _arg_0)\n    )\n))",
      "(define-fun f (_arg_0 String) String\n(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite \n    (str.prefixof \" \" _arg_0) \n    \"\" \n    (str.at _arg_0 0)\n  ) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 (str.++ \" \" \" \") \" \") \n            (str.++ \" \" \" \") \" \"\n          ) \n          (str.++ \" \" \" \") \" \"\n        ) \n        (str.++ \" \" \" \") \" \"\n      ) \n      (str.++ \" \" \" \") \" \"\n    ) \n    1 \n    (str.len _arg_0)\n  )\n))",
      "(define-fun f (_arg_0 String) String\n(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String\n(str.++ \n  (ite \n    (str.prefixof \" \" _arg_0) \n    \"\" \n    (str.at _arg_0 0)\n  ) \n  (str.substr \n    (str.replace \n      (str.replace \n        (str.replace \n          (str.replace \n            (str.replace _arg_0 (str.++ \" \" \" \") \" \") \n            (str.++ \" \" \" \") \" \"\n          ) \n          (str.++ \" \" \" \") \" \"\n        ) \n        (str.++ \" \" \" \") \" \"\n      ) \n      (str.++ \" \" \" \") \" \"\n    ) \n    1 \n    (str.len _arg_0)\n  )\n)"
    ],
    "time_ms": 869.153,
    "constants": [
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ],
      [
        "",
        0,
        " ",
        1
      ]
    ],
    "all_constants": [
      "",
      0,
      " ",
      1
    ]
  },
  "phone-5-long-repeatmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))"
    ],
    "time_ms": 431.42,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "count-total-words-in-a-cellmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))",
      "(define-fun f (_arg_0 String) Int\n(+ 1 (str.len (str.replace _arg_0 \" \" \"\"))))"
    ],
    "time_ms": 185.418,
    "constants": [
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ],
      [
        "",
        1,
        " "
      ]
    ],
    "all_constants": [
      "",
      1,
      " "
    ]
  },
  "stackoverflow8modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- 1))))))"
    ],
    "time_ms": 387.341,
    "constants": [
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        1,
        "/"
      ],
      [
        "/",
        1
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      0,
      "/",
      1
    ]
  },
  "strip-numeric-characters-from-cellmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(let ((x (str.replace _arg_0 \"1\" \"\")))\n(let ((x (str.replace x \"2\" \"\")))\n(let ((x (str.replace x \"3\" \"\")))\n(let ((x (str.replace x \"4\" \"\")))\n(let ((x (str.replace x \"5\" \"\")))\n(let ((x (str.replace x \"6\" \"\")))\n(let ((x (str.replace x \"7\" \"\")))\n(let ((x (str.replace x \"8\" \"\")))\n(let ((x (str.replace x \"9\" \"\")))\n(let ((x (str.replace x \"0\" \"\")))\nx))))))))))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"0\" (str.replace _arg_0 \"1\" (str.replace _arg_0 \"2\" (str.replace _arg_0 \"3\" (str.replace _arg_0 \"4\" (str.replace _arg_0 \"5\" (str.replace _arg_0 \"6\" (str.replace _arg_0 \"7\" (str.replace _arg_0 \"8\" (str.replace _arg_0 \"9\" \"\"))))))))))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" (str.replace _arg_0 \"2\" (str.replace _arg_0 \"3\" (str.replace _arg_0 \"4\" (str.replace _arg_0 \"5\" (str.replace _arg_0 \"6\" (str.replace _arg_0 \"7\" (str.replace _arg_0 \"8\" (str.replace _arg_0 \"9\" (str.replace _arg_0 \"0\" \"\"))))))))))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"\")\n(str.replace _arg_0 \"2\" \"\")\n(str.replace _arg_0 \"3\" \"\")\n(str.replace _arg_0 \"4\" \"\")\n(str.replace _arg_0 \"5\" \"\")\n(str.replace _arg_0 \"6\" \"\")\n(str.replace _arg_0 \"7\" \"\")\n(str.replace _arg_0 \"8\" \"\")\n(str.replace _arg_0 \"9\" \"\")\n(str.replace _arg_0 \"0\" \"\"))"
    ],
    "time_ms": 701.951,
    "constants": [
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ],
      [
        "",
        "3",
        "7",
        "5",
        "8",
        "4",
        "0",
        "2",
        "1",
        "6",
        "9"
      ]
    ],
    "all_constants": [
      "",
      "3",
      "8",
      "7",
      "5",
      "4",
      "0",
      "2",
      "1",
      "6",
      "9"
    ]
  },
  "phone-9modified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \"\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \"\"))"
    ],
    "time_ms": 580.042,
    "constants": [
      [
        "",
        " ",
        "+",
        "-"
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        "",
        "+",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "",
      "-",
      "+",
      " ",
      "."
    ]
  },
  "initialsmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(let ((first (str.substr name 0 1))\n      (last (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ first \".\" last \".\")))",
      "(define-fun f (name String) String\n(let ((first (str.substr name 0 1)) (last (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ first \".\" last \".\")))",
      "(define-fun f (name String) String\n(let ((first (str.substr name 0 1)) (last (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ first \".\" last \".\")))",
      "(define-fun f (name String) String\n(let ((firstInitial (str.substr name 0 1))\n      (lastInitial (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ firstInitial \".\" lastInitial \".\")))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(let ((first (str.substr name 0 1)) (last (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ first \".\" last \".\")))"
    ],
    "time_ms": 590.75,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "phone-10-long-repeatmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 9 (- (str.len name) 9)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 5 3) \")\" (str.substr name 9 (- (str.len name) 9))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 9 (- (str.len name) 9))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \") \" (str.substr name 9 (- (str.len name) 9))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 9 (- (str.len name) 9))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 5 3) \")\" (str.substr name 9 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 3) \")\" (str.substr name 8 (- (str.len name) 8)))"
    ],
    "time_ms": 859.68,
    "constants": [
      [
        0,
        3,
        5,
        ")",
        9,
        "("
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        5,
        ")",
        9,
        "("
      ],
      [
        0,
        "-",
        3,
        4,
        5,
        ") ",
        9,
        13,
        "("
      ],
      [
        0,
        3,
        5,
        ")",
        9,
        "("
      ],
      [
        0,
        3,
        5,
        ") ",
        9,
        "("
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ],
      [
        0,
        3,
        5,
        ")",
        9,
        "("
      ],
      [
        0,
        3,
        4,
        5,
        8,
        ")",
        9,
        "("
      ],
      [
        0,
        3,
        5,
        8,
        ")",
        "("
      ]
    ],
    "all_constants": [
      0,
      "-",
      3,
      4,
      5,
      ") ",
      8,
      ")",
      9,
      13,
      "("
    ]
  },
  "39060015modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"/delete words in the area /\" \"\"))"
    ],
    "time_ms": 269.854,
    "constants": [
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        "",
        "/delete words in the area /"
      ]
    ],
    "all_constants": [
      "",
      "/delete words in the area /"
    ]
  },
  "phone-7-long-repeatmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 1 (str.indexof name \"-\" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 1 (str.indexof name \"-\" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 5 (str.indexof name \"-\" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))"
    ],
    "time_ms": 578.46,
    "constants": [
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        1,
        3,
        0
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        1,
        3,
        0
      ],
      [
        "-",
        0,
        3,
        5
      ],
      [
        "-",
        0,
        3,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      1,
      3,
      5
    ]
  },
  "stackoverflow6modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"=\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"=\" 0)))))"
    ],
    "time_ms": 49.24,
    "constants": [
      [
        0,
        2,
        "="
      ],
      [
        0,
        2,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        2,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        2,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "="
    ]
  },
  "strip-non-numeric-charactersmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"b\" \"\") \"c\" \"\") \"d\" \"\") \"e\" \"\") \"f\" \"\") \"g\" \"\") \"h\" \"\") \"i\" \"\") \"j\" \"\") \"k\" \"\") \"l\" \"\") \"m\" \"\") \"n\" \"\") \"o\" \"\") \"p\" \"\") \"q\" \"\") \"r\" \"\") \"s\" \"\") \"t\" \"\") \"u\" \"\") \"v\" \"\") \"w\" \"\") \"x\" \"\") \"y\" \"\") \"z\" \"\") \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"b\" \"\") \"c\" \"\") \"d\" \"\") \"e\" \"\") \"f\" \"\") \"g\" \"\") \"h\" \"\") \"i\" \"\") \"j\" \"\") \"k\" \"\") \"l\" \"\") \"m\" \"\") \"n\" \"\") \"o\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"b\" \"\") \"c\" \"\") \"d\" \"\") \"e\" \"\") \"f\" \"\") \"g\" \"\") \"h\" \"\") \"i\" \"\") \"j\" \"\") \"k\" \"\") \"l\" \"\") \"m\" \"\") \"n\" \"\") \"o\" \"\") \"p\" \"\") \"q\" \"\") \"r\" \"\") \"s\" \"\") \"t\" \"\") \"u\" \"\") \"v\" \"\") \"w\" \"\") \"x\" \"\") \"y\" \"\") \"z\" \"\") \"%\" \"\") \" \" \"\") \"$\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"b\" \"\") \"c\" \"\") \"d\" \"\") \"e\" \"\") \"f\" \"\") \"g\" \"\") \"h\" \"\") \"i\" \"\") \"j\" \"\") \"k\" \"\") \"l\" \"\") \"m\" \"\") \"n\" \"\") \"o\" \"\") \"p\" \"\") \"q\" \"\") \"r\" \"\") \"s\" \"\") \"t\" \"\") \"u\" \"\") \"v\" \"\") \"w\" \"\") \"x\" \"\") \"y\" \"\") \"z\" \"\") \"%\" \"\")",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"b\" \"\") \"c\" \"\") \"d\" \"\") \"e\" \"\") \"f\" \"\") \"g\" \"\") \"h\" \"\") \"i\" \"\") \"j\" \"\") \"k\" \"\") \"l\" \"\") \"m\" \"\") \"n\" \"\") \"o\" \"\") \"p\" \"\") \"q\" \"\") \"r\" \"\") \"s\" \"\") \"t\" \"\") \"u\" \"\") \"v\" \"\") \"w\" \"\") \"x\" \"\") \"y\" \"\") \"z\" \"\") \"A\" \"\") \"B\" \"\") \"C\" \"\") \"D\" \"\") \"E\" \"\") \"F\" \"\") \"G\" \"\") \"H\" \"\") \"I\" \"\") \"J\" \"\") \"K\" \"\") \"L\" \"\") \"M\" \"\") \"N\" \"\") \"O\" \"\") \"P\" \"\") \"Q\" \"\") \"R\" \"\") \"S\" \"\") \"T\" \"\") \"U\" \"\") \"V\" \"\") \"W\" \"\") \"X\" \"\") \"Y\" \"\") \"Z\" \"\") \"%\" \"\") \"$\" \"\") \" \" \"\")))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"b\" \"\") \"c\" \"\") \"d\" \"\") \"e\" \"\") \"f\" \"\") \"g\" \"\") \"h\" \"\") \"i\" \"\") \"j\" \"\") \"k\" \"\") \"l\" \"\") \"m\" \"\") \"n\" \"\") \"o\" \"\") \"p\" \"\") \"q\" \"\") \"r\" \"\") \"s\" \"\") \"t\" \"\") \"u\" \"\") \"v\" \"\") \"w\" \"\") \"x\" \"\") \"y\" \"\") \"z\" \"\") \"%\" \"\") \" \" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"b\" \"\") \"c\" \"\") \"d\" \"\") \"e\" \"\") \"f\" \"\") \"g\" \"\") \"h\" \"\") \"i\" \"\") \"j\" \"\") \"k\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace _arg_0 \" \" \"\") \"the\" \"\") \"price\" \"\") \"is\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"p\" \"\") \"l\" \"\") \"e\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace _arg_0 \"a\" \"\") \"p\" \"\") \"l\" \"\") \"e\" \"\"))"
    ],
    "time_ms": 966.829,
    "constants": [
      [
        "",
        "g",
        "n",
        "r",
        "z",
        "x",
        "m",
        "k",
        "a",
        "e",
        "u",
        "d",
        "j",
        "i",
        "p",
        "v",
        "t",
        "q",
        "s",
        "o",
        "w",
        "c",
        "%",
        "y",
        "f",
        "l",
        "b",
        "h"
      ],
      [
        "",
        "j",
        "i",
        "g",
        "h",
        "m",
        "f",
        "n",
        "k",
        "l",
        "a",
        "b",
        "e",
        "o",
        "d",
        "c"
      ],
      [
        "",
        "g",
        "n",
        "r",
        "x",
        "m",
        "k",
        "a",
        "e",
        "u",
        "d",
        "j",
        "i",
        "p",
        "v",
        "t",
        "q",
        "s",
        "o",
        "w",
        "c",
        "f",
        "l",
        "b",
        "h"
      ],
      [
        "",
        "g",
        "n",
        "r",
        "m",
        "k",
        "a",
        "e",
        "u",
        "d",
        "j",
        "i",
        "p",
        "v",
        "t",
        "q",
        "s",
        "o",
        "w",
        "c",
        "f",
        "l",
        "b",
        "h"
      ],
      [
        "",
        "P",
        "E",
        "M",
        "g",
        "n",
        "F",
        "r",
        "z",
        "x",
        "R",
        "m",
        "k",
        "L",
        "a",
        "e",
        "u",
        "A",
        "G",
        "d",
        "S",
        "T",
        "N",
        "j",
        "i",
        "I",
        "p",
        "D",
        "v",
        "t",
        "K",
        "q",
        "s",
        "o",
        "w",
        "C",
        "H",
        "c",
        "O",
        "y",
        "f",
        "l",
        "b",
        "B",
        "h",
        "J",
        "Q"
      ],
      [
        "",
        "g",
        "n",
        "r",
        "z",
        "x",
        "m",
        "k",
        "a",
        "e",
        "u",
        "d",
        "j",
        "i",
        "p",
        "v",
        "t",
        "q",
        "s",
        "o",
        "w",
        "c",
        "y",
        "f",
        "l",
        "b",
        "h"
      ],
      [
        "",
        "j",
        "i",
        "g",
        "h",
        "f",
        "k",
        "a",
        "b",
        "e",
        "d",
        "c"
      ],
      [
        "",
        "price",
        "the",
        " ",
        "is"
      ],
      [
        "",
        "p",
        "l",
        "a",
        "e"
      ],
      [
        "",
        "p",
        "l",
        "a",
        "e"
      ]
    ],
    "all_constants": [
      "",
      "P",
      "E",
      "M",
      "g",
      "n",
      "F",
      "r",
      " ",
      "z",
      "x",
      "price",
      "R",
      "m",
      "k",
      "L",
      "the",
      "a",
      "e",
      "u",
      "A",
      "G",
      "d",
      "S",
      "T",
      "N",
      "j",
      "i",
      "I",
      "p",
      "D",
      "v",
      "t",
      "K",
      "q",
      "is",
      "s",
      "o",
      "w",
      "C",
      "H",
      "c",
      "%",
      "O",
      "y",
      "f",
      "l",
      "b",
      "B",
      "h",
      "J",
      "Q"
    ]
  },
  "stackoverflow1modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))"
    ],
    "time_ms": 141.285,
    "constants": [
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ]
    ],
    "all_constants": [
      "",
      " Inc"
    ]
  },
  "get-last-wordmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" (- (str.len _arg_0) 1)))))"
    ],
    "time_ms": 895.561,
    "constants": [
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ]
    ],
    "all_constants": [
      1,
      " "
    ]
  },
  "phone-5modified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" (- (str.len name) 1)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))"
    ],
    "time_ms": 998.926,
    "constants": [
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "phone-6-long-repeatmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name 5 3)",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3)",
      "(define-fun f (name String) String\n(str.substr name (+ 1 (str.indexof name \" \" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 1 (str.indexof name \" \" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 1 (str.indexof name \" \" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \" \" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 1 (str.indexof name \" \" 0)) 3))"
    ],
    "time_ms": 707.828,
    "constants": [
      [
        0,
        1,
        " ",
        3
      ],
      [
        3,
        5
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ],
      [
        0,
        1,
        " ",
        3
      ]
    ],
    "all_constants": [
      0,
      1,
      3,
      5,
      " "
    ]
  },
  "get-last-line-in-cellmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 2)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))"
    ],
    "time_ms": 859.705,
    "constants": [
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ]
    ],
    "all_constants": [
      1,
      2,
      "/n"
    ]
  },
  "phone-9-shortmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"+\" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \".\") \" \" \".\"))"
    ],
    "time_ms": 956.514,
    "constants": [
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "",
      "-",
      "+",
      " ",
      "."
    ]
  },
  "38871714modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<\" \"\") \">\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"<\" \"\"))"
    ],
    "time_ms": 197.143,
    "constants": [
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        ">",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ]
    ],
    "all_constants": [
      "",
      ">",
      "<"
    ]
  },
  "phone-5-shortmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1)))"
    ],
    "time_ms": 854.573,
    "constants": [
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "initials_smallmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(let ((first (str.substr name 0 1)) (last (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ first \".\" last \".\")))",
      "(define-fun f (name String) String\n(let ((firstInitial (str.substr name 0 1))\n      (lastInitial (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n    (str.++ firstInitial \".\" lastInitial \".\")))",
      "(define-fun f (name String) String\n(let ((firstInitial (str.substr name 0 1))\n      (lastInitial (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ firstInitial \".\" lastInitial \".\")))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(let ((first (str.substr name 0 1))\n      (last (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ first \".\" last \".\")))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) \".\"))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(let ((first (str.substr name 0 1)) (last (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ first \".\" last \".\")))",
      "(define-fun f (name String) String\n(let ((firstInitial (str.substr name 0 1))\n      (lastInitial (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))\n  (str.++ firstInitial \".\" lastInitial \".\")))"
    ],
    "time_ms": 686.038,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "get-domain-name-from-urlmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 1 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 2)) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 1 (str.indexof _arg_0 \"/\" 2))) \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ (str.indexof _arg_0 \"/\" 2) 1)) \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 1 (str.indexof _arg_0 \"/\" 2))) \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 2 (str.indexof _arg_0 \"/\" 2))) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 2)) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 2)) \"/\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (+ 1 (str.indexof _arg_0 \"/\" 2))) \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" 8)) \"/\"))"
    ],
    "time_ms": 847.771,
    "constants": [
      [
        0,
        1,
        2,
        "/"
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        1,
        2,
        "/",
        ""
      ],
      [
        0,
        "/",
        2,
        1,
        ""
      ],
      [
        0,
        1,
        2,
        "/",
        ""
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        1,
        2,
        "/",
        ""
      ],
      [
        0,
        "/",
        8
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "/",
      "",
      8
    ]
  },
  "get-middle-name-from-full-namemodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(let ((first_space (str.indexof _arg_0 \" \" 0)) (second_space (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))\n  (ite (= first_space -1) \"\"\n    (ite (= second_space -1) (str.substr _arg_0 (+ first_space 1) (- (str.len _arg_0) (+ first_space 1)))\n      (str.substr _arg_0 (+ first_space 1) (- second_space (+ first_space 1)))))))",
      "(define-fun f (_arg_0 String) String\n(let ((first_space (str.indexof _arg_0 \" \" 0)) (second_space (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))\n  (ite (= first_space -1) \"\"\n    (ite (= second_space -1) (str.substr _arg_0 (+ first_space 1) (- (str.len _arg_0) (+ first_space 1)))\n      (str.substr _arg_0 (+ first_space 1) (- second_space (+ first_space 1)))))))",
      "(define-fun f (_arg_0 String) String\n(let ((middle (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))))\n  (ite (= (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) -1) \"\" middle)))",
      "(define-fun f (_arg_0 String) String\n(let ((first_space (str.indexof _arg_0 \" \" 0)) (second_space (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))\n  (ite (= first_space -1) \"\" (str.substr _arg_0 (+ first_space 1) (- second_space first_space 1)))))",
      "(define-fun f (_arg_0 String) String\n(let ((firstSpace (str.indexof _arg_0 \" \" 0)))\n  (let ((secondSpace (str.indexof _arg_0 \" \" (+ firstSpace 1))))\n    (if (= firstSpace -1)\n      \"\"\n      (if (= secondSpace -1)\n        \"\"\n        (str.substr _arg_0 (+ firstSpace 1) (- secondSpace firstSpace 1)))))))",
      "(define-fun f (_arg_0 String) String\n(let ((idx1 (+ 1 (str.indexof _arg_0 \" \" 0))))\n  (let ((idx2 (str.indexof _arg_0 \" \" idx1)))\n    (if (= idx2 -1) \"\"\n      (str.substr _arg_0 idx1 (- idx2 idx1))))))",
      "(define-fun f (_arg_0 String) String\n(let ((first_space (str.indexof _arg_0 \" \" 0)))\n(let ((second_space (str.indexof _arg_0 \" \" (+ first_space 1))))\n(if (= second_space -1) \"\"\n(str.substr _arg_0 (+ first_space 1) (- second_space first_space 1))))))",
      "(define-fun f (_arg_0 String) String\n(let ((first (str.indexof _arg_0 \" \" 0))\n      (last (str.rindexof _arg_0 \" \")))\n  (ite (= first -1)\n    \"\"\n    (str.substr _arg_0 (+ first 1) (- last first 1)))))",
      "(define-fun f (_arg_0 String) String\n(let ((first (str.indexof _arg_0 \" \" 0))\n      (last (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))\n  (str.substr _arg_0 (+ first 1) (- last first 1))))",
      "(define-fun f (_arg_0 String) String\n(let ((first_space (str.indexof _arg_0 \" \" 0)) (second_space (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))\n  (ite (= first_space -1) \"\"\n    (ite (= second_space -1) \"\" \n      (str.substr _arg_0 (+ first_space 1) (- second_space first_space 1))))))"
    ],
    "time_ms": 479.456,
    "constants": [
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ],
      [
        0,
        "",
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        "",
        " ",
        -1
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      " ",
      -1
    ]
  },
  "35744094modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"http=//www.apple.com/uk/mac\" \"mac\") \"https=//www.microsoft.com/en-gb/windows\" \"windows\") \"https=//www.microsoft.com/\" \"microsoft\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 2) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 2) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"http=//www.apple.com/uk/\" \"\") \"https=//www.microsoft.com/en-gb/\" \"\") \"https=//www.microsoft.com/\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"http=//www.apple.com/uk/mac\" \"mac\") \"https=//www.microsoft.com/en-gb/windows\" \"windows\") \"https=//www.microsoft.com/\" \"microsoft\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 2) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 2) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 2) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 2) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 2) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 2) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 2) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 2) 1))))"
    ],
    "time_ms": 25.914,
    "constants": [
      [
        "https=//www.microsoft.com/",
        "https=//www.microsoft.com/en-gb/windows",
        "windows",
        "mac",
        "http=//www.apple.com/uk/mac",
        "microsoft"
      ],
      [
        "/",
        2,
        1
      ],
      [
        1,
        "/"
      ],
      [
        "",
        "http=//www.apple.com/uk/",
        "https=//www.microsoft.com/",
        "https=//www.microsoft.com/en-gb/"
      ],
      [
        "https=//www.microsoft.com/",
        "https=//www.microsoft.com/en-gb/windows",
        "windows",
        "mac",
        "http=//www.apple.com/uk/mac",
        "microsoft"
      ],
      [
        "/",
        1
      ],
      [
        "/",
        2,
        1
      ],
      [
        "/",
        2,
        1
      ],
      [
        "/",
        2,
        1
      ],
      [
        "/",
        2,
        1
      ]
    ],
    "all_constants": [
      "",
      "https=//www.microsoft.com/",
      "/",
      "https=//www.microsoft.com/en-gb/windows",
      2,
      "windows",
      1,
      "https=//www.microsoft.com/en-gb/",
      "http=//www.apple.com/uk/",
      "mac",
      "http=//www.apple.com/uk/mac",
      "microsoft"
    ]
  },
  "extract-text-between-parenthesesmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))",
      "(define-fun f (_arg_0 String) Int\n(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\" 0) 1) (- (str.indexof _arg_0 \">\" 0) (+ (str.indexof _arg_0 \"<\" 0) 1)))))"
    ],
    "time_ms": 385.148,
    "constants": [
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ],
      [
        0,
        1,
        ">",
        "<"
      ]
    ],
    "all_constants": [
      0,
      1,
      ">",
      "<"
    ]
  },
  "phone-5-longmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 1))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0))",
      "(define-fun f (name String) String\n(str.substr name 1 (str.indexof name \" \" 0)))"
    ],
    "time_ms": 135.752,
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "phone-9-long-repeatmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \".\") \" \" \"\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace (str.replace name \"+\" \"\") \" \" \".\") \"-\" \".\"))"
    ],
    "time_ms": 440.539,
    "constants": [
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        "",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "-",
        "+",
        " ",
        "."
      ]
    ],
    "all_constants": [
      "-",
      "",
      "+",
      " ",
      "."
    ]
  },
  "exceljet1modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.substr _arg_1 (+ (str.indexof _arg_1 \"@\" 0) 1) (- (str.len _arg_1) (+ (str.indexof _arg_1 \"@\" 0) 1))))"
    ],
    "time_ms": 3.599,
    "constants": [
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ],
      [
        0,
        1,
        "@"
      ]
    ],
    "all_constants": [
      0,
      1,
      "@"
    ]
  },
  "phone-7-shortmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 4 (str.indexof name \"-\" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))"
    ],
    "time_ms": 916.066,
    "constants": [
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        4
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      1,
      3,
      4
    ]
  },
  "extract-word-containing-specific-textmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (-1)) (+ (str.indexof _arg_0 \".com\" 0) 4)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \"_\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (-1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (-1)) (+ 1 (str.indexof _arg_0 \".\" (str.indexof _arg_0 \"_\" (-1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (-1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (-1)) (+ (str.indexof _arg_0 \".com\" (-1)) 4)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (- (str.len _arg_0) 1)) (- (str.len _arg_0) (str.indexof _arg_0 \"_\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (-1)) (+ 1 (str.indexof _arg_0 \".\" (str.indexof _arg_0 \"_\")))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" (-1)) (+ (str.indexof _arg_0 \".com\" 0) 4)))"
    ],
    "time_ms": 111.765,
    "constants": [
      [
        0,
        4,
        "_",
        ".com",
        -1
      ],
      [
        1,
        "_"
      ],
      [
        "_",
        -1
      ],
      [
        1,
        "_",
        ".",
        -1
      ],
      [
        "_",
        -1
      ],
      [
        4,
        "_",
        ".com",
        -1
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_"
      ],
      [
        1,
        "_",
        ".",
        -1
      ],
      [
        0,
        4,
        "_",
        ".com",
        -1
      ]
    ],
    "all_constants": [
      0,
      1,
      "_",
      4,
      ".com",
      ".",
      -1
    ]
  },
  "stackoverflow7modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String\n(str.replace _arg_0 _arg_1 \"\"))"
    ],
    "time_ms": 927.477,
    "constants": [
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ]
    ],
    "all_constants": [
      ""
    ]
  },
  "phone-6-shortmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)"
    ],
    "time_ms": 242.645,
    "constants": [
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ]
    ],
    "all_constants": [
      3
    ]
  },
  "43120683modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))\n(str.replace _arg_0 \"2\" \"bananas\"))\n(str.replace _arg_0 \"3\" \"strawberries\"))\n(str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))\n(str.replace _arg_0 \"2\" \"bananas\"))\n(str.replace _arg_0 \"3\" \"strawberries\"))\n(str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\")\n(str.replace _arg_0 \"2\" \"bananas\")\n(str.replace _arg_0 \"3\" \"strawberries\")\n(str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))\n(str.replace _arg_0 \"2\" \"bananas\"))\n(str.replace _arg_0 \"3\" \"strawberries\"))\n(str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\")) (str.replace _arg_0 \"2\" \"bananas\")) (str.replace _arg_0 \"3\" \"strawberries\")) (str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))\n(str.replace _arg_0 \"2\" \"bananas\"))\n(str.replace _arg_0 \"3\" \"strawberries\"))\n(str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\")\n(str.replace _arg_0 \"2\" \"bananas\")\n(str.replace _arg_0 \"3\" \"strawberries\")\n(str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))\n(str.replace _arg_0 \"2\" \"bananas\"))\n(str.replace _arg_0 \"3\" \"strawberries\"))\n(str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))\n(str.replace _arg_0 \"2\" \"bananas\"))\n(str.replace _arg_0 \"3\" \"strawberries\"))\n(str.replace _arg_0 \"4\" \"oranges\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \"1\" \"apple\"))\n(str.replace _arg_0 \"2\" \"bananas\"))\n(str.replace _arg_0 \"3\" \"strawberries\"))\n(str.replace _arg_0 \"4\" \"oranges\"))"
    ],
    "time_ms": 445.919,
    "constants": [
      [
        "2",
        "1",
        "bananas",
        "apple"
      ],
      [
        "2",
        "1",
        "bananas",
        "apple"
      ],
      [
        "3",
        "bananas",
        "oranges",
        "4",
        "strawberries",
        "apple",
        "2",
        "1"
      ],
      [
        "2",
        "1",
        "bananas",
        "apple"
      ],
      [
        "2",
        "1",
        "bananas",
        "apple"
      ],
      [
        "2",
        "1",
        "bananas",
        "apple"
      ],
      [
        "3",
        "bananas",
        "oranges",
        "4",
        "strawberries",
        "apple",
        "2",
        "1"
      ],
      [
        "2",
        "1",
        "bananas",
        "apple"
      ],
      [
        "2",
        "1",
        "bananas",
        "apple"
      ],
      [
        "2",
        "1",
        "bananas",
        "apple"
      ]
    ],
    "all_constants": [
      "3",
      "bananas",
      "oranges",
      "4",
      "strawberries",
      "apple",
      "2",
      "1"
    ]
  },
  "split-text-string-at-specific-charactermodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" (- _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 0 (ite (= _arg_1 1) (str.indexof _arg_0 \"_\" 0) (str.len _arg_0))))"
    ],
    "time_ms": 80.83,
    "constants": [
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ],
      [
        0,
        1,
        "_"
      ]
    ],
    "all_constants": [
      0,
      1,
      "_"
    ]
  },
  "phone-7-longmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ 4 (str.indexof name \"-\" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))",
      "(define-fun f (name String) String\n(str.substr name (+ (str.indexof name \"-\" 0) 1) 3))"
    ],
    "time_ms": 110.157,
    "constants": [
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        4
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ],
      [
        "-",
        0,
        3,
        1
      ]
    ],
    "all_constants": [
      "-",
      0,
      1,
      3,
      4
    ]
  },
  "phone-6modified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)"
    ],
    "time_ms": 566.289,
    "constants": [
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3
      ]
    ],
    "all_constants": [
      3
    ]
  },
  "phone-10-longmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"-\" \" \") \" \" \"(\"))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \") \" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 (+ (str.indexof name \" \" 0) 1)) \"(\" (str.substr name (+ (str.indexof name \" \" 0) 1) (- (str.len name) (+ (str.indexof name \" \" 0) 1))) \")\"))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 (- (str.len name) 4)) \")\"))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 5) \"(\" (str.substr name 5 (- (str.len name) 5)) \")\"))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 (- (str.len name) 4)) \")\"))"
    ],
    "time_ms": 49.729,
    "constants": [
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        "-",
        " ",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        ") ",
        8,
        "("
      ],
      [
        0,
        3,
        4,
        8,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        8,
        ")",
        "("
      ],
      [
        0,
        1,
        ")",
        "(",
        " "
      ],
      [
        0,
        ")",
        4,
        "("
      ],
      [
        0,
        ")",
        5,
        "("
      ],
      [
        0,
        ")",
        4,
        "("
      ]
    ],
    "all_constants": [
      0,
      "-",
      1,
      3,
      4,
      ") ",
      5,
      7,
      8,
      ")",
      "(",
      " "
    ]
  },
  "stackoverflow2modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \" \" -1)))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" japan\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \" \" -1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \" \" -1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \" \" -1)))"
    ],
    "time_ms": 888.951,
    "constants": [
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        0,
        " ",
        -1
      ],
      [
        "",
        " japan"
      ],
      [
        "",
        " japan"
      ],
      [
        0,
        " ",
        -1
      ],
      [
        0,
        " ",
        -1
      ],
      [
        0,
        " ",
        -1
      ]
    ],
    "all_constants": [
      "",
      0,
      " japan",
      " ",
      -1
    ]
  },
  "stackoverflow9modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (-1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (-1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (-1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1 (- (str.len _arg_0) (+ (str.indexof _arg_0 \" \" 0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (-1))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (-1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1 (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (-1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1)))"
    ],
    "time_ms": 139.355,
    "constants": [
      [
        0,
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        -1
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      -1
    ]
  },
  "strip-html-from-text-or-numbersmodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\")",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"</b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"</b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"</b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"</b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"</b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"</b>\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"<b>\" \"\") \"</b>\" \"\"))"
    ],
    "time_ms": 990.643,
    "constants": [
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>"
      ],
      [
        "",
        "<b>",
        "</b>"
      ],
      [
        "",
        "<b>",
        "</b>"
      ],
      [
        "",
        "<b>",
        "</b>"
      ],
      [
        "",
        "<b>",
        "</b>"
      ],
      [
        "",
        "<b>",
        "</b>"
      ],
      [
        "",
        "<b>",
        "</b>"
      ],
      [
        "",
        "<b>",
        "</b>"
      ]
    ],
    "all_constants": [
      "",
      "<b>",
      "</b>"
    ]
  },
  "phone-10modified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \") \" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \") \" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \") \" (str.substr name 8 (- (str.len name) 8))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))"
    ],
    "time_ms": 148.579,
    "constants": [
      [
        0,
        3,
        4,
        ") ",
        8,
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        ") ",
        8,
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        ") ",
        8,
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ]
    ],
    "all_constants": [
      0,
      3,
      4,
      ") ",
      7,
      8,
      ")",
      "("
    ]
  },
  "phone-9-longmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \" \" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n(str.replace (str.replace name \"+\" \"\") \"-\" \".\"))"
    ],
    "time_ms": 95.532,
    "constants": [
      [
        "",
        " ",
        "-",
        "."
      ],
      [
        "",
        " ",
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        " ",
        "-",
        "."
      ],
      [
        "-",
        " ",
        "."
      ],
      [
        "",
        "+",
        "-",
        "."
      ]
    ],
    "all_constants": [
      "",
      "-",
      "+",
      " ",
      "."
    ]
  },
  "exceljet4modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"/\" 2) (- (str.len _arg_0) (str.indexof _arg_0 \"/\" 2) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (+ 2 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (+ 2 (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"//\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"https=//\" \"\") \"ftp=//\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"https=//\" \"\") \"ftp=//\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"//\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace _arg_0 \"https=//\" \"\") \"ftp=//\" \"\"))"
    ],
    "time_ms": 20.845,
    "constants": [
      [
        "/",
        2,
        1
      ],
      [
        0,
        "/",
        2,
        1,
        "//"
      ],
      [
        0,
        "/",
        2,
        "//"
      ],
      [
        "",
        "https=//",
        "ftp=//"
      ],
      [
        0,
        "/",
        2
      ],
      [
        "",
        "https=//",
        "ftp=//"
      ],
      [
        0,
        1,
        "/"
      ],
      [
        0,
        "/",
        2
      ],
      [
        0,
        2,
        "//"
      ],
      [
        "",
        "https=//",
        "ftp=//"
      ]
    ],
    "all_constants": [
      0,
      "/",
      2,
      1,
      "",
      "https=//",
      "//",
      "ftp=//"
    ]
  },
  "33619752modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Corporation\" \"\") \" Company\" \"\") \" Enterprises\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Corporation\" \"\") \" Enterprises\" \"\") \" Company\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Corporation\" \"\") \" Company\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\") \" Enterprises\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))\n(str.replace _arg_0 \" Company\" \"\"))\n(str.replace _arg_0 \" Corporation\" \"\"))\n(str.replace _arg_0 \" Enterprises\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Company\" \"\") \" Corporation\" \"\") \" Enterprises\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace (str.replace _arg_0 \" Inc\" \"\") \" Corporation\" \"\") \" Company\" \"\") \" Enterprises\" \"\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace _arg_0 \" Inc\" \"\"))"
    ],
    "time_ms": 499.455,
    "constants": [
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Corporation",
        " Company",
        " Enterprises",
        " Inc"
      ],
      [
        "",
        " Corporation",
        " Company",
        " Enterprises",
        " Inc"
      ],
      [
        "",
        " Company",
        " Inc",
        " Corporation"
      ],
      [
        "",
        " Corporation",
        " Company",
        " Enterprises",
        " Inc"
      ],
      [
        "",
        " Company",
        " Inc"
      ],
      [
        "",
        " Corporation",
        " Company",
        " Enterprises",
        " Inc"
      ],
      [
        "",
        " Corporation",
        " Company",
        " Enterprises",
        " Inc"
      ],
      [
        "",
        " Inc"
      ]
    ],
    "all_constants": [
      "",
      " Corporation",
      " Company",
      " Enterprises",
      " Inc"
    ]
  },
  "phone-6-longmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)",
      "(define-fun f (name String) String\n(str.substr name (+ 3 (str.indexof name \" \" 0)) 3))",
      "(define-fun f (name String) String\n(str.substr name 4 3)",
      "(define-fun f (name String) String\n(str.substr name 3 3)"
    ],
    "time_ms": 550.716,
    "constants": [
      [
        3
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3
      ],
      [
        3
      ],
      [
        3,
        4
      ],
      [
        3
      ],
      [
        0,
        3,
        " "
      ],
      [
        3,
        4
      ],
      [
        3
      ]
    ],
    "all_constants": [
      0,
      " ",
      3,
      4
    ]
  },
  "get-last-name-from-name-with-commamodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n(str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((first (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) (second (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\" 0))))))\n(str.++ second \",\" first)))",
      "(define-fun f (_arg_0 String) String\n(let ((first (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))\n      (last (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\" 0))))))\n  (str.++ last \",\" first)))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))",
      "(define-fun f (_arg_0 String) String\n(let ((idx (str.indexof _arg_0 \",\" 0)))\n  (str.++ (str.substr _arg_0 (+ idx 1) (- (str.len _arg_0) (+ idx 1))) \",\" (str.substr _arg_0 0 idx))))",
      "(define-fun f (_arg_0 String) String\n(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String) String\n(let ((comma (str.indexof _arg_0 \",\" 0)))\n    (str.++ (str.substr _arg_0 (+ comma 1) (- (str.len _arg_0) (+ comma 1))) \",\" (str.substr _arg_0 0 comma))))"
    ],
    "time_ms": 357.066,
    "constants": [
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      ","
    ]
  },
  "initials-long-repeatmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 1) \".\" (str.substr name (+ 1 (str.indexof name \" \" 0)) 1)))"
    ],
    "time_ms": 137.047,
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "exceljet3modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"=\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"=\" 0) 2))))"
    ],
    "time_ms": 722.28,
    "constants": [
      [
        0,
        2,
        "="
      ],
      [
        0,
        2,
        "="
      ],
      [
        0,
        2,
        "="
      ],
      [
        0,
        2,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        2,
        "="
      ],
      [
        0,
        1,
        "="
      ],
      [
        0,
        2,
        "="
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "="
    ]
  },
  "phone-10_shortmodified.sl": {
    "solutions": [
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))",
      "(define-fun f (name String) String\n(str.++ (str.substr name 0 4) \"(\" (str.substr name 4 3) \")\" (str.substr name 7 (- (str.len name) 7))))"
    ],
    "time_ms": 537.488,
    "constants": [
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        ")",
        "("
      ]
    ],
    "all_constants": [
      0,
      3,
      4,
      7,
      ")",
      "("
    ]
  },
  "get-first-name-from-name-with-commamodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((name (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))\n  (ite (= _arg_1 1)\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (str.len _arg_0))\n    name)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((name (str.split _arg_0 \",\")))\n  (ite (= _arg_1 1)\n       (str.at name 1)\n       (str.at name 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((name (str.split _arg_0 \",\")))\n  (ite (= _arg_1 1) \n    (str.trim (nth name 1))\n    (str.trim (nth name 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((first (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))) \n      (second (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1)))))\n  (ite (= _arg_1 1) (str.replace second \" \" \"\") first)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((first (str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\" 0) 1))))\n      (last (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))\n  (ite (= _arg_1 1) first last)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((name (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))\n  (ite (= _arg_1 1)\n       (str.substr _arg_0 (+ (str.len name) 1) (- (str.len _arg_0) (str.len name) 1))\n       name)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \",\" 0) (ite (= _arg_1 1) 2 0)) (str.len (str.substr _arg_0 (str.indexof _arg_0 \",\" 0) (str.len _arg_0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((first (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))\n      (second (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \",\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \",\" 0))))))\n  (ite (= _arg_1 1) (str.trim second) (str.trim first))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((name_parts (str.split _arg_0 \",\")))\n  (ite (= _arg_1 1)\n       (str.at name_parts 1)\n       (str.at name_parts 0)\n  )\n))",
      "(define-fun f (_arg_0 String _arg_1 Int) String\n(let ((name_parts (str.split _arg_0 \",\")))\n  (ite (= _arg_1 1)\n    (str.at name_parts 1)\n    (str.at name_parts 0))))"
    ],
    "time_ms": 504.928,
    "constants": [
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        "",
        " ",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      "",
      2,
      " ",
      ","
    ]
  },
  "stackoverflow10modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (- (str.len _arg_0) 4) 4))"
    ],
    "time_ms": 901.789,
    "constants": [
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ],
      [
        4
      ]
    ],
    "all_constants": [
      4
    ]
  },
  "25239569modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"LDS\" \"Leads\") \"DRS\" \"Direct Response\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"LDS\" \"Leads\") \"DRS\" \"Direct Response\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))",
      "(define-fun f (_arg_0 String) String\n(str.replace (str.replace (str.replace _arg_0 \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\"))"
    ],
    "time_ms": 690.124,
    "constants": [
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ],
      [
        "BRD",
        "DRS",
        "LDS",
        "Direct Response",
        "Leads",
        "Branding"
      ]
    ],
    "all_constants": [
      "BRD",
      "DRS",
      "LDS",
      "Direct Response",
      "Leads",
      "Branding"
    ]
  },
  "36462127modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1)) 1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"/\" (- (str.len _arg_0) 1))) (- (str.len _arg_0) 1)))"
    ],
    "time_ms": 473.968,
    "constants": [
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        "/",
        1
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ],
      [
        1,
        "/"
      ]
    ],
    "all_constants": [
      1,
      "/"
    ]
  },
  "stackoverflow5modified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))"
    ],
    "time_ms": 350.608,
    "constants": [
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ]
    ],
    "all_constants": [
      0,
      "="
    ]
  },
  "extract-word-that-begins-with-specific-charactermodified.sl": {
    "solutions": [
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \"_\" 0)))) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) 1) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) (- (str.len _arg_0) 1)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) (str.len _arg_0)) \" \" -1))))",
      "(define-fun f (_arg_0 String) String\n(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ 1 (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \"_\" 0)) 1) \" \" 0))))"
    ],
    "time_ms": 254.246,
    "constants": [
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        " ",
        "_"
      ],
      [
        0,
        1,
        "_",
        " ",
        -1
      ],
      [
        0,
        1,
        " ",
        "_"
      ]
    ],
    "all_constants": [
      0,
      1,
      "_",
      " ",
      -1
    ]
  }
}