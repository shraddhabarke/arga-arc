{
  "exceljet2modified.sl": {
    "completions": [
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\")))",
      "(define-fun f ((x String)) String\n    (str.substr x (+ (str.indexof x \".\" (+ 1 (str.indexof x \".\"))) 1) (str.len x)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\"",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))"
    ],
    "time_diff_ms": 649.033,
    "solutions": [
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \".\"))))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \".\" (+ 1 (str.indexof x \".\"))) 1) (str.len x)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\".\\\") 1) (str.len _arg_0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ]
    ],
    "all_constants": [
      1,
      ".",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \".\") 1) (str.len _arg_0))"
    ]
  },
  "31753108modified.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (str.len _arg_0)) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (ntInt 0) (str.indexof _arg_0 \" \" (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 11 (- (str.indexof _arg_0 \" \" 0) 11))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))"
    ],
    "time_diff_ms": 644.085,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (str.len _arg_0)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (ntInt 0) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 11 (- (str.indexof _arg_0 \" \" 0) 11)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        11
      ],
      [
        " ",
        1
      ]
    ],
    "all_constants": [
      0,
      " ",
      11,
      1
    ]
  },
  "find-nth-occurrence-of-charactermodified.sl": {
    "completions": [
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1)))))",
      "(ite (str.contains _arg_0 \",\") (+\n  (str.indexof _arg_0 \",\" 0)\n  (+\n    (str.indexof _arg_0 \",\" (+\n      (str.indexof _arg_0 \",\" 0)\n      1\n    ))\n    (+\n      (str.indexof _arg_0 \",\" (+\n        (str.indexof _arg_0 \",\" (+\n          (str.indexof _arg_0 \",\" 0)\n          1\n        ))\n        1\n      ))\n      1\n    )\n  )\n) -1)",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(ite (str.contains _arg_0 \",\") (str.indexof _arg_0 \",\" _arg_1) -1)",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(ite (str.contains _arg_0 \",\")\n     (str.indexof _arg_0 \", \" _arg_1)\n     -1)",
      "(str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" -1) 1)) 1))",
      "(ite (str.contains _arg_0 \",\") (str.indexof _arg_0 \",\" _arg_1) -1)",
      "(str.indexof _arg_0 \", \" _arg_1)",
      "(str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1)))))",
      "(str.indexof _arg_0 \",\" _arg_1)",
      "(ite (= (str.indexof _arg_0 \",\" _arg_1) -1) -1 (+ 1 (str.indexof _arg_0 \",\" _arg_1)))",
      "(ite (= _arg_1 1) 12 (ite (= _arg_1 2) 18 33))",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(str.indexof _arg_0 \",\" (- (str.indexof _arg_0 \",\" (+ _arg_1 1)) 1))",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))",
      "(ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33))"
    ],
    "time_diff_ms": 491.132,
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (str.contains _arg_0 \",\") (+ (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" 0) 1)) 1)) 1))) -1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (str.contains _arg_0 \",\") (str.indexof _arg_0 \",\" _arg_1) -1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (str.contains _arg_0 \",\") (str.indexof _arg_0 \", \" _arg_1) -1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" (+ (str.indexof _arg_0 \",\" -1) 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (str.contains _arg_0 \",\") (str.indexof _arg_0 \",\" _arg_1) -1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \", \" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" (+ 1 (str.indexof _arg_0 \",\" _arg_1))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (str.indexof _arg_0 \",\" _arg_1) -1) -1 (+ 1 (str.indexof _arg_0 \",\" _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= _arg_1 1) 12 (ite (= _arg_1 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (str.indexof _arg_0 \",\" (- (str.indexof _arg_0 \",\" (+ _arg_1 1)) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))",
      "(define-fun f (_arg_0 String _arg_1 Int) Int (ite (= (_arg_1 1) 1) 12 (ite (= (_arg_1 2) 2) 18 33)))"
    ],
    "constants": [
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ",",
        -1
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        ", "
      ],
      [
        ",",
        -1
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        ",",
        -1,
        ", "
      ],
      [
        1,
        ",",
        -1
      ],
      [
        ",",
        -1
      ],
      [
        ", "
      ],
      [
        1,
        ","
      ],
      [
        ","
      ],
      [
        1,
        ",",
        -1
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        ","
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        2,
        33,
        12,
        18
      ],
      [
        1,
        2,
        33,
        12,
        18
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      33,
      12,
      ", ",
      18,
      ",",
      -1
    ]
  },
  "clean-and-reformat-telephone-numbersmodified.sl": {
    "completions": [
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String\n  (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f ((phone String)) String\n  (str.replace (str.replace (str.replace phone \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(define-fun f ((phone String)) String\n  (str.replace (str.replace (str.replace phone \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "\"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\"",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\")"
    ],
    "time_diff_ms": 150.085,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace phone \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace phone \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace (str.replace (str.replace _arg_0 \\\"-\\\" \\\"\\\") \\\".\\\" \\\"\\\") \\\" \\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \"<\" \"\"))"
    ],
    "constants": [
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ],
      [
        "",
        "<",
        ".",
        "-"
      ]
    ],
    "all_constants": [
      "",
      ".",
      "(str.replace (str.replace (str.replace _arg_0 \"-\" \"\") \".\" \"\") \" \" \"\")",
      "-",
      "<"
    ]
  },
  "17212077modified.sl": {
    "completions": [
      "(str.++ (str.substr _arg_0 0 3) (str.at _arg_0 3) (str.substr _arg_0 3 4))",
      "(str.substr _arg_0 0 6)",
      "(str.replace _arg_0 \"/[0-9]+/20[0-9][0-9]\" \"/\")",
      "(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)",
      "(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(str.substr _arg_0 0 6))",
      "(str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)",
      "(str.substr _arg_0 0 6))",
      "(str.substr _arg_0 0 6)"
    ],
    "time_diff_ms": 353.912,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 3) (str.at _arg_0 3) (str.substr _arg_0 3 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/[0-9]+/20[0-9][0-9]\" \"/\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 3) (str.substr _arg_0 6 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 6))"
    ],
    "constants": [
      [
        0,
        3,
        4
      ],
      [
        0,
        6
      ],
      [
        "/",
        "/[0-9]+/20[0-9][0-9]"
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        3,
        4,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ],
      [
        0,
        6
      ]
    ],
    "all_constants": [
      0,
      "/",
      3,
      4,
      6,
      "/[0-9]+/20[0-9][0-9]"
    ]
  },
  "11604909modified.sl": {
    "completions": [
      "(str.substr _arg_0 \n             (+ (str.indexof _arg_0 \" \") 1) \n             (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1))",
      "(str.++ \" \" (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len \" \"))) 1))",
      "(str.substr _arg_0 \n            (+ (str.indexof _arg_0 \" \") 1) \n            (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") 1))",
      "(ite (str.contains _arg_0 \"Windows\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"Windows\") 8) 4) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) 3))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\"",
      "(str.substr _arg_0\n            (+ (str.indexof _arg_0 \" \")\n               1)\n            (str.indexof _arg_0 \" \" (+\n                                    (str.indexof _arg_0 \" \" 1)\n                                    1)))",
      "(str.substr _arg_0 \n            (+ (str.indexof _arg_0 \" \" 0) 1) \n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len _arg_0) 1)) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \".\" 0) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\"",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "\"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (- (str.indexof _arg_0 \\\" \\\") 1))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len _arg_0) 1)) 1))",
      "(str.substr _arg_0\n            (+ (str.indexof _arg_0 \" \" 0) 1)\n            (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))"
    ],
    "time_diff_ms": 828.145,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \") 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.++ \" \" (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len \" \"))) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"Windows\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"Windows\") 8) 4) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) 3)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 2))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 1) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \".\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\" \\\") (+ (str.indexof _arg_0 \\\".\\\") 1) (- (str.indexof _arg_0 \\\".\\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ (str.indexof _arg_0 \\\" \\\") 1) (- (str.indexof _arg_0 \\\" \\\") 1))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \" (+ (str.len _arg_0) 1)) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))"
    ],
    "constants": [
      [
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        " ",
        1,
        3,
        4,
        8,
        "Windows"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))"
      ],
      [
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        0,
        " ",
        ".",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) (- (str.indexof _arg_0 \".\") 1))"
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") 1))"
      ],
      [
        0,
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ]
    ],
    "all_constants": [
      0,
      " ",
      1,
      3,
      4,
      8,
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \") 1))",
      ".",
      "Windows",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 1) (- (str.indexof _arg_0 \".\") 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \".\") 2))"
    ]
  },
  "stackoverflow4modified.sl": {
    "completions": [
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.len _arg_0) 1))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" 2) (+ 3 (str.indexof _arg_0 \",\" 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ 6 (str.indexof _arg_0 \",\" 1)))))))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.replace _arg_0 \"<\" \" \")",
      "(str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.replace _arg_0 \",\" \" \")",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.replace _arg_0 \",\" \" \")",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ (str.substr _arg_0 0 1) \" \" (str.substr _arg_0 1 3) \" \" (str.substr _arg_0 4 1) \" \" (str.substr _arg_0 6 1) \" \" (str.substr _arg_0 8 1) \" \" (str.substr _arg_0 10 1))",
      "(str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/V \" (int.to.str (str.to.int (str.at _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.at _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.at _arg_0 13 2))))",
      "(str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\"))",
      "(str.++ \"R/V \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2))))",
      "(str.++ \"R/\" (str.replace _arg_0 \",\" \" \"))"
    ],
    "time_diff_ms": 924.685,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 1 (- (str.len _arg_0) 1))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 3 (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \",\" 2) (+ 3 (str.indexof _arg_0 \",\" 1)))) \" \" (int.to.str (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ 6 (str.indexof _arg_0 \",\" 1)))))))))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace _arg_0 \"<\" \" \") \">\" \" \") \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 1) \" \" (str.substr _arg_0 1 3) \" \" (str.substr _arg_0 4 1) \" \" (str.substr _arg_0 6 1) \" \" (str.substr _arg_0 8 1) \" \" (str.substr _arg_0 10 1)))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 3)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/V \" (int.to.str (str.to.int (str.at _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.at _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.at _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace (str.replace (str.replace _arg_0 \",\" \" \") \"<\" \"\") \">\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/V \" (int.to.str (str.to.int (str.substr _arg_0 5 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 9 3))) \" \" (int.to.str (str.to.int (str.substr _arg_0 13 2)))))",
      "(define-fun f (_arg_0 String) String (str.++ \"R/\" (str.replace _arg_0 \",\" \" \")))"
    ],
    "constants": [
      [
        " ",
        3,
        5,
        9,
        "R/",
        13
      ],
      [
        1,
        " ",
        3,
        2,
        6,
        "R/",
        ","
      ],
      [
        " ",
        2,
        3,
        5,
        9,
        "R/",
        13
      ],
      [
        "<",
        " "
      ],
      [
        "<",
        " ",
        ",",
        ">"
      ],
      [
        " ",
        2,
        3,
        5,
        9,
        "R/",
        13
      ],
      [
        " ",
        3,
        5,
        9,
        "R/",
        13
      ],
      [
        " ",
        ","
      ],
      [
        " ",
        3,
        5,
        9,
        "R/",
        13
      ],
      [
        " ",
        ","
      ],
      [
        " ",
        3,
        5,
        9,
        "R/",
        13
      ],
      [
        " ",
        "R/",
        ","
      ],
      [
        " ",
        2,
        3,
        5,
        9,
        "R/",
        13
      ],
      [
        0,
        1,
        " ",
        3,
        4,
        6,
        8,
        10
      ],
      [
        " ",
        3,
        5,
        9,
        "R/",
        13
      ],
      [
        "",
        " ",
        "R/",
        ">",
        "<",
        ","
      ],
      [
        " ",
        2,
        3,
        5,
        9,
        13,
        "R/V "
      ],
      [
        "",
        " ",
        "R/",
        ">",
        "<",
        ","
      ],
      [
        " ",
        2,
        3,
        5,
        9,
        13,
        "R/V "
      ],
      [
        " ",
        "R/",
        ","
      ]
    ],
    "all_constants": [
      0,
      " ",
      1,
      3,
      2,
      5,
      6,
      4,
      8,
      9,
      10,
      "",
      "R/",
      13,
      ">",
      "<",
      "R/V ",
      ","
    ]
  },
  "remove-text-by-positionmodified.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\") (+ (str.len _arg_0) -1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\")))"
    ],
    "time_diff_ms": 283.436,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\") (+ (str.len _arg_0) -1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"/users/dave/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"/\"))))"
    ],
    "constants": [
      [
        "/",
        -1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        "/",
        "/users/",
        1
      ],
      [
        "/",
        "/users/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1,
        "/users/dave/"
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ]
    ],
    "all_constants": [
      0,
      "/",
      1,
      "/users/dave/",
      "/users/",
      -1
    ]
  },
  "44789427modified.sl": {
    "completions": [
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (str.indexof _arg_0 \\\"-\\\" (+ 1 _arg_1)))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" (_arg_1 - 1)) 10)\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ 1 _arg_1)) (str.indexof _arg_0 \"-\" (+ 1 _arg_1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) 1)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" (+ _arg_1 1)) (- (str.indexof _arg_0 \\\"-\\\" _arg_1) (str.indexof _arg_0 \\\"-\\\" (+ _arg_1 1))))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (+ (str.indexof _arg_0 \"-\" _arg_1) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) _arg_1))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" (+ _arg_1 2)))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) 10)\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (str.indexof _arg_0 \"-\" (+ _arg_1 2)))\"",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (+ (str.indexof _arg_0 \\\"-\\\" _arg_1) 1))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (- (str.len _arg_0) _arg_1)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\",\\\" _arg_1) (str.indexof _arg_0 \\\"-\\\" _arg_1))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\",\\\" _arg_1))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1))))"
    ],
    "time_diff_ms": 623.798,
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (str.indexof _arg_0 \\\"-\\\" (+ 1 _arg_1)))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" (_arg_1 - 1)) 10)\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ 1 _arg_1)) (str.indexof _arg_0 \"-\" (+ 1 _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"-\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" (+ _arg_1 1)) (- (str.indexof _arg_0 \\\"-\\\" _arg_1) (str.indexof _arg_0 \\\"-\\\" (+ _arg_1 1))))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (+ (str.indexof _arg_0 \"-\" _arg_1) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (+ (str.indexof _arg_0 \"-\" 0) _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) 10)\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" 0) (ite (= _arg_1 1) (str.indexof _arg_0 \"-\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"-\\\" _arg_1) (+ (str.indexof _arg_0 \\\"-\\\" _arg_1) 1))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (- (str.len _arg_0) _arg_1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\",\\\" _arg_1) (str.indexof _arg_0 \\\"-\\\" _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\",\\\" _arg_1))\")",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)) (str.indexof _arg_0 \"-\" (str.indexof _arg_0 \"-\" (+ (str.len (str.at _arg_0 0)) 1)))))"
    ],
    "constants": [
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ 1 _arg_1)))"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 - 1)) 10)"
      ],
      [
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        1,
        "-"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))"
      ],
      [
        1,
        "-"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        0,
        "-"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) 10)"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 "
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1))"
      ],
      [
        0,
        1,
        "-"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \"-\" _arg_1))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \",\" _arg_1))"
      ],
      [
        0,
        1,
        "-"
      ]
    ],
    "all_constants": [
      0,
      1,
      "(str.substr _arg_0 0 (str.indexof _arg_0 \",\" _arg_1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (+ (str.indexof _arg_0 \"-\" _arg_1) 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) 10)",
      "(str.substr _arg_0 (str.indexof _arg_0 ",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ 1 _arg_1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \",\" _arg_1) (str.indexof _arg_0 \"-\" _arg_1))",
      "-",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (_arg_1 - 1)) 10)",
      "(str.substr _arg_0 (str.indexof _arg_0 \"-\" (+ _arg_1 1)) (- (str.indexof _arg_0 \"-\" _arg_1) (str.indexof _arg_0 \"-\" (+ _arg_1 1))))"
    ]
  },
  "stackoverflow11modified.sl": {
    "completions": [
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (- (str.indexof _arg_0 \"_\" 0) 1))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \"-\" \"\")) (str.len _arg_0)))\"",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \"-\" \"\")) (str.to.int (str.replace _arg_0 \"-\" \"\"))))\"",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \" 0)\n            (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.len _arg_0))"
    ],
    "time_diff_ms": 638.34,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (- (str.indexof _arg_0 \"_\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 \")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) (str.len _arg_0)))"
    ],
    "constants": [
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        "_",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        " ",
        1
      ],
      [
        " ",
        1
      ]
    ],
    "all_constants": [
      0,
      " ",
      1,
      "_",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (str.to.int (str.replace _arg_0 ",
      "(str.substr _arg_0 0 (str.indexof _arg_0 "
    ]
  },
  "stackoverflow3modified.sl": {
    "completions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\")) 999)))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))) _arg_0)",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0\n              (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" 9))\n                 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 0)))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 \n              (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)\n              (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 \n        (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) \n        (str.len _arg_0)\n    )\n)",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 1)))))",
      "(define-fun f (s String) String\n  (str.substr s\n              (str.indexof s (int.to.str (str.to.int (str.substr s 0 (str.len s)))) 0)\n              (str.len s)))",
      "(define-fun f (s String) String\n  (str.substr s\n              (str.indexof s (int.to.str (str.to.int (str.substr s 0 (str.len s)))) 0)\n              (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0\n              (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)\n              (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 0)))))))))))))))))))))))))))))) 0)))))))))))))))))))))))))))))) 0)))))))))))))))))))))))))))))) 0))))))))))))))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))",
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\")) 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0))",
      "\"(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \\\" \\\" \\\"\\\") (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.to.int 9) (str.replace _arg_0 \\\" \\\" \\\"\\\") (- (str.len _arg_0) 1))))\""
    ],
    "time_diff_ms": 915.305,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\")) 999)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" 9)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.len (str.replace _arg_0 \" \" \"\"))) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.len _arg_0)) 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (- 9 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr s (str.indexof s (int.to.str (str.to.int (str.substr s 0 (str.len s)))) 0) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr s (str.indexof s (int.to.str (str.to.int (str.substr s 0 (str.len s)))) 0) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) _arg_0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0) (- (str.len _arg_0) (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) 0)))))))))))))))))))))))))))))) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 (int.to.str (str.to.int (str.substr _arg_0 (- (str.len _arg_0) 1) 1))) 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\")) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.rindexof _arg_0 \"0123456789\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \\\" \\\" \\\"\\\") (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.to.int 9) (str.replace _arg_0 \\\" \\\" \\\"\\\") (- (str.len _arg_0) 1))))\")"
    ],
    "constants": [
      [
        "",
        1,
        " ",
        999,
        9
      ],
      [
        0,
        " ",
        1
      ],
      [
        1,
        " ",
        9
      ],
      [
        0,
        " ",
        ""
      ],
      [
        0,
        9
      ],
      [
        0,
        9
      ],
      [
        0,
        1
      ],
      [
        0,
        1
      ],
      [
        0
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        9,
        1
      ],
      [
        0
      ],
      [
        0
      ],
      [
        1,
        9
      ],
      [
        0,
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        1
      ],
      [
        "",
        1,
        " ",
        9
      ],
      [
        "0123456789",
        1
      ],
      [
        "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\") (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\") (- (str.len _arg_0) 1))))"
      ]
    ],
    "all_constants": [
      "",
      1,
      " ",
      0,
      999,
      "0123456789",
      9,
      "(str.substr _arg_0 (+ 1 (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\") (- (str.len _arg_0) 1))) (- (str.len _arg_0) (str.indexof (str.to.int 9) (str.replace _arg_0 \" \" \"\") (- (str.len _arg_0) 1))))"
    ]
  },
  "initials-longmodified.sl": {
    "completions": [
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.at 0 name) \\\".\\\" (str.at (+ (str.indexof name \\\" \\\" 0) 1) name))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\")\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) 0 1) \".\"))",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) 0 1)) name)",
      "\"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\"",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))"
    ],
    "time_diff_ms": 47.603,
    "solutions": [
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.at 0 name) \\\".\\\" (str.at (+ (str.indexof name \\\" \\\" 0) 1) name))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) 0 1) \".\"))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (- (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) (str.len name)) 0 1)) name))",
      "(define-fun f (name String) String \"(str.++ (str.substr name 0 1) \\\".\\\" (str.substr name (+ (str.indexof name \\\" \\\" 0) 1) 1))\")",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))"
    ],
    "constants": [
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.at 0 name) \".\" (str.at (+ (str.indexof name \" \" 0) 1) name))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\")"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        " ",
        ".",
        1
      ],
      [
        "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))"
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      0,
      1,
      " ",
      2,
      "(str.++ (str.substr name 0 1) \".\")",
      "(str.++ (str.at 0 name) \".\" (str.at (+ (str.indexof name \" \" 0) 1) name))",
      ".",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))"
    ]
  },
  "phone-7modified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))"
    ],
    "time_diff_ms": 53.067,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))"
    ],
    "constants": [
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ]
    ],
    "all_constants": [
      3,
      5,
      6,
      7
    ]
  },
  "43606446modified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (x String) String (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\" 0) (+ (str.indexof x \",\") 1))))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(define-fun f (x String) String (str.substr x (+ (str.indexof x \",\", 9) 1) (- (str.indexof x \",\", 13) (+ (str.indexof x \",\", 9) 1))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16))))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\" 1))))",
      "(define-fun f (x String) String\n  (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (+ (str.indexof x \",\") 1))))",
      "(define-fun f (x String) String\n  (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (str.indexof x \",\") 1)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (x String) String\n  (str.substr x (+ (str.indexof x \"<\") 1) (- (str.indexof x \",\") (+ (str.indexof x \"<\") 1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1))"
    ],
    "time_diff_ms": 487.972,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\" 0) (+ (str.indexof x \",\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\" \\, 9) 1) (- (str.indexof x \",\" \\, 13) (+ (str.indexof x \",\" \\, 9) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<IDEALPRO,CASH,\") 16))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (+ (str.indexof x \",\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \",\") 1) (- (str.indexof x \">\") (str.indexof x \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \",\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ (str.indexof x \"<\") 1) (- (str.indexof x \",\") (+ (str.indexof x \"<\") 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \",\") (str.indexof _arg_0 \"<\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\") 1)))"
    ],
    "constants": [
      [
        "<",
        ",",
        1
      ],
      [
        0,
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        0,
        "<",
        ">"
      ],
      [
        9,
        ",",
        13,
        1
      ],
      [
        "<",
        ",",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        "<",
        ",",
        1
      ],
      [
        "<IDEALPRO,CASH,",
        16,
        ">"
      ],
      [
        "<",
        ",",
        1
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        1,
        ",",
        ">"
      ],
      [
        "<",
        ",",
        1
      ],
      [
        "<",
        ",",
        1
      ],
      [
        "<",
        ",",
        1
      ],
      [
        "<",
        ">",
        1
      ]
    ],
    "all_constants": [
      0,
      1,
      "<IDEALPRO,CASH,",
      9,
      ">",
      13,
      16,
      "<",
      ","
    ]
  },
  "extract-nth-word-from-text-stringmodified.sl": {
    "completions": [
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof (str.substr _arg_0 0 (str.indexof (_arg_0 \" \" 0) 0)) \" \" 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 0 (str.indexof (_arg_0 \" \" 0) 0)) \" \" 0)))",
      "(str.substr _arg_0\n           (+ (str.indexof _arg_0 \" \" 0) 1)\n           (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1))",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (+ (str.indexof _arg_0 \" \" 0) 1)) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (- (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" 0))",
      "(ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \" \"))\n      (ite (= _arg_1 2) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \"))\n           (ite (= _arg_1 3) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \"))\n                (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \") 1))) (str.len _arg_0)))))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.len \" \")) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (str.len \" \")))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" _arg_1)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ 1 (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" _arg_1)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1))))))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)) 0))",
      "(str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof (+ \" \" _arg_0) \" \" (+ (int.to.str _arg_1) 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \") (str.indexof (+ \" \" _arg_0) \" \" (+ (int.to.str _arg_1) 1))))))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.at _arg_0 _arg_1)",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1)) \" \" 0))"
    ],
    "time_diff_ms": 759.306,
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof (str.substr _arg_0 0 (str.indexof (_arg_0 \" \" 0) 0)) \" \" 0)) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 0 (str.indexof (_arg_0 \" \" 0) 0)) \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) 1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (+ (str.indexof _arg_0 \" \" 0) 1)) (ite (= _arg_1 1) (str.indexof _arg_0 \" \" 0) (- (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 \" \")) (ite (= _arg_1 2) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \")) (ite (= _arg_1 3) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \")) (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") (+ (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1)) \" \") 1)) \" \") 1))) (str.len _arg_0))))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.len \" \")) (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (str.len \" \"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" _arg_1)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ 1 (str.indexof (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" _arg_1)) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" _arg_1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)) 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (ite (= _arg_1 1) 0 (str.indexof (+ \" \" _arg_0) \" \" (+ (int.to.str _arg_1) 1))) (ite (= _arg_1 1) (str.indexof _arg_0 \" \") (str.indexof (+ \" \" _arg_0) \" \" (+ (int.to.str _arg_1) 1)))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)) \" \" 0)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)) (- (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1) (str.indexof (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0) 1)) \" \" 0)))"
    ],
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " ",
        2,
        3
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        1
      ],
      [
        1,
        " "
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      2,
      3
    ]
  },
  "remove-leading-and-trailing-spaces-from-textmodified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "\"(str.++ (ite (str.prefixof \\\" \\\" _arg_0) \\\"\\\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") 1 (str.len _arg_0)))\"",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))"
    ],
    "time_diff_ms": 596.177,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String \"(str.++ (ite (str.prefixof \\\" \\\" _arg_0) \\\"\\\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") (str.++ \\\" \\\" \\\" \\\") \\\" \\\") 1 (str.len _arg_0)))\")",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0))))"
    ],
    "constants": [
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))"
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ],
      [
        "",
        " ",
        0,
        1
      ]
    ],
    "all_constants": [
      "",
      " ",
      0,
      1,
      "(str.++ (ite (str.prefixof \" \" _arg_0) \"\" (str.at _arg_0 0)) (str.substr (str.replace (str.replace (str.replace (str.replace (str.replace _arg_0 (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") (str.++ \" \" \" \") \" \") 1 (str.len _arg_0)))"
    ]
  },
  "phone-5-long-repeatmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(+106 769-858-438 -> \"106\")",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(+106 769-858-438 -> \"106\"\n+83 973-757-831 -> \"83\"\n+62 647-787-775 -> \"62\"\n+172 027-507-632 -> \"172\"\n+72 001-050-856 -> \"72\"\n+95 310-537-401 -> \"95\"\n+6 775-969-238 -> \"6\"\n+174 594-539-946 -> \"174\"\n+155 927-275-860 -> \"155\"\n+167 405-461-331 -> \"167\"\n+10 538-347-401 -> \"10\"\n+60 971-986-103 -> \"60\"\n+13 258-276-941 -> \"13\"\n+2 604-746-137 -> \"2\"\n+25 998-898-180 -> \"25\"\n+151 862-946-541 -> \"151\"\n+118 165-041-038 -> \"118\"\n+144 170-592-272 -> \"144\"\n+94 462-008-482 -> \"94\"\n+82 685-122-086 -> \"82\"\n+82 675-366-472 -> \"82\"\n+80 066-433-096 -> \"80\"\n+163 039-436-166 -> \"163\"\n+138 808-083-074 -> \"138\"\n+42 643-245-738 -> \"42\"\n+169 822-542-726 -> \"169\"\n+176 767-782-369 -> \"176\"\n+47 414-369-343 -> \"47\"\n+138 885-618-512 -> \"138\"\n+104 158-671-355 -> \"104\"\n+188 280-087-526 -> \"188\"\n+50 268-571-336 -> \"50\"\n+183 225-960-024 -> \"183\"\n+58 191-982-491 -> \"58\"\n+9 507-092-535 -> \"9\"\n+64 061-601-398 -> \"64\"\n+189 831-591-877 -> \"189\"\n+129 425-765-844 -> \"129\"\n+94 856-734-046 -> \"94\"\n+35 082-845-261 -> \"35\"\n+185 394-622-272 -> \"185\"\n+163 905-707-740 -> \"163\"\n+23 448-213-807 -> \"23\"\n+42 634-077-089 -> \"42\"\n+18 051-287-382 -> \"18\"\n+29 773-545-520 -> \"29\"\n+43 249-097-743 -> \"43\"\n+158 674-736-891 -> \"158\"\n+45 124-771-454 -> \"45\"\n+180 029-457-654 -> \"180\"\n+75 227-250-652 -> \"75\"\n+5 528-317-854 -> \"5\"\n+81 849-629-290 -> \"81\"\n+46 005-119-176 -> \"46\"\n+108 150-380-705 -> \"108\"\n+40 122-224-247 -> \"40\"\n+68 890-680-027 -> \"68\"\n+169 060-204-504 -> \"169\"\n+95 620-820-945 -> \"95\"\n+43 592-938-846 -> \"43\"\n+7 023-296-647 -> \"7\"\n+20 541-401-396 -> \"20\"\n+64 751-365-934 -> \"64\"\n+163 546-119-476 -> \"163\"\n+198 557-666-779 -> \"198\"\n+14 673-759-017 -> \"14\"\n+161 086-020-168 -> \"161\"\n+65 970-575-488 -> \"65\"\n+2 455-126-377 -> \"2\"\n+196 728-585-376 -> \"196\"\n+33 117-430-125 -> \"33\"\n+195 488-831-768 -> \"195\"\n+86 468-718-108 -> \"86\"\n+194 278-716-950 -> \"194\"\n+43 730-685-847 -> \"43\"\n+140 794-289-551 -> \"140\"\n+21 679-740-834 -> \"21\"\n+98 717-997-323 -> \"98\"\n+47 401-100-231 -> \"47\"\n+143 726-462-368 -> \"143\"\n+147 864-005-968 -> \"147\"\n+130 590-757-665 -> \"130\"\n+197 700-858-976 -> \"197\"\n+158 344-541-946 -> \"158\"\n+56 242-901-234 -> \"56\"\n+132 313-075-754 -> \"132\"\n+130 517-953-149 -> \"130\"\n+158 684-878-743 -> \"158\"\n+52 836-582-035 -> \"52\"\n+138 117-484-671 -> \"138\"\n+50 012-148-873 -> \"50\"\n+105 048-919-483 -> \"105\"\n+18 209-851-997 -> \"18\"\n+176 938-056-084 -> \"176\"\n+141 018-132-973 -> \"141\"\n+199 936-162-415 -> \"199\"\n+33 547-051-264 -> \"33\"\n+161 233-981-513 -> \"161\"\n+115 101-728-328 -> \"115\"\n+45 095-746-635 -> \"45\")",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(+106 769-858-438 -> 106\n+83 973-757-831 -> 83\n+62 647-787-775 -> 62\n+172 027-507-632 -> 172\n+72 001-050-856 -> 72\n+95 310-537-401 -> 95\n+6 775-969-238 -> 6\n+174 594-539-946 -> 174\n+155 927-275-860 -> 155\n+167 405-461-331 -> 167\n+10 538-347-401 -> 10\n+60 971-986-103 -> 60\n+13 258-276-941 -> 13\n+2 604-746-137 -> 2\n+25 998-898-180 -> 25\n+151 862-946-541 -> 151\n+118 165-041-038 -> 118\n+144 170-592-272 -> 144\n+94 462-008-482 -> 94\n+82 685-122-086 -> 82\n+82 675-366-472 -> 82\n+80 066-433-096 -> 80\n+163 039-436-166 -> 163\n+138 808-083-074 -> 138\n+42 643-245-738 -> 42\n+169 822-542-726 -> 169\n+176 767-782-369 -> 176\n+47 414-369-343 -> 47\n+138 885-618-512 -> 138\n+104 158-671-355 -> 104\n+188 280-087-526 -> 188\n+50 268-571-336 -> 50\n+183 225-960-024 -> 183\n+58 191-982-491 -> 58\n+9 507-092-535 -> 9\n+64 061-601-398 -> 64\n+189 831-591-877 -> 189\n+129 425-765-844 -> 129\n+94 856-734-046 -> 94\n+35 082-845-261 -> 35\n+185 394-622-272 -> 185\n+163 905-707-740 -> 163\n+23 448-213-807 -> 23\n+42 634-077-089 -> 42\n+18 051-287-382 -> 18\n+29 773-545-520 -> 29\n+43 249-097-743 -> 43\n+158 674-736-891 -> 158\n+45 124-771-454 -> 45\n+180 029-457-654 -> 180\n+75 227-250-652 -> 75\n+5 528-317-854 -> 5\n+81 849-629-290 -> 81\n+46 005-119-176 -> 46\n+108 150-380-705 -> 108\n+40 122-224-247 -> 40\n+68 890-680-027 -> 68\n+169 060-204-504 -> 169\n+95 620-820-945 -> 95\n+43 592-938-846 -> 43\n+7 023-296-647 -> 7\n+20 541-401-396 -> 20\n+64 751-365-934 -> 64\n+163 546-119-476 -> 163\n+198 557-666-779 -> 198\n+14 673-759-017 -> 14\n+161 086-020-168 -> 161\n+65 970-575-488 -> 65\n+2 455-126-377 -> 2\n+196 728-585-376 -> 196\n+33 117-430-125 -> 33\n+195 488-831-768 -> 195\n+86 468-718-108 -> 86\n+194 278-716-950 -> 194\n+43 730-685-847 -> 43\n+140 794-289-551 -> 140\n+21 679-740-834 -> 21\n+98 717-997-323 -> 98\n+47 401-100-231 -> 47\n+143 726-462-368 -> 143\n+147 864-005-968 -> 147\n+130 590-757-665 -> 130\n+197 700-858-976 -> 197\n+158 344-541-946 -> 158\n+56 242-901-234 -> 56\n+132 313-075-754 -> 132\n+130 517-953-149 -> 130\n+158 684-878-743 -> 158\n+52 836-582-035 -> 52\n+138 117-484-671 -> 138\n+50 012-148-873 -> 50\n+105 048-919-483 -> 105\n+18 209-851-997 -> 18\n+176 938-056-084 -> 176\n+141 018-132-973 -> 141\n+199 936-162-415 -> 199\n+33 547-051-264 -> 33\n+161 233-981-513 -> 161\n+115 101-728-328 -> 115\n+45 095-746-635 -> 45)",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(+106 769-858-438 -> 106\n+83 973-757-831 -> 83\n+62 647-787-775 -> 62\n+172 027-507-632 -> 172\n+72 001-050-856 -> 72\n+95 310-537-401 -> 95\n+6 775-969-238 -> 6\n+174 594-539-946 -> 174\n+155 927-275-860 -> 155\n+167 405-461-331 -> 167\n+10 538-347-401 -> 10\n+60 971-986-103 -> 60\n+13 258-276-941 -> 13\n+2 604-746-137 -> 2\n+25 998-898-180 -> 25\n+151 862-946-541 -> 151\n+118 165-041-038 -> 118\n+144 170-592-272 -> 144\n+94 462-008-482 -> 94\n+82 685-122-086 -> 82\n+82 675-366-472 -> 82\n+80 066-433-096 -> 80\n+163 039-436-166 -> 163\n+138 808-083-074 -> 138\n+42 643-245-738 -> 42\n+169 822-542-726 -> 169\n+176 767-782-369 -> 176\n+47 414-369-343 -> 47\n+138 885-618-512 -> 138\n+104 158-671-355 -> 104\n+188 280-087-526 -> 188\n+50 268-571-336 -> 50\n+183 225-960-024 -> 183\n+58 191-982-491 -> 58\n+9 507-092-535 -> 9\n+64 061-601-398 -> 64\n+189 831-591-877 -> 189\n+129 425-765-844 -> 129\n+94 856-734-046 -> 94\n+35 082-845-261 -> 35\n+185 394-622-272 -> 185\n+163 905-707-740 -> 163\n+23 448-213-807 -> 23\n+42 634-077-089 -> 42\n+18 051-287-382 -> 18\n+29 773-545-520 -> 29\n+43 249-097-743 -> 43\n+158 674-736-891 -> 158\n+45 124-771-454 -> 45\n+180 029-457-654 -> 180\n+75 227-250-652 -> 75\n+5 528-317-854 -> 5\n+81 849-629-290 -> 81\n+46 005-119-176 -> 46\n+108 150-380-705 -> 108\n+40 122-224-247 -> 40\n+68 890-680-027 -> 68\n+169 060-204-504 -> 169\n+95 620-820-945 -> 95\n+43 592-938-846 -> 43\n+7 023-296-647 -> 7\n+20 541-401-396 -> 20\n+64 751-365-934 -> 64\n+163 546-119-476 -> 163\n+198 557-666-779 -> 198\n+14 673-759-017 -> 14\n+161 086-020-168 -> 161\n+65 970-575-488 -> 65\n+2 455-126-377 -> 2\n+196 728-585-376 -> 196\n+33 117-430-125 -> 33\n+195 488-831-768 -> 195\n+86 468-718-108 -> 86\n+194 278-716-950 -> 194\n+43 730-685-847 -> 43\n+140 794-289-551 -> 140\n+21 679-740-834 -> 21\n+98 717-997-323 -> 98\n+47 401-100-231 -> 47\n+143 726-462-368 -> 143\n+147 864-005-968 -> 147\n+130 590-757-665 -> 130\n+197 700-858-976 -> 197\n+158 344-541-946 -> 158\n+56 242-901-234 -> 56\n+132 313-075-754 -> 132\n+130 517-953-149 -> 130\n+158 684-878-743 -> 158\n+52 836-582-035 -> 52\n+138 117-484-671 -> 138\n+50 012-148-873 -> 50\n+105 048-919-483 -> 105\n+18 209-851-997 -> 18\n+176 938-056-084 -> 176\n+141 018-132-973 -> 141\n+199 936-162-415 -> 199\n+33 547-051-264 -> 33\n+161 233-981-513 -> 161\n+115 101-728-328 -> 115\n+45 095-746-635 -> 45)",
      "(define-fun f (name String) String\n    (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "\"(str.substr name 1 3)\""
    ],
    "time_diff_ms": 985.173,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (106 769-858-438 -> \"106\"))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (106 769-858-438 -> \"106\" 83 973-757-831 -> \"83\" 62 647-787-775 -> \"62\" 172 027-507-632 -> \"172\" 72 001-050-856 -> \"72\" 95 310-537-401 -> \"95\" 6 775-969-238 -> \"6\" 174 594-539-946 -> \"174\" 155 927-275-860 -> \"155\" 167 405-461-331 -> \"167\" 10 538-347-401 -> \"10\" 60 971-986-103 -> \"60\" 13 258-276-941 -> \"13\" 2 604-746-137 -> \"2\" 25 998-898-180 -> \"25\" 151 862-946-541 -> \"151\" 118 165-041-038 -> \"118\" 144 170-592-272 -> \"144\" 94 462-008-482 -> \"94\" 82 685-122-086 -> \"82\" 82 675-366-472 -> \"82\" 80 066-433-096 -> \"80\" 163 039-436-166 -> \"163\" 138 808-083-074 -> \"138\" 42 643-245-738 -> \"42\" 169 822-542-726 -> \"169\" 176 767-782-369 -> \"176\" 47 414-369-343 -> \"47\" 138 885-618-512 -> \"138\" 104 158-671-355 -> \"104\" 188 280-087-526 -> \"188\" 50 268-571-336 -> \"50\" 183 225-960-024 -> \"183\" 58 191-982-491 -> \"58\" 9 507-092-535 -> \"9\" 64 061-601-398 -> \"64\" 189 831-591-877 -> \"189\" 129 425-765-844 -> \"129\" 94 856-734-046 -> \"94\" 35 082-845-261 -> \"35\" 185 394-622-272 -> \"185\" 163 905-707-740 -> \"163\" 23 448-213-807 -> \"23\" 42 634-077-089 -> \"42\" 18 051-287-382 -> \"18\" 29 773-545-520 -> \"29\" 43 249-097-743 -> \"43\" 158 674-736-891 -> \"158\" 45 124-771-454 -> \"45\" 180 029-457-654 -> \"180\" 75 227-250-652 -> \"75\" 5 528-317-854 -> \"5\" 81 849-629-290 -> \"81\" 46 005-119-176 -> \"46\" 108 150-380-705 -> \"108\" 40 122-224-247 -> \"40\" 68 890-680-027 -> \"68\" 169 060-204-504 -> \"169\" 95 620-820-945 -> \"95\" 43 592-938-846 -> \"43\" 7 023-296-647 -> \"7\" 20 541-401-396 -> \"20\" 64 751-365-934 -> \"64\" 163 546-119-476 -> \"163\" 198 557-666-779 -> \"198\" 14 673-759-017 -> \"14\" 161 086-020-168 -> \"161\" 65 970-575-488 -> \"65\" 2 455-126-377 -> \"2\" 196 728-585-376 -> \"196\" 33 117-430-125 -> \"33\" 195 488-831-768 -> \"195\" 86 468-718-108 -> \"86\" 194 278-716-950 -> \"194\" 43 730-685-847 -> \"43\" 140 794-289-551 -> \"140\" 21 679-740-834 -> \"21\" 98 717-997-323 -> \"98\" 47 401-100-231 -> \"47\" 143 726-462-368 -> \"143\" 147 864-005-968 -> \"147\" 130 590-757-665 -> \"130\" 197 700-858-976 -> \"197\" 158 344-541-946 -> \"158\" 56 242-901-234 -> \"56\" 132 313-075-754 -> \"132\" 130 517-953-149 -> \"130\" 158 684-878-743 -> \"158\" 52 836-582-035 -> \"52\" 138 117-484-671 -> \"138\" 50 012-148-873 -> \"50\" 105 048-919-483 -> \"105\" 18 209-851-997 -> \"18\" 176 938-056-084 -> \"176\" 141 018-132-973 -> \"141\" 199 936-162-415 -> \"199\" 33 547-051-264 -> \"33\" 161 233-981-513 -> \"161\" 115 101-728-328 -> \"115\" 45 095-746-635 -> \"45\"))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3))\")",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (106 769-858-438 -> 106 83 973-757-831 -> 83 62 647-787-775 -> 62 172 027-507-632 -> 172 72 001-050-856 -> 72 95 310-537-401 -> 95 6 775-969-238 -> 6 174 594-539-946 -> 174 155 927-275-860 -> 155 167 405-461-331 -> 167 10 538-347-401 -> 10 60 971-986-103 -> 60 13 258-276-941 -> 13 2 604-746-137 -> 2 25 998-898-180 -> 25 151 862-946-541 -> 151 118 165-041-038 -> 118 144 170-592-272 -> 144 94 462-008-482 -> 94 82 685-122-086 -> 82 82 675-366-472 -> 82 80 066-433-096 -> 80 163 039-436-166 -> 163 138 808-083-074 -> 138 42 643-245-738 -> 42 169 822-542-726 -> 169 176 767-782-369 -> 176 47 414-369-343 -> 47 138 885-618-512 -> 138 104 158-671-355 -> 104 188 280-087-526 -> 188 50 268-571-336 -> 50 183 225-960-024 -> 183 58 191-982-491 -> 58 9 507-092-535 -> 9 64 061-601-398 -> 64 189 831-591-877 -> 189 129 425-765-844 -> 129 94 856-734-046 -> 94 35 082-845-261 -> 35 185 394-622-272 -> 185 163 905-707-740 -> 163 23 448-213-807 -> 23 42 634-077-089 -> 42 18 051-287-382 -> 18 29 773-545-520 -> 29 43 249-097-743 -> 43 158 674-736-891 -> 158 45 124-771-454 -> 45 180 029-457-654 -> 180 75 227-250-652 -> 75 5 528-317-854 -> 5 81 849-629-290 -> 81 46 005-119-176 -> 46 108 150-380-705 -> 108 40 122-224-247 -> 40 68 890-680-027 -> 68 169 060-204-504 -> 169 95 620-820-945 -> 95 43 592-938-846 -> 43 7 023-296-647 -> 7 20 541-401-396 -> 20 64 751-365-934 -> 64 163 546-119-476 -> 163 198 557-666-779 -> 198 14 673-759-017 -> 14 161 086-020-168 -> 161 65 970-575-488 -> 65 2 455-126-377 -> 2 196 728-585-376 -> 196 33 117-430-125 -> 33 195 488-831-768 -> 195 86 468-718-108 -> 86 194 278-716-950 -> 194 43 730-685-847 -> 43 140 794-289-551 -> 140 21 679-740-834 -> 21 98 717-997-323 -> 98 47 401-100-231 -> 47 143 726-462-368 -> 143 147 864-005-968 -> 147 130 590-757-665 -> 130 197 700-858-976 -> 197 158 344-541-946 -> 158 56 242-901-234 -> 56 132 313-075-754 -> 132 130 517-953-149 -> 130 158 684-878-743 -> 158 52 836-582-035 -> 52 138 117-484-671 -> 138 50 012-148-873 -> 50 105 048-919-483 -> 105 18 209-851-997 -> 18 176 938-056-084 -> 176 141 018-132-973 -> 141 199 936-162-415 -> 199 33 547-051-264 -> 33 161 233-981-513 -> 161 115 101-728-328 -> 115 45 095-746-635 -> 45))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (106 769-858-438 -> 106 83 973-757-831 -> 83 62 647-787-775 -> 62 172 027-507-632 -> 172 72 001-050-856 -> 72 95 310-537-401 -> 95 6 775-969-238 -> 6 174 594-539-946 -> 174 155 927-275-860 -> 155 167 405-461-331 -> 167 10 538-347-401 -> 10 60 971-986-103 -> 60 13 258-276-941 -> 13 2 604-746-137 -> 2 25 998-898-180 -> 25 151 862-946-541 -> 151 118 165-041-038 -> 118 144 170-592-272 -> 144 94 462-008-482 -> 94 82 685-122-086 -> 82 82 675-366-472 -> 82 80 066-433-096 -> 80 163 039-436-166 -> 163 138 808-083-074 -> 138 42 643-245-738 -> 42 169 822-542-726 -> 169 176 767-782-369 -> 176 47 414-369-343 -> 47 138 885-618-512 -> 138 104 158-671-355 -> 104 188 280-087-526 -> 188 50 268-571-336 -> 50 183 225-960-024 -> 183 58 191-982-491 -> 58 9 507-092-535 -> 9 64 061-601-398 -> 64 189 831-591-877 -> 189 129 425-765-844 -> 129 94 856-734-046 -> 94 35 082-845-261 -> 35 185 394-622-272 -> 185 163 905-707-740 -> 163 23 448-213-807 -> 23 42 634-077-089 -> 42 18 051-287-382 -> 18 29 773-545-520 -> 29 43 249-097-743 -> 43 158 674-736-891 -> 158 45 124-771-454 -> 45 180 029-457-654 -> 180 75 227-250-652 -> 75 5 528-317-854 -> 5 81 849-629-290 -> 81 46 005-119-176 -> 46 108 150-380-705 -> 108 40 122-224-247 -> 40 68 890-680-027 -> 68 169 060-204-504 -> 169 95 620-820-945 -> 95 43 592-938-846 -> 43 7 023-296-647 -> 7 20 541-401-396 -> 20 64 751-365-934 -> 64 163 546-119-476 -> 163 198 557-666-779 -> 198 14 673-759-017 -> 14 161 086-020-168 -> 161 65 970-575-488 -> 65 2 455-126-377 -> 2 196 728-585-376 -> 196 33 117-430-125 -> 33 195 488-831-768 -> 195 86 468-718-108 -> 86 194 278-716-950 -> 194 43 730-685-847 -> 43 140 794-289-551 -> 140 21 679-740-834 -> 21 98 717-997-323 -> 98 47 401-100-231 -> 47 143 726-462-368 -> 143 147 864-005-968 -> 147 130 590-757-665 -> 130 197 700-858-976 -> 197 158 344-541-946 -> 158 56 242-901-234 -> 56 132 313-075-754 -> 132 130 517-953-149 -> 130 158 684-878-743 -> 158 52 836-582-035 -> 52 138 117-484-671 -> 138 50 012-148-873 -> 50 105 048-919-483 -> 105 18 209-851-997 -> 18 176 938-056-084 -> 176 141 018-132-973 -> 141 199 936-162-415 -> 199 33 547-051-264 -> 33 161 233-981-513 -> 161 115 101-728-328 -> 115 45 095-746-635 -> 45))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String \"(str.substr name 1 3)\")"
    ],
    "constants": [
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        106,
        "106"
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "140",
        2,
        5,
        6,
        "189",
        7,
        9,
        10,
        13,
        14,
        18,
        20,
        21,
        23,
        25,
        29,
        "194",
        33,
        35,
        40,
        42,
        43,
        "82",
        45,
        46,
        47,
        "62",
        50,
        52,
        "33",
        "6",
        58,
        "118",
        60,
        56,
        62,
        "64",
        64,
        65,
        68,
        72,
        75,
        "94",
        80,
        82,
        83,
        81,
        86,
        "42",
        "29",
        94,
        95,
        98,
        "151",
        "13",
        104,
        106,
        105,
        108,
        "199",
        "169",
        "2",
        118,
        115,
        "40",
        "185",
        129,
        "50",
        130,
        132,
        "35",
        138,
        "68",
        140,
        141,
        143,
        144,
        147,
        151,
        155,
        158,
        161,
        163,
        167,
        "5",
        169,
        172,
        "10",
        174,
        "25",
        176,
        "81",
        180,
        183,
        "144",
        185,
        "9",
        "56",
        188,
        189,
        "43",
        "52",
        194,
        195,
        "14",
        196,
        198,
        "72",
        "75",
        "58",
        197,
        199,
        "172",
        "83",
        "132",
        "106",
        "105",
        "21",
        "95",
        "46",
        "161",
        "129",
        "20",
        "141",
        "188",
        "180",
        "18",
        "98",
        "197",
        "155",
        "138",
        "65",
        "108",
        "115",
        "183",
        "174",
        "45",
        "196",
        "130",
        "7",
        "80",
        "60",
        "158",
        "86",
        "176",
        "167",
        "104",
        "198",
        "143",
        "47",
        "23",
        "163",
        "195",
        "147"
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3))"
      ],
      [
        1,
        3
      ],
      [
        2,
        5,
        6,
        7,
        9,
        10,
        13,
        14,
        18,
        20,
        21,
        23,
        25,
        29,
        33,
        35,
        40,
        42,
        43,
        45,
        46,
        47,
        50,
        52,
        56,
        58,
        60,
        62,
        64,
        65,
        68,
        72,
        75,
        80,
        81,
        82,
        83,
        86,
        94,
        95,
        98,
        104,
        105,
        106,
        108,
        115,
        118,
        129,
        130,
        132,
        138,
        140,
        141,
        143,
        144,
        147,
        151,
        155,
        158,
        161,
        163,
        167,
        169,
        172,
        174,
        176,
        180,
        183,
        185,
        188,
        189,
        194,
        195,
        196,
        197,
        198,
        199
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        2,
        5,
        6,
        7,
        9,
        10,
        13,
        14,
        18,
        20,
        21,
        23,
        25,
        29,
        33,
        35,
        40,
        42,
        43,
        45,
        46,
        47,
        50,
        52,
        56,
        58,
        60,
        62,
        64,
        65,
        68,
        72,
        75,
        80,
        81,
        82,
        83,
        86,
        94,
        95,
        98,
        104,
        105,
        106,
        108,
        115,
        118,
        129,
        130,
        132,
        138,
        140,
        141,
        143,
        144,
        147,
        151,
        155,
        158,
        161,
        163,
        167,
        169,
        172,
        174,
        176,
        180,
        183,
        185,
        188,
        189,
        194,
        195,
        196,
        197,
        198,
        199
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        "(str.substr name 1 3)"
      ]
    ],
    "all_constants": [
      "140",
      1,
      3,
      2,
      5,
      6,
      "189",
      7,
      9,
      10,
      13,
      14,
      18,
      20,
      21,
      23,
      25,
      29,
      "194",
      33,
      35,
      40,
      42,
      43,
      "82",
      45,
      46,
      47,
      "62",
      50,
      52,
      "33",
      "6",
      58,
      "118",
      60,
      56,
      62,
      "64",
      64,
      65,
      68,
      72,
      75,
      "94",
      80,
      82,
      83,
      81,
      86,
      "42",
      "29",
      94,
      95,
      98,
      "151",
      "13",
      104,
      106,
      105,
      108,
      "199",
      "169",
      "2",
      118,
      115,
      "40",
      "185",
      129,
      130,
      "50",
      132,
      "35",
      138,
      "68",
      140,
      141,
      143,
      144,
      147,
      151,
      155,
      158,
      161,
      "(str.substr name 1 3))",
      163,
      167,
      "5",
      169,
      172,
      "10",
      174,
      "25",
      176,
      "81",
      180,
      183,
      "144",
      185,
      "9",
      "56",
      188,
      189,
      "43",
      "52",
      194,
      195,
      "14",
      196,
      198,
      "72",
      "75",
      "58",
      197,
      199,
      "172",
      "83",
      "132",
      "106",
      "105",
      "21",
      "95",
      "46",
      "161",
      "129",
      "20",
      "141",
      "188",
      "180",
      "18",
      "98",
      "197",
      "155",
      "138",
      "65",
      "108",
      "115",
      "183",
      "174",
      "45",
      "196",
      "130",
      "7",
      "(str.substr name 1 3)",
      "80",
      "60",
      "158",
      "86",
      "176",
      "167",
      "104",
      "198",
      "143",
      "47",
      "23",
      "163",
      "195",
      "147"
    ]
  },
  "count-total-words-in-a-cellmodified.sl": {
    "completions": [
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len (str.replace _arg_0 \" \" \"BRD\")))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (+ 1 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n  (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int\n    (str.len _arg_0))"
    ],
    "time_diff_ms": 842.815,
    "solutions": [
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len (str.replace _arg_0 \" \" \"BRD\")))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (+ 1 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))",
      "(define-fun f (_arg_0 String) Int (str.len _arg_0))"
    ],
    "constants": [
      [],
      [],
      [
        " ",
        "BRD"
      ],
      [],
      [],
      [],
      [
        0,
        1,
        " "
      ],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      []
    ],
    "all_constants": [
      0,
      " ",
      "BRD",
      1
    ]
  },
  "stackoverflow8modified.sl": {
    "completions": [
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(ite (str.contains _arg_0 \"/\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)) _arg_0)",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" (str.len _arg_0)))) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") (str.len \"Excel/\") 1)) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" (+ (str.indexof s \"/\" 0) 1)) 1) (str.len s)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" (+ (str.indexof s \"/\" 0) 1)) 1) (str.len s)))",
      "(define-fun f ((_arg_0 String)) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f ((x String)) String (str.substr x (- (str.indexof x \"/\" (+ (str.indexof x \"/\" 0) 1)) 1) (- (str.len x) (str.indexof x \"/\" (+ (str.indexof x \"/\" 0) 1)))))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))"
    ],
    "time_diff_ms": 124.892,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \"/\") (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\" 0) 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" (str.len _arg_0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.len \"home/\") (str.len \"Excel/\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" (+ (str.indexof s \"/\" 0) 1)) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" (+ (str.indexof s \"/\" 0) 1)) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr x (- (str.indexof x \"/\" (+ (str.indexof x \"/\" 0) 1)) 1) (- (str.len x) (str.indexof x \"/\" (+ (str.indexof x \"/\" 0) 1)))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \"/\" 0) 1) (str.len s)))"
    ],
    "constants": [
      [
        0,
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "home/",
        "/",
        1,
        "Excel/"
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ]
    ],
    "all_constants": [
      0,
      "/",
      1,
      "home/",
      "Excel/"
    ]
  },
  "strip-numeric-characters-from-cellmodified.sl": {
    "completions": [
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\"))",
      "(str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \") ",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"1\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "\"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \"\")\"",
      "\"(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 \" \" \"\"))) \"\")\"",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \")",
      "(str.replace _arg_0 \"0\" (str.replace _arg_0 \"1\" (str.replace _arg_0 \"2\" (str.replace _arg_0 \"3\" (str.replace _arg_0 \"4\" (str.replace _arg_0 \"5\" (str.replace _arg_0 \"6\" (str.replace _arg_0 \"7\" (str.replace _arg_0 \"8\" (str.replace _arg_0 \"9\" \"\")))))))))))",
      "(str.replace _arg_0 \"0\" \"\")",
      "(str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \") )",
      "(str.replace _arg_0 \"0\" \"1\")))",
      "(str.replace _arg_0 \"0\" \"\")"
    ],
    "time_diff_ms": 580.346,
    "solutions": [
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"1\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) \")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 \")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" (str.replace _arg_0 \"1\" (str.replace _arg_0 \"2\" (str.replace _arg_0 \"3\" (str.replace _arg_0 \"4\" (str.replace _arg_0 \"5\" (str.replace _arg_0 \"6\" (str.replace _arg_0 \"7\" (str.replace _arg_0 \"8\" (str.replace _arg_0 \"9\" \"\")))))))))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \" \" \"1\" \" \" \"2\" \" \" \"3\" \" \" \"4\" \" \" \"5\" \" \" \"6\" \" \" \"7\" \" \" \"8\" \" \" \"9\" \" \"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"1\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"0\" \"\"))"
    ],
    "constants": [
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "",
        "0"
      ],
      [
        " ",
        "4",
        "8",
        "5",
        "0",
        "3",
        "2",
        "9",
        "6",
        "7",
        "1"
      ],
      [
        "",
        "0"
      ],
      [
        "",
        "0"
      ],
      [
        "",
        "0"
      ],
      [
        "0",
        "1"
      ],
      [
        "",
        "0"
      ],
      [
        "",
        "0"
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) "
      ],
      [
        "(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 "
      ],
      [
        "",
        "0"
      ],
      [
        "",
        "0"
      ],
      [
        "",
        "0"
      ],
      [
        " ",
        "4",
        "8",
        "5",
        "0",
        "3",
        "2",
        "9",
        "6",
        "7",
        "1"
      ],
      [
        "",
        "8",
        "5",
        "0",
        "1",
        "3",
        "2",
        "9",
        "6",
        "7",
        "4"
      ],
      [
        "",
        "0"
      ],
      [
        " ",
        "4",
        "8",
        "5",
        "0",
        "3",
        "2",
        "9",
        "6",
        "7",
        "1"
      ],
      [
        "0",
        "1"
      ],
      [
        "",
        "0"
      ]
    ],
    "all_constants": [
      "",
      " ",
      "8",
      "5",
      "0",
      "(str.replace _arg_0 (int.to.str (str.to.int _arg_0)) ",
      "1",
      "3",
      "2",
      "9",
      "6",
      "(str.replace _arg_0 (int.to.str (str.to.int (str.replace _arg_0 ",
      "7",
      "4"
    ]
  },
  "phone-9modified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\" \n    (str.substr name 4 3) \".\" \n    (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))"
    ],
    "time_diff_ms": 853.613,
    "solutions": [
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))"
    ],
    "constants": [
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        "."
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        " ",
        "."
      ]
    ],
    "all_constants": [
      "",
      " ",
      0,
      3,
      4,
      8,
      ".",
      "-"
    ]
  },
  "initialsmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\")) )",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr name (str.indexof name \" \" 0) 1)\n    \".\"\n  )\n)",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \n    \".\"\n    (str.substr \n      (str.substr name (str.indexof name \" \" 0) (str.len name)) \n      1 \n      1\n    )\n  )\n)",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1) \".\"\n    (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))"
    ],
    "time_diff_ms": 264.964,
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (str.indexof name \" \" 0) 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ 1 (str.indexof name \" \" 0)) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ \" \" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (+ (str.indexof name \" \" 0) 2)) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))"
    ],
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      2,
      "."
    ]
  },
  "phone-10-long-repeatmodified.sl": {
    "completions": [
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106\" \" \" \"769-858-438\"))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\"",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "\"(str.replace (str.replace (str.replace name \\\"-\\\" \\\") (str.replace (str.replace name \\\"-\\\" \\\") (str.replace (str.replace name \\\"-\\\" \\\") \\\"(\\\" \\\" (\\\")))\"",
      "(str.++ \"+106 (769) 858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (",
      "(+ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3))",
      "(str.++ \"+106 \" \"(769) 858-438\"))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\"",
      "(str.++ \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\")",
      "(str.++ \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (",
      "(str.++ \"+106 (769) 858-438\"))",
      "(str.++ \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (",
      "(str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+106 (769) 858-438\" \" \")",
      "(+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3))",
      "(str.++ \"+106 (769) 858-438\" \" \")"
    ],
    "time_diff_ms": 6.12,
    "solutions": [
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106\" \" \" \"769-858-438\"))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\")",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\"-\\\" \\\") (str.replace (str.replace name \\\"-\\\" \\\") (str.replace (str.replace name \\\"-\\\" \\\") \\\"(\\\" \\\" (\\\")))\")",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\"))",
      null,
      "(define-fun f (name String) String (+ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ \"+106 \" \"(769) 858-438\"))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\" (\\\" (str.substr name 3 3) \\\") \\\" (str.substr name 6 3) \\\"-\\\" (str.substr name 9 3))\")",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+115 (101) 728-328\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+45 (095) 746-635\" \"+106 (769) 858-438\" \"+83 (973) 757-831\" \"+62 (647) 787-775\" \"+172 (027) 507-632\" \"+72 (001) 050-856\" \"+95 (310) 537-401\" \"+6 (775) 969-238\" \"+174 (594) 539-946\" \"+155 (927) 275-860\" \"+167 (405) 461-331\" \"+10 (538) 347-401\" \"+60 (971) 986-103\" \"+13 (258) 276-941\" \"+2 (604) 746-137\" \"+25 (998) 898-180\" \"+151 (862) 946-541\" \"+118 (165) 041-038\" \"+144 (170) 592-272\" \"+94 (462) 008-482\" \"+82 (685) 122-086\" \"+82 (675) 366-472\" \"+80 (066) 433-096\" \"+163 (039) 436-166\" \"+138 (808) 083-074\" \"+42 (643) 245-738\" \"+169 (822) 542-726\" \"+176 (767) 782-369\" \"+47 (414) 369-343\" \"+138 (885) 618-512\" \"+104 (158) 671-355\" \"+188 (280) 087-526\" \"+50 (268) 571-336\" \"+183 (225) 960-024\" \"+58 (191) 982-491\" \"+9 (507) 092-535\" \"+64 (061) 601-398\" \"+189 (831) 591-877\" \"+129 (425) 765-844\" \"+94 (856) 734-046\" \"+35 (082) 845-261\" \"+185 (394) 622-272\" \"+163 (905) 707-740\" \"+23 (448) 213-807\" \"+42 (634) 077-089\" \"+18 (051) 287-382\" \"+29 (773) 545-520\" \"+43 (249) 097-743\" \"+158 (674) 736-891\" \"+45 (124) 771-454\" \"+180 (029) 457-654\" \"+75 (227) 250-652\" \"+5 (528) 317-854\" \"+81 (849) 629-290\" \"+46 (005) 119-176\" \"+108 (150) 380-705\" \"+40 (122) 224-247\" \"+68 (890) 680-027\" \"+169 (060) 204-504\" \"+95 (620) 820-945\" \"+43 (592) 938-846\" \"+7 (023) 296-647\" \"+20 (541) 401-396\" \"+64 (751) 365-934\" \"+163 (546) 119-476\" \"+198 (557) 666-779\" \"+14 (673) 759-017\" \"+161 (086) 020-168\" \"+65 (970) 575-488\" \"+2 (455) 126-377\" \"+196 (728) 585-376\" \"+33 (117) 430-125\" \"+195 (488) 831-768\" \"+86 (468) 718-108\" \"+194 (278) 716-950\" \"+43 (730) 685-847\" \"+140 (794) 289-551\" \"+21 (679) 740-834\" \"+98 (717) 997-323\" \"+47 (401) 100-231\" \"+143 (726) 462-368\" \"+147 (864) 005-968\" \"+130 (590) 757-665\" \"+197 (700) 858-976\" \"+158 (344) 541-946\" \"+56 (242) 901-234\" \"+132 (313) 075-754\" \"+130 (517) 953-149\" \"+158 (684) 878-743\" \"+52 (836) 582-035\" \"+138 (117) 484-671\" \"+50 (012) 148-873\" \"+105 (048) 919-483\" \"+18 (209) 851-997\" \"+176 (938) 056-084\" \"+141 (018) 132-973\" \"+199 (936) 162-415\" \"+33 (547) 051-264\" \"+161 (233) 981-513\" \"+115 (101) 728-328\" \"+45 (095) 746-635\"))",
      null,
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\"))",
      null,
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \" \"+106 769-858-438\"))",
      "(define-fun f (name String) String (+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))",
      "(define-fun f (name String) String (+ name \" (\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+106 (769) 858-438\" \" \"))"
    ],
    "constants": [
      [
        " ",
        "+106 (769) 858-438",
        "+106",
        "769-858-438"
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))"
      ],
      [
        "+106 769-858-438",
        " ",
        "+106 (769) 858-438"
      ],
      [
        " ",
        "+106 (769) 858-438"
      ],
      [
        " ",
        "+106 (769) 858-438"
      ],
      [
        "(str.replace (str.replace (str.replace name \"-\" \") (str.replace (str.replace name \"-\" \") (str.replace (str.replace name \"-\" \") \"(\" \" (\")))"
      ],
      [
        "+106 (769) 858-438"
      ],
      [],
      [
        0,
        3,
        4,
        7,
        ") ",
        " ("
      ],
      [
        "(769) 858-438",
        "+106 "
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))"
      ],
      [
        "+43 (249) 097-743",
        "+75 (227) 250-652",
        "+95 (620) 820-945",
        "+64 (751) 365-934",
        "+13 (258) 276-941",
        "+185 (394) 622-272",
        "+106 (769) 858-438",
        "+195 (488) 831-768",
        "+33 (547) 051-264",
        "+98 (717) 997-323",
        "+7 (023) 296-647",
        "+138 (117) 484-671",
        "+23 (448) 213-807",
        "+43 (592) 938-846",
        "+147 (864) 005-968",
        "+94 (856) 734-046",
        "+14 (673) 759-017",
        "+138 (885) 618-512",
        "+169 (060) 204-504",
        "+155 (927) 275-860",
        "+80 (066) 433-096",
        "+33 (117) 430-125",
        "+52 (836) 582-035",
        "+18 (209) 851-997",
        "+198 (557) 666-779",
        "+143 (726) 462-368",
        "+47 (414) 369-343",
        "+176 (938) 056-084",
        "+9 (507) 092-535",
        "+105 (048) 919-483",
        "+115 (101) 728-328",
        "+42 (634) 077-089",
        "+82 (675) 366-472",
        "+86 (468) 718-108",
        "+158 (344) 541-946",
        "+83 (973) 757-831",
        "+65 (970) 575-488",
        "+25 (998) 898-180",
        "+144 (170) 592-272",
        "+140 (794) 289-551",
        "+130 (590) 757-665",
        "+158 (684) 878-743",
        "+10 (538) 347-401",
        "+56 (242) 901-234",
        "+174 (594) 539-946",
        "+62 (647) 787-775",
        "+18 (051) 287-382",
        "+95 (310) 537-401",
        "+2 (455) 126-377",
        "+50 (012) 148-873",
        "+163 (905) 707-740",
        "+20 (541) 401-396",
        "+29 (773) 545-520",
        "+60 (971) 986-103",
        "+167 (405) 461-331",
        "+161 (233) 981-513",
        "+45 (095) 746-635",
        "+141 (018) 132-973",
        "+158 (674) 736-891",
        "+199 (936) 162-415",
        "+163 (546) 119-476",
        "+163 (039) 436-166",
        "+188 (280) 087-526",
        "+46 (005) 119-176",
        "+43 (730) 685-847",
        "+68 (890) 680-027",
        "+172 (027) 507-632",
        "+108 (150) 380-705",
        "+50 (268) 571-336",
        "+129 (425) 765-844",
        "+45 (124) 771-454",
        "+183 (225) 960-024",
        "+2 (604) 746-137",
        "+6 (775) 969-238",
        "+58 (191) 982-491",
        "+47 (401) 100-231",
        "+197 (700) 858-976",
        "+81 (849) 629-290",
        "+132 (313) 075-754",
        "+138 (808) 083-074",
        "+21 (679) 740-834",
        "+72 (001) 050-856",
        "+82 (685) 122-086",
        "+104 (158) 671-355",
        "+130 (517) 953-149",
        "+35 (082) 845-261",
        "+151 (862) 946-541",
        "+176 (767) 782-369",
        "+196 (728) 585-376",
        "+40 (122) 224-247",
        "+118 (165) 041-038",
        "+169 (822) 542-726",
        "+194 (278) 716-950",
        "+180 (029) 457-654",
        "+5 (528) 317-854",
        "+64 (061) 601-398",
        "+94 (462) 008-482",
        "+189 (831) 591-877",
        "+161 (086) 020-168",
        "+42 (643) 245-738"
      ],
      [],
      [
        "+106 (769) 858-438"
      ],
      [],
      [
        "+106 769-858-438",
        " ",
        "+106 (769) 858-438"
      ],
      [
        0,
        3,
        4,
        8,
        ") ",
        " (",
        "-"
      ],
      [
        " ",
        "+106 (769) 858-438"
      ],
      [
        0,
        3,
        4,
        8,
        ") ",
        " (",
        "-"
      ],
      [
        " ",
        "+106 (769) 858-438"
      ]
    ],
    "all_constants": [
      0,
      "+43 (249) 097-743",
      "+75 (227) 250-652",
      3,
      4,
      "+95 (620) 820-945",
      "+64 (751) 365-934",
      7,
      "+13 (258) 276-941",
      8,
      ") ",
      "+185 (394) 622-272",
      "+106 (769) 858-438",
      "+195 (488) 831-768",
      "+33 (547) 051-264",
      "+98 (717) 997-323",
      "+7 (023) 296-647",
      " (",
      "+138 (117) 484-671",
      "+23 (448) 213-807",
      "+43 (592) 938-846",
      "+147 (864) 005-968",
      "+94 (856) 734-046",
      "-",
      "+14 (673) 759-017",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "+138 (885) 618-512",
      "+169 (060) 204-504",
      "+155 (927) 275-860",
      "+80 (066) 433-096",
      "+33 (117) 430-125",
      "+52 (836) 582-035",
      "+18 (209) 851-997",
      "+198 (557) 666-779",
      "+143 (726) 462-368",
      "+47 (414) 369-343",
      "+176 (938) 056-084",
      "+9 (507) 092-535",
      "+105 (048) 919-483",
      "+106 769-858-438",
      " ",
      "+115 (101) 728-328",
      "+42 (634) 077-089",
      "+82 (675) 366-472",
      "+86 (468) 718-108",
      "+158 (344) 541-946",
      "+65 (970) 575-488",
      "+25 (998) 898-180",
      "+144 (170) 592-272",
      "+140 (794) 289-551",
      "+130 (590) 757-665",
      "+158 (684) 878-743",
      "+10 (538) 347-401",
      "+56 (242) 901-234",
      "+174 (594) 539-946",
      "+62 (647) 787-775",
      "+18 (051) 287-382",
      "+95 (310) 537-401",
      "+2 (455) 126-377",
      "+50 (012) 148-873",
      "+163 (905) 707-740",
      "+20 (541) 401-396",
      "+29 (773) 545-520",
      "+60 (971) 986-103",
      "+167 (405) 461-331",
      "+161 (233) 981-513",
      "+106",
      "+45 (095) 746-635",
      "+141 (018) 132-973",
      "+158 (674) 736-891",
      "+199 (936) 162-415",
      "+163 (546) 119-476",
      "+163 (039) 436-166",
      "+188 (280) 087-526",
      "+46 (005) 119-176",
      "+43 (730) 685-847",
      "+68 (890) 680-027",
      "+172 (027) 507-632",
      "+108 (150) 380-705",
      "+50 (268) 571-336",
      "+129 (425) 765-844",
      "+45 (124) 771-454",
      "+183 (225) 960-024",
      "+2 (604) 746-137",
      "+6 (775) 969-238",
      "+58 (191) 982-491",
      "+42 (643) 245-738",
      "+47 (401) 100-231",
      "+197 (700) 858-976",
      "+81 (849) 629-290",
      "+132 (313) 075-754",
      "(769) 858-438",
      "+138 (808) 083-074",
      "+21 (679) 740-834",
      "+72 (001) 050-856",
      "+82 (685) 122-086",
      "+104 (158) 671-355",
      "+130 (517) 953-149",
      "+35 (082) 845-261",
      "+151 (862) 946-541",
      "+176 (767) 782-369",
      "+196 (728) 585-376",
      "+40 (122) 224-247",
      "+118 (165) 041-038",
      "(str.replace (str.replace (str.replace name \"-\" \") (str.replace (str.replace name \"-\" \") (str.replace (str.replace name \"-\" \") \"(\" \" (\")))",
      "+169 (822) 542-726",
      "+194 (278) 716-950",
      "+106 ",
      "+180 (029) 457-654",
      "+5 (528) 317-854",
      "+64 (061) 601-398",
      "+94 (462) 008-482",
      "+189 (831) 591-877",
      "+161 (086) 020-168",
      "769-858-438",
      "+83 (973) 757-831"
    ]
  },
  "39060015modified.sl": {
    "completions": [
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\")",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\" 0)) (str.substr _arg_0 (str.indexof _arg_0 \"->\" 0) (str.len _arg_0)))",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" /\")) \" keep this part\")",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /keep this part\" \"\") \"keep this part\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.replace _arg_0 \" /delete words in the area /\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\")) (str.substr _arg_0 (str.indexof _arg_0 \"/keep\") (str.len _arg_0)))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"/delete words in the area /\" 0) 1))",
      "(str.++ (str.replace _arg_0 \" /delete words in the area /keep this part\" \"\") \"keep this part\")",
      "(str.replace _arg_0 \"delete words in the area \" \"\")",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\"))",
      "(str.replace _arg_0 \"/delete words in the area /\" \"\")"
    ],
    "time_diff_ms": 880.202,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\" 0)) (str.substr _arg_0 (str.indexof _arg_0 \"->\" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \" /\")) \" keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /keep this part\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" /delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 \"/delete\")) (str.substr _arg_0 (str.indexof _arg_0 \"/keep\") (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/delete words in the area /\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.replace _arg_0 \" /delete words in the area /keep this part\" \"\") \"keep this part\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"delete words in the area \" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/delete words in the area /\" \"\"))"
    ],
    "constants": [
      [
        "",
        "/delete words in the area /"
      ],
      [
        0,
        "/"
      ],
      [
        "",
        "keep this part",
        " /delete words in the area /"
      ],
      [
        0,
        "->",
        "/delete"
      ],
      [
        0,
        " keep this part",
        " /"
      ],
      [
        " /delete words in the area /keep this part",
        "",
        "keep this part"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        "",
        " /delete words in the area /"
      ],
      [
        0,
        "/"
      ],
      [
        0,
        "/keep",
        "/delete"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        0,
        "/"
      ],
      [
        0,
        "/"
      ],
      [
        "",
        "/delete words in the area /"
      ],
      [
        0,
        1,
        "/delete words in the area /"
      ],
      [
        " /delete words in the area /keep this part",
        "",
        "keep this part"
      ],
      [
        "",
        "delete words in the area "
      ],
      [
        0,
        "/"
      ],
      [
        0,
        "/"
      ],
      [
        "",
        "/delete words in the area /"
      ]
    ],
    "all_constants": [
      "",
      0,
      "/",
      "/delete words in the area /",
      "keep this part",
      " /delete words in the area /",
      "/delete",
      " keep this part",
      "/keep",
      1,
      "delete words in the area ",
      " /delete words in the area /keep this part",
      " /",
      "->"
    ]
  },
  "phone-7-long-repeatmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 6 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 6 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "(define-fun f (name String) String\n    (str.substr name 7 3)\n)",
      "(define-fun f (name String) String\n    (str.substr name 6 3)\n)",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3))",
      "(define-fun f (name String) String\n  (str.substr name 8 3)\n)"
    ],
    "time_diff_ms": 869.919,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 8 3))",
      "(define-fun f (name String) String (str.substr name 8 3))"
    ],
    "constants": [
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        8,
        3
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        8,
        3
      ],
      [
        8,
        3
      ]
    ],
    "all_constants": [
      8,
      3,
      6,
      7
    ]
  },
  "stackoverflow6modified.sl": {
    "completions": [
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31))",
      "(str.substr _arg_0 28 (- (str.len _arg_0) 28))",
      "(str.substr _arg_0 28 (- (str.len _arg_0) 28))",
      "(str.substr _arg_0 30 (- (str.len _arg_0) 30))",
      "(str.replace _arg_0 \" - +91 90000 80000\" \"\")",
      "(str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(str.substr _arg_0 29 (str.len _arg_0))",
      "(str.substr _arg_0 38 (- (str.len _arg_0) 38))",
      "(str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(str.substr _arg_0 29 (- (str.len _arg_0) 29))",
      "(str.substr _arg_0 28 (- (str.len _arg_0) 28))",
      "(str.substr _arg_0 33 (- (str.len _arg_0) 33)))",
      "(str.substr _arg_0 24 (- (str.len _arg_0) 24)))",
      "(str.substr _arg_0 32 (- (str.len _arg_0) 32))",
      "(str.substr _arg_0 31 (- (str.len _arg_0) 31))",
      "(str.substr _arg_0 27 (- (str.len _arg_0) 27)))",
      "(str.substr _arg_0 27 (- (str.len _arg_0) 27))",
      "(str.substr _arg_0 32 (str.len _arg_0))",
      "(str.substr _arg_0 28 (- (str.len _arg_0) 28))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1))"
    ],
    "time_diff_ms": 152.955,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 30 (- (str.len _arg_0) 30)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" - +91 90000 80000\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 38 (- (str.len _arg_0) 38)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 29 (- (str.len _arg_0) 29)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 33 (- (str.len _arg_0) 33)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 24 (- (str.len _arg_0) 24)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (- (str.len _arg_0) 32)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 31 (- (str.len _arg_0) 31)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 27 (- (str.len _arg_0) 27)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 27 (- (str.len _arg_0) 27)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 32 (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 28 (- (str.len _arg_0) 28)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"=\" 0) 1)))"
    ],
    "constants": [
      [
        31
      ],
      [
        28
      ],
      [
        28
      ],
      [
        30
      ],
      [
        "",
        " - +91 90000 80000"
      ],
      [
        32
      ],
      [
        29
      ],
      [
        38
      ],
      [
        28
      ],
      [
        29
      ],
      [
        28
      ],
      [
        33
      ],
      [
        24
      ],
      [
        32
      ],
      [
        31
      ],
      [
        27
      ],
      [
        27
      ],
      [
        32
      ],
      [
        28
      ],
      [
        0,
        1,
        "="
      ]
    ],
    "all_constants": [
      "",
      32,
      33,
      0,
      1,
      38,
      "=",
      " - +91 90000 80000",
      24,
      27,
      28,
      29,
      30,
      31
    ]
  },
  "strip-non-numeric-charactersmodified.sl": {
    "completions": [
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\"))",
      "(str.to.int (str.replace _arg_0 \"%\" \"\")))"
    ],
    "time_diff_ms": 866.228,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))",
      "(define-fun f (_arg_0 String) String (str.to.int (str.replace _arg_0 \"%\" \"\")))"
    ],
    "constants": [
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ],
      [
        "%",
        ""
      ]
    ],
    "all_constants": [
      "%",
      ""
    ]
  },
  "stackoverflow1modified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(str.replace _arg_0 \" Inc\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f ((s String)) String\n  (str.replace s \" Inc\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f ((_arg_0 String)) String\n  (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\"))))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1))"
    ],
    "time_diff_ms": 372.021,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \", LLC\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace s \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \" Inc.\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" Inc\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" Inc\" 0) 1)))"
    ],
    "constants": [
      [
        "",
        " Inc"
      ],
      [
        "",
        ", LLC"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        "",
        " Inc"
      ],
      [
        "",
        " Inc."
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ],
      [
        0,
        1,
        " Inc"
      ]
    ],
    "all_constants": [
      "",
      0,
      1,
      ", LLC",
      " Inc.",
      " Inc"
    ]
  },
  "get-last-wordmodified.sl": {
    "completions": [
      "(define-fun f ((s String)) String (str.substr s (+ (str.indexof s \" \" (- (str.len s) 1)) 1) (str.len s)))",
      "(define-fun f ((x String)) String (str.substr x (+ 1 (str.indexof x \" \"))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ (str.indexof s \" \" (+ 1 (str.indexof s \" \"))) 1) (str.len s)))",
      "(define-fun f ((x String)) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f ((s String)) String (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f ((arg String)) String\n  (str.substr arg\n              (str.indexof arg \" \" (+ (str.len arg) (- 1 (str.len (str.replace arg \" \" \"\")))))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f ((s String)) String\n  (str.substr s\n              (+ 1 (str.indexof (str.replace s \" \" \"/\") \"/\" (- (str.len s) 1)))\n              (- (str.len s) (+ 1 (str.indexof (str.replace s \" \" \"/\") \"/\" (- (str.len s) 1))))))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f ((s String)) String\n  (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f ((x String)) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))",
      "(define-fun f ((s String)) String (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f ((x String)) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0) 1) (str.len _arg_0)))",
      "(define-fun f ((x String)) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))"
    ],
    "time_diff_ms": 222.298,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \" \" (- (str.len s) 1)) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ 1 (str.indexof x \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" (- (str.len _arg_0) 1))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ (str.indexof s \" \" (+ 1 (str.indexof s \" \"))) 1) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\")) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr arg (str.indexof arg \" \" (+ (str.len arg) (- 1 (str.len (str.replace arg \" \" \"\")))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (ite (str.contains _arg_0 \" \") (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\") 1) (str.len _arg_0)) _arg_0))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ 1 (str.indexof (str.replace s \" \" \"/\") \"/\" (- (str.len s) 1))) (- (str.len s) (+ 1 (str.indexof (str.replace s \" \" \"/\") \"/\" (- (str.len s) 1))))))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))",
      "(define-fun f (_arg_0 String) String (str.substr s (+ 1 (str.indexof s \" \" -1)) (str.len s)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof (str.replace _arg_0 \" \" \"/n\") \"/n\" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr x (+ 1 (str.indexof x \" \" -1)) (str.len x)))"
    ],
    "constants": [
      [
        " ",
        1
      ],
      [
        1,
        " "
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        " ",
        1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        "",
        " ",
        1
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        1,
        " ",
        "/n"
      ],
      [
        " ",
        "/n",
        1
      ],
      [
        1,
        " ",
        "/"
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        1,
        " ",
        -1
      ],
      [
        0,
        " ",
        "/n",
        1
      ],
      [
        1,
        " ",
        -1
      ]
    ],
    "all_constants": [
      "",
      " ",
      1,
      "/",
      0,
      "/n",
      -1
    ]
  },
  "phone-5modified.sl": {
    "completions": [
      "\"(str.substr name 1 2)\"",
      "(ite (str.contains name \"+\") \n     (str.substr name 1 (str.indexof name \" \" 0)) \n     (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n    (str.substr name 1 2))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))"
    ],
    "time_diff_ms": 450.252,
    "solutions": [
      "(define-fun f (name String) String \"(str.substr name 1 2)\")",
      "(define-fun f (name String) String (ite (str.contains name \"+\") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))"
    ],
    "constants": [
      [
        "(str.substr name 1 2)"
      ],
      [
        0,
        1,
        " ",
        "-",
        "+"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        " ",
        1,
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        " ",
        1,
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "(str.substr name 1 2)",
      2,
      "-",
      "+"
    ]
  },
  "phone-6-long-repeatmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "(define-fun f (name String) String\n  (str.substr name 4 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "\"(str.substr name 5 3))\"",
      "\"(str.substr name 5 3)\"",
      "\"(str.substr name 4 3))\""
    ],
    "time_diff_ms": 540.729,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String (str.substr name 4 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")",
      "(define-fun f (name String) String \"(str.substr name 4 3))\")"
    ],
    "constants": [
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        3,
        4
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.substr name 5 3)"
      ],
      [
        "(str.substr name 4 3))"
      ]
    ],
    "all_constants": [
      3,
      4,
      5,
      "(str.substr name 4 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3)"
    ]
  },
  "get-last-line-in-cellmodified.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))))))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"n\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"n\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len \"/n\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len \"/n\") 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 3 (str.len \"/n\")))) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" 0) 2)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 3))) (str.len _arg_0))"
    ],
    "time_diff_ms": 105.874,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))))))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"n\") 1) (- (str.len _arg_0) (str.indexof _arg_0 \"n\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len \"/n\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\"))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len \"/n\") 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 2 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 1 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.indexof _arg_0 \"/n\" 0) 3)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ 1 (str.indexof _arg_0 \"/n\" 0))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (- (str.len _arg_0) 1)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 3 (str.len \"/n\")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/n\" 0) 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \"/n\" 0) 2))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/n\" (+ (str.len _arg_0) (- 3))) (str.len _arg_0)))"
    ],
    "constants": [
      [
        0,
        1,
        "/n"
      ],
      [
        1,
        "n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        2,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        0,
        3,
        "/n"
      ],
      [
        0,
        1,
        "/n"
      ],
      [
        1,
        "/n"
      ],
      [
        0,
        "/n"
      ],
      [
        3,
        "/n"
      ],
      [
        0,
        2,
        "/n"
      ],
      [
        3,
        "/n"
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "n",
      3,
      "/n"
    ]
  },
  "phone-9-shortmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 1 3) \".\"\n    (str.substr name 5 3) \".\"\n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 1 3) \".\" \n    (str.substr name 5 3) \".\" \n    (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    name\n                    \" \" \"\")\n                  \"-\")\n                \"-\")\n              \"-\")\n            \" \")\n          \" \")\n        \" \")\n      \" \")\n    \" \"\n    \".\"))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace name \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    name\n                                    \" \" \"\")\n                                  \"+ \" \".\")\n                                \"- \" \".\")\n                              \"BRD\" \"Branding\")\n                            \"DRS\" \"Direct Response\")\n                          \"LDS\" \"Leads\")\n                        \"=\" \"/\")\n                      \"in\" \"_\")\n                    \"microsoft\" \"windows\")\n                  \"apple\" \"mac\")\n                \"-\" \"\")\n              \"1\" \"\")\n            \"2\" \"\")\n          \"3\" \"\")\n        \"4\" \"\")\n      \"5\" \"\")\n    \"6\" \"\")\n  \"7\" \"\")",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace name \" \" \"\")\n        \"-\"\n        \".\")\n      \".\"\n      \".\")\n    \".\"\n    \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))"
    ],
    "time_diff_ms": 630.518,
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\") \"-\") \"-\") \" \") \" \") \" \") \" \") \" \" \".\"))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace name \" \" \"\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace name \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"+ \" \".\") \"- \" \".\") \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\") \"=\" \"/\") \"in\" \"_\") \"microsoft\" \"windows\") \"apple\" \"mac\") \"-\" \"\") \"1\" \"\") \"2\" \"\") \"3\" \"\") \"4\" \"\") \"5\" \"\") \"6\" \"\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \".\" \".\") \".\" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \" \" \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 1 3) \".\" (str.substr name 5 3) \".\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))"
    ],
    "constants": [
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        " ",
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        "Branding",
        "DRS",
        "Direct Response",
        ".",
        "microsoft",
        "4",
        "_",
        "5",
        "3",
        "+ ",
        "6",
        "mac",
        "in",
        "BRD",
        "-",
        "windows",
        "/",
        "- ",
        "Leads",
        "=",
        "LDS",
        "2",
        "apple",
        "1"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        1,
        3,
        5,
        9,
        "."
      ],
      [
        "",
        " ",
        ".",
        "-"
      ]
    ],
    "all_constants": [
      "",
      1,
      " ",
      3,
      0,
      5,
      4,
      8,
      9,
      "Branding",
      "DRS",
      "Direct Response",
      ".",
      "microsoft",
      "4",
      "_",
      "5",
      "3",
      "+ ",
      "6",
      "mac",
      "in",
      "BRD",
      "-",
      "windows",
      "/",
      "- ",
      "Leads",
      "=",
      "LDS",
      "2",
      "apple",
      "1"
    ]
  },
  "38871714modified.sl": {
    "completions": [
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "\"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\"",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "\"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\"",
      "(str.replace _arg_0 \"<\" \"\")",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(str.replace _arg_0 \"<\" \"\")",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"<\" \"\") (str.replace _arg_0 \">\" \"\"))"
    ],
    "time_diff_ms": 124.165,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"<\\\" \\\"\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<\" \"\"))"
    ],
    "constants": [
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "(str.replace _arg_0 \"<\" \"\")"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "(str.replace _arg_0 \"<\" \"\")"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ],
      [
        "",
        "<"
      ]
    ],
    "all_constants": [
      "",
      "<",
      "(str.replace _arg_0 \"<\" \"\")"
    ]
  },
  "phone-5-shortmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f ((name String)) String (str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(ite (str.contains name \" \")\n     (str.substr name 1 (str.indexof name \" \" 0))\n     (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0)))",
      "(define-fun f (name String) String\n  (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))"
    ],
    "time_diff_ms": 533.538,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 1 (str.indexof name \" \" 0)) (str.substr name 1 (str.indexof name \"-\" 0))))",
      "(define-fun f (name String) String (str.substr name 1 2))",
      "(define-fun f (name String) String (str.substr name 1 3))"
    ],
    "constants": [
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        " ",
        1,
        "-"
      ],
      [
        0,
        " ",
        1,
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        2
      ],
      [
        0,
        " ",
        1,
        "-"
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      " ",
      3,
      "-"
    ]
  },
  "initials_smallmodified.sl": {
    "completions": [
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\")",
      "(str.++ (str.substr (str.at name 0) 0 1) \".\" (str.at name (+ (str.indexof name \" \" 0) 1) \".\"))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")) )",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 1)\n    \".\"\n    (str.substr \n      (str.substr name (str.indexof name \" \" 0) (str.len name))\n      1\n      1\n    )\n  )\n)",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))"
    ],
    "time_diff_ms": 166.915,
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.indexof name \" \" 0) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr (str.at name 0) 0 1) \".\" (str.at name (+ (str.indexof name \" \" 0) 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 2) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.++ (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) (str.len name)) 1 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (str.indexof name \" \" 0) 1) 0 1) \".\"))"
    ],
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        2,
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      2,
      "."
    ]
  },
  "get-domain-name-from-urlmodified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 8) 1)))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f ((url String)) String\n  (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 8 (str.indexof _arg_0 \\\"/\\\")))))\"",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 8 (str.indexof _arg_0 \\\"/\\\" 0)))))\"",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f ((_arg_0 String)) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 8) 1)))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ (str.indexof _arg_0 \\\"/\\\" 0) 2)))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\" 0)))))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 8 (str.indexof _arg_0 \\\"/\\\"))))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(define-fun f ((url String)) String\n  (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(define-fun f ((url String)) String\n  (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\"",
      "(define-fun f ((url String)) String\n  (str.substr url 0 (str.indexof url \"/\" (+ 1 (str.indexof url \"/\")))))",
      "(define-fun f ((url String)) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"/\")))))",
      "(define-fun f ((url String)) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))"
    ],
    "time_diff_ms": 720.549,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 8) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 8 (str.indexof _arg_0 \\\"/\\\")))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 8 (str.indexof _arg_0 \\\"/\\\" 0)))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \"/\" 8) 1)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ (str.indexof _arg_0 \\\"/\\\" 0) 2)))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\" 0)))))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 8 (str.indexof _arg_0 \\\"/\\\"))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\"/\\\" (+ 1 (str.indexof _arg_0 \\\"/\\\"))))\")",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 1 (str.indexof url \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr url 0 (str.indexof url \"/\" (+ 8 (str.indexof url \"//\")))))"
    ],
    "constants": [
      [
        0,
        "/",
        8,
        1
      ],
      [
        0,
        "/",
        8
      ],
      [
        0,
        "/",
        "//",
        8
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))"
      ],
      [
        0,
        "/",
        "//",
        8
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))"
      ],
      [
        0,
        "/",
        "//",
        8
      ],
      [
        0,
        "/",
        8,
        1
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2)))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0)))))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))"
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        "//",
        8
      ],
      [
        0,
        "/",
        "//",
        8
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))"
      ],
      [
        0,
        "/",
        1
      ],
      [
        0,
        "/",
        8
      ],
      [
        0,
        "/",
        "//",
        8
      ]
    ],
    "all_constants": [
      0,
      "/",
      1,
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\" 0)))))",
      "//",
      8,
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 1 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\" 0)))))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 2)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"/\")))))"
    ]
  },
  "get-middle-name-from-full-namemodified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1)))"
    ],
    "time_diff_ms": 136.688,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)) (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0 1))))"
    ],
    "constants": [
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ]
    ],
    "all_constants": [
      0,
      " ",
      1
    ]
  },
  "35744094modified.sl": {
    "completions": [
      "(str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 8))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7)))",
      "(str.substr _arg_0\n           (str.indexof _arg_0 \"://\" (+ 3 (str.indexof _arg_0 \"/\" 3)))\n           (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\"))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ 7 (str.indexof _arg_0 \"/\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7) (+ 7 (str.indexof _arg_0 \"://www.\" 0 7))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 8) (+ (str.indexof _arg_0 \"://www.\" 0 8) 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 3) (str.indexof _arg_0 \"/\" 0 3))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 1))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ 3 (str.indexof _arg_0 \"/\" 0))) (str.indexof _arg_0 \"/\" (+ 3 (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ 3 (str.indexof _arg_0 \"/\" 8))) (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"://\" 0))))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 8)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" (+ 7 (str.indexof _arg_0 \"://www.\"))) (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"://www.\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\"))))) (str.indexof _arg_0 \"/\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\"))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 7) (str.indexof _arg_0 \"/\" 0))"
    ],
    "time_diff_ms": 229.004,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 7 (str.indexof _arg_0 \"/\" 8)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ 3 (str.indexof _arg_0 \"/\" 3))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 (+ 7 (str.indexof _arg_0 \"/\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 7) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 7) (+ 7 (str.indexof _arg_0 \"://www.\" 0 7)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 8) (+ (str.indexof _arg_0 \"://www.\" 0 8) 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" 0 3) (str.indexof _arg_0 \"/\" 0 3)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ 3 (str.indexof _arg_0 \"/\" 0))) (str.indexof _arg_0 \"/\" (+ 3 (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ 3 (str.indexof _arg_0 \"/\" 8))) (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"://\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://www.\") 8) (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"://www.\") 8))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" (+ 7 (str.indexof _arg_0 \"://www.\"))) (str.indexof _arg_0 \"/\" (+ 8 (str.indexof _arg_0 \"://www.\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0) (str.indexof _arg_0 \"/\" (str.indexof _arg_0 \"://www.\" 0 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\"))))) (str.indexof _arg_0 \"/\" (+ (str.len \"://\") (str.indexof _arg_0 \"/\")))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"://www.\" 0 7) (str.indexof _arg_0 \"/\" 0)))"
    ],
    "constants": [
      [
        8,
        "/",
        7
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        "/",
        "://",
        3
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        0,
        "/",
        "://www.",
        7
      ],
      [
        0,
        "/",
        "://www.",
        1
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        0,
        8,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://www."
      ],
      [
        0,
        "/",
        "://",
        3
      ],
      [
        8,
        "/",
        "://www.",
        1
      ],
      [
        0,
        "/",
        "://",
        3
      ],
      [
        0,
        "/",
        "://",
        3,
        8
      ],
      [
        0,
        "/",
        "://www.",
        8
      ],
      [
        8,
        "/",
        "://www."
      ],
      [
        8,
        "/",
        "://www.",
        7
      ],
      [
        0,
        "/",
        "://www.",
        1
      ],
      [
        "/",
        "://"
      ],
      [
        0,
        "/",
        "://www.",
        7
      ]
    ],
    "all_constants": [
      0,
      "/",
      "://",
      3,
      1,
      "://www.",
      7,
      8
    ]
  },
  "extract-text-between-parenthesesmodified.sl": {
    "completions": [
      "(str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0)))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(ite (str.contains _arg_0 \"<\")\n     (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1))))\n     -1)",
      "(ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))) -1)",
      "(ite (str.contains _arg_0 \"<\")\n     (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"<\") 1) 2))\n     -1)",
      "(str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))"
    ],
    "time_diff_ms": 166.384,
    "solutions": [
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (str.indexof _arg_0 \"<\" 0) (str.indexof _arg_0 \">\" 0))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (+ (str.indexof _arg_0 \"<\") 1)))) -1))",
      "(define-fun f (_arg_0 String) Int (ite (str.contains _arg_0 \"<\") (str.to.int (str.substr _arg_0 (+ 6 (str.indexof _arg_0 \"<\") 1) 2)) -1))",
      "(define-fun f (_arg_0 String) Int (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 \"<\") 1) (- (str.indexof _arg_0 \">\") (str.indexof _arg_0 \"<\")))))"
    ],
    "constants": [
      [
        0,
        "<",
        ">"
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1
      ],
      [
        "<",
        ">",
        1,
        -1
      ],
      [
        "<",
        ">",
        1,
        -1
      ],
      [
        1,
        2,
        6,
        "<",
        -1
      ],
      [
        "<",
        ">",
        1
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      6,
      ">",
      "<",
      -1
    ]
  },
  "phone-5-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 (str.indexof name \" \" 0))\n)",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))",
      "(define-fun f (name String) String\n  (str.substr name 1 3))"
    ],
    "time_diff_ms": 64.171,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 (str.indexof name \" \" 0)))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))",
      "(define-fun f (name String) String (str.substr name 1 3))"
    ],
    "constants": [
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        3
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      3
    ]
  },
  "phone-9-long-repeatmodified.sl": {
    "completions": [
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"/\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"/\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace name \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\"",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\")\""
    ],
    "time_diff_ms": 124.629,
    "solutions": [
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"/\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\"/\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\"))\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\" \\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace name \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\" \\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\") \\\"-\\\" \\\".\\\")\")",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\".\\\" \\\".\\\") \\\".\\\" \\\".\\\")\")"
    ],
    "constants": [
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \"/\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \"/\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"+\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      [
        "(str.replace name \"-\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \".\") \".\" \".\")"
      ]
    ],
    "all_constants": [
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \"/\" \".\")",
      "",
      " ",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \".\") \" \" \".\")",
      "(str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \" \" \".\")",
      ".",
      "(str.replace name \"-\" \".\")",
      "-",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\"))",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\") \"+\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \".\" \".\") \".\" \".\")",
      "(str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")"
    ]
  },
  "exceljet1modified.sl": {
    "completions": [
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))"
    ],
    "time_diff_ms": 477.61,
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 (+ (str.indexof _arg_1 \".\") 1) (str.len _arg_1)))"
    ],
    "constants": [
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ],
      [
        1,
        "."
      ]
    ],
    "all_constants": [
      1,
      "."
    ]
  },
  "phone-7-shortmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(str.substr name 6 3))",
      "\"(str.substr name 6 3))\"",
      "(str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))"
    ],
    "time_diff_ms": 73.172,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String \"(str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))"
    ],
    "constants": [
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        "(str.substr name 6 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ]
    ],
    "all_constants": [
      3,
      5,
      6,
      7,
      "(str.substr name 6 3))"
    ]
  },
  "extract-word-containing-specific-textmodified.sl": {
    "completions": [
      "(str.substr _arg_0\n            (+ (str.indexof _arg_0 \" \" 0) 1)\n            (- (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \")))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 \" \")\n            (-\n                (str.indexof _arg_0 \" \")\n                (str.indexof _arg_0 \" \" 1)\n            )\n)",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(str.substr _arg_0 \n            (str.indexof _arg_0 \" \")\n            (str.indexof _arg_0 \" \" 1)\n)",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(str.substr _arg_0\n            (str.indexof _arg_0 \" \")\n            (str.len _arg_0))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" 0))"
    ],
    "time_diff_ms": 600.133,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.indexof _arg_0 \" \" 0) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \") 1) (- (str.indexof _arg_0 \" \"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (- (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (+ (str.indexof _arg_0 \" \") 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.indexof _arg_0 \" \" 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \") (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" 0)) (str.indexof _arg_0 \" \" 0)))"
    ],
    "constants": [
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ]
    ],
    "all_constants": [
      0,
      " ",
      1
    ]
  },
  "stackoverflow7modified.sl": {
    "completions": [
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (- (str.indexof _arg_0 _arg_1 0) 1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_1 0 (str.indexof _arg_1 \",\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_1 0 (str.indexof _arg_1 _arg_0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 String)) String (str.replace _arg_1 _arg_0 \"\"))"
    ],
    "time_diff_ms": 667.986,
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 _arg_1 0) 1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 0 (str.indexof _arg_1 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_1 0 (str.indexof _arg_1 _arg_0)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.substr _arg_0 0 (str.indexof _arg_0 _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 String) String (str.replace _arg_1 _arg_0 \"\"))"
    ],
    "constants": [
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0,
        1
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0,
        ","
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        ""
      ],
      [
        0
      ],
      [
        0
      ],
      [
        ""
      ]
    ],
    "all_constants": [
      "",
      0,
      ",",
      1
    ]
  },
  "phone-6-shortmodified.sl": {
    "completions": [
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name 1 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 1 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name (+ 1 (str.indexof name \" \")) 4))",
      "(ite (= (str.indexof name \" \") -1) (str.substr name 1 3) (str.substr name (+ (str.indexof name \" \") 1) 3))",
      "(str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(ite (str.contains name \" \") (str.substr name 4 3) (str.substr name 3 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 4 3))",
      "(str.substr name 6 3))",
      "(ite (str.contains name \" \") (str.substr name 5 3) (str.substr name 4 3))",
      "(ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3))",
      "(ite (str.contains name \" \") (str.substr name 4 3) (str.substr name 3 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name 5 3))",
      "(str.substr name 6 3))",
      "(str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ (str.indexof name \" \") 1) 3)\n     (str.substr name 5 3))"
    ],
    "time_diff_ms": 368.227,
    "solutions": [
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name (+ 1 (str.indexof name \" \")) 4)))",
      "(define-fun f (name String) String (ite (= (str.indexof name \" \") -1) (str.substr name 1 3) (str.substr name (+ (str.indexof name \" \") 1) 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 4 3) (str.substr name 3 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 4 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 5 3) (str.substr name 4 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name 4 3) (str.substr name 3 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name 5 3)))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ (str.indexof name \" \") 1) 3) (str.substr name 5 3)))"
    ],
    "constants": [
      [
        " ",
        3,
        1
      ],
      [
        3,
        5
      ],
      [
        " ",
        3,
        1
      ],
      [
        " ",
        3,
        5,
        1
      ],
      [
        " ",
        3,
        4,
        1
      ],
      [
        " ",
        3,
        -1,
        1
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        " ",
        3,
        4
      ],
      [
        " ",
        3,
        4,
        1
      ],
      [
        3,
        6
      ],
      [
        " ",
        3,
        4,
        5
      ],
      [
        " ",
        3,
        5,
        1
      ],
      [
        " ",
        3,
        4
      ],
      [
        " ",
        3,
        5,
        1
      ],
      [
        " ",
        3,
        5,
        1
      ],
      [
        3,
        6
      ],
      [
        3,
        5
      ],
      [
        " ",
        3,
        5,
        1
      ]
    ],
    "all_constants": [
      " ",
      1,
      3,
      4,
      5,
      6,
      -1
    ]
  },
  "43120683modified.sl": {
    "completions": [
      "\"(str.++ _arg_0\n  (ite (str.= _arg_0 \\\"one\\\") \\\" apple\\\"\n    (ite (str.= _arg_0 \\\"two\\\") \\\" bananas\\\"\n      (ite (str.= _arg_0 \\\"three\\\") \\\" strawberries\\\"\n        (ite (str.= _arg_0 \\\"four\\\") \\\" oranges\\\")))))\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\"",
      "\"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\"))",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\"",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "(str.replace _arg_0 \"one\" \"apple\")",
      "\"(str.++ _arg_0\n            (ite (= _arg_0 \\\"one\\\") \\\" apple\\\"\n                 (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\"\n                      (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\"\n                           (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\")))))\"",
      "\"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\""
    ],
    "time_diff_ms": 591.123,
    "solutions": [
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0\\n  (ite (str.= _arg_0 \\\"one\\\") \\\" apple\\\"\\n    (ite (str.= _arg_0 \\\"two\\\") \\\" bananas\\\"\\n      (ite (str.= _arg_0 \\\"three\\\") \\\" strawberries\\\"\\n        (ite (str.= _arg_0 \\\"four\\\") \\\" oranges\\\")))))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"one\\\" \\\"apple\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"one\" \"apple\"))",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0\\n            (ite (= _arg_0 \\\"one\\\") \\\" apple\\\"\\n                 (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\"\\n                      (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\"\\n                           (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\")))))\")",
      "(define-fun f (_arg_0 String) String \"(str.++ _arg_0 (ite (= _arg_0 \\\"one\\\") \\\" apple\\\" (ite (= _arg_0 \\\"two\\\") \\\" bananas\\\" (ite (= _arg_0 \\\"three\\\") \\\" strawberries\\\" (ite (= _arg_0 \\\"four\\\") \\\" oranges\\\" \\\"\\\")))))\")"
    ],
    "constants": [
      [
        "(str.++ _arg_0\n  (ite (str.= _arg_0 \"one\") \" apple\"\n    (ite (str.= _arg_0 \"two\") \" bananas\"\n      (ite (str.= _arg_0 \"three\") \" strawberries\"\n        (ite (str.= _arg_0 \"four\") \" oranges\")))))"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))"
      ],
      [
        "(str.replace _arg_0 \"one\" \"apple\")"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))"
      ],
      [
        "one",
        "apple"
      ],
      [
        "one",
        "apple"
      ],
      [
        "(str.++ _arg_0\n            (ite (= _arg_0 \"one\") \" apple\"\n                 (ite (= _arg_0 \"two\") \" bananas\"\n                      (ite (= _arg_0 \"three\") \" strawberries\"\n                           (ite (= _arg_0 \"four\") \" oranges\")))))"
      ],
      [
        "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))"
      ]
    ],
    "all_constants": [
      "(str.++ _arg_0 (ite (= _arg_0 \"one\") \" apple\" (ite (= _arg_0 \"two\") \" bananas\" (ite (= _arg_0 \"three\") \" strawberries\" (ite (= _arg_0 \"four\") \" oranges\" \"\")))))",
      "one",
      "(str.++ _arg_0\n            (ite (= _arg_0 \"one\") \" apple\"\n                 (ite (= _arg_0 \"two\") \" bananas\"\n                      (ite (= _arg_0 \"three\") \" strawberries\"\n                           (ite (= _arg_0 \"four\") \" oranges\")))))",
      "(str.++ _arg_0\n  (ite (str.= _arg_0 \"one\") \" apple\"\n    (ite (str.= _arg_0 \"two\") \" bananas\"\n      (ite (str.= _arg_0 \"three\") \" strawberries\"\n        (ite (str.= _arg_0 \"four\") \" oranges\")))))",
      "apple",
      "(str.replace _arg_0 \"one\" \"apple\")"
    ]
  },
  "split-text-string-at-specific-charactermodified.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 _arg_1)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \",\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \",\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.++ (str.substr _arg_0 0 _arg_1) (str.substr _arg_0 _arg_1 (str.len _arg_0)))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 (_arg_1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))",
      "(str.substr _arg_0 0 _arg_1)",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \".\"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1))"
    ],
    "time_diff_ms": 505.315,
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.++ (str.substr _arg_0 0 _arg_1) (str.substr _arg_0 _arg_1 (str.len _arg_0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \".\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 0 (str.indexof _arg_0 \"_\" _arg_1)))"
    ],
    "constants": [
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        ","
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0,
        ","
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "_"
      ],
      [
        0
      ],
      [
        0,
        "."
      ],
      [
        0,
        "_"
      ]
    ],
    "all_constants": [
      0,
      ".",
      ",",
      "_"
    ]
  },
  "phone-7-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n    (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n    (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n    (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 7 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))",
      "(define-fun f (name String) String\n    (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 6 3))"
    ],
    "time_diff_ms": 241.193,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 7 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))",
      "(define-fun f (name String) String (str.substr name 6 3))"
    ],
    "constants": [
      [
        3,
        7
      ],
      [
        3,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        5
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ],
      [
        3,
        6
      ]
    ],
    "all_constants": [
      3,
      5,
      6,
      7
    ]
  },
  "phone-6modified.sl": {
    "completions": [
      "(ite (= (str.substr name 6 3) \" \") (str.substr name 7 3) (str.substr name 6 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(ite (str.contains name \" \")\n     (str.substr name (+ 1 (str.indexof name \" \")) 3)\n     (str.substr name 1 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))"
    ],
    "time_diff_ms": 102.666,
    "solutions": [
      "(define-fun f (name String) String (ite (= (str.substr name 6 3) \" \") (str.substr name 7 3) (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (ite (str.contains name \" \") (str.substr name (+ 1 (str.indexof name \" \")) 3) (str.substr name 1 3)))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))"
    ],
    "constants": [
      [
        " ",
        3,
        6,
        7
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        " ",
        3,
        1
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ]
    ],
    "all_constants": [
      " ",
      1,
      3,
      5,
      6,
      7,
      "(str.substr name 5 3))"
    ]
  },
  "phone-10-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 7 3))\"",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\") \\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\") (\\\" \\\" \\\"(\\\")) \\\"-\\\" \\\" \\\")\"",
      "\"(str.replace (str.replace (str.replace name \\\" \\\" \\\") (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\") (str.replace name
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 7 3))\"",
      "\"(str.++ \\\"+\\\" (str.substr name 0 3) \\\") \\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 6 3))\"",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\"\n           (str.substr name 0 3)\n           \" (\"\n           (str.substr name 3 3)\n           \") \"\n           (str.substr name 6 3)\n           \"-\"\n           (str.substr name 9 3)))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "(str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3))",
      "(str.replace name \"-\" \" \")"
    ],
    "time_diff_ms": 860.367,
    "solutions": [
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\") \\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 4 3) \") \" (str.substr name 8 3)))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace name \\\" \\\" \\\") (\\\" \\\" \\\"(\\\")) \\\"-\\\" \\\" \\\")\")",
      null,
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\")\\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 7 3))\")",
      "(define-fun f (name String) String \"(str.++ \\\"+\\\" (str.substr name 0 3) \\\") \\\" (str.substr name 3 3) \\\"-\\\" (str.substr name 6 3))\")",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.replace name \"-\" \" \"))"
    ],
    "constants": [
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        3,
        7,
        11,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        3,
        6,
        ") ",
        " (",
        "+"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        2,
        3,
        7,
        11,
        " (",
        ") ",
        "-",
        "+"
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \")\" (str.substr name 3 3) \"-\" (str.substr name 7 3))"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))"
      ],
      [
        0,
        3,
        4,
        8,
        " (",
        ") ",
        "+"
      ],
      [
        "(str.replace (str.replace (str.replace name \" \" \") (\" \" \"(\")) \"-\" \" \")"
      ],
      [],
      [
        "(str.++ \"+\" (str.substr name 0 3) \")\" (str.substr name 3 3) \"-\" (str.substr name 7 3))"
      ],
      [
        "(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        " ",
        "-"
      ]
    ],
    "all_constants": [
      0,
      " ",
      2,
      3,
      4,
      6,
      7,
      "(str.++ \"+\" (str.substr name 0 3) \")\" (str.substr name 3 3) \"-\" (str.substr name 7 3))",
      9,
      8,
      11,
      "(str.++ \"+\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3))",
      ") ",
      " (",
      "-",
      "+",
      "(str.replace (str.replace (str.replace name \" \" \") (\" \" \"(\")) \"-\" \" \")"
    ]
  },
  "stackoverflow2modified.sl": {
    "completions": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.++ \"india\" \" china\")",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \"))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
    ],
    "time_diff_ms": 933.83,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.++ \"india\" \" china\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (- (str.indexof _arg_0 \" \" 0) 1)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))"
    ],
    "constants": [
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        " china",
        "india"
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      0,
      " ",
      1,
      " china",
      "india"
    ]
  },
  "stackoverflow9modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")) ())) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" 0)))))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))"
    ],
    "time_diff_ms": 725.149,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")) ())) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0)))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \" 0))) (- (str.len _arg_0) (+ 1 (str.indexof _arg_0 \" \" 0))))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ 1 (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \")))) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \" \" (+ 1 (str.indexof _arg_0 \" \"))) 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        0,
        1,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        1,
        " "
      ],
      [
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        1
      ],
      [
        1,
        " "
      ],
      [
        " ",
        1
      ]
    ],
    "all_constants": [
      0,
      1,
      " "
    ]
  },
  "strip-html-from-text-or-numbersmodified.sl": {
    "completions": [
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.replace _arg_0 \"<b>\" \"\")",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))",
      "(str.substr _arg_0 3 (- (str.len _arg_0) 7))"
    ],
    "time_diff_ms": 38.012,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"<b>\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 3 (- (str.len _arg_0) 7)))"
    ],
    "constants": [
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "<b>",
        ""
      ],
      [
        3,
        7
      ],
      [
        "<b>",
        ""
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "<b>",
        ""
      ],
      [
        3,
        7
      ],
      [
        "<b>",
        ""
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "<b>",
        ""
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ],
      [
        "<b>",
        ""
      ],
      [
        3,
        7
      ],
      [
        "<b>",
        ""
      ],
      [
        3,
        7
      ],
      [
        3,
        7
      ]
    ],
    "all_constants": [
      "<b>",
      "",
      3,
      7
    ]
  },
  "phone-10modified.sl": {
    "completions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-(str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 4) \" (\" \n    (str.substr name 5 3) \") \" \n    (str.substr name 9 3) \"-\" \n    (str.substr name 13 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-(str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \" \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\"))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f ((name String)) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3) \"-\" (str.substr name 15 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f ((name String)) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))"
    ],
    "time_diff_ms": 97.619,
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      null,
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 10 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      null,
      "(define-fun f (name String) String (str.++ \" \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\"))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 4 3) \"-\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 2) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3) \"-\" (str.substr name 15 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))"
    ],
    "constants": [
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        7,
        11,
        ") ",
        " (",
        "-"
      ],
      [],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        6,
        10,
        ") ",
        " (",
        "-"
      ],
      [
        0,
        3,
        7,
        11,
        ") ",
        " (",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        " ",
        3,
        4,
        "-",
        8,
        ") ",
        "("
      ],
      [],
      [
        0,
        " ",
        3,
        7,
        ") ",
        " (",
        "-"
      ],
      [
        0,
        " ",
        3,
        4,
        "-",
        8,
        ") ",
        "("
      ],
      [
        0,
        2,
        3,
        7,
        11,
        " (",
        ") ",
        "-",
        "+"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        0,
        2,
        3,
        7,
        11,
        15,
        " (",
        ") ",
        "-",
        "+"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ]
    ],
    "all_constants": [
      0,
      " ",
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      13,
      15,
      ") ",
      "+",
      " (",
      "-",
      "("
    ]
  },
  "phone-9-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.++ \n    (str.substr name 0 3) \".\"\n    (str.substr name 4 3) \".\"\n    (str.substr name 8 3) \".\"\n    (str.substr name 12 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                name\n                                                                                                                                                \" \" \"\")\n                                                                                                                                              \"+\" \".\")\n                                                                            \"-\" \".\")\n                                                                        \"-\" \".\")\n                                                                    \"-\" \".\")\n                                                                \"-\" \".\")\n                                                            \"-\" \".\")\n                                                        \"-\" \".\")\n                                                    \"-\" \".\")\n                                                \"-\" \".\")\n                                            \"-\" \".\")\n                                        \"-\" \".\")\n                                    \"-\" \".\")\n                                \"-\" \".\")\n                            \"-\" \".\")\n                        \"-\" \".\")\n                    \"-\" \".\")\n                \"-\" \".\")\n            \"-\" \".\")\n        \"-\" \".\")\n    \"-\" \".\")\n  \"-\" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \" \" \"\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\"))",
      "\"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"/\\\" \\\".\\\")\"",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          (str.replace\n                                            (str.replace\n                                              (str.replace\n                                                (str.replace\n                                                  (str.replace\n                                                    (str.replace\n                                                      (str.replace\n                                                        (str.replace\n                                                          (str.replace\n                                                            (str.replace\n                                                              (str.replace\n                                                                (str.replace\n                                                                  (str.replace\n                                                                    (str.replace\n                                                                      (str.replace\n                                                                        (str.replace\n                                                                          (str.replace\n                                                                            (str.replace\n                                                                              (str.replace\n                                                                                (str.replace\n                                                                                  (str.replace\n                                                                                    (str.replace\n                                                                                      (str.replace\n                                                                                        (str.replace\n                                                                                          (str.replace\n                                                                                            (str.replace\n                                                                                              (str.replace\n                                                                                                (str.replace\n                                                                                                  (str.replace\n                                                                                                    (str.replace\n                                                                                                      (str.replace\n                                                                                                        (str.replace\n                                                                                                          (str.replace\n                                                                                                            (str.replace\n                                                                                                              (str.replace\n                                                                                                                (str.replace\n                                                                                                                  (str.replace\n                                                                                                                    (str.replace\n                                                                                                                      (str.replace\n                                                                                                                        (str.replace\n                                                                                                                          (str.replace\n                                                                                                                            (str.replace\n                                                                                                                              (str.replace\n                                                                                                                                (str.replace\n                                                                                                                                  (str.replace\n                                                                                                                                    (str.replace\n                                                                                                                                      (str.replace\n                                                                                                                                        (str.replace\n                                                                                                                                          (str.replace\n                                                                                                                                            (str.replace\n                                                                                                                                              (str.replace\n                                                                                                                                                (str.replace\n                                                                                                                                                  (str.replace\n                                                                                                                                                    (str.replace\n                                                                                                                                                      (str.replace\n                                                                                                                                                        (str.replace\n                                                                                                                                                          (str.replace\n                                                                                                                                                            (str.replace\n                                                                                                                                                              (str.replace\n                                                                                                                                                                (str.replace\n                                                                                                                                                                  (str.replace\n                                                                                                                                                                    (str.replace\n                                                                                                                                                                      (str.replace\n                                                                                                                                                                        (str.replace\n                                                                                                                                                                          (str.replace\n                                                                                                                                                                            (str.replace\n                                                                                                                                                                              (str.replace\n                                                                                                                                                                                (str.replace\n                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                              (str.replace\n                                                                                                                                                                                                (str.replace\n                                                                                                                                                                                                  (str.replace\n                                                                                                                                                                                                    (str.replace\n                                                                                                                                                                                                      (str.replace\n                                                                                                                                                                                                        (str.replace\n                                                                                                                                                                                                          (str.replace\n                                                                                                                                                                                                            (str.replace\n                                                                                                                                                                                                              (str.replace\n                                                                                                                                                name\n                                                                                                                                                \" \"\n                                                                                                                                                \".\")\n                                                                                                                                              \"+\"\n                                                                                                                                              \".\")\n                                                                            \"-\"\n                                                                            \".\")\n                                                                        \"+\"\n                                                                        \".\")\n                                                                    \"-\"\n                                                                    \".\")\n                                                                \"-\"\n                                                                \".\")\n                                                            \"-\"\n                                                            \".\")\n                                                        \"-\"\n                                                        \".\")\n                                                    \"-\"\n                                                    \".\")\n                                                \"-\"\n                                                \".\")\n                                            \"-\"\n                                            \".\")\n                                        \"-\"\n                                        \".\")\n                                    \"-\"\n                                    \".\")\n                                \"-\"\n                                \".\")\n                            \"-\"\n                            \".\")\n                        \"-\"\n                        \".\")\n                    \"-\"\n                    \".\")\n                \"-\"\n                \".\")\n            \"-\"\n            \".\")\n        \"-\"\n        \".\")\n    \"-\"\n    \".\")\n  \" \"\n  \".\"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String\n  (str.replace\n    (str.replace\n      (str.replace\n        (str.replace\n          (str.replace\n            (str.replace\n              (str.replace\n                (str.replace\n                  (str.replace\n                    (str.replace\n                      (str.replace\n                        (str.replace\n                          (str.replace\n                            (str.replace\n                              (str.replace\n                                (str.replace\n                                  (str.replace\n                                    (str.replace\n                                      (str.replace\n                                        (str.replace\n                                          name\n                                          \" \" \"\")\n                                        \"-\")\n                                      \"(\" \"\")\n                                    \")\")\n                                  \"+\")\n                                \".\")\n                              \"BRD\" \"Branding\")\n                            \"DRS\" \"Direct Response\")\n                          \"LDS\" \"Leads\")\n                        \"=\" \"\")\n                      \"/\")\n                    \"in\" \"\")\n                  \"_\")\n                \"9\")\n              \"microsoft\" \"windows\")\n            \"apple\" \"mac\")\n          \"1\")\n        \"2\")\n      \"3\")\n    \"4\")\n  \".\"\n  \" \")\n   \" \"\n   \" \")",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))"
    ],
    "time_diff_ms": 594.331,
    "solutions": [
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\")))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3) \".\" (str.substr name 12 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"+\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \"\") \" \" \"\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String \"(str.replace (str.replace (str.replace (str.replace name \\\"-\\\" \\\".\\\") \\\" \\\" \\\".\\\") \\\"+\\\" \\\"\\\") \\\"/\\\" \\\".\\\")\")",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace ())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \".\") \"+\" \".\") \"-\" \".\") \"+\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \"-\" \".\") \" \" \".\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \".\" (str.substr name 4 3) \".\" (str.substr name 8 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \"-\" \".\") \"-\" \".\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace (str.replace name \" \" \"\") \"-\") \"(\" \"\") \")\") \"+\") \".\") \"BRD\" \"Branding\") \"DRS\" \"Direct Response\") \"LDS\" \"Leads\") \"=\" \"\") \"/\") \"in\" \"\") \"_\") \"9\") \"microsoft\" \"windows\") \"apple\" \"mac\") \"1\") \"2\") \"3\") \"4\"))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\")))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \".\") \"-\" \".\") \"-\" \".\"))"
    ],
    "constants": [
      [
        " ",
        ".",
        "-"
      ],
      [
        0,
        3,
        4,
        8,
        12,
        "."
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-",
        "+"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        "",
        " ",
        ".",
        "-"
      ],
      [
        "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"/\" \".\")"
      ],
      [],
      [
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "+",
        "-"
      ],
      [
        0,
        3,
        4,
        8,
        "."
      ],
      [
        ".",
        "-"
      ],
      [
        "",
        " ",
        "Branding",
        "DRS",
        "Direct Response",
        ".",
        "microsoft",
        "+",
        "4",
        "_",
        "3",
        "9",
        "mac",
        "in",
        "BRD",
        "-",
        ")",
        "windows",
        "/",
        "Leads",
        "=",
        "LDS",
        "2",
        "(",
        "apple",
        "1"
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "-"
      ],
      [
        " ",
        ".",
        "-"
      ]
    ],
    "all_constants": [
      0,
      " ",
      "",
      3,
      4,
      8,
      12,
      "Branding",
      "DRS",
      "Direct Response",
      ".",
      "(str.replace (str.replace (str.replace (str.replace name \"-\" \".\") \" \" \".\") \"+\" \"\") \"/\" \".\")",
      "microsoft",
      "+",
      "4",
      "_",
      "3",
      "9",
      "mac",
      "in",
      "BRD",
      "-",
      ")",
      "windows",
      "/",
      "Leads",
      "=",
      "LDS",
      "2",
      "(",
      "apple",
      "1"
    ]
  },
  "exceljet4modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))",
      "(str.replace _arg_0 \"^(https?|ftp|sftp)://\")",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0))"
    ],
    "time_diff_ms": 224.71,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\" 0) 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"//\" 0) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"://\") 3) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"^(https?|ftp|sftp)://\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"//\") 2) (str.len _arg_0)))"
    ],
    "constants": [
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        "://",
        3
      ],
      [
        "://",
        3
      ],
      [
        0,
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        "://",
        3
      ],
      [
        0,
        2,
        "//"
      ],
      [
        "://",
        3
      ],
      [
        0,
        "//"
      ],
      [
        2,
        "//"
      ],
      [
        "://",
        3
      ],
      [
        2,
        "//"
      ],
      [
        "^(https?|ftp|sftp)://"
      ],
      [
        2,
        "//"
      ]
    ],
    "all_constants": [
      0,
      "://",
      2,
      3,
      "//",
      "^(https?|ftp|sftp)://"
    ]
  },
  "33619752modified.sl": {
    "completions": [
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 Corporation))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" (ite (str.contains _arg_0 \\\"Enterprises\\\") \\\" Enterprises\\\" \\\"\\\"))) 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 LLC))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" \\\" Enterprises\\\")) 0))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\"",
      "\"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" (ite (str.contains _arg_0 \\\"Enterprises\\\") \\\" Enterprises\\\" \\\"\\\"))) 0))\"",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
    ],
    "time_diff_ms": 782.284,
    "solutions": [
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 Corporation))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" (ite (str.contains _arg_0 \\\"Enterprises\\\") \\\" Enterprises\\\" \\\"\\\"))) 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 LLC))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" \\\" Enterprises\\\")) 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 \\\" \\\" 0))\")",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \\\"Inc\\\") \\\" Inc\\\" (ite (str.contains _arg_0 \\\"Corporation\\\") \\\" Corporation\\\" (ite (str.contains _arg_0 \\\"Enterprises\\\") \\\" Enterprises\\\" \\\"\\\"))) 0))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0)))"
    ],
    "constants": [
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 Corporation))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" (ite (str.contains _arg_0 \"Enterprises\") \" Enterprises\" \"\"))) 0))"
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 LLC))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        0,
        " "
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" \" Enterprises\")) 0))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))"
      ],
      [
        "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" (ite (str.contains _arg_0 \"Enterprises\") \" Enterprises\" \"\"))) 0))"
      ],
      [
        0,
        " "
      ]
    ],
    "all_constants": [
      "(str.substr _arg_0 0 (str.indexof _arg_0 Corporation))",
      0,
      " ",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \" \" 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 LLC))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" (ite (str.contains _arg_0 \"Enterprises\") \" Enterprises\" \"\"))) 0))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 (ite (str.contains _arg_0 \"Inc\") \" Inc\" (ite (str.contains _arg_0 \"Corporation\") \" Corporation\" \" Enterprises\")) 0))"
    ]
  },
  "phone-6-longmodified.sl": {
    "completions": [
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n    (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "(str.substr name 5 3))",
      "\"(str.substr name 5 3)\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3))\"",
      "(define-fun f (name String) String\n  (str.substr name 5 3))",
      "\"(str.substr name 5 3)\""
    ],
    "time_diff_ms": 929.298,
    "solutions": [
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3))\")",
      "(define-fun f (name String) String (str.substr name 5 3))",
      "(define-fun f (name String) String \"(str.substr name 5 3)\")"
    ],
    "constants": [
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3)"
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3)"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3))"
      ],
      [
        3,
        5
      ],
      [
        "(str.substr name 5 3)"
      ]
    ],
    "all_constants": [
      "(str.substr name 5 3))",
      3,
      "(str.substr name 5 3)",
      5
    ]
  },
  "get-last-name-from-name-with-commamodified.sl": {
    "completions": [
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.len _arg_0)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.replace _arg_0 \",\" \"\")\",\"+\"))",
      "(str.replace _arg_0 \",\" \"\")",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 1 (str.indexof _arg_0 \",\")) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.len _arg_0)))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))"
    ],
    "time_diff_ms": 134.466,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.len _arg_0)) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 2))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      null,
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \",\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 1 (str.indexof _arg_0 \",\")) \",\" (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 1) (- (str.len _arg_0) (+ (str.indexof _arg_0 \",\") 1))) \",\" (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))"
    ],
    "constants": [
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [],
      [
        "",
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ]
    ],
    "all_constants": [
      0,
      1,
      2,
      "",
      ","
    ]
  },
  "initials-long-repeatmodified.sl": {
    "completions": [
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1))",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")",
      "(str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\")"
    ],
    "time_diff_ms": 399.1,
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (- (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr name (+ (str.indexof name \" \" 0) 1) 1)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 1) \".\" (str.substr (str.substr name (+ (str.indexof name \" \" 0) 1) 1) 0 1) \".\"))"
    ],
    "constants": [
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ],
      [
        0,
        1,
        " ",
        "."
      ]
    ],
    "all_constants": [
      0,
      1,
      " ",
      "."
    ]
  },
  "exceljet3modified.sl": {
    "completions": [
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9) (str.at _arg_0 10) (str.at _arg_0 11) (str.at _arg_0 12) (str.at _arg_0 13) (str.at _arg_0 14))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.++ (str.++ \"year=\" _arg_0) (str.substr \"make= subaru\" 5 6) (str.substr \"model= outback wagon\" 7 14) (str.substr \"fuel economy= 25/33\" 13 5)))",
      "(str.++ (str.substr _arg_0 5 4) (str.substr _arg_0 15 (- (str.indexof _arg_0 \" \" 15) 15)))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.++ (str.substr _arg_0 5 4) \"/\" (str.substr _arg_0 10 2))",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.replace _arg_0 \"/\" \"\")",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(define-fun f ((input String)) String\n  (str.replace\n    (str.replace\n      (str.replace\n        input \"year=\" \"\")\n      \"make=\" \"\")\n    \"model=\" \"\"))",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0))",
      "(str.substr _arg_0 6 (- (str.indexof _arg_0 \"/\" 0) 6)))"
    ],
    "time_diff_ms": 395.113,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.at _arg_0 5) (str.at _arg_0 6) (str.at _arg_0 7) (str.at _arg_0 8) (str.at _arg_0 9) (str.at _arg_0 10) (str.at _arg_0 11) (str.at _arg_0 12) (str.at _arg_0 13) (str.at _arg_0 14)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.++ \"year=\" _arg_0) (str.substr \"make= subaru\" 5 6) (str.substr \"model= outback wagon\" 7 14) (str.substr \"fuel economy= 25/33\" 13 5)))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 4) (str.substr _arg_0 15 (- (str.indexof _arg_0 \" \" 15) 15))))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.++ (str.substr _arg_0 5 4) \"/\" (str.substr _arg_0 10 2)))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"/\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.replace (str.replace (str.replace input \"year=\" \"\") \"make=\" \"\") \"model=\" \"\"))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (str.indexof _arg_0 \"/\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 6 (- (str.indexof _arg_0 \"/\" 0) 6)))"
    ],
    "constants": [
      [
        0,
        "/",
        6
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14
      ],
      [
        "",
        "/"
      ],
      [
        "year=",
        5,
        6,
        7,
        "make= subaru",
        13,
        14,
        "fuel economy= 25/33",
        "model= outback wagon"
      ],
      [
        " ",
        4,
        5,
        15
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        "/",
        2,
        4,
        5,
        10
      ],
      [
        "",
        "/"
      ],
      [
        "",
        "/"
      ],
      [
        0,
        "/",
        6
      ],
      [
        "year=",
        "",
        "model=",
        "make="
      ],
      [
        0,
        "/",
        6
      ],
      [
        0,
        "/",
        6
      ],
      [
        0,
        "/",
        6
      ],
      [
        0,
        "/",
        6
      ]
    ],
    "all_constants": [
      0,
      "",
      " ",
      2,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      "model= outback wagon",
      "year=",
      "fuel economy= 25/33",
      "make=",
      "model=",
      "/",
      "make= subaru"
    ]
  },
  "phone-10_shortmodified.sl": {
    "completions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \" \"))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-(str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \"\"))",
      "(define-fun f (name String) String (str.++ \" \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String\n  (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \" \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String\n  (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (+ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))"
    ],
    "time_diff_ms": 893.62,
    "solutions": [
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ \" \" \"(\" (str.substr name 0 3) \") \" (str.substr name 3 3) \"-\" (str.substr name 6 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \" \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      null,
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 4 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.++ \"+\" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \"\"))",
      "(define-fun f (name String) String (str.++ \" \" (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3) \"-\" (str.substr name 11 3)))",
      "(define-fun f (name String) String (str.replace (str.replace (str.replace name \" \" \"\") \"-\" \" \") \" \" \" \"))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 7 3)))",
      "(define-fun f (name String) String (str.++ (str.substr name 0 3) \" (\" (str.substr name 3 3) \") \" (str.substr name 6 3) \"-\" (str.substr name 9 3)))",
      "(define-fun f (name String) String (+ (str.substr name 0 4) \" (\" (str.substr name 5 3) \") \" (str.substr name 9 3) \"-\" (str.substr name 13 3)))"
    ],
    "constants": [
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        " ",
        3,
        "-",
        6,
        ") ",
        "("
      ],
      [
        0,
        3,
        4,
        7,
        11,
        ") ",
        " (",
        "-"
      ],
      [
        "",
        " ",
        "-"
      ],
      [
        0,
        3,
        4,
        7,
        11,
        ") ",
        " (",
        "-"
      ],
      [
        0,
        3,
        4,
        7,
        11,
        ") ",
        " (",
        "-"
      ],
      [],
      [
        0,
        3,
        7,
        11,
        ") ",
        " (",
        "-"
      ],
      [
        0,
        3,
        4,
        7,
        11,
        ") ",
        " (",
        "-"
      ],
      [
        0,
        3,
        7,
        11,
        ") ",
        " (",
        "-",
        "+"
      ],
      [
        "",
        " ",
        "-"
      ],
      [
        0,
        " ",
        3,
        7,
        11,
        ") ",
        " (",
        "-"
      ],
      [
        "",
        " ",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ],
      [
        0,
        3,
        7,
        ") ",
        " ("
      ],
      [
        0,
        3,
        6,
        9,
        ") ",
        " (",
        "-"
      ],
      [
        0,
        3,
        4,
        5,
        9,
        13,
        " (",
        ") ",
        "-"
      ]
    ],
    "all_constants": [
      0,
      " ",
      "",
      3,
      4,
      5,
      6,
      "(",
      7,
      9,
      11,
      13,
      " (",
      ") ",
      "-",
      "+"
    ]
  },
  "get-first-name-from-name-with-commamodified.sl": {
    "completions": [
      "(str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof _arg_0 \",\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \",\" \"\"))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.at \n    (str.replace \n      (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \n      \" \" \n      \"\")\n    _arg_1\n  )\n)",
      "(ite (= _arg_1 1) (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 2)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String\n  (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0))))",
      "(str.substr (str.++ _arg_0 \",\") 0 _arg_1)",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \"))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (str.indexof name \",\" 0)\n              (ite (= index 1)\n                   (- (str.indexof name \",\" 0) 1)\n                   (str.len name)\n              )\n  )\n)",
      "(ite (= _arg_1 1) (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\") (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))))",
      "(ite (= _arg_1 1) (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 2)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\")))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(ite (= _arg_1 1) (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0)))",
      "(define-fun f ((name String) (index Int)) String\n  (str.substr name\n              (ite (= index 1) 0\n                  (str.indexof name \",\" 0))\n              (ite (= index 1)\n                  (str.indexof name \",\" 0)\n                  (- (str.indexof name \",\" 0) 1))))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (_arg_1)))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String   (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \",\")))",
      "(define-fun f ((_arg_0 String) (_arg_1 Int)) String (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.indexof _arg_0 \",\")))"
    ],
    "time_diff_ms": 515.514,
    "solutions": [
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof _arg_0 \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \",\" \"\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \" \" \"\") _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 2)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") (ite (= _arg_1 1) 0 (ite (= _arg_1 2) (str.indexof _arg_0 \",\" 0) 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.++ _arg_0 \",\") 0 _arg_1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (str.indexof name \",\" 0) (ite (= index 1) (- (str.indexof name \",\" 0) 1) (str.len name))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (ite (= _arg_1 1) (str.indexof _arg_0 \",\") (str.len (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.at _arg_0 (+ (str.indexof _arg_0 \",\") 2)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr _arg_0 (+ (str.indexof _arg_0 \",\") 2) (ite (= _arg_1 1) (- (str.indexof _arg_0 \",\") 2) (str.indexof _arg_0 \",\"))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at (str.replace _arg_0 \",\" \"\") _arg_1 1))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (ite (= _arg_1 1) (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (+ (str.indexof _arg_0 \",\" 0) 1)) (str.substr _arg_0 0 (str.indexof _arg_0 \",\" 0))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr name (ite (= index 1) 0 (str.indexof name \",\" 0)) (ite (= index 1) (str.indexof name \",\" 0) (- (str.indexof name \",\" 0) 1))))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.at _arg_0 (str.indexof _arg_0 \",\" 0) (_arg_1)))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) 0 (str.indexof (str.substr _arg_0 0 (str.indexof _arg_0 \",\")) \",\")))",
      "(define-fun f (_arg_0 String _arg_1 Int) String (str.substr (str.replace _arg_0 \" \" \"\") 0 (str.indexof _arg_0 \",\")))"
    ],
    "constants": [
      [
        0,
        ","
      ],
      [
        "",
        1,
        ","
      ],
      [
        0,
        "",
        ","
      ],
      [
        " ",
        2,
        ","
      ],
      [
        0,
        " ",
        ",",
        ""
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        "",
        1,
        2,
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        " ",
        2,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        2,
        ","
      ],
      [
        1,
        2,
        ","
      ],
      [
        "",
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        1,
        ","
      ],
      [
        0,
        ","
      ],
      [
        0,
        ","
      ],
      [
        "",
        " ",
        ",",
        0
      ]
    ],
    "all_constants": [
      0,
      "",
      " ",
      1,
      2,
      ","
    ]
  },
  "stackoverflow10modified.sl": {
    "completions": [
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) (- (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 1) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 0) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" 0) 4)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0))"
    ],
    "time_diff_ms": 314.615,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.len _arg_0) (- (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 1) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.len _arg_0) 4) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 0) (- (str.len _arg_0) (str.indexof _arg_0 \" \" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \" \")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 2) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (+ (str.indexof _arg_0 \" \" 0) 4)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 3) 4))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \" \" 0) 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        4
      ],
      [
        0,
        " ",
        1
      ],
      [
        4
      ],
      [
        " ",
        1
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        4
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        0,
        " "
      ],
      [
        0,
        " ",
        4,
        1
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        0,
        " ",
        2,
        4
      ],
      [
        0,
        " ",
        4,
        1
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        3,
        4
      ],
      [
        0,
        " ",
        1
      ]
    ],
    "all_constants": [
      0,
      " ",
      1,
      3,
      4,
      2
    ]
  },
  "25239569modified.sl": {
    "completions": [
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "\"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\"",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "\"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\"",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String\n    (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "\"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\"",
      "(define-fun f ((_arg_0 String)) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "\"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\"",
      "\"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\"",
      "(define-fun f ((s String)) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((x String)) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f ((s String)) String\n    (str.replace s \"BRD\" \"Branding\"))"
    ],
    "time_diff_ms": 54.355,
    "solutions": [
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace _arg_0 \"BRD\" \"Branding\"))",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"BRD\\\" \\\"Branding\\\")\")",
      "(define-fun f (_arg_0 String) String \"(str.replace _arg_0 \\\"_BRD\\\" \\\"_Branding\\\")\")",
      "(define-fun f (_arg_0 String) String (str.replace s \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace x \" _BRD \" \" _Branding \"))",
      "(define-fun f (_arg_0 String) String (str.replace s \"BRD\" \"Branding\"))"
    ],
    "constants": [
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        "(str.replace _arg_0 \"BRD\" \"Branding\")"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        "Branding",
        "BRD"
      ],
      [
        "(str.replace _arg_0 \"BRD\" \"Branding\")"
      ],
      [
        "Branding",
        "BRD"
      ],
      [
        "Branding",
        "BRD"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        "Branding",
        "BRD"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        "(str.replace _arg_0 \"BRD\" \"Branding\")"
      ],
      [
        "Branding",
        "BRD"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        "(str.replace _arg_0 \"BRD\" \"Branding\")"
      ],
      [
        "(str.replace _arg_0 \"_BRD\" \"_Branding\")"
      ],
      [
        " _BRD ",
        " _Branding "
      ],
      [
        " _BRD ",
        " _Branding "
      ],
      [
        " _BRD ",
        " _Branding "
      ],
      [
        "Branding",
        "BRD"
      ]
    ],
    "all_constants": [
      " _Branding ",
      "(str.replace _arg_0 \"_BRD\" \"_Branding\")",
      "Branding",
      " _BRD ",
      "BRD",
      "(str.replace _arg_0 \"BRD\" \"Branding\")"
    ]
  },
  "36462127modified.sl": {
    "completions": [
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) -1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) 1)) (str.len _arg_0)))",
      "(str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))"
    ],
    "time_diff_ms": 237.124,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" 0) -1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1)) 1)) (str.len _arg_0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (- (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" 0) 1)) 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\" (+ (str.indexof _arg_0 \"/\") 1)) 1)) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (+ (str.indexof _arg_0 \"/\") 1) (str.len _arg_0)))"
    ],
    "constants": [
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        -1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        0,
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ],
      [
        "/",
        1
      ]
    ],
    "all_constants": [
      0,
      "/",
      1,
      -1
    ]
  },
  "stackoverflow5modified.sl": {
    "completions": [
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n    (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0))\n)",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (x String) String (str.substr x 0 (str.indexof x \"=\" 0)))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(str.substr _arg_0 0 (str.indexof _arg_0 \"=\"))",
      "(define-fun f (_arg_0 String) String\n  (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))"
    ],
    "time_diff_ms": 307.165,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 13))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr x 0 (str.indexof x \"=\" 0)))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 0 (str.indexof _arg_0 \"=\")))"
    ],
    "constants": [
      [
        0,
        13
      ],
      [
        0,
        13
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        13
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        13
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ],
      [
        0,
        "="
      ]
    ],
    "all_constants": [
      0,
      13,
      "="
    ]
  },
  "extract-word-that-begins-with-specific-charactermodified.sl": {
    "completions": [
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.at _arg_0 (+ (str.indexof _arg_0 \" _\") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\")))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (str.indexof _arg_0 \" _\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "\"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (+ (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (- (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (str.indexof _arg_0 \\\"_\\\" 0))))\"",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)))",
      "(str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" _\" 0) 1)))"
    ],
    "time_diff_ms": 147.232,
    "solutions": [
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.at _arg_0 (+ (str.indexof _arg_0 \" _\") 1) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\"))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \" _\" 0)) (str.indexof _arg_0 \" _\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String \"(str.substr _arg_0 (str.indexof _arg_0 \\\"_\\\" 0) (+ (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (- (str.indexof _arg_0 \\\" \\\" (str.indexof _arg_0 \\\"_\\\" 0)) (str.indexof _arg_0 \\\"_\\\" 0))))\")",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0)))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" \" 0) (str.indexof _arg_0 \" \" (+ (str.indexof _arg_0 \" \" 0) 1))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0))))",
      "(define-fun f (_arg_0 String) String (str.substr _arg_0 (str.indexof _arg_0 \" _\" 0) (+ (str.indexof _arg_0 \" _\" 0) 1)))"
    ],
    "constants": [
      [
        0,
        " ",
        "_"
      ],
      [
        1,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        " _"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        " ",
        1
      ],
      [
        0,
        " ",
        "_"
      ],
      [
        0,
        1,
        " _"
      ]
    ],
    "all_constants": [
      0,
      " ",
      1,
      "_",
      " _",
      "(str.substr _arg_0 (str.indexof _arg_0 \"_\" 0) (+ (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (- (str.indexof _arg_0 \" \" (str.indexof _arg_0 \"_\" 0)) (str.indexof _arg_0 \"_\" 0))))"
    ]
  }
}