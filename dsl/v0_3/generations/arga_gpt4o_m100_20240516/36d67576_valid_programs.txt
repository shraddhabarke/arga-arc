(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) min)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (size_equals (size_of this) 2)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node right)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (not (column_equals (column_of this) 0))
                    (not (column_equals (column_of this) 12))
                )
            )
        )
        (apply
            (move_node_max (direction_of this))
            (add_border (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (and
                        (color_equals (color_of other) G)
                        (column_equals (column_of this) (column_of other))
                    )
                )
            )
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (not (size_equals (size_of other) 1))
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (size_equals (size_of this) 1)
                    (or
                        (size_equals (size_of this) 2)
                        (size_equals (size_of this) 3)
                    )
                )
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G) )
        (apply (move_node up) )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G) )
        (apply (update_color B) )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (not (size_equals (size_of other) 1))
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (size_equals (size_of this) 1))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) 6)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max right)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) B)
                (or
                    (color_equals (color_of this) G)
                    (color_equals (color_of this) R)
                )
            )
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max left)
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (size_equals (size_of this) 1)
                    (and
                        (neighbor_of this other)
                        (not (size_equals (size_of other) 1))
                    )
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) 3)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) G)
                    (or
                        (color_equals (color_of this) B)
                        (color_equals (color_of this) R)
                    )
                )
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) G)
                    (color_equals (color_of this) B)
                )
                (neighbor_of this other)
            )
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) Y))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) Y)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and (color_equals (color_of this) B) (shape_equals (shape_of this) enclosed))
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 bottom_left target)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (neighbor_of this other))
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) max)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) min)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) max)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (height_equals (height_of this) 1)
                (color_equals (color_of this) Y)
            )
        )
        (apply
            (move_node left)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max (direction_of this))
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (not
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) B)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (move_node_max down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) G)
                (or
                    (color_equals (color_of this) B)
                    (color_equals (color_of this) R)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) Y))
                (and
                    (size_equals (size_of this) 1)
                    (and
                        (color_equals (color_of other) Y)
                        (column_equals (column_of this) (column_of other))
                    )
                )
            )
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) G)
                    (or
                        (color_equals (color_of this) R)
                        (color_equals (color_of this) B)
                    )
                )
                (and
                    (neighbor_of this other)
                    (and
                        (color_equals (color_of other) Y)
                        (size_equals (size_of other) max)
                    )
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (not (size_equals (size_of other) 1))
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 6)
        )
        (apply
            (add_border (color_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (add_border (color_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 9)
        )
        (apply
            (add_border (color_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (add_border (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) G)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (not (color_equals (color_of this) Y))
                    (and
                        (neighbor_of this other)
                        (color_equals (color_of other) O)
                    )
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) Y)
            )
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (not (size_equals (size_of other) 1))
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node right)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) Y)
                (and
                    (or
                        (color_equals (color_of this) B)
                        (or
                            (color_equals (color_of this) G)
                            (color_equals (color_of this) R)
                        )
                    )
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node down false)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (insert 1 bottom source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) G)
                    (or
                        (color_equals (color_of this) B)
                        (color_equals (color_of this) R)
                    )
                )
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) Y)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (or (color_equals (color_of this) G) (color_equals (color_of this) B))
                    (color_equals (color_of this) R)
                )
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) Y)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) G)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (size_equals (size_of other) max)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) (color_of other)))
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) min)
        )
        (apply
            (insert 0 top source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) Y))
                (and
                    (neighbor_of this other)
                    (and
                        (not (color_equals (color_of this) B))
                        (color_equals (color_of other) Y)
                    )
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (size_equals (size_of other) max)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) B)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (not (neighbor_of this other))
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node up_left)
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (extend_node up_left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max up)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) Y)
                (and
                    (size_equals (size_of this) 3)
                    (not (neighbor_of this other))
                )
            )
        )
        (apply
            (move_node down_left)
            (update_color G)
        )    
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) Y)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) Y)
                )
            )
        )
        (apply
            (move_node down)
            (update_color B)
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
        )
    )
)