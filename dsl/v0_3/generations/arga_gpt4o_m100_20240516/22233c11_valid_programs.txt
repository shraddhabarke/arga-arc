(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (or
                    (neighbor_of this other)
                    (or
                        (neighbor_of this other)
                        (or
                            (neighbor_of this other)
                            (neighbor_of this other)
                        )
                    )
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 top source)
            (insert 0 bottom source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 top_left source)
            (insert 0 top_right source)
            (insert 0 bottom_left source)
            (insert 0 bottom_right source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node down false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 1 (img_pts_of this) source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (insert 1 top_left source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node right false)
            (extend_node down false)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up_left)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not 
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 bottom source)
            (insert 0 right source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (move_node down)
            (move_node left)
            (move_node right)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node right)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (shape_equals (shape_of other) square)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max up)
            (move_node_max down)
            (move_node_max left)
            (move_node_max right)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up)
            (update_color C)
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle C false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) G))
                (or
                    (column_equals (column_of this) 1)
                    (or
                        (column_equals (column_of this) 2)
                        (column_equals (column_of this) 3)
                    )
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
            (apply
                (insert 0 top_left source)
            )
    )
)

(do
    (rule
        (vars (this))
        (filter (or (column_equals (column_of this) 0) (and (color_equals (color_of this) G) (and (not (column_equals (column_of this) 0)) (not (column_equals (column_of this) 1))))))
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (not (color_equals (color_of this) R))
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) 0)
                (column_equals (column_of this) 9)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up_left)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node left)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color C)
        )
    )
)

(do (rule (vars (this)) (filter (color_equals (color_of this) G)) (apply (move_node up))) (rule (vars (this other)) (filter (and (color_equals (color_of other) G) (neighbor_of this other))) (apply (update_color C))))

(do
    (rule
        (vars (this))
        (filter
            (not
                (color_equals (color_of this) G)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (size_equals (size_of other) 1)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node left)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (or (color_equals (color_of this) C) (color_equals (color_of this) O)))
        )
        (apply
            (insert 1 top_left source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (or
                    (neighbor_of this other)
                    (neighbor_of other this)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (insert 2 (img_pts_of this) source)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 top source)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 left source)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 bottom source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) G)
                (or (and (column_equals (column_of this) 2) (degree_equals (degree_of this) 1))
                    (column_equals (column_of this) 9))
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node left)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) even)
        )
        (apply
            (insert 0 bottom target)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (color_equals (color_of other) G)
                    (not (color_equals (color_of this) G))
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply
            (update_color C)
        )
    )
)

(do
  (rule
    (vars (this other))
    (filter
      (and
        (color_equals (color_of other) G)
        (not (color_equals (color_of this) G))
      )
    )
    (apply (move_node_max (direction_of other))
  )
  )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (insert 1 top_left source)
            (insert 1 left source)
            (insert 1 bottom_right target)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (insert 0 top_right source)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (insert 0 bottom_left source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (neighbor_of this other)
                    (and
                        (size_equals (size_of this) 1)
                        (size_equals (size_of other) 1)
                    )
                )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node down)
            (move_node right)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (or
                    (neighbor_of this other)
                    (size_equals (size_of other) 2)
                )
            )
        )
        (apply
            (insert 0 top_right source)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (insert 1 (img_pts_of this) middle)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (insert 50 top source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node left)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) G)
        )
        (apply
            (insert 1 left source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (or
                    (neighbor_of this other)
                    (neighbor_of other this)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply (update_color C))
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (add_border C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 1)
                (and
                    (column_equals (column_of this) odd)
                    (size_equals (size_of this) 1)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (add_border C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (neighbor_of this other))
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) center)
                (height_equals (height_of this) 1)
            )
        )
        (apply
            (move_node down)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 5)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (insert 1 top_left source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 top_left source)
            (insert 0 top source)
            (insert 0 top_right source)
            (insert 0 left source)
            (insert 0 right source)
            (insert 0 bottom_left source)
            (insert 0 bottom source)
            (insert 0 bottom_right source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max down_left)
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max up_right)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node_max down)
            (move_node_max up)
            (move_node_max left)
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (size_equals (size_of this) 1)
                (or
                    (size_equals (size_of this) 2)
                    (size_equals (size_of this) 5)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node_max (direction_of this))
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) 1)
                (column_equals (column_of this) 8)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (neighbor_of this other)
                    (neighbor_of other this))
                (or
                    (and
                        (size_equals (size_of other) min)
                        (color_equals (color_of this) O))
                    (and
                        (color_equals (color_of other) G)
                        (or
                            (not (color_equals (color_of this) G))
                            (not (color_equals (color_of other) C)))))
                )
        )
        (apply
            (update_color C)
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter (or
            (column_equals (column_of this) even)
            (column_equals (column_of this) odd)
        ))
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (not (neighbor_of this other))
            )
        )
        (apply
            (extend_node (direction_of other) true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 0 bottom source)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max up)
            (insert 0 top target)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (add_border C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)