(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) G)
                (or
                    (color_equals (color_of this) R)
                    (color_equals (color_of this) C)
                )
            )
        )
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (neighbor_of this other)
        )
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and (size_equals (size_of this) 1)
                (color_equals (color_of this) Y) ))
        (apply
            (move_node_max down))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) G)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (hollow_rectangle Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) C)
                (or
                    (color_equals (color_of this) G)
                    (color_equals (color_of this) R)
                )
            )
        )
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (not (color_equals (color_of this) Y))
            )
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node down_left false)
            (extend_node down_right false)
            (extend_node up_left false)
            (extend_node up_right false)
            (extend_node down false)
            (extend_node right false)
            (extend_node up false)
            (extend_node left false)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) min)
        )
        (apply
            (extend_node up false)
            (extend_node left false)
            (extend_node right false)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) min)
        )
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border F)
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply
            (add_border (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node up)
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (extend_node down true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (size_equals (size_of this) 1))
        (apply (extend_node up false) (extend_node right false) (extend_node down false) (extend_node left false))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node up_right false)
            (extend_node down_right false)
            (extend_node down_left false)
            (extend_node up_left false)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
            (update_color F)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (not (color_equals (color_of this) O))
            )
        )
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle Y false)
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (fill_rectangle Y false)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (size_equals (size_of this) 1) (neighbor_of this other)))
        (apply (extend_node (direction_of other) false) (update_color F))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (neighbor_of this other)
            )
        )
        (apply
            (fill_rectangle (color_of this) false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (color_equals (color_of this) F)
                    (and
                        (neighbor_of this other)
                        (color_equals (color_of other) G)
                    )
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) G)
                (color_equals (color_of this) F)
            )
        )
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
            (extend_node up_left true)
            (extend_node up_right true)
            (extend_node down_left true)
            (extend_node down_right true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (fill_rectangle Y false)
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (not (color_equals (color_of this) O)) (and (neighbor_of this other) (column_equals (column_of this) center))))
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
        )        
    )
)

(do
    (rule
        (vars (this))
        (filter)
          (apply
            (extend_node left false)
            (extend_node up false)
            (extend_node right false)
            (extend_node down false)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
            (extend_node up_left true)
            (extend_node up_right true)
            (extend_node down_left true)
            (extend_node down_right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (insert 0 top_left source)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node down true)
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
            (apply
                (fill_rectangle Y false)
           )
    ))

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) C)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) O)))
        (apply
            (extend_node down true)
            (extend_node right true)
            (extend_node up true)
            (extend_node left true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (hollow_rectangle F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node right false)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle Y false)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (height_equals max 12)
                (width_equals max 12)
            )
        )
        (apply
            (insert 1 bottom source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (neighbor_of this other)
            )
        )
        (apply
            (add_border B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) C)
        )
        (apply
            (add_border F)
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (not (size_equals (size_of other) 1))
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color F)
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (or
                    (color_equals (color_of this) G)
                    (color_equals (color_of this) C)
                )
            )
        )
        (apply
            (extend_node down true)
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (and
                    (column_equals (column_of this) center)
                    (not (color_equals (color_of this) O))
                )
                (size_equals (size_of this) 3)
            )
        )
        (apply
            (update_color Y)
            (add_border B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (extend_node up_left true)
            (extend_node up true)
            (extend_node up_right true)
            (extend_node left true)
            (extend_node right true)
            (extend_node down_left true)
            (extend_node down true)
            (extend_node down_right true)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (insert 1 top_left middle)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) max))
        (apply
            (add_border Y)
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
    (rule
        (vars (this other))
        (filter (and (neighbor_of this other) (not (color_equals (color_of this) Y))))
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
            (hollow_rectangle Y)
        )
    )
)

(do
  (rule
    (vars (this other))
    (filter (size_equals (size_of this) 1))
    (apply
      (update_color F)
    )
  )
  (rule
    (vars (this other))
    (filter (size_equals (size_of this) max))
    (apply
      (add_border Y)
    )
  )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border F)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node_max up_left)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (insert 1 bottom_left source)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle F false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
        )
        (apply
            (move_node up)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 1))
        (apply
            (update_color F)
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (extend_node down false)
            (extend_node up false)
            (extend_node left false)
            (extend_node right false)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) Y))
                (neighbor_of this other)
            )
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or (color_equals (color_of this) R) (color_equals (color_of this) G))
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (neighbor_of this other)
            )
        )
        (apply
            (add_border F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 1))
        )
        (apply
            (add_border F)
        )
    )
)

(do (rule (vars (this)) (filter (not (color_equals (color_of this) O))) (apply (add_border Y) (update_color F))))

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color F)
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals ( size_of this ) 3)
        )
        (apply
            ( add_border F )
          )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (add_border Y)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node_max up)
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node_max down)
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node_max left)
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node_max right)
            (update_color Y)
        )
    )
)