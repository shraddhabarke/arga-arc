[
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are adjacent to the X object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the neighboring objects of the X objects to C, A, or F based on their color and row neighborhood.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (update_color (if (row_equals (row_of other) 2) C (if (row_equals (row_of other) 3) A F)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 10 col 28\n\n            (update_color (if (row_equals (row_of other) 2) C (if (\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the neighbors of objects with color X as follows: color F to C, color O to A, color O to C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) F)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of this) F)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects within the hollow objects of color X to the color of the object directly below them.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (shape_equals (shape_of other) enclosed)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color (color_of (neighbor_of this down)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 14 col 37\n\n            (update_color (color_of (neighbor_of this down)))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all the interior objects of X to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n                (or\\n                    (shape_equals (shape_of other) square)\\n                    (shape_equals (shape_of other) enclosed)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) F)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the interior of hollow rectangles of color X to different colors C, A, and F for each specific rectangle.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) hollow)\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (hollow_rectangle C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) hollow)\\n                (color_equals (color_of this) X)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) O)\\n            )\\n        )\\n        (apply\\n            (hollow_rectangle A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) hollow)\\n                (color_equals (color_of this) X)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) O)\\n            )\\n        )\\n        (apply\\n            (hollow_rectangle F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'h' in the current parser context, at line 6 col 47\n\n          (shape_equals (shape_of this) hollow)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* SHAPE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of the interior cells of all hollow squares formed by objects of color X, to either C or A, based on the position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (fill_rectangle C false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the central parts of enclosed shapes to color C, the lower parts of enclosed shapes to color A, and the upper parts to color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (enclosed (shape_of this))\\n                (not (neighbor_of this edge))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (neighbor_of this bottom)\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (neighbor_of this top)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'e' in the current parser context, at line 6 col 18\n\n                (enclosed (shape_of this))\n                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor enclosed objects within X fences, alternating colors among C, A, and F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (color_equals (color_of this) C)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (color_equals (color_of this) A)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors of an object of color X, to color their original color with C if size 1, A if size 2, and F if size 3.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 3)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects neighboring color 'X' to color 'C' if they are 'O' or 'C' if they are 'A', and color 'A' otherwise.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) C)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (not (or\\n                    (color_equals (color_of this) C)\\n                    (color_equals (color_of this) O)\\n                ))\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of this) O)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of size 3 to colors C or A depending on their position in the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 3)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 3)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects neighboring objects of color X to color C or A if not already of color X, otherwise to color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (color_equals (color_of this) X))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects within the 'X' shapes to specific colors based on the column they are in.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color \\n                (if (column_equals (column_of this) even)\\n                    C\\n                    (if (column_equals (column_of this) odd)\\n                        A\\n                        F\\n                    )\\n                )\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 12 col 18\n\n                (if (column_equals (column_of this) even)\n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color the interior of all hollow rectangle objects to the color of the smallest neighbor object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (size_equals (size_of other) min)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle (color_of other) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (size_equals (size_of other) min)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Fill all objects of size 3 that are neighbors of color X with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 3)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle (color_of other) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all squares of color O that neighbor a square of color X to C and A respectively.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the interior pixels of all hollow rectangles adjacent to orange colored objects. Hollow with color C if X shield blue, Y shield green, Z shield fuchsia.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) A)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle C false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle B false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle G false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Z)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle F false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) A)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects neighboring an X to specific colors: C, F, and A, depending on their position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (column_equals (column_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (column_equals (column_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (column_equals (column_of this) 2)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects adjacent to X to color their region (size) with C for size 4, A for size 2, and F for size 1.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (if\\n                (size_equals (size_of this) 4)\\n                C\\n                (if\\n                    (size_equals (size_of this) 2)\\n                    A\\n                    (if\\n                        (size_equals (size_of this) 1)\\n                        F\\n                        (color_of this)\\n                    )\\n                )\\n            ))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 11 col 28\n\n            (update_color (if\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects enclosed by the object colored X to color C, and those not enclosed to color A, while preserving the object colored X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (not (color_equals (color_of this) C))\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects adjacent to objects of color X, as follows: Purple objects to color C, Orange objects to color A, and Fuchsia objects to color F, towards the object of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (or\\n                (color_equals (color_of this) O) A)\\n                (or\\n                (color_equals (color_of this) F) C)\\n                (or\\n                (color_equals (color_of this) A) F)\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 11 col 28\n\n            (update_color (or\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects that are enclosed by objects of color X.\",\n    \"code\": \"(do\\n  (rule\\n    (vars (this other))\\n    (filter\\n      (and\\n        (shape_equals (shape_of this) enclosed)\\n        (color_equals (color_of other) X)\\n        (neighbor_of this other)\\n      )\\n    )\\n    (apply\\n      (update_color C)\\n    )\\n  )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 9\n\n        (neighbor_of this other)\n        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"If an object is a neighbor of an object with color X, change its color to C if it is not of size 3, and to A if its size is 3.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (if (size_equals (size_of this) 3)\\n                (update_color A)\\n                (update_color C)\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 11 col 14\n\n            (if (size_equals (size_of this) 3)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects with letters (except X) inside to a specific color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (and\\n                    (color_equals (color_of (neighbor_of this)) C)\\n                    (or\\n                         (color_equals (color_of (neighbor_of this)) A)\\n                         (color_equals (color_of (neighbor_of this)) F))) ) ) )\\n        (apply\\n            (update_color (color_of (neighbor_of this)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 45\n\n                (color_equals (color_of (neighbor_of this)) C)\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of color O that are neighbors of color X objects to new colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Fill the interior of all hollow rectangular structures with color C, and color all adjacent objects to these rectangles with color A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (fill_rectangle C false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of other) enclosed)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (not (color_equals (color_of this) X))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects enclosed inside other objects to color C, and other enclosed objects to color A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (neighbor_of this other)\\n                (shape_equals (shape_of other) enclosed)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (not (color_equals (color_of this) C))\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (shape_equals (shape_of other) enclosed)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the interior objects surrounded by objects of color X to color C for the bottom part and color A for the top part.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) even)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) even)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all smallest objects that are neighbors of the largest objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) min)\\n                (neighbor_of this other)\\n                (size_equals (size_of other) max)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (size_equals (size_of other) max)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors to X objects, but are not X, either C, A, or F based on the size match; if size equals 2, color C, if size equals 4, color A, if size equals 1, color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (size_equals (size_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (size_equals (size_of this) 4)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend objects towards objects of color X without overlapping then recolor objects of color X to color C and the objects that extend to color A\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply (update_color A))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects that are neighbors of objects of color X to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (color_equals (color_of this) C)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (color_equals (color_of this) A)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of this) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors of an object of color X. The color changes based on their position relative to the object of color X: top and bottom neighbors to color C, and left and right neighbors to color A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (direction_eq (direction_of this other) up)\\n            (direction_eq (direction_of this other) down)\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (direction_eq (direction_of this other) left)\\n            (direction_eq (direction_of this other) right)\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 11 col 14\n\n            (direction_eq (direction_of this other) u\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For all objects that are neighbors of the grey object X, move them toward it and recolor to either C, A, or F depending on their respective positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (if (color_equals (color_of this) O) (update_color C))\\n            (if (color_equals (color_of this) R) (update_color A))\\n            (if (color_equals (color_of this) G) (update_color F))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 9 col 14\n\n            (if (color_equals (color_of this) O) (upd\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of all objects to 'C' if the object is in column 9, else change the color to 'A', and change 'O' to 'F' if they are neighbors to 'X'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 9)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (column_equals (column_of this) 9))\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 26 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects not of color X, which are neighbors of X, towards X either horizontally or vertically, and then recolor them based on their new positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (not (color_equals (color_of this) X)) (color_equals (color_of other) X)))\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of other) X) (column_equals (column_of this) (column_of other))))\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of other) X) (column_equals (column_of this) (column_of other))))\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (neighbor_of this other))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 86\n\n (not (color_equals (color_of this) X)) (color_equals (color_of other) X)))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all non-X objects adjacent to X objects to fill the rows and columns where they are adjacent to X objects with new color (C, A, or F), based on their former color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\"nl_description\": \"Recolor objects that are neighbors of the X objects to a specific color depending on their position.\",\n \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (color_equals (color_of other) X)\\n                    (color_equals (color_of this) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '}' in the current parser context, at line 30 col 1\n\n}\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Update the color of all objects neighboring an X object to C. Then, update the color of the remaining objects to A if they neighbor an X object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) C))\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all non-X objects that are adjacent to X objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects in the left half of the grid to the right if they are neighbors of X, then recolor them based on their original column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) \\\"even\\\")\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '\"' in the current parser context, at line 6 col 49\n\n        (column_equals (column_of this) \"even\")\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors of object X towards them with color C or A, depending on their relative position to object X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color (if (and (color_equals (color_of this) O)\\n                                   (column_equals (column_of this) (column_of other))) A C))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 28\n\n            (update_color (if (and (color_equals (color_of this) O)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects of size 1 in the input to different colors in the output\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the neighbors of object X to color A or C, depending on their location.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) left)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'l' in the current parser context, at line 17 col 45\n\n        (column_equals (column_of this) left)\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects adjacent to the object of color X. The recolored objects should be in the following color pattern: the first adjacent object to X is recolored to color 'C', the second adjacent object to color 'A', and the third adjacent object to color 'F'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects neighboring object X that aren't X differently. Neighboring objects to X within the same grids colored in the same unique color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors to the 'X' colored object, except the 'X' colored objects themselves.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects that are neighbors of object X to C and A according to their position within the bottom half of the grid. Change the top-left three vertical lengths to C and the target in bottom-right three vertical lengths to A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (r this)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 16 col 18\n\n                (r this)\n                 ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the neighbors of the objects of color X to different colors based on positioning.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color (if (column_equals (column_of other) center) C \\n                               (if (direction_of other) down A F)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 28\n\n            (update_color (if (column_equals (column_of other) cent\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor internal objects within the outermost rectangle of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (\\n                (filter\\n                    (color_equals (color_of this) O)\\n                )\\n                (apply\\n                    (update_color C)\\n                )\\n            ))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 12 col 17\n\n                (filter\n                ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all internal objects surrounded by X to color C, and then recolor the internal objects surrounded by X to color A if their initial color is O and F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (or\\n                    (color_equals (color_of this) O)\\n                    (color_equals (color_of this) F)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (color_equals (color_of this) X))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects neighboring objects of color X to C if they are changed to X, otherwise recolor them to A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (or\\n                    (color_equals (color_of other) X)\\n                    (and\\n                        (color_equals (color_of other) C)\\n                        (not (color_equals (color_of this) C))\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (and\\n                    (not (color_equals (color_of this) C))\\n                    (not (color_equals (color_of other) X))\\n                    (not (color_equals (color_of other) C))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects neighboring X with size greater than 1 to C. Recolor objects neighboring X and having size equals 1 to A if in pair (other than first element) else to F in second element\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (not (size_equals (size_of this) 1))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color (or (and true (color_of this F ))Y))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (size_equals (size_of this) 1))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects neighboring the grey objects based on their positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (and (color_equals (color_of this) O) (color_of (if (color_equals (color_of (color_of this) R)) C F)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'a' in the current parser context, at line 11 col 28\n\n            (update_color (and (color_equals (color_of this) O) (co\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend the small objects adjacent to X objects to form rectangles, recoloring them along the way.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (not (color_equals (color_of this) X))\\n                    (color_equals (color_of other) X)\\n                )\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 17\n\n                (size_equals (size_of this) 1)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects next to an object of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects neighboring X to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 13\n\n            (color_equals (color_of other) X)\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects neighboring an X-shaped object with the color C in the top area, and the color A in the bottom area.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (or (and (<= (row_of this) (/ (height_of (grid_this))) 2) C) A))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 11 col 28\n\n            (update_color (or (and (<= (row_of this) (/ (height_of \n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of size 1 that are neighbors of the object of color X. The new color is C if the object is on the right side of the grid, and A if it is in the middle side of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend objects of color other than X with a C neighbor upwards, extend objects of color X with neighbors of different color upwards in the direction of the neighbor.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (move_node up)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of other) O))\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects directly neighboring objects of color X, so that the smallest objects become A, the medium objects become C, and any remaining objects become F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (A) (size_equals (size_of this) min))\\n            (update_color (C) (size_equals (size_of this) 3))\\n            (update_color (F) (size_equals (size_of this) 1))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'A' in the current parser context, at line 11 col 28\n\n            (update_color (A) (size_equals (size_of this) min))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors of color X to different colors, based on their position in the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color \\n                (if (neighbor_of this other) \\n                    (color_of this)\\n                    X))\\n        )\\n)\\n)\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 9 col 18\n\n                (if (neighbor_of this other) \n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the immediate neighbors of the objects with color X to color C. Then, recolor the neighbors of these newly colored objects to color A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) C)\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 13\n\n            (color_equals (color_of other) X)\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the neighbor objects of X: neighbors towards right to C, those towards left to F, and those above to A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (if (direction_equals (direction_of other) right) C (if (direction_equals (direction_of other) left) F A)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors of the objects colored X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the enclosed areas next to X objects in different colors for different neighbor groups.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) A)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the inner holes of the X-shapes to different colors depending on their position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 48 col 1\n\n)\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects adjacent to the X objects; with the top right object to F, the bottom right object to A, and the top left object to C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects neighboring X to fill a 3x3 area towards the object of color X without overlapping, then recolor them differently.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color C)\\n        )\\n    )\\n)\\n(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 16 col 1\n\n(do\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend all objects of color not equal to X towards the object of color equal to X, without overlapping, and change their color to C or A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n  \"nl_description\": \"Extend all objects except black and grey toward the object of color black without overlapping.\",\n  \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (not (color_equals (color_of this) O))\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (and\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects adjacent to X to color blocks. If an object is inside the X boundary, recolor it to C, and if the object is outside the X boundary, recolor it to A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color (cond\\n                (size_equals (size_of this) 3) C\\n                (true) A\\n            ))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 8 col 28\n\n            (update_color (cond\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects closest to color X to color C, and the objects further to color A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        ) \\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (neighbor_of this other))\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        ) \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the interior objects to color C and color Fuchsia and Orange objects to color F and A respectively, if they are inside an object of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) F)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) A)\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors to X objects and have a different color than X. Use colors C, F, and A respectively as seen in the outputs.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects at the center of each grid enclosed by objects with color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the interior objects within the objects of color X to their respective final colors, given that the interior color is determined by the position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)        \\n            )\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)       \n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors of objects of color X to their respective distinct colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the central regions of size 3 enclosed by Xs to C, and the regions of size 2 next to these regions to A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 3)\\n                (and\\n                    (neighbor_of this other)\\n                    (width_equals (width_of other) 5)\\n                    (height_equals (height_of other) 5)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 21\n\n                    (height_equals (height_of other) 5)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the second and third row of Xs to C and A respectively.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (neighbor_of (color_of this) C)\\n                    (neighbor_of (color_of this) A)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\\n(rule\\n    (vars (this))\\n    (filter\\n        (and\\n            (color_equals (color_of this) X)\\n            (or\\n                (neighbor_of (color_of this) A)\\n            )\\n        )\\n    )\\n    (apply\\n        (update_color A)\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 34\n\n                    (neighbor_of (color_of this) C)\n                                 ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors to object of color X using color C if their color is O, and using color A if their color is F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) F)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are neighbors to the object of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (if (color_equals (color_of this) O) A C))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 11 col 28\n\n            (update_color (if (color_equals (color_of this) O) A C)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    }
]