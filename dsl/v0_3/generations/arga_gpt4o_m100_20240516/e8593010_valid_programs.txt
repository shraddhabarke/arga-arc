(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (neighbor_of this other))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 9)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 10)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) true)
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (column_equals (column_of this) 4)
                    (column_equals (column_of this) 9)
                )
            )
        )
        (apply
            (extend_node right true)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) X) (color_equals (color_of other) O))
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) O) (color_equals (color_of other) X))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (update_color G))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (color_equals (color_of this) O)
                    (color_equals (color_of this) R)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply (update_color B))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (move_node_max up)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) (column_of other))
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) R))
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) G))
                (color_equals (color_of this) G)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) even))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) odd))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) center))
        (apply (update_color G))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color X)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 10)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter 
            (and
                (column_equals (column_of this) odd)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter 
            (and
                (column_equals (column_of this) even)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter 
            (and
                (column_equals (column_of this) odd)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
)

(do
  (rule
    (vars (this))
    (filter (color_equals (color_of this) O))
    (apply (update_color B))
  )
  (rule
    (vars (this))
    (filter (color_equals (color_of this) X))
    (apply (update_color G))
  )
  (rule
    (vars (this))
    (filter (color_equals (color_of this) G))
    (apply (update_color R))
  )
)

(do
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) O) (color_equals (color_of other) X))
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) O) (not (color_equals (color_of other) X)))
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) O) (neighbor_of this other))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) G)
                (or
                    (color_equals (color_of other) B)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color B)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node up_left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down_right)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 0)
                (or
                    (size_equals (size_of this) 1)
                    (width_equals (width_of this) 1)
                )
            )
        )
        (apply
            (move_node up_left)
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 9)
                (or
                    (size_equals (size_of this) 1)
                    (width_equals (width_of this) 1)
                )
            )
        )
        (apply
            (move_node up_right)
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 0)
                (or
                    (size_equals (size_of this) 2)
                    (width_equals (width_of this) 2)
                )
            )
        )
        (apply
            (move_node down_left)
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 9)
                (or
                    (size_equals (size_of this) 2)
                    (width_equals (width_of this) 2)
                )
            )
        )
        (apply
            (move_node down_right)
            (update_color R)
        )
    )
)


(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this this)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this this)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
            (update_color R)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node_max up)
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color X)
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
           (update_color G)
           (update_color R)
           (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (not (neighbor_of this other))
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) O))
        (apply (update_color R))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) O))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) O))
        (apply (update_color B))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
            (update_color G)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (and
                    (not (color_equals (color_of this) X))
                    (neighbor_of this other)
                )
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) R))
                (not (color_equals (color_of this) X))
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of other) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) G))
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
            (update_color G)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (update_color B))
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) O) (and (neighbor_of this other) (and (height_equals (height_of other) max) (size_equals (size_of other) max)))))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) O)
                    (color_equals (color_of this) G)
                )
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color G)
        )
    )
)


(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (rotate_node 90)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (update_color B))
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color R))
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) G)
                (size_equals (size_of this) min)
            )
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) min)
            )
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (size_equals (size_of this) min)
            )
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) 1)
                (column_equals (column_of this) 10)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) 2)
                (column_equals (column_of this) 6)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 8)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) O)
                 (or (neighbor_of this other) (color_equals (color_of other) X))
                ))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) O)
                 (or (neighbor_of this other) (color_equals (color_of other) X))
                ))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) O)
                 (or (neighbor_of this other) (color_equals (color_of other) X))
                ))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) O)
                 (or (neighbor_of this other) (color_equals (color_of other) X))
                ))
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) O) (neighbor_of this other)))
        (apply (move_node_max left) (update_color (color_of other)))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) 2)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) 4)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) 6)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) 8)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) 10)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (column_equals (column_of this) 9)
                    (or (column_equals (column_of this) 0) (column_equals (column_of this) 1))
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (column_equals (column_of this) 2)
                    (or (column_equals (column_of this) 3) (column_equals (column_of this) 4))
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (column_equals (column_of this) 5)
                    (or (column_equals (column_of this) 6) (column_equals (column_of this) 7))
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
            (update_color B)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter 
            (color_equals (color_of this) G)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (move_node_max down)
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter (degree_equals (degree_of this) max))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter)
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (update_color X)
        )
    )
)