(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (height_equals (height_of this) 3)
            )
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter
            (not
                (and
                    (color_equals (color_of this) R)
                    (height_equals (height_of this) 3)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (or (color_equals (color_of this) F) (size_equals (size_of this) max)))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 9))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (or (size_equals (size_of this) 3) (color_equals (color_of this) F)))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (not (size_equals (size_of this) 9)))
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (not (size_equals (size_of this) max))
                (not (size_equals (size_of this) 1))
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 9))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) F)
                (and
                    (or
                        (color_equals (color_of this) R)
                        (color_equals (color_of this) G)
                    )
                    (color_equals (color_of this) (color_of this))
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 10))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not
                (or
                    (color_equals (color_of this) F)
                    (color_equals (color_of this) O)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (and
                    (color_equals (color_of this) F)
                    (size_equals (size_of this) 1)
                )
                (not
                    (color_equals (color_of this) F)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (not
                    (size_equals (size_of this) max)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 9))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) max))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) F)
                (size_equals (size_of this) max)
            )
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter (not (size_equals (size_of this) max)))
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) F)
                (size_equals (size_of this) 3)
            )
        )
        (apply (noop))
    )
    (rule
        (vars (this))
        (filter
            (not
                (or
                    (color_equals (color_of this) F)
                    (size_equals (size_of this) 3)
                )
            )
        )
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (neighbor_of this this))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter    
                (width_equals (width_of this) odd)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 9))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not
                (color_equals (color_of this) F)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (shape_equals (shape_of this) enclosed)
            )
        )
        (apply
            (hollow_rectangle (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) F)))
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) F)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply (noop))
    )
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) F)))
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (size_equals (size_of this) 9))
                (not (size_equals (size_of this) 3))
            )
        )
        (apply
            (update_color O)
        )
    )

    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of other) 9)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 9)
                (shape_equals (shape_of this) enclosed)
            )
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter
            (not
                (size_equals (size_of this) 9)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (height_equals (height_of this) 3)
                (column_equals (column_of this) (column_of other))
            )
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (size_equals (size_of this) 9)
                (or
                    (size_equals (size_of this) 8)
                    (size_equals (size_of this) 7)
                )
            )
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter
            (not
                (or
                    (size_equals (size_of this) 9)
                    (or
                        (size_equals (size_of this) 8)
                        (size_equals (size_of this) 7)
                    )
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 9))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (size_equals (size_of this) max))
                (size_equals (size_of other) max)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (and
                (color_equals (color_of this) R)
                (size_equals (size_of this) 6)
            ))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (height_equals (height_of this) 1)
                (size_equals (size_of this) max)
            )
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) F))
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not
                (or
                    (color_equals (color_of this) R)
                    (size_equals (size_of this) 9)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) R)
                (size_equals (size_of this) 9)
            )
        )
        (apply (noop))
    )
    (rule
        (vars (this))
        (filter (not (or
            (color_equals (color_of this) R)
            (size_equals (size_of this) 9)
        )))
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (shape_equals (shape_of this) square))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 9))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 5)
                (or
                    (color_equals (color_of this) R)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (color_equals (color_of this) F)
            )
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) R)
            ))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 6))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of other) 3)
                (size_equals (size_of this) max)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 3))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and (not (color_equals (color_of this) G)) (not (color_equals (color_of this) X)))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (shape_equals (shape_of this) enclosed))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 5)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do (rule (vars (this)) (filter (not (size_equals (size_of this) 3))) (apply (update_color O))) )

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) R)))
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter
         (and
             (not (color_equals (color_of this) R))
             (size_equals (size_of this) 1)
         )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 6))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not
                (and
                    (color_equals (color_of this) R)
                    (height_equals (height_of this) 3)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (and
                (neighbor_of this other)
                (size_equals (size_of other) max)
            ))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not
                (size_equals (size_of this) 6)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) R)
            ))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (size_equals (size_of this) min)
            )
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (and
                (size_equals (size_of this) 13)
                (and
                    (column_equals (column_of this) 2)
                    (column_equals (column_of this) 14)
                )
            ))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node down false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 9)
                (shape_equals (shape_of this) enclosed)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not
                (shape_equals (shape_of this) enclosed)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (and
                        (size_equals (size_of this) 3)
                        (color_equals (color_of this) R)
                    ) 
                    (and
                        (size_equals (size_of this) 6)
                        (color_equals (color_of this) F)
                    )
                )
            )
        )
        (apply (update_color R) (update_color F))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 6))
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (size_equals (size_of this) 9)
            )
        )
        (apply (noop))
    )
    (rule
        (vars (this))
        (filter
            (not
                (or
                    (color_equals (color_of this) R)
                    (size_equals (size_of this) 9)
                )
            )
        )
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (not (size_equals (size_of this) max))
            )
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (move_node_max up) (move_node_max down) (move_node_max left) (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (degree_equals (degree_of this) 1))
        )
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (size_equals (size_of this) 9)
            )
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter
            (not
                (or
                    (color_equals (color_of this) R)
                    (size_equals (size_of this) 9)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (color_equals (color_of this) F)
            )
        )
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color O)
        )
    )
)