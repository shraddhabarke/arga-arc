[
    {
        "response": "{\n    \"nl_description\": \"Recolor objects in alternating columns with the same color to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (equal (column_of this) (odd))\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (equal (column_of this) (odd))\\n                (color_equals (color_of this) B)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (equal (column_of this) (even))\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (equal (column_of this) (even))\\n                (color_equals (color_of this) B)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'e' in the current parser context, at line 6 col 18\n\n                (equal (column_of this) (odd))\n                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each X object column with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (neighbor_of this other)\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (neighbor_of this other)\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (neighbor_of this other)\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 12 col 13\n\n            (and\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor certain rows with a specific pattern of colors from top to bottom: R, R, R, G, G, G, Y, Y, Y; and columns with B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (and\\n                        (column_equals (column_of this) 1)\\n                        (or\\n                            (and\\n                                (row_equals (row_of this) 1)\\n                                (update_color R)\\n                            )\\n                            (and\\n                                (row_equals (row_of this) 2)\\n                                (update_color R)\\n                            )\\n                            (and\\n                                (row_equals (row_of this) 3)\\n                                (update_color R)\\n                            )\\n                        )\\n                    )\\n                    (and\\n                        (column_equals (column_of this) 2)\\n                        (or\\n                            (and\\n                                (row_equals (row_of this) 1)\\n                                (update_color G)\\n                            )\\n                            (and\\n                                (row_equals (row_of this) 2)\\n                                (update_color G)\\n                            )\\n                            (and\\n                                (row_equals (row_of this) 3)\\n                                (update_color G)\\n                            )\\n                        )\\n                    )\\n                    (and\\n                        (column_equals (column_of this) 3)\\n                        (or\\n                            (and\\n                                (row_equals (row_of this) 1)\\n                                (update_color Y)\\n                            )\\n                            (and\\n                                (row_equals (row_of this) 2)\\n                                (update_color Y)\\n                            )\\n                            (and\\n                                (row_equals (row_of this) 3)\\n                                (update_color Y)\\n                            )\\n                        )\\n                    )\\n                )\\n                (or\\n                    (and\\n                        (row_equals (row_of this) 4)\\n                        (update_color G)\\n                    )\\n                    (and\\n                        (row_equals (row_of this) 5)\\n                        (update_color G)\\n                    )\\n                    (and\\n                        (row_equals (row_of this) 6)\\n                        (update_color G)\\n                    )\\n                )\\n                (or\\n                    (and\\n                        (column_equals (column_of this) 7)\\n                        (or\\n                            (and\\n                                (row_equals (row_of this) 7)\\n                                (update_color Y)\\n                            )\\n                            (and\\n                                (row_equals (row_of this) 8)\\n                                (update_color Y)\\n                            )\\n                            (and\\n                                (row_equals (row_of this) 9)\\n                                (update_color Y)\\n                            )\\n                        )\\n                    )\\n                )\\n                (or\\n                    (update_color B)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 11 col 34\n\n                                (row_equals (row_of this) 1)\n                                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects in each column with alternating colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) (column_of other))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) (column_of other))\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) (column_of other))\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) (column_of other))\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) (column_of other))\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\\n\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 41 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects of color X to colors R, G, B, and Y, from top to bottom respectively\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (color_equals (color_of this) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor columns of all X objects to B. If they are neighbors of an R, recolor them to G. If they are also neighbors of a Y, recolor them to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )    \\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )    \\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects from bottom to top in alternating colors: B, G, R, Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and \\n                (color_equals (color_of this) X) \\n                (or\\n                    (height_equals (height_of this) min) \\n                    (height_equals (height_of this) odd)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and \\n                (color_equals (color_of this) X) \\n                (height_equals (height_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and \\n                (color_equals (color_of this) X) \\n                (height_equals (height_of this) max)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and \\n                (color_equals (color_of this) X) \\n                (height_equals (height_of this) min) \\n                (height_equals (height_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 47 col 17\n\n                (height_equals (height_of this) odd)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of the column of X objects to different colors for each column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (color_equals (color_of this) B)\\n            (column_equals (column_of this) (column_of (right this)))\\n        ))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (color_equals (color_of this) B)\\n            (column_equals (column_of this) (column_of (right (right this))))\\n        ))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (color_equals (color_of this) B)\\n            (column_equals (column_of this) (column_of (right (right (right this)))))\\n        ))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 13 col 56\n\nlumn_equals (column_of this) (column_of (right this)))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor alternating column objects to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) even))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) odd))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter) (and (column_equals (column_of this) even) (and (neighbor_of this other) (color_equals (color_of other) X)))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter) (and (column_equals (column_of this) odd) (and (neighbor_of this other) (color_equals (color_of other) X)))\\n        (apply (update_color Y))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'a' in the current parser context, at line 14 col 19\n\n        (filter) (and (column_equals (column_of this) even\n                  ^\nExpected one of: \n\t* APPLY\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each column of objects to a different color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) odd))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) even))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (\\n            and \\n            (column_equals (column_of this) odd)\\n            (\\n                neighbor_of \\n                this \\n                other)\\n        ))\\n        (apply (\\n            update_color \\n            (img_pts_of other) source)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 24 col 14\n\n            (img_pts_of other) source)\n             ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects in each column based on specific rows.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (row_equals (row_of other) 2)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (row_equals (row_of other) 3)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (row_equals (row_of other) 4)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (row_equals (row_of other) 5)))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (row_equals (row_of other) 6)))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (row_equals (row_of other) 7)))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (row_equals (row_of other) 8)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (row_equals (row_of other) 9)))\\n        (apply (update_color Y))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 4 col 74\n\nls (column_of this) (column_of other)) (row_equals (row_of other) 2)))\n                                        ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects to the next available color in the RGBY sequence\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) O)))\\n        (apply\\n            (update_color (color_of (this next_color)))\\n        )\\n    ))\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 37\n\n            (update_color (color_of (this next_color)))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects in columns of even index.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (and\\n                    (color_equals (color_of this) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (not (color_equals (color_of this) X))\\n                (size_equals (size_of other) max)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (not (color_equals (color_of this) X))\\n                (size_equals (size_of other) min)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 18 col 17\n\n                )\n                ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each object in the grid sequentially through the colors R, G, B, and Y along the vertical axis.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (color_equals (color_of other) X))\\n        (apply\\n            (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (color_equals (color_of this) X) (color_equals (color_of (neighbor_of this other)) R)))\\n        (apply\\n            (update_color G))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (color_equals (color_of this) X) (color_equals (color_of (neighbor_of this other)) G)))\\n        (apply\\n            (update_color B))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (color_equals (color_of this) X) (color_equals (color_of (neighbor_of this other)) B)))\\n        (apply\\n            (update_color Y))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 79\n\nlor_of this) X) (color_equals (color_of (neighbor_of this other)) R)))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each 'X' object by alternating colors along the columns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color (column_equals (column_of this) 1) R)\\n            (update_color (column_equals (column_of this) 2) B)\\n            (update_color (column_equals (column_of this) 3) G)\\n            (update_color (column_equals (column_of this) 4) Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 8 col 28\n\n            (update_color (column_equals (column_of this) 1) R)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects in each column separately in a cyclical pattern, starting from the bottom row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (color_equals (color_of other) X) (neighbor_of this other)))\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (B))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (color_equals (color_of other) B) (neighbor_of this other)))\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (G))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (color_equals (color_of other) G) (neighbor_of this other)))\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (Y))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (column_equals (column_of this) (column_of other)) (color_equals (color_of other) Y) (neighbor_of this other)))\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (R))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 107\n\nher)) (color_equals (color_of other) X) (neighbor_of this other)))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color all objects in the middle column based on their row: R for rows 2-4, G for rows 5-7, Y for rows 8-9, and B for the remaining rows.\",\n    \"code\": \"(do (rule (vars (this)) (filter (column_equals (column_of this) 4)) (apply (rule (vars (this)) (filter (and (neighbor_of this other) (height_equals (degree_of this) (size_of other)))) (apply (if (and (> (height_of this) 2) (< (height_of this) 5)) (update_color R)))))))\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 1 col 77\n\numn_equals (column_of this) 4)) (apply (rule (vars (this)) (filter (and (neighbo\n                                        ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the neighboring objects of all columns of X objects sequentially in each column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) R))\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) R))\\n                (not (color_equals (color_of this) G))\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) R))\\n                (not (color_equals (color_of this) G))\\n                (not (color_equals (color_of this) B))\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (column_equals (column_of this) (column_\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to multiple specified colors, different colors for objects in different columns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) odd)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) (center))\\n                (column_equals (column_of this) min)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) (min + 1))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 22 col 50\n\n       (column_equals (column_of this) (center))\n                                        ^\nExpected one of: \n\t* COLUMN_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each vertical streak of objects: The first streak (excluding the first object) should be recolored in red, the second streak in green, the third in blue, and the fourth in yellow.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (exists other)\\n                (and\\n                    (neighbor_of this other)\\n                    (column_equals (column_of this) (column_of other))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (exists other)\\n                (and\\n                    (neighbor_of this other)\\n                    (column_equals (column_of this) (column_of other))\\n                    (color_equals (color_of other) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (exists other)\\n                (and\\n                    (neighbor_of this other)\\n                    (column_equals (column_of this) (column_of other))\\n                    (color_equals (color_of other) G)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (exists other)\\n                (and\\n                    (neighbor_of this other)\\n                    (column_equals (column_of this) (column_of other))\\n                    (color_equals (color_of other) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'e' in the current parser context, at line 6 col 18\n\n                (exists other)\n                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of objects in column 3 to alternating colors: first to R, followed by G, B, Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 3)\\n                (color_equals (color_of this) R)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 3)\\n                (color_equals (color_of this) G)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 3)\\n                (color_equals (color_of this) B)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (neighbor_of this this)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each object of color X to different colors in a vertical pattern: the first occurrence to B, the second to R, the third to G, the fourth to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of (neighbor_of this 'prev')) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of (neighbor_of this 'prev')) R)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of (neighbor_of this 'prev')) G)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 16 col 41\n\n                (color_equals (color_of (neighbor_of this 'prev')) B)\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects to different colors vertically.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (neighbor_of this this)\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (not (color_equals (color_of this) G))\\n                (neighbor_of this this)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (not (color_equals (color_of this) G))\\n                (not (color_equals (color_of this) B))\\n                (neighbor_of this this)\\n                (column_equals (column_of this) even)\\n                (height_equals (height_of this) max)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (column_equals (column_of this) even)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects in the columns with odd indices to colors R, G, Y, and B in sequence.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) odd)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects of size 1 starting from top to bottom in the order R, G, B, then placing Y in the last row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (size_equals (size_of this) 1)))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (size_equals (size_of this) 1) (color_equals (color_of this) X) (and (neighbor_of this other) (color_equals (color_of other) R))))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (size_equals (size_of this) 1) (color_equals (color_of this) X) (and (neighbor_of this other) (color_equals (color_of other) G))))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (size_equals (size_of this) 1) (color_equals (color_of this) X) (and (neighbor_of this other) (color_equals (color_of other) B))))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 4 col 52\n\nlter (and (size_equals (size_of this) 1)))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the entire column containing X objects by following a vertical gradient of colors: R, G, B, and Y, in that order.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this (and (color_equals (color_of this) X) (column_equals (column_of this) (column_of this))))\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this (and (color_equals (color_of this) R) (column_equals (column_of this) (column_of this))))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this (and (color_equals (color_of this) G) (column_equals (column_of this) (column_of this))))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 16 col 35\n\n                (neighbor_of this (and (color_equals (color_of this) X) (c\n                                  ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each vertical segment of 9 objects (X) in a column to specific colors (B, R, G, Y) from bottom to top.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) odd)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 3)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 7)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) G)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 24 col 18\n\n                (row_equals (row_of this) 3)\n                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color X to the right, except objects in the last column, and then recolor them accordingly: those in rows 2 through 4 to R, in rows 5 through 7 to G, and in rows 8 through 9 to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (not (column_equals (column_of this) 8))\\n            )\\n        )\\n        (apply\\n            (move_node right)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (and\\n                        (column_equals (column_of this) 8)\\n                        (size_equals (row_of this) 2)\\n                    )\\n                    (size_equals (row_of this) 3)\\n                    (size_equals (row_of this) 4)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (and\\n                        (column_equals (column_of this) 8)\\n                        (size_equals (row_of this) 5)\\n                    )\\n                    (size_equals (row_of this) 6)\\n                    (size_equals (row_of this) 7)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (and\\n                        (column_equals (column_of this) 8)\\n                        (size_equals (row_of this) 8)\\n                    )\\n                    (size_equals (row_of this) 9)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 22 col 39\n\n                        (size_equals (row_of this) 2)\n                                      ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all the objects in each column of the object of color X starting from the top-most to bottom-most to a different color in sequential order.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each column of objects with alternating colors (R, G, B, Y) for each distinct column starting with the second column of objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) (column_of other))\\n        )\\n        (apply\\n            (update_color (cond\\n                ((column_equals (column_of this) 1) R)\\n                ((column_equals (column_of this) 2) G)\\n                ((column_equals (column_of this) 3) B)\\n                ((column_equals (column_of this) 4) Y)\\n                ((column_equals (column_of this) 5) R)\\n                ((column_equals (column_of this) 6) G)\\n                ((column_equals (column_of this) 7) B)\\n                ((column_equals (column_of this) 8) Y)\\n            ))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 8 col 28\n\n            (update_color (cond\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all columns of color X objects, each to a different color ranging through R, G, and B, except the first one which is recolored to B and the last one to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) center)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) even)\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (not (column_equals (column_of this) center))\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) center)\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (not (column_equals (column_of this) center))\\n                (and\\n                    (not (color_equals (color_of this) R))\\n                    (not (color_equals (color_of this) Y))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) last))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 29 col 17\n\n                (color_equals (color_of this) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color X one step right, and update their color in a vertical repeating pattern: R, G, B, Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (move_node right)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this (other))\\n            )\\n        )\\n        (apply\\n            (move_node right)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this (other))\\n            )\\n        )\\n        (apply\\n            (move_node right)\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this (other))\\n            )\\n        )\\n        (apply\\n            (move_node right)\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 35\n\n                (neighbor_of this (other))\n                                  ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each object segment of the vertical line based on its row position using a pattern: R, G, B, Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) R) (neighbor_of this (direction_of down))))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) R) (neighbor_of this (direction_of right))))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) G) (neighbor_of this (direction_of down))))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) G) (neighbor_of this (direction_of right))))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) B) (neighbor_of this (direction_of down))))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) B) (neighbor_of this (direction_of right))))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) Y) (neighbor_of this (direction_of down))))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 73\n\nls (color_of this) R) (neighbor_of this (direction_of down))))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of height max to different colors from top to bottom.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (height_equals (height_of this) max)\\n                (neighbor_of other this)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (height_equals (height_of this) max)\\n                (neighbor_of other this)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (height_equals (height_of this) max)\\n                (neighbor_of other this)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (height_equals (height_of this) max)\\n                (neighbor_of other this)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (height_equals (height_of this) max)\\n                (neighbor_of other this)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all columns from left to right starting with R, G, B, and Y in every 3-column group.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) odd))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (column_equals (column_of this) even)\\n            (column_equals (column_of other) odd)\\n            (neighbor_of this other)))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and\\n            (column_equals (column_of this) even)\\n            (column_equals (column_of other) even)\\n            (neighbor_of this other (neighbor_of other this))\\n            (neighbor_of this other)))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and\\n            (column_equals (column_of this) even)\\n            (column_equals (column_of other) even)\\n            (neighbor_of this other (neighbor_of other this))\\n            (neighbor_of this other)))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 14 col 13\n\n            (neighbor_of this other)))\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor vertical stripes of X to B and recolor left vertical stripes of X to R, right vertical stripes of X to G and the bottom vertical stripes of X to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (color_equals (color_of this) B) (color_equals (color_of other) X) (neighbor_of this other)))\\n        (apply (update_color R) (move_node left))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (color_equals (color_of this) B) (color_equals (color_of other) X) (neighbor_of this other)))\\n        (apply (update_color G) (move_node right))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (color_equals (color_of this) B) (color_equals (color_of other) X) (neighbor_of this other)))\\n        (apply (update_color Y) (move_node down))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 9 col 89\n\ns) B) (color_equals (color_of other) X) (neighbor_of this other)))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects colored X one step to the right and recolor them based on their vertical position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (move_node right)\\n            (update_color (color_of this) (case (column_equals (column_of this) 1) R (column_equals (column_of this) 2) R (column_equals (column_of this) 3) G (column_equals (column_of this) 4) G (column_equals (column_of this) 5) B (column_equals (column_of this) 6) B (column_equals (column_of this) 7) Y (column_equals (column_of this) 8) Y)))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 9 col 43\n\n          (update_color (color_of this) (case (column_equals (column_of this) 1)\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all non-'X' objects in a single column with alternating colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color (Y R B G))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'Y' in the current parser context, at line 8 col 28\n\n            (update_color (Y R B G))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all columns of color X to colors B, then recolor their left neighbor columns to colors R, G, and Y from top to bottom.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n                (height_equals (height_of this) (height_of other))\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n                (and\\n                    (height_equals (height_of this) (height_of other))\\n                    (neighbor_of this this)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 29 col 17\n\n                (height_equals (height_of this) (height_\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each column except the first and last column of X in the grid according to their row position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (neighbor_of (this) (this))\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (neighbor_of (this) (this))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (neighbor_of (this) (this))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 12 col 26\n\n            (neighbor_of (this) (this))\n                         ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects from top to bottom with alternating colors R, G, B, and Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each X object to B and recolor its adjacent even-indexed neighbors to R and odd-indexed neighbors to G, and recolor alternate every third neighbor starting from the newest recolored neighbor to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) Y))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n                (column_equals (column_of this) (3 * (size_of (this))))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each column of the objects having color X in specified sequence per given row positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the vertical objects of size 9\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 9)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 9)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n            (update_color G)\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) B)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the squares in the first column to R, second column to R, third column to R, fourth column to G, and fifth column to B. Recolor last column to Y and B accordingly.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) 3))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) 4))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) 5))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 7)\\n                (or\\n                    (size_equals (size_of this) (size_of other)))))\\n        (apply (update_color Y))\\n    )    \\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 7))\\n        (apply (update_color B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 33 col 65\n\ne_equals (size_of this) (size_of other)))))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects in each column next to a 'X' object to a specific color based on their initial position in the column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the neighboring columns of objects to different colors, depending on their terminating column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of other) X)))\\n        (apply\\n            (move_node right)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (neighbor_of this (neighbor 2 other)) (color_equals (color_of other) X)))\\n        (apply\\n            (move_node_right right)\\n            (move_node left)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (neighbor_of this (neighbor 2 other)) (neighbor_of this (neighbor 3 other)) (color_equals (color_of other) X)))\\n        (apply\\n            (move_node_right right)\\n            (move_node_right right)\\n            (move_node left)\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 19 col 65\n\nighbor_of this other) (neighbor_of this (neighbor 2 other)) (color_equals (color\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor alternating sections of the vertical lines from top to bottom starting with R, then G, then B, and finally Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            ((and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n            ))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) B)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor columns neighboring blue objects in a gradient from top to bottom, with different colors for each column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (color_equals (color_of this) R)\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n                (color_equals (color_of this) R)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of this) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each 'X' node columnwise to different colors in a repeating sequence.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the column filled with X alternating between R and Y for the first half, and between G and B for the second half.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) ((column_of other)))\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color (if (< this 5) (if (even this) R Y) (if (even this) G B)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 50\n\n       (column_equals (column_of this) ((column_of other)))\n                                        ^\nExpected one of: \n\t* COLUMN_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change all X's in each column to a different color sequentially.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) B)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each column of 'X' to a specific color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color (and (column_equals (column_of this) 2) R)) \\n            (update_color (and (column_equals (column_of this) 3) G)) \\n            (update_color (and (column_equals (column_of this) 4) B)) \\n            (update_color (and (column_equals (column_of this) 5) Y))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'a' in the current parser context, at line 8 col 28\n\n            (update_color (and (column_equals (column_of this) 2) R\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of objects to B, R, G, or Y based on their position in the object of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (if (column_equals (column_of this) 6)\\n                (update_color B)\\n                (update_color R)\\n                (update_color G)\\n                (update_color Y)\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 6 col 14\n\n            (if (column_equals (column_of this) 6)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each vertical column of objects to distinct colors sequentially from left to right.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (neighbor_of this this))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (not (color_equals (color_of this) R)) (neighbor_of this this)))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (not (color_equals (color_of this) R)) (not (color_equals (color_of this) G)) (neighbor_of this this)))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (not (color_equals (color_of this) R)) (not (color_equals (color_of this) G)) (not (color_equals (color_of this) B)) (neighbor_of this this)))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 18 col 100\n\n (not (color_equals (color_of this) G)) (neighbor_of this this)))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor columns of objects neighboring the object of color X, with the colors R, G, B, and Y in sequence.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 13\n\n            (color_equals (color_of other) X)\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each vertical segment of objects to a distinct color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (neighbor_of this (other))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this (other))\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this (other))\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this (other))\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 5 col 31\n\n            (neighbor_of this (other))\n                              ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor every object next to the specific column with multiple color transformations, depending on the row's parity.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) odd)\\n                (height_equals (height_of this) 2)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 2)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (neighbor_of this this)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects on the same vertical column as the object colored X, sequentially with colors R, G, B, and Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of this) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of this) B)\\n                (neighbor_of other this)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of this) B)\\n                (neighbor_of other this)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 29 col 17\n\n                (neighbor_of other this)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects to colors R, G, Y, and B, row by row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) 2) (row_equals (row_of this) 2)))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) 5) (row_equals (row_of this) 5)))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) 8) (row_equals (row_of this) 8)))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) 10) (row_equals (row_of this) 10)))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 4 col 58\n\nand (column_equals (column_of this) 2) (row_equals (row_of this) 2)))\n                                        ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor segments of vertical line objects according to their position in the column (alternate colors).\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node up)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (color_equals (color_of this) R)\\n                    (color_equals (color_of this) G)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node up)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (color_equals (color_of this) G)\\n                    (color_equals (color_of this) Y)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node up)\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (not (neighbor_of this other))\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 35 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor different columns of objects to colors R, G, Y, and B with each new column encountered in the grid starting from the second column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) (column_of other))\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) (column_of other))\\n            (and\\n                (not (neighbor_of this other))\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) (column_of other))\\n            (and\\n                (not (neighbor_of this other))\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) (column_of other))\\n            (and\\n                (not (neighbor_of this other))\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 13\n\n            (and\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the X objects in the first pattern to R, G, Y and B respectively from top to bottom.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (neighbor_of (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (neighbor_of (color_of this) G)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (neighbor_of (color_of this) Y)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 16 col 30\n\n                (neighbor_of (color_of this) R)\n                             ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each object in columns where they appear with alternating colors starting from blue.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) (column_of other))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) (column_of other))\\n                (row_equals (degree_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) (column_of other))\\n                (row_equals (degree_of this) 4)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) (column_of other))\\n                (row_equals (degree_of this) 6)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 16 col 18\n\n                (row_equals (degree_of this) 2)\n                 ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    }
]