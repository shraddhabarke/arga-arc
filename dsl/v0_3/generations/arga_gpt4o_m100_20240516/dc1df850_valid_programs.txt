(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (not (color_equals (color_of this) F))
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (not (color_equals (color_of this) R))
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (move_node_max left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
)

(do (rule (vars (this)) (filter (color_equals (color_of this) R)) (apply (move_node_max right) )) (rule (vars (this)) (filter) (apply (extend_node right false) (update_color B) )))

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
            (extend_node (direction_of other) true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) 0)
                (or
                    (column_equals (column_of this) 1)
                    (column_equals (column_of this) 2)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (width_equals (width_of this) 1)
                (height_equals (height_of this) 1)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color B)
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left true)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (extend_node down false)
            (extend_node up false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node left false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (update_color B)
        )
    )
)

(do (rule (vars (this other)) (filter (neighbor_of this other)) (apply (update_color B))))

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node down true)
            (extend_node up true)
            (extend_node left true)
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node down_left false)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node down_right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up_left false)
            (extend_node up false)
            (extend_node up_right false)
            (extend_node left false)
            (extend_node right false)
            (extend_node down_left false)
            (extend_node down false)
            (extend_node down_right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of other) R) (neighbor_of this other)))
        (apply (move_node_max (direction_of other)) (update_color B))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) F))
                (not (color_equals (color_of this) G))
            )
        )
        (apply
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (color_equals (color_of other) R)
                    (not (color_equals (color_of this) R))
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle B false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (extend_node right false)
            (extend_node up false)
            (extend_node down false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (or
                    (column_equals (column_of this) 0)
                    (or
                        (column_equals (column_of this) 4)
                        (or
                            (color_equals (color_of this) F)
                            (or
                                (column_equals (column_of this) 7)
                                (or
                                    (color_equals (color_of this) G)
                                    (color_equals (color_of this) R)
                                )
                            )
                        )
                    )
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do 
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) R)
        )
        (apply
            (extend_node left false)
            (extend_node right false)
            (extend_node up false)
            (extend_node down false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (not (color_equals (color_of this) F))
            )
        )
        (apply
            (extend_node right false)
            (extend_node left false)
            (extend_node up false)
            (extend_node down false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up    true)
            (extend_node down  true)
            (extend_node left  true)
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) G))
                (not (color_equals (color_of this) C))
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (not (neighbor_of this other))
                    (not (color_equals (color_of other) F))
                )
            )
        )
        (apply
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node right true)
            (extend_node left true)
            (extend_node down true)
        )
    )
)

( do 
    ( rule
        ( vars ( this other ) )
        ( filter
            ( neighbor_of this other )
        )
        ( apply
            (move_node_max up )
            ( update_color B )
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left true)
            (extend_node right true)
            (extend_node up true)
            (extend_node down true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of other) R)
                    (color_equals (color_of other) G)
                )
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter 
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter 
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (neighbor_of this other)
        )
        (apply
            (extend_node left false)
            (extend_node right false)
            (extend_node up false)
            (extend_node down false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (extend_node right false)
            (extend_node up false)
            (extend_node down false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (extend_node left false)
            (extend_node right false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
            (extend_node right false)
            (extend_node up false)
            (extend_node down false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right true)
            (extend_node left true)
            (extend_node down true)
            (extend_node up true)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply (extend_node left true))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (extend_node right true)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (not (color_equals (color_of other) O))
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node down false)
            (extend_node right false)
            (extend_node up false)
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (extend_node left true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or (column_equals (column_of this) 0) (column_equals (column_of this) 4))
        )
        (apply
            (update_color B)
        )
    )
)