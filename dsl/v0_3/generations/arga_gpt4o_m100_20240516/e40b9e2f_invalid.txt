[
    {
        "response": "{\n    \"nl_description\": \"All adjacent pairs of size 1 are inserted with a step of color Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (size_equals (size_of other) 1)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (insert 0 top right)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move neighbors of objects of color A or F, if they are the same color as the object in the center column, to its direction and change the moved object's color to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) \\\"A\\\")\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color \\\"Y\\\")\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) \\\"F\\\")\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color \\\"Y\\\")\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '\"' in the current parser context, at line 6 col 48\n\n         (color_equals (color_of other) \"A\")\n                                        ^\nExpected one of: \n\t* FCOLOR\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert objects diagonally on both sides of the center of the objects of color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (insert (color_of this) top_left source)\\n            (insert (color_of this) top_right source)\\n            (insert (color_of this) bottom_left source)\\n            (insert (color_of this) bottom_right source)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 21\n\n            (insert (color_of this) top_left source)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than O, that are neighbors of another object of the same color, one step diagonally towards the object of the same color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) (color_of other))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node down_right)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) (color_of other))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_up)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '_' in the current parser context, at line 29 col 23\n\n            (move_node_up)\n                      ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects with color 'Y' one step toward both objects with color 'A'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (color_equals (color_of other) A)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert an object to left and right of objects with size of 1 greater than or equal to current, with color Y, and move object of color Y to top left coordinates of current object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)         \\n            )\\n        )\\n        (apply\\n            (insert (object_id this)top_left,top_right))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node up)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert the color of adjacent objects of color Y into the eligible objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of other) Y)\\n        )\\n        (apply\\n            (insert (color_of this) (img_pts_of this) target)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 21\n\n            (insert (color_of this) (img_pts_of this) target\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to their neighboring position vertically aligned with another object.\",\n    \"code\": \"(library\\n    (program\\n        (do\\n            (rule\\n                (vars (this other))\\n                (filter\\n                    (and \\n                        (size_equals (size_of this) 1)\\n                        (neighbor_of this other)\\n                    )\\n                )\\n                (apply\\n                    (move_node_max (direction_of other))\\n                )\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'l' in the current parser context, at line 1 col 2\n\n(library\n ^\nExpected one of: \n\t* DO\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all singleton objects (i.e., objects of size 1) to the nearest object of the same color, and change the color of the first row union cells\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (height_of this) max)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'h' in the current parser context, at line 17 col 27\n\n            (size_equals (height_of this) max)\n                          ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend objects of color different than O and equal or smaller than size 3 in all directions, up to one step.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (or\\n                    (size_equals (size_of this) 1)\\n                    (size_equals (size_of this) 2)\\n                    (size_equals (size_of this) 3)\\n                )\\n            )\\n        )\\n        (apply\\n            (extend_node up false)\\n            (extend_node down false)\\n            (extend_node left false)\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 21\n\n                    (size_equals (size_of this) 3)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Propagate blocks of color Y to the neighboring cells, replacing existing ones if they extend in both directions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (color_equals (color_of this) Y))\\n        (apply\\n            (move_node_max (up))\\n            (move_node_max (down))\\n            (move_node_max (left))\\n            (move_node_max (right))\\n            (move_node_max (up_left))\\n            (move_node_max (up_right))\\n            (move_node_max (down_left))\\n            (move_node_max (down_right))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'u' in the current parser context, at line 6 col 29\n\n            (move_node_max (up))\n                            ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 and color G or Y toward an orange object, and then recolor them to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (or\\n                        (color_equals (color_of this) Y)\\n                        (color_equals (color_of this) G)\\n                    )\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) A)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 13 col 21\n\n                    (color_equals (color_of other) A)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the nearest 'Y'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) Y)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move neighbors of objects of color A, F, and W to the left, if their color matches with their target's color, then move these same objects to the right.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) A)\\n                    (color_equals (color_of this) Y)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) F)\\n                    (color_equals (color_of this) G)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) W)\\n                    (color_equals (color_of this) W)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node left)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) A)\\n                    (color_equals (color_of other) Y)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) F)\\n                    (color_equals (color_of other) G)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) W)\\n                    (color_equals (color_of other) W)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node right)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 9 col 21\n\n                    (color_equals (color_of this) Y)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Create symmetrical copies of all objects of color different than O, along the vertical and horizontal axes of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (mirror (mirror_axis_of vertical))\\n            (mirror (mirror_axis_of horizontal))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'v' in the current parser context, at line 8 col 37\n\n            (mirror (mirror_axis_of vertical))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor a `Y` object if it is to the side of an `A` object, then alternate pattern 'Y A Y' vertically.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) A)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) A)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of width 1 to the same column as objects of color Y that are neighbors to them.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (width_equals (width_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) Y)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (column_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 14 col 25\n\n            (move_node (column_of other))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color W within the row and add an object of color W to their vertical neighbors\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (move_node right)\\n            (insert this (img_pts_of other) middle)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (insert this (img_pts_of other) middle)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 9 col 21\n\n            (insert this (img_pts_of other) middle)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert objects of color of the most frequent neighbor in the grid, into the objects with color Y, at their position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (insert (color_of other) this source)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 21\n\n            (insert (color_of other) this source)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 3 one step horizontally outward from the center, and then recolor them to color W.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 3)\\n                (or\\n                    (column_equals (column_of this) even)\\n                    (column_equals (column_of this) odd)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (if (column_equals (column_of this) even) right left))\\n            (update_color W)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 14 col 25\n\n            (move_node (if (column_equals (column_of this) even)\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 3 up if neighboring an object of a different color, and then recolor them to color Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 3)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) (color_of other)))\\n            )\\n        )\\n        (apply\\n            (move_node up)\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (color_equals (color_of this) (colo\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all Y objects of size 1 towards neighboring objects of size greater than 4.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (and\\n                    (color_equals (color_of this) Y)\\n                    (size_equals (size_of this) 1)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (size_equals (size_of other) (5))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '5' in the current parser context, at line 12 col 51\n\n          (size_equals (size_of other) (5))\n                                        ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of size 1 and color different from O and W one step closer to objects of size 1 and color W.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (not (color_equals (color_of this) O))\\n                (not (color_equals (color_of this) W))\\n                (and\\n                    (size_equals (size_of other) 1)\\n                    (color_equals (color_of other) W)\\n                    (neighbor_of this other)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (color_equals (color_of this) W))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of size 1 towards objects directly above them, if they are neighbors, and recolor both objects to color of object below.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this (column_of this up))\\n            )\\n        )\\n        (apply\\n            (move_node up)\\n            (update_color (color_of this)) \\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 7 col 35\n\n                (neighbor_of this (column_of this up))\n                                  ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Add objects of color Y to the edges of objects of color A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) A)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) Y)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) A)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all edge objects toward the center, while duplicating their color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (or (neighbor_of this center) (neighbor_of this center)))\\n        (apply\\n            (move_node center)\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 4 col 39\n\n        (filter (or (neighbor_of this center) (neighbor_of this center)))\n                                      ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert color W at the center of each square object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) square)\\n        )\\n        (apply\\n            (insert this center)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 8 col 21\n\n            (insert this center)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert objects of color Y in empty cells that are adjacent to any object of size 3.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of other) 3)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of this) O)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move Y objects toward a neighboring A object, and F objects toward a neighboring G object\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (color_equals (color_of other) A)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) F)\\n                (color_equals (color_of other) G)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all non-center objects toward the center object, if they are on the same row or column, and recolor them to the color of the center object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (SHAPE_EQ (shape_of this) center))\\n                (or\\n                    (COLUMN_EQ (column_of this) (column_of other))\\n                    (ROW_EQ (row_of this) (row_of other))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (color_of other))\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'S' in the current parser context, at line 6 col 23\n\n                (not (SHAPE_EQ (shape_of this) center))\n                      ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of color Y to create a border around objects of color A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) A)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) A)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of colors other than 'O', 'A', and 'C' vertically to create symmetry.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (or\\n                    (color_equals (color_of this) F)\\n                    (color_equals (color_of this) Y)\\n                    (color_equals (color_of this) G)\\n                    (color_equals (color_of this) W)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max up)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 21\n\n                    (color_equals (color_of this) G)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all non-Y objects in Layer 1 of size 1 to Y-object neighbors they are adjacent to, then recolor them to color Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) Y)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects neighbors to objects of maximum size while changing their color, and then move them back and change them back to initial color\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (size_equals (size_of other) max)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color (color_of other))\\n            (move_node (direction_of (mirror_axis_of other)))\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 13 col 38\n\n            (move_node (direction_of (mirror_axis_of other)))\n                                     ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Duplicate and move objects marked with Y appearing at the boundaries to the interior of the objects they mark.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (or\\n                    (and (color_equals (color_of other) A) (neighbor_of other this))\\n                    (and (color_equals (color_of other) G) (neighbor_of other this))\\n                )\\n            )\\n        )\\n        (apply\\n            (insert this this this)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size greater than 1 one step towards the nearest corner, and then recolor them to color Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (or (size_equals (size_of this) 1) (size_equals (size_of this) 2)))\\n        )\\n        (apply\\n            (move_node_max (img_pts_of this))\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 29\n\n            (move_node_max (img_pts_of this))\n                            ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Consider the rows containing objects of color A or F or W. Move the smallest objects that are immediate neighbors (if any) towards the object of maximum size, without overlapping. Recolor each object of color Y (immediate neighbor of A or F or W) towards the neighbors maximum size.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (size_equals (size_of other) max)\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) Y)\\n        )\\n        (apply\\n            (move_node_max (direction_of (other)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 42\n\n           (move_node_max (direction_of (other)))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects located at corners to the nearest neighboring object, then recolor each of its corners with the color of the neighboring it was moved to.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (or\\n                    (neighbor_of this other)\\n                    (and\\n                        (or\\n                            (color_equals (color_of this) Y)\\n                            (color_equals (color_of this) F)\\n                            (color_equals (color_of this) W)\\n                        )\\n                        (neighbor_of this other)\\n                        (not\\n                            (color_equals (color_of other) O)\\n                        )\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 12 col 29\n\n                            (color_equals (color_of this) W)\n                            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 towards the center column if they are neighbors of an object of color Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) Y)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (column_of (column center)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 14 col 25\n\n            (move_node (column_of (column center)))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert an object of color Y neighboring to all objects of color A and F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (color_equals (color_of other) A)\\n                (color_equals (color_of other) F)\\n            )\\n        )\\n        (apply\\n            (insert this this (source))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 11 col 21\n\n            (insert this this (source))\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Mirror all Y-colored objects along their vertical axis.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) Y)\\n        )\\n        (apply\\n            (mirror ((mirror_axis_of this) \\\"vertical\\\"))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 22\n\n            (mirror ((mirror_axis_of this) \"vertical\"))\n                     ^\nExpected one of: \n\t* MIRROR_AXIS_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects of shape square of size 1 for each square of the same color, and recolor them to color of the nearest neighbor.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 towards the center of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node (column_of (direction_of this) center))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 8 col 25\n\n            (move_node (column_of (direction_of this) center))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than Y, G, or W, in between two adjacent same-colored cells of Y, G, or W.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) Y))\\n                (not (color_equals (color_of this) G))\\n                (not (color_equals (color_of this) W))\\n            )\\n        )\\n        (apply\\n            (move_node_max up)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (color_equals (color_of this) W))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of size 1 to the nearest object of the same color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) (color_of other))\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of this) (color_of \n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than O and Y, one step towards the center column of the grid. If they are already in the same column, no movement is performed.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (and\\n                    (not (color_equals (color_of this) Y))\\n                    (not (column_equals (column_of this) center))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (if (column_equals (column_of this) left) right left))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 14 col 25\n\n            (move_node (if (column_equals (column_of this) left)\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    }
]