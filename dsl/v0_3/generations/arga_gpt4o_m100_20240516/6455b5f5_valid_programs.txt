(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) max)
                (neighbor_of this this)
            )
        )
        (apply
            (add_border B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (size_equals (size_of other) max)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color X)
            (move_node_max up_left)
            (move_node_max up_right)
            (move_node_max down_left)
            (move_node_max down_right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max up)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (and
                        (neighbor_of this other)
                        (color_equals (color_of other) C)
                    )
                    (not (color_equals (color_of this) R))
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (neighbor_of this other))
        (apply
            (update_color C)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (move_node_max up)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (height_equals (height_of this) 1)
                (neighbor_of this this)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 3))
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max (direction_of this) )
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (or
                    (neighbor_of this other)
                    (and
                        (height_equals (height_of this) 1)
                        (width_equals (width_of this) 1)
                    )
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (or
                    (height_equals (height_of other) 1)
                    (width_equals (width_of other) 1)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) B))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) R))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 12)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node down)
            (move_node_max left)
            (add_border C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (or
                    (neighbor_of this other)
                    (color_equals (color_of this) R)
                )
                (and
                    (color_equals (color_of other) R)
                    (not (neighbor_of this other))
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (and
                    (color_equals (color_of this) R)
                    (color_equals (color_of other) R)
                )
                (not (neighbor_of this other))
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) (column_of other))
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node down)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) center)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) R) (neighbor_of this this)))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (insert 1 top_left source)
            (insert 1 bottom_right source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (size_equals (size_of this) 1)
                    (neighbor_of this this)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (size_equals (size_of this) 1)
                    (neighbor_of this this)
                )
            )
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (and
                        (shape_equals (shape_of this) square)
                        (column_equals (column_of this) even)
                    )
                    (and
                        (size_equals (size_of this) max)
                        (column_equals (column_of this) odd)
                    )
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (column_equals (column_of this) center)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (insert 0 bottom_left source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (or
                        (neighbor_of this other)
                        (neighbor_of other this)
                    )
                    (not
                        (neighbor_of this this)
                    )
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (neighbor_of this this)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (neighbor_of this this)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) R) (neighbor_of this other)))
        (apply (update_color C) )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (update_color B) )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) square)
                (size_equals (size_of this) max)
            )
        )
        (apply
            (add_border C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) R)
        )
        (apply
            (move_node_max up)
            (move_node_max down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (neighbor_of this other) (and (color_equals (color_of this) O) (color_equals (color_of other) R))))
        (apply (update_color C))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color B))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (add_border C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (move_node left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (height_equals (height_of this) max)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) R)))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (update_color O))
    )
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) R)))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (neighbor_of this other))
        (apply (update_color B))
    )
    (rule
        (vars (this other))
        (filter (and (or (neighbor_of this other) (size_equals (size_of this) 1)) (color_equals (color_of other) Y)))
        (apply (update_color R)))
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color B))
    )
    (rule
        (vars (this other))
        (filter (and (neighbor_of this other) (color_equals (color_of other) O)))
        (apply (update_color F)))
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (and
                        (neighbor_of this other)
                        (column_equals (column_of other) even)
                    )
                    (and
                        (neighbor_of this other)
                        (column_equals (column_of other) odd)
                    )
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (not (neighbor_of this other))
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (neighbor_of this other)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (add_border B)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 12)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (column_equals (column_of this) 12))
                (and
                    (column_equals (column_of this) 12)
                    (or
                        (column_equals (column_of this) 10)
                        (and
                            (column_equals (column_of this) 11)
                            (column_equals (column_of this) 12)
                        )
                    )
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (and (neighbor_of this other) (color_equals (color_of other) B))
                (and (color_equals (color_of this) R) (column_equals (column_of this) 0))
            )
        )
        (apply
            (add_border C)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (fill_rectangle B false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node down false)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this this)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (not (color_equals (color_of this) R))
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (add_border B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
        )
        (apply
            (fill_rectangle B false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) R) (neighbor_of this other)))
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) R) (size_equals (size_of this) 1)))
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node_max left)
            (move_node_max right)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) R))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (neighbor_of this this)
                (size_equals (size_of this) 13)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 11)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (fill_rectangle B false)
            (extend_node right false)
            (extend_node left false)
            (extend_node down false)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 0)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) odd)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 11)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 8)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (or
                        (column_equals (column_of other) 0)
                        (column_equals (column_of other) 10)
                    )
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (or
                        (column_equals (column_of other) 3)
                        (column_equals (column_of other) 11)
                    )
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (column_equals (column_of this) even)
            )
        )
        (apply
            (extend_node up false)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (extend_node down false)
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (and
                        (color_equals (color_of this) O)
                        (color_equals (color_of other) R)
                    )
                    (and
                        (color_equals (color_of this) O)
                        (color_equals (color_of other) C)
                    )
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (neighbor_of this this)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (neighbor_of this this)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) (column_of other))
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node left true)
            (extend_node right true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (and
                    (column_equals (column_of this) 0)
                    (or
                        (color_equals (color_of this) R)
                        (color_equals (color_of this) O)
                    )
                )
                (and
                    (column_equals (column_of this) 12)
                    (or
                        (color_equals (color_of this) R)
                        (color_equals (color_of this) O)
                    )
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right false)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
              (color_equals (color_of this) O)
              (and
                (size_equals (size_of this) 1)
                (or
                  (column_equals (column_of this) 0)
                  (size_equals (size_of this) 0)
                )
              )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) R) (neighbor_of this other))
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (fill_rectangle B false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (size_equals (size_of this) 13)
                (size_equals (size_of this) 11)
            )
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (size_equals (size_of this) 13))
                (not (size_equals (size_of this) 11))
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (or
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 0)
                (color_equals (color_of this) C)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (size_equals (size_of other) max)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (size_equals (size_of other) max)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (or
                    (size_equals (size_of other) max)
                    (not (size_equals (size_of this) 1))
                )
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (fill_rectangle B false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 13)
        )
        (apply
            (move_node (direction_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (move_node up)
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color C)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border C)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (add_border C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (add_border C)
            (fill_rectangle B false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (add_border C)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (color_equals (color_of this) O)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (extend_node right false)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (height_equals (height_of this) even)
            )
        )
        (apply
            (move_node_max down)
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 11)
        )
        (apply
            (move_node_max down)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (move_node_max left)
            (move_node_max right)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (move_node_max up)
            (move_node_max down)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max up)
            (move_node_max down)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 13)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 6)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of this) 0)
            )
        )
        (apply
            (move_node_max down)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border C)
            (fill_rectangle B false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (column_equals (column_of this) 6))
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 6)
        )
        (apply
            (update_color X)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (insert 0 right source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (size_equals (size_of this) 18)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (size_equals (size_of this) 11)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply
            (extend_node right false)
        )
    )
    (rule
        (vars (this other))
        (filter (and (neighbor_of this other) (color_equals (color_of other) R)))
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 0)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 12)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) O)))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (update_color C))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (add_border C)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )    
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (add_border C)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (add_border C)
            (hollow_rectangle B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (or
                    (neighbor_of this other)
                    (column_equals (column_of this) center)
                )
            )
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (column_equals (column_of this) center)
            )
        )
        (apply
            (extend_node up_left false)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 0)
                (not (color_equals (color_of this) O))
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (neighbor_of this this)
                (column_equals (column_of this) 6)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 8)
        )
        (apply
            (move_node right)
        )
    )
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 18)
        )
        (apply
            (update_color B)
        )
    )
)