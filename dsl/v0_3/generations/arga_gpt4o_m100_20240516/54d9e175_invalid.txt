[
    {
        "response": "{\n    \"nl_description\": \"Recolor all the 'O' cells to a specific color depending on the color of its neighbors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color\\n                (this\\n                    (neighbor_of this (color_of other))\\n                )\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 9 col 18\n\n                (this\n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Replace all colors in the grid with new colors as per the transformation instructions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the entire grid except the cells with color X based on a pattern\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color (color_of this next_pattern))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'n' in the current parser context, at line 8 col 42\n\n           (update_color (color_of this next_pattern))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For every pair of neighboring single-color columns, replace all objects' colors on the left column with the one on the top row, and on the right column with the one on the second row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (color_equals (color_of this) O)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color (color_of (other)))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (color_equals (color_of this) X)\\n                    (color_equals (color_of other) O)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color (color_of (img_pts_of this)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 14 col 37\n\n            (update_color (color_of (other)))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors while keeping the X columns unchanged.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not (color_equals (column_of this) X))\\n        )\\n        (apply\\n            (update_color F)\\n            (update_color A)\\n            (update_color C)\\n            (update_color W)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 5 col 33\n\n            (not (color_equals (column_of this) X))\n                                ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to fill grid by rows from top to bottom and left to right in 3x3 regions, while keeping the columns with color X intact.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color (A))\\n            (update_color (F))\\n            (update_color (W))\\n            (update_color (C))\\n            (update_color (F))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'A' in the current parser context, at line 6 col 28\n\n            (update_color (A))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all non-X objects based on their current color and move them toward the object of color X until they reach an obstacle.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color\\n                (if (color_equals (color_of this) B) F\\n                    (if (color_equals (color_of this) R) A\\n                        (if (color_equals (color_of this) G) C\\n                            (if (color_equals (color_of this) Y) W Y)))))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 16 col 18\n\n                (if (color_equals (color_of this) B) F\n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors depending on the row they are on.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (rule\\n                (vars (this))\\n                (filter (color_equals (color_of this) R))\\n                (apply (update_color A))\\n            )\\n            (rule\\n                (vars (this))\\n                (filter (color_equals (color_of this) G))\\n                (apply (update_color C))\\n            )\\n            (rule\\n                (vars (this))\\n                (filter (color_equals (color_of this) B))\\n                (apply (update_color F))\\n            )\\n            (rule\\n                (vars (this))\\n                (filter (color_equals (color_of this) Y))\\n                (apply (update_color W))\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 6 col 14\n\n            (rule\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of each non-X object to match with the color directly right of it, except for the top objects which should be recolored to F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (column_equals (column_of this) (column_of other))\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (and\\n                    (column_equals (column_of this) 2)\\n                    (column_equals (column_of this) change_color))\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (column_equals (column_of this) (column_\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects except X objects to form a pattern, while keeping X objects unchanged.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color (if (color_equals (color_of this) O) F))\\n            (update_color (if (color_equals (color_of this) B) F))\\n            (update_color (if (color_equals (color_of this) R) A))\\n            (update_color (if (color_equals (color_of this) G) C))\\n            (update_color (if (color_equals (color_of this) Y) W))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 28\n\n            (update_color (if (color_equals (color_of this) O) F))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the entire non-X region of the grid using specific color patterns where vertical split three-row regions are colored with the same pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply\\n            (update_color Z)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'Z' in the current parser context, at line 20 col 27\n\n            (update_color Z)\n                          ^\nExpected one of: \n\t* LPAR\n\t* COLOR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of the top 3 rows to match a checkerboard pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (or (column_equals (column_of this) 0) (column_equals (column_of this) 1) (column_equals (column_of this) 2)))\\n        (apply\\n            (update_color (if (column_equals (column_of this) 0) F (if (column_equals (column_of this) 1) F (if (column_equals (column_of this) 2) F this))))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (or (column_equals (column_of this) 4) (column_equals (column_of this) 5) (column_equals (column_of this) 6)))\\n        (apply\\n            (update_color (if (column_equals (column_of this) 4) A (if (column_equals (column_of this) 5) A (if (column_equals (column_of this) 6) A this))))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 91\n\n) 0) (column_equals (column_of this) 1) (column_equals (column_of this) 2)))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all non-X objects to F and then insert copies of X objects at the relative position of the non-X objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (insert this (img_pts_of other) source)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 17 col 21\n\n            (insert this (img_pts_of other) source)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all small objects and large objects to two distinct colors, respectively. Given an object of color X as the boundary.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color (if (size_equals (size_of this) max) F A))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 28\n\n            (update_color (if (size_equals (size_of this) max) F A)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows except those containing X to respective colors in that specific order.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color (if\\n                (column_equals (column_of this) center) A\\n                (if\\n                    (column_equals (column_of this) left) F\\n                    (if\\n                        (column_equals (column_of this) right) W\\n                        (color_of this)\\n                    )\\n                )\\n            ))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 10 col 28\n\n            (update_color (if\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to distinct colors for each row, and extend them to fill the entire row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and true true))\\n        (apply (update_color A) (extend_node right false))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and true true))\\n        (apply (update_color C) (extend_node right false))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and true true))\\n        (apply (update_color F) (extend_node right false))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and true true))\\n        (apply (update_color W) (extend_node right false))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 4 col 22\n\n        (filter (and true true))\n                     ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Transform the first row to F's, the second row to varying colors, and the third row to F's, keeping X's in place.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 14 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change color of all objects (from left side of the obstacle) to a specific color, regardless their original color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter \\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n\\t\\t\\t)\\n\\t\\t)\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors, leaving the ones with color X unchanged.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this)\\n        )\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this)\\n        )\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (color_equals (color_of this) W)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this)\\n        )\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (color_equals (color_of this) F)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this)\\n        )\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (color_equals (color_of this) A)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this)\\n        )\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (color_equals (color_of this) C)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '}' in the current parser context, at line 65 col 1\n\n}\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to the colors of the objects in the corresponding cells of the rows after the first one.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of (column_equals this (column_of other))))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 37\n\n            (update_color (color_of (column_equals this (column_of other))))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to colors A, F, and, C from left to right rows of each object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (not (color_equals (color_of this) X))))\\n        (apply (update_color F))\\n    ) \\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals(this, 3))\\n        )\\n        (apply (update_color A))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (this, 7))\\n        )\\n        (apply (update_color C))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 4 col 60\n\nd (not (color_equals (color_of this) X))))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to follow a pattern based on their original color, except objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply\\n            (update_color (case (color_of this)\\n                (G F)\\n                (B F)\\n                (R C)\\n                (Y C)\\n                (G F)\\n                (default (COLOR_OF this))\\n            ))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 6 col 28\n\n            (update_color (case (color_of this)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows to a pattern of alternating 3x3 blocks of colors, except for columns of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply\\n            (update_color \\n                (if (and (row_equals (row_of this) 0) (column_mod_equals (column_of this) 3 0)) F B)\\n                (if (and (row_equals (row_of this) 0) (column_mod_equals (column_of this) 3 1)) A R)\\n                (if (and (row_equals (row_of this) 0) (column_mod_equals (column_of this) 3 2)) F B)\\n                (if (and (row_equals (row_of this) 1) (column_mod_equals (column_of this) 3 0)) F B)\\n                (if (and (row_equals (row_of this) 1) (column_mod_equals (column_of this) 3 1)) A R)\\n                (if (and (row_equals (row_of this) 1) (column_mod_equals (column_of this) 3 2)) F B)\\n                (if (and (row_equals (row_of this) 2) (column_mod_equals (column_of this) 3 0)) F B)\\n                (if (and (row_equals (row_of this) 2) (column_mod_equals (column_of this) 3 1)) A R)\\n                (if (and (row_equals (row_of this) 2) (column_mod_equals (column_of this) 3 2)) F B)\\n                (if (and (row_equals (row_of this) 4) (column_mod_equals (column_of this) 3 0)) A C)\\n                (if (and (row_equals (row_of this) 4) (column_mod_equals (column_of this) 3 1)) C G)\\n                (update_color (if (column_mod_equals (column_of this) 0) F W))\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 7 col 18\n\n                (if (and (row_equals (row_of this) 0) (co\n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all the cells in the first and last rows and columns surrounding the object X to different colors in a pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) O))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color A))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (neighbor_of this other) (and (color_equals (color_of other) Y) (color_equals (color_of this) X)))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (neighbor_of this other) (and (color_equals (color_of other) G) (color_equals (color_of this) X)))\\n        (apply (update_color W))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 29 col 42\n\n       (filter (neighbor_of this other) (and (color_equals (color_of other) Y) (\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to match the colors of the neighbors above them.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (neighbor_of this other) (color_equals (color_of (direction_of this up)))\\n        (apply (update_color (color_of other)))))\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 42\n\n       (filter (neighbor_of this other) (color_equals (color_of (direction_of th\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to form stripes of different colors, except for the columns with X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node down)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to color F, A, or C depending on their positions horizontally from left to right\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 0)\\n                (column_equals (column_of this) 1)\\n                (column_equals (column_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 4)\\n                (column_equals (column_of this) 5)\\n                (column_equals (column_of this) 6)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 8)\\n                (column_equals (column_of this) 9)\\n                (column_equals (column_of this) 10)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (column_equals (column_of this) 2)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the grid such that objects around each 'X' column have different specific colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (not (color_equals (color_of other) X))\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows between the 'X' columns to different colors based on their position\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (column_equals (column_of this) \\\"X\\\"))\\n                (or\\n                    (column_equals (column_of this) \\\"X\\\")\\n                    (column_equals (direction_of this) \\\"left\\\") \\n                )\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (column_equals (column_of this) \\\"X\\\"))\\n                (or\\n                    (column_equals (column_of this) \\\"X\\\")\\n                    (column_equals (direction_of this) \\\"middle\\\") \\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (column_equals (column_of this) \\\"X\\\"))\\n                (or\\n                    (column_equals (column_of this) \\\"X\\\")\\n                    (column_equals (direction_of this) \\\"right\\\") \\n                )\\n            )\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '\"' in the current parser context, at line 6 col 54\n\n   (not (column_equals (column_of this) \"X\"))\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors row-wise and column-wise while maintaining the color of 'X'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) F) (neighbor_of this this)))\\n        (apply\\n            (really_deep_apply F A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) F) (neighbor_of this this)))\\n        (apply\\n            (really_deep_apply A C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply\\n            (really_deep_apply B W)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 13 col 14\n\n            (really_deep_apply F A)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to color F, except those in the same column as the X object. Then, recolor objects to A, C, and W depending on their original colors in pairs as needed.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (color_equals (color_of this) B))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) Y)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 12 col 10\n\n        (color_equals (color_of this) B))\n         ^\nExpected one of: \n\t* APPLY\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects in the grid with the same color for each column, except for objects colored X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color (column_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 8 col 28\n\n            (update_color (column_of this))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to a specific pattern\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (neighbor_of this other))\\n        (apply (update_color ((or ( ( ( and (color_equals (color_of other) X) (color_equals (color_of this) O) ) X) (Y) ) W)) ))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply (update_color (if (or (color_equals (color_of this) B) (color_equals (color_of this) G) (color_equals (color_of this) Y)) R C W)))\\n    )\\n)\"\n}\n",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 5 col 31\n\n        (apply (update_color ((or ( ( ( and (color_equals (color_of ot\n                              ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to three different colors based on their position: left of the X column changes to the left color, right of the X column changes to the right color, and in between X columns changes to the middle color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) left)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) right)\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (column_equals (column_of this) left))\\n                (not (column_equals (column_of this) right))\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'l' in the current parser context, at line 5 col 45\n\n        (column_equals (column_of this) left)\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors, while keeping objects of color X unchanged\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply (update_color A))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply (update_color F))\\n        (apply (update_color W))\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 21 col 9\n\n        (apply (update_color W))\n        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all non-X objects based on their color and whether they are neighbors to X objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of size 1 to the same colors as in the reference object in row 2, and extend them towards the object X in each row without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (and\\n                    (color_equals (color_of other) X)\\n                    (column_equals (column_of this) (column_of other))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color (color_of (other)))\\n            (extend_node (direction_of (other)) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (and\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors for each row, preserving the original shape.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) 'O')\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) 'R')\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) 'B')\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) 'G')\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) 'Y')\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (rotate_node 0)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ''' in the current parser context, at line 5 col 43\n\n          (color_equals (color_of this) 'O')\n                                        ^\nExpected one of: \n\t* LPAR\n\t* FCOLOR\n"
    }
]