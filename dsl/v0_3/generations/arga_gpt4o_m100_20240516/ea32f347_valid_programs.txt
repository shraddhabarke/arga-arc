(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of other this)
                (color_equals (color_of this) X)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of other this)
                (color_equals (color_of this) X)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of other this)
                (color_equals (color_of this) X)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1) 
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this this)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (or
                (size_equals (size_of this) 1)
                (size_equals (size_of this) 2)
            ))
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (color_equals (color_of other) B)
                    (and
                        (color_equals (color_of this) Y)
                        (color_equals (color_of this) Y)
                    )
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (color_equals (color_of other) B)
                    (and
                        (color_equals (color_of this) R)
                        (color_equals (color_of this) R)
                    )
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (or
                        (and
                            (not (color_equals (color_of this) B))
                            (and
                                (not (color_equals (color_of this) X))
                                (size_equals (size_of other) max)
                            )
                        )
                        (size_equals (size_of other) even)
                    )
                    (size_equals (size_of other) odd)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (size_equals (size_of other) even)
                    (size_equals (size_of other) odd)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node_max right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
            (update_color Y)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color
                (color_of this)
            )
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 5)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 8)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 9)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) Y)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color (color_of other))
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) X))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) X)))
        (apply 
            (update_color B)
            (update_color Y)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 1))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 4))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 7))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) Y)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)


(do
   (rule
       (vars (this other))
       (filter
           (and
               (color_equals (color_of this) X)
               (neighbor_of this other)
           )
       )
       (apply
           (move_node (direction_of other))
           (update_color B)
           (update_color Y)
           (update_color R)
       )
   )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color (color_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
            (update_color Y)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (neighbor_of this other)
                    (not (or
                        (color_equals (color_of other) O)
                        (color_equals (color_of other) B)
                    ))
                )
            )
        )
        (apply
            (update_color (color_of other))
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
            (update_color Y)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 6)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node left)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node right)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (column_equals (column_of this) center)
                    (or
                        (column_equals (column_of this) 0)
                        (or
                            (column_equals (column_of this) 2)
                            (or
                                (column_equals (column_of this) 4)
                                (or
                                    (column_equals (column_of this) 6)
                                    (column_equals (column_of this) 8)
                                )
                            )
                        )
                    )
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (column_equals (column_of this) 1)
                    (or
                        (column_equals (column_of this) 3)
                        (or
                            (column_equals (column_of this) 5)
                            (column_equals (column_of this) 7)
                        )
                    )
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (update_color Y)
        )
    )
    (rule
       (vars (this))
        (filter (color_equals (color_of this) Y))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (not (neighbor_of this other))
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) X) (neighbor_of this other))
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) X) (neighbor_of this other))
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)


(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node up_right)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (move_node up_right)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (color_equals (color_of other) Y)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 1))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 2))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 3))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)


(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node down)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (size_equals (size_of other) max)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule 
        (vars (this other)) 
        (filter
            (and 
                (color_equals (color_of this) X)
                (color_equals (color_of other) O)
            )
        )
        (apply 
            (move_node right)
        )
    )
    (rule 
        (vars (this)) 
        (filter) 
        (apply 
            (update_color B)
        )
    )
    (rule 
        (vars (this other)) 
        (filter 
            (and 
                (color_equals (color_of this) B)
                (color_equals (color_of other) O)
            )
        )
        (apply 
            (update_color Y)
        )
    )
    (rule 
        (vars (this)) 
        (filter) 
        (apply 
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
   (rule
       (vars (this other))
       (filter
           (color_equals (color_of this) X)
       )
       (apply
           (update_color B)
       )
   )
   (rule
       (vars (this other))
       (filter
           (and
               (neighbor_of this other)
               (color_equals (color_of other) B)
           )
       )
       (apply
           (update_color (color_of this))
       )
   )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of other this)
        )
        (apply
            (update_color Y)
            (update_color R)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color B)
            (move_node_max down)
            (update_color Y)
            (move_node_max down)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (neighbor_of this this)
                    (neighbor_of this this)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (neighbor_of this this)
                    (neighbor_of this this)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (neighbor_of this this)
                    (neighbor_of this this)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 7)
        )
        (apply
            (update_color R)
        )
    )
)


(do
    (rule
        (vars (this))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (column_equals (column_of this) center)
            )
        )
        (apply
            (move_node right)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) odd))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) even))
        (apply (update_color Y))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 6))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 2))
        (apply (update_color F))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 4))
        (apply (update_color X))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) Y))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply (update_color B))
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 1))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 3))
        (apply (update_color Y))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 5))
        (apply (update_color R))
    )
)

(do
    (rule 
        (vars (this))
        (filter 
            (column_equals (column_of this) 1)
        )
        (apply 
            (update_color B)
        )
    )
    (rule 
        (vars (this))
        (filter 
            (column_equals (column_of this) 2)
        )
        (apply 
            (update_color Y)
        )
    )
    (rule 
        (vars (this))
        (filter 
            (column_equals (column_of this) 3)
        )
        (apply 
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color B)
            (update_color Y)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) X))
        (apply (update_color B))
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of other) B) (neighbor_of this other)))
        (apply
            (update_color (color_of other))
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) X)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) Y)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 1)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 2)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 3)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 4)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 1)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 2)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 3)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (height_equals (height_of this) even)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) Y)
                (height_equals (height_of this) odd)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) Y)
                (height_equals (height_of this) even)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (height_equals (height_of this) even)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) even)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) odd)
                (color_equals (color_of this) X)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) odd)
                (color_equals (color_of this) Y)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) Y)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 6)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 6)
                (height_equals (height_of this) 2)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 6)
                (height_equals (height_of this) 3)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (neighbor_of this other)
                    (not (color_equals (color_of other) X))
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
(rule
(vars (this))
(filter
(column_equals (column_of this) 1))
(apply
(update_color B)))
(rule
(vars (this))
(filter
(column_equals (column_of this) 3))
(apply
(update_color Y)))
(rule
(vars (this))
(filter
(column_equals (column_of this) 5))
(apply
(update_color R))))

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node right)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node right)
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of other this)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (color_equals (color_of other) X)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) Y)
                (and
                    (color_equals (color_of other) X)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node left)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node up)
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) Y)
                )
            )
        )
        (apply
            (move_node up)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 5)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 1))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 2))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 3))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (neighbor_of this this)
                    (size_equals (size_of this) 3)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (neighbor_of this this)
                    (size_equals (size_of this) 2)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)


(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) B))
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) B))
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) B))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (neighbor_of this this)
                    (color_equals (color_of this) Y)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (neighbor_of this this)
                    (color_equals (color_of this) R)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color B)
            (update_color Y)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (height_equals (height_of this) 1)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (height_equals (height_of this) 5)
            )
        )
        (apply
            (update_color R)
        )
    )
)