[
    {
        "response": "{\n    \"nl_description\": \"Recolor columns as follows: 1st to column to color aligned outputs (Y, F, B, C), 2nd to X, Y, W, G, and 3rd to F, W, R, F\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color (COLOR_OF other))\\n        )    \\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color (COLOR_OF other))\\n        )    \\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color (COLOR_OF other))\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'C' in the current parser context, at line 6 col 28\n\n            (update_color (COLOR_OF other))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor columns of the grid with specific colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\\n(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color W))\\n    )\\n)\\n(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color R))\\n    )\\n)\\n(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\\n\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 18 col 1\n\n(do\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor columns with colors G, B, Y, R, X, and O to new colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (or (color_equals (color_of this) G) (color_equals (color_of this) B) (color_equals (color_of this) Y) (color_equals (color_of this) R) (color_equals (color_of this) X) (color_equals (color_of this) O)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 87\n\nis) G) (color_equals (color_of this) B) (color_equals (color_of this) Y) (color_\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects in a column-wise pattern to the corresponding colors in the output grid columns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center)))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) odd)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) even)))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 4 col 61\n\n (column_equals (column_of this) center)))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each vertical column of the grid to a specific sequence of colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 0)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each column to a specific sequence of colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color Y))\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '}' in the current parser context, at line 58 col 1\n\n}\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all columns in the grid to new column colors: (G, B, R) -> (Y, X, F), (R, G, C) -> (F, Y, W), (X, C, F) -> (B, W, R), (W, Y, R) -> (C, G, F).\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color (color_of (column_equals (column_of this) 0) Y))\\n            (update_color (color_of (column_equals (column_of this) 1) X))\\n            (update_color (color_of (column_equals (column_of this) 2) F))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color (color_of (column_equals (column_of this) 0) F))\\n            (update_color (color_of (column_equals (column_of this) 1) Y))\\n            (update_color (color_of (column_equals (column_of this) 2) W))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color (color_of (column_equals (column_of this) 0) B))\\n            (update_color (color_of (column_equals (column_of this) 1) W))\\n            (update_color (color_of (column_equals (column_of this) 2) R))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color (color_of (column_equals (column_of this) 0) C))\\n            (update_color (color_of (column_equals (column_of this) 1) G))\\n            (update_color (color_of (column_equals (column_of this) 2) F))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 37\n\n            (update_color (color_of (column_equals (column_of this) 0) Y))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor columns in the grid with new fixed colors\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color (F))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color (X))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color (Y))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'F' in the current parser context, at line 6 col 28\n\n            (update_color (F))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all columns of objects in each row according to their positions in a cyclical manner.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (row_equals (row_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (row_equals (row_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (row_equals (row_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (row_equals (row_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (row_equals (row_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) F)\\n                (row_equals (row_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) W)\\n                (row_equals (row_of this) 3)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (row_equals (row_of this) 3)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (row_equals (row_of this) 3)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 34 col 18\n\n                (row_equals (row_of this) 1)\n                 ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects according to a fixed mapping rule.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color \\n                (color_equals (color_of this) G) Y\\n            )\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color \\n                (color_equals (color_of this) B) X\\n            )\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color \\n                (color_equals (color_of this) R) F\\n            )\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color \\n                (color_equals (color_of this) G) Y\\n            )\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color \\n                (color_equals (color_of this) C) W\\n            )\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color \\n                (color_equals (color_of this) F) R\\n            )\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color \\n                (color_equals (color_of this) W) C\\n            )\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color \\n                (color_equals (color_of this) Y) G\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 7 col 18\n\n                (color_equals (color_of this) G) Y\n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    }
]