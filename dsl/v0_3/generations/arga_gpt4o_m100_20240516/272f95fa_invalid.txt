[
    {
        "response": "{\n    \"nl_description\": \"Recolor objects in specific rows to different colors. Objects in the first row are recolored to R, objects in the 4th row are recolored to F, objects in the last row are recolored to B, objects in the second last row are recolored to Y, and objects in the fifth last row are recolored to G.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (color_equals (color_of this) O) (or (column_equals (column_of this) 1) (column_equals (column_of this) 4) (column_equals (column_of this) 17) (column_equals (column_of this) 16) (column_equals (column_of this) 13))))\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (color_equals (color_of this) O) (or (column_equals (column_of this) 5) (column_equals (column_of this) 12))))\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (color_equals (color_of this) O) (or (column_equals (column_of this) 10) (column_equals (column_of this) 6))))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (color_equals (color_of this) O) (or (column_equals (column_of this) 8) (column_equals (column_of this) 14))))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (color_equals (color_of this) O) (column_equals (column_of this) 11)))\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 5 col 125\n\n) 1) (column_equals (column_of this) 4) (column_equals (column_of this) 17) (col\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor stripe objects to various colors in defined regions of the grid\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor rows of size 11 on different horizontal lines with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 11)\\n                (row_equals (row_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 11)\\n                (row_equals (row_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 11)\\n                (row_equals (row_of this) 3)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 7 col 18\n\n                (row_equals (row_of this) 1)\n                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor segments bounded by C from top to bottom with different colors (R, F, B) as specified.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (not (neighbor_of this other))\\n                    (not (neighbor_of this this))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (not (neighbor_of this other))\\n                    (not (neighbor_of this this))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (not (neighbor_of this other))\\n                    (not (neighbor_of this this))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (not (neighbor_of this other))\\n                    (not (neighbor_of this this))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (not (neighbor_of this other))\\n                    (not (neighbor_of this this))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '}' in the current parser context, at line 78 col 1\n\n}\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor rows adjacent to horizontal and vertical lines of color C with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of this) O) (color_equals (color_of other) C)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of this) O) (color_equals (color_of other) R)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of this) O) (color_equals (color_of other) F)))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of this) O) (color_equals (color_of other) B)))\\n        (apply (update_color B))\\n    )\\n)\\n\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 80\n\nother) (color_equals (color_of this) O) (color_equals (color_of other) C)))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each row based on its original color patterns, except the rows with all C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) F)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the horizontal lines made of the same color with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) min)\\n                (color_equals (color_of this) Y)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 6 col 49\n\n        (column_equals (column_of this) min)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 6 one step down, then recolor them to R, F, B, or G based on their initial color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (column_equals (column_of this) center)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node down)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (color_equals (color_of this) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (color_equals (color_of this) G)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (color_equals (color_of this) W)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 9 col 17\n\n                )\n                ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects of size 6 that are neighbors of a column to different colors depending on the row they are in.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (neighbor_of this other)\\n                (column_equals (column_of other) even)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (column_equals (column_of other) even)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects in each row to a unique color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) C)))\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and (color_equals (color_of this) O) (color_equals (color_of other) R)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and (color_equals (color_of this) O) (color_equals (color_of other) F)))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and (color_equals (color_of this) O) (color_equals (color_of other) B)))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and (color_equals (color_of this) O) (color_equals (color_of other) Y)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and (color_equals (color_of this) O) (color_equals (color_of other) G)))\\n        (apply (update_color G))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 4 col 54\n\ner (and (color_equals (color_of this) C)))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Divide the grid horizontally into segments by rows of C's, then change the color of all objects in each segment to a different color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (size_equals (size_of this) max))\\n        (apply))\\n    (rule\\n        (vars (this))\\n        (filter (neighbor_of this other))\\n        (apply (update_color R)))\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of other) C)))\\n        (apply (update_color F)))\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of other) C)))\\n        (apply (update_color G)))\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of other) C)))\\n        (apply (update_color B)))\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (color_equals (color_of other) C)))\\n        (apply (update_color Y)))\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 5 col 15\n\n        (apply))\n              ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor vertical objects with different colors based on their positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (column_equals (column_of this) center)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle R false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (column_equals (column_of this) (even))\\n            )\\n        )\\n        (apply\\n            (fill_rectangle F false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (column_equals (column_of this) (odd))\\n            )\\n        )\\n        (apply\\n            (fill_rectangle B false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'e' in the current parser context, at line 19 col 50\n\n       (column_equals (column_of this) (even))\n                                        ^\nExpected one of: \n\t* COLUMN_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all horizontal lines of objects to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of (other at 0 0)) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of (other at 0 1)) C)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of (other at 0 2)) C)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of (other at 2 0)) C)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of (other at 2 1)) C)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of (other at 2 2)) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 7 col 41\n\n                (color_equals (color_of (other at 0 0)) C)\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the rows between the 'C' columns alternatively with colors R, F, G, and B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) odd)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (column_equals (column_of this) even))\\n                (not (column_equals (column_of this) odd))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (column_equals (column_of this) even))\\n                (not (column_equals (column_of this) odd))\\n                (not (color_equals (color_of this) G))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 26 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all C objects to different colors based on their row position, keeping the central column unchanged.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (update_color (if (and (>= (row_of this) 1) (<= (row_of this) 2)) R))\\n            (update_color (if (and (>= (row_of this) 4) (<= (row_of this) 7)) F))\\n            (update_color (if (and (>= (row_of this) 9) (<= (row_of this) 12)) B))\\n            (update_color (if (and (>= (row_of this) 14) (<= (row_of this) 17)) ''))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) 'other-row-conditions')\\n        )\\n        (apply\\n            (update_color (if (== 0 (mod (row_of this) 8)) Y))\\n            (update_color (if (and (> (row_of this) 8) (<= (row_of this) 17)) G))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 28\n\n            (update_color (if (and (>= (row_of this) 1) (<= (row_of\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all neighboring rows of the object with color C to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (color_equals (color_of other) C)\\n        )\\n        (apply\\n            (update_color (color_of this)) \\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 13\n\n            (color_equals (color_of other) C)\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects that are to the left of the center columns to R, F, B and Y respectively.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) odd)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) \\\"10\\\")\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) \\\"13\\\")\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '\"' in the current parser context, at line 23 col 45\n\n        (column_equals (column_of this) \"10\")\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of the objects in each row according to a specific pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) F)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each row group of objects between columns of 'C' to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                (neighbor_of this this)))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                (neighbor_of this this)))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                (neighbor_of this this)))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                (neighbor_of this this)))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 5 col 40\n\n                (neighbor_of this this)))\n                                       ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to a specific color for each row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects one step towards the middle row and recolor them as: R for the top section, F for the middle section, B for the bottom section. Mimic the actions accordingly in the other grids, each based on their initial row locations.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node down)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) top)\\n                (not (column_equals (column_of this) center))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) middle)\\n                (not (column_equals (column_of this) center))\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) bottom)\\n                (not (column_equals (column_of this) center))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 13 col 18\n\n                (row_equals (row_of this) top)\n                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows except the rows with the object of color C, each row with a unique color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (not (color_equals (color_of other) C))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (not (color_equals (color_of other) C))\\n                (neighbor_of other this)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) F)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n                (height_equals (height_of this) 1)\\n                (or\\n                    (neighbor_of this other)\\n                    (degree_equals (degree_of this) 1)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\\n\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (neighbor_of other this)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects except C to their respective colors based on position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) C)))\\n        (apply\\n            (case (color_of this)\\n                (and (column_equals (column_of this) (column_of (img_pts_of this bottom)))\\n                    (>= (column_of this) 8)\\n                ) (update_color B)\\n                (and (column_equals (column_of this) (column_of (img_pts_of this bottom)))\\n                    (<= (column_of this) 0)\\n                ) (update_color Y)\\n                (column_equals (column_of this) 1)(update_color R)\\n                (column_equals (column_of this) 5) (update_color F)\\n                (column_equals (column_of this) 9) (update_color G))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 6 col 14\n\n            (case (color_of this)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects close to the top to color R, middle objects to color F, and bottom objects to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) center)\\n                (column_equals (column_of other) center)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n                (row_equals (row_of other) 5)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n                (row_equals (row_of other) 10)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (row_equals (row_of other) 5)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the horizontal lines of cells between continuous columns of C with distinct colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (or\\n                    (and (column_equals (column_of this) 1) (row_equals 1))\\n                    (and (column_equals (column_of this) 2) (row_equals 2))\\n                    (and (column_equals (column_of this) 3) (row_equals 3))\\n                    (and (column_equals (column_of this) 4) (row_equals 4))\\n                    (and (column_equals (column_of this) 5) (row_equals 5))\\n                    (and (column_equals (column_of this) 6) (row_equals 6))\\n                    (and (column_equals (column_of this) 7) (row_equals 7))\\n                    (and (column_equals (column_of this) 8) (row_equals 8))\\n                    (and (column_equals (column_of this) 9) (row_equals 9))\\n                    (and (column_equals (column_of this) 10) (row_equals 10))\\n                    (and (column_equals (column_of this) 11) (row_equals 11))\\n                    (and (column_equals (column_of this) 12) (row_equals 12))\\n                    (and (column_equals (column_of this) 13) (row_equals 13))\\n                    (and (column_equals (column_of this) 14) (row_equals 14))\\n                    (and (column_equals (column_of this) 15) (row_equals 15))\\n                    (and (column_equals (column_of this) 16) (row_equals 16))\\n                    (and (column_equals (column_of this) 17) (row_equals 17))\\n                    (and (column_equals (column_of this) 18) (row_equals 18))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (or\\n                    (and (column_equals (column_of this) 0) (row_equals 0))\\n                    (and (column_equals (column_of this) 1) (row_equals 1))\\n                    (and (column_equals (column_of this) 2) (row_equals 2))\\n                    (and (column_equals (column_of this) 3) (row_equals 3))\\n                    (and (column_equals (column_of this) 4) (row_equals 4))\\n                    (and (column_equals (column_of this) 5) (row_equals 5))\\n                    (and (column_equals (column_of this) 6) (row_equals 6))\\n                    (and (column_equals (column_of this) 7) (row_equals 7))\\n                    (and (column_equals (column_of this) 8) (row_equals 8))\\n                    (and (column_equals (column_of this) 9) (row_equals 9))\\n                    (and (column_equals (column_of this) 10) (row_equals 10))\\n                    (and (column_equals (column_of this) 11) (row_equals 11))\\n                    (and (column_equals (column_of this) 12) (row_equals 12))\\n                    (and (column_equals (column_of this) 13) (row_equals 13))\\n                    (and (column_equals (column_of this) 14) (row_equals 14))\\n                    (and (column_equals (column_of this) 15) (row_equals 15))\\n                    (and (column_equals (column_of this) 16) (row_equals 16))\\n                    (and (column_equals (column_of this) 17) (row_equals 17))\\n                    (and (column_equals (column_of this) 18) (row_equals 18))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 8 col 62\n\nand (column_equals (column_of this) 1) (row_equals 1))\n                                        ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects to different colors based on their position in the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (column_equals (column_of this) even)\\n                    (row_equals (row_of this) even)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (column_equals (column_of this) odd)\\n                    (row_equals (row_of this) even)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (column_equals (column_of this) even)\\n                    (row_equals (row_of this) odd)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (column_equals (column_of this) odd)\\n                    (row_equals (row_of this) odd)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 33 col 22\n\n                    (row_equals (row_of this) even)\n                     ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For each row, color objects in it with the same color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (color_equals (color_of this) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) F)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (color_equals (color_of this) B)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\\n\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 32 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows except the first and any row that starts with 'O', based on their content.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                    (not (row_equals (row_of this) 1))\\n                    (not (color_equals (color_of (cell_of (column_number_of this) 1)) O))))\\n        (apply\\n            (update_color\\n                (case (row_number_of this)\\n                    2 R\\n                    3 Y\\n                    4 Y\\n                    5 Y\\n                    6 Y\\n                    8 B\\n                    _ B)))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 5 col 27\n\n                    (not (row_equals (row_of this) 1))\n                          ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend all objects towards the neighboring object of color C, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects except color C based on their vertical position bands.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) C))\\n        )\\n        (apply\\n            (update_color (color_of (this)))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) C))\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    ) \\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (not (color_equals (color_of this) R))\\n                    (not (color_equals (color_of this) B))\\n                ) \\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (or\\n                    (color_equals (color_of this) G)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (or\\n                    (color_equals (color_of this) O)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )    \\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 37\n\n            (update_color (color_of (this)))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows between the rows of C with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (not (neighbor_of this this))\\n            )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this this)\\n            )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (size_equals (size_of this) min)\\n            )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'a' in the current parser context, at line 5 col 14\n\n            (and\n             ^\nExpected one of: \n\t* APPLY\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend the colored groups left and right from the center column and recolor them accordingly.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (extend_node left false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n            (move_node right)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (height_equals (height_of this) 4)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (extend_node left false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (height_equals (height_of this) 4)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) F)\\n            )\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (height_equals (height_of this) 5)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 52 col 17\n\n                (color_equals (color_of other) Y)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each horizontal row of objects to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (and (color_equals (color_of this) C) (OR neighbor_of(other C) neighbor_of(other this))))\\n        (apply\\n            (update_color (if (eq row 1) R (if (eq row 4) G (if (eq row 7) Y (else B))))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'O' in the current parser context, at line 4 col 61\n\n (and (color_equals (color_of this) C) (OR neighbor_of(other C) neighbor_of(othe\n                                        ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects bordering the main vertical line and horizontal lines to different specified colors\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) C))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (color_equals (color_of other) C)\\n                    (or\\n                        (color_equals (color_of this) Y)\\n                        (color_equals (color_of this) F)\\n                        (color_equals (color_of this) G)\\n                        (color_equals (color_of this) B)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 24 col 25\n\n                        (color_equals (color_of this) G)\n                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all the rows within blocks separated by the vertical columns of C's to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (or\\n                    (or\\n                        (neighbor_of this (other))\\n                        (neighbor_of (other) this))\\n                    (equal (x_pos_of this) (subtract (x_pos_of other) 1)))\\n                (or\\n                    (or\\n                        (neighbor_only (upper this))\\n                        (neighbor_only (x_pos_of this)))\\n                    (equal (y_pos_of this) (subtract (y_pos_of other) 1)))))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (not (color_equals (color_of this) W))\\n                (not (color_equals (color_of this) B))\\n                (not (equal (color_of this) (color_of other))))\\n        (apply\\n            (update_color Y)\\n            (update_color F)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 9 col 43\n\n                      (neighbor_of this (other))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color the row segments between the blue colored columns with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) \\\"even\\\")\\n                (column_equals (column_of other) \\\"odd\\\")\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) \\\"odd\\\")\\n                (column_equals (column_of other) \\\"odd\\\")\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) \\\"even\\\")\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) \\\"even\\\")\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '\"' in the current parser context, at line 6 col 49\n\n        (column_equals (column_of this) \"even\")\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the top object bordering the vertical cyan bar to red, the middle object bordering the vertical cyan bar to fuchsia, and the bottom object bordering the vertical cyan bar to blue.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) C)\\n                (neighbor_of this other)\\n                (column_equals (column_of this) 5)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) C)\\n                (neighbor_of this other)\\n                (column_equals (column_of this) 10)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) C)\\n                (neighbor_of this other)\\n                (column_equals (column_of this) 15)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (column_equals (column_of this) 5)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Each row of objects in the input grid is recolored to a specific color in the output grid. The color sequence follows a repeating pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) C)))\\n        (apply\\n            (move_node_max right)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) C)))\\n        (apply\\n            (move_node_max down)\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) C)))\\n        (apply\\n            (move_node_max left)\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) C)))\\n        (apply\\n            (move_node_max up)\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 4 col 54\n\ner (and (color_equals (color_of this) C)))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Split the C-shaped objects into rows, changing the color for each row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply\\n            (move_node right)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (move_node down)\\n            (update_color B)\\n        )\\n    )\\n)\\n(rule\\n    (vars (this))\\n    (filter (color_equals (color_of this) OC C))\\n    (apply\\n        (move_node left)\\n        (update_color G)\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 38 col 1\n\n(rule\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each row of objects between object C rows with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (width_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (width_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                    (color_equals (color_of other) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (width_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                    (color_equals (color_of other) F)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (width_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                    (color_equals (color_of other) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (width_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                    (color_equals (color_of other) G)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n)\\n\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'w' in the current parser context, at line 6 col 31\n\n                (size_equals (width_of this) 1)\n                              ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors based on their row index.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) center))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) even)\\n                (and\\n                    (not (column_equals (column_of this) center))\\n                    (and\\n                        (row_equals (row_of this) 4)\\n                        (or\\n                            (neighbor_of this other)\\n                            (or)\\n                        )\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) even)\\n                (and\\n                    (not (column_equals (column_of this) center))\\n                    (and\\n                        (row_equals (row_of this) 9)\\n                        (or\\n                            (neighbor_of this other)\\n                            (or)\\n                        )\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 17 col 26\n\n                        (row_equals (row_of this) 4)\n                         ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move specific colored objects in different directions and recolor a section of objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply\\n            (move_node up)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply\\n            (move_node down)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply\\n            (move_node horizontal)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'h' in the current parser context, at line 20 col 24\n\n            (move_node horizontal)\n                       ^\nExpected one of: \n\t* DIRECTION\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size bigger than one and not equal to C to the center and recolor them as row-wise different.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 3)\\n                (not (color_equals (color_of this) C))\\n            )\\n        )\\n        (apply\\n            (move_node_max center))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 11 col 28\n\n            (move_node_max center))\n                           ^\nExpected one of: \n\t* DIRECTION\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects that are completely enclosed by objects colored C to different colors based on their row in the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (color_equals (color_of other) C) \\n            )\\n        )\\n        (apply\\n            (update_color (if (column_equals (column_of this) 3 3) R (if (column_equals (column_of this) 7 7) F (if (column_equals (column_of this) 11 11) B X)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 11 col 28\n\n            (update_color (if (column_equals (column_of this) 3 3) \n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects in distinct regions of the grid to different colors. The regions are separated by objects of color C which form a line.\",\n    \"code\": \"(do\\n  (rule\\n    (vars (this other))\\n    (filter\\n      (and\\n        (color_equals (color_of other) C)\\n        (neighbor_of this other)\\n      )\\n    )\\n    (apply\\n      (update_color (if (color_equals (color_of other) C) R F G B Y))\\n    )\\n  )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 11 col 22\n\n      (update_color (if (color_equals (color_of other) C) R F\n                     ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move color blocks adjacent to the center column until the edges, maintaining their color and relative positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of each horizontal line starting from the second row, with different colors while maintaining their respective positions in the row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (or\\n                    (or\\n                        (and (not (color_equals (column_of this) center)) (size_equals (size_of this) 6))\\n                        (and (not (color_equals (column_of this) center)) (size_equals (size_of this) 4))\\n                    )\\n                    (and (not (color_equals (column_of this) center)) (size_equals (size_of this) 5))\\n                )\\n            )\\n        )\\n        (apply\\n            (or\\n                (update_color R)\\n                (update_color F)\\n                (update_color B)\\n                (update_color Y)\\n                (update_color G)\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 9 col 50\n\n               (and (not (color_equals (column_of this) center)) (size_equals (s\n                                        ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to specific colors in each section between the two horizontal lines of color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and \\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and \\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) \\\"\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and \\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) \\\"\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '\"' in the current parser context, at line 31 col 52\n\n         (color_equals (color_of other) \"\n                                        ^\nExpected one of: \n\t* LPAR\n\t* FCOLOR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects adjacent to lines of color C with specific colors based on their position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n                (column_equals (column_of this) 5)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n                (column_equals (column_of this) 6)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n                (column_equals (column_of this) 9)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n                (column_equals (column_of this) 13)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (column_equals (column_of this) 5)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the rows to different colors, keeping the border unchanged.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (column_equals (column_of this) even)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (column_equals (column_of this) odd)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows of color C with different colors, based on their position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (update_color \\n                (if (or (and (column_equals (column_of this) even) (height_equals (height_of this) even)) \\n                         (and (column_equals (column_of this) odd) (height_equals (height_of this) odd))) \\n                     R \\n                     (if (and (column_equals (column_of this) even) (height_equals (height_of this) odd)) \\n                         F \\n                         B))))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 9 col 18\n\n                (if (or (and (column_equals (column_of th\n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects (except the object in the center) to different colors based on their original positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (column_equals (column_of this) 7)\\n                (not (column_equals (column_of this) 9))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (column_equals (column_of this) 9)\\n                (row_equals (row_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (column_equals (column_of this) 9)\\n                (row_equals (row_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (column_equals (column_of this) 11)\\n                (row_equals (row_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\\n(rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (column_equals (column_of this) 11)\\n                (row_equals (row_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (column_equals (column_of this) 9))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor sections between continuous columns of cells of color C with color stripes.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (width_equals (width_of this) 11)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (width_equals (width_of this) 11)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (width_equals (width_of this) 11)\\n                (neighbor_of this other)\\n                (neighbor_of other this)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (width_equals (width_of this) 11)\\n                (neighbor_of this other)\\n                (neighbor_of other this)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors based on their rows: Objects in the first row to R, in the second row to F, and in the third row to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (not (color_equals (color_of this) F))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 13 col 13\n\n            (and\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects in each row to a unique color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n                (size_equals (size_of other) max)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n                (color_equals (color_of other) F)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (size_equals (size_of other) max)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each set of cells above, below, left, and right to color corresponding to the vertical grid location.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) center)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 2)\\n                (or\\n                    (neighbor_of this other)\\n                    (row_equals (row_of other) 3)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 6)\\n                (or\\n                    (neighbor_of this other)\\n                    (row_equals (row_of other) 4)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 9)\\n                (or\\n                    (neighbor_of this other)\\n                    (row_equals (row_of other) 5)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not\\n                (column_equals (column_of this) center)\\n                (or\\n                    (neighbor_of this other)\\n                    (row_equals (row_of other) 6)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 15 col 18\n\n                (row_equals (row_of this) 2)\n                 ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color each section between the vertical lines of color C with distinct colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and true (size_equals (size_of this) even)))\\n        (apply \\n            (update_color R) \\n            (update_color F) \\n            (update_color B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 4 col 22\n\n        (filter (and true (size_equals (size_of this) even)))\n                     ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects (excluding the vertical columns) based on their row positions, left objects as Red, middle objects as Fuchsia, and right objects as Blue or Green, based on their row numbers.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (not (color_equals (color_of this) O))\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (not (color_equals (color_of this) O))\\n                (and (column_equals (column_of this) odd)\\n                    (column_equals (column_of this) even))\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (not (color_equals (color_of this) O))\\n                (column_equals (column_of this) center)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (not (color_equals (color_of this) O))\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (size_equals (size_of this) 1)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor vertical stripe objects with distinct colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (height_equals (height_of this) max)\\n            (width_equals (width_of this) 1)))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (height_equals (height_of this) max)\\n            (width_equals (width_of this) 1)\\n            (column_equals (column_of this) 4)))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (height_equals (height_of this) max)\\n            (width_equals (width_of this) 1)\\n            (column_equals (column_of this) 10)))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (height_equals (height_of this) max)\\n            (width_equals (width_of this) 1)\\n            (column_equals (column_of this) 16)))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (height_equals (height_of this) max)\\n            (width_equals (width_of this) 1)\\n            (column_equals (column_of this) 8)))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 16 col 13\n\n            (column_equals (column_of this) 4)))\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor different groups of objects in different colors (R, F, B, G) based on their position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 3)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 4)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 5)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 6)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 9)))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 10)))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 11)))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 12)))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 15)))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 16)))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) center) (row_equals (row_of this) 17)))\\n        (apply (update_color B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 4 col 63\n\ncolumn_equals (column_of this) center) (row_equals (row_of this) 3)))\n                                        ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Update the color of all objects in a row according to the corresponding row index.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (not (color_equals (color_of this) C)) (neighbor_of this other) (color_equals (color_of other) C)))\\n        (apply \\n            (update_color (color_of other))\\n            )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 86\n\nr_of this) C)) (neighbor_of this other) (color_equals (color_of other) C)))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all horizontal segments except for object C into different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (shape_equals (shape_of this) square)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (shape_equals (shape_of this) enclosed)\\n                (color_equals (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (shape_equals (shape_of this) enclosed)\\n                (color_equals (color_of this) F)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (shape_equals (shape_of this) enclosed)\\n                (color_equals (color_of this) B)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of this) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each row's objects, excluding the border columns, to a specific color depending on the row, such that top rows are red, middle rows are yellow for four rows, then fuchsia for four rows, immediately followed by green rows for four rows, and finally bottom rows are blue.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 2)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 3)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 4)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 5)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 6)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 7)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 8)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 9)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 10)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 11)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 12)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 13)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 14)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 15)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 16)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (row_equals (row_of this) 17)\\n                (column_not_equals (column_of this) 0)\\n                (column_not_equals (column_of this) 18))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 6 col 18\n\n                (row_equals (row_of this) 2)\n                 ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows except those that contain the most common object color with a unique color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (not (column_equals (column_of this) (center)))\\n            )\\n        )\\n        (apply\\n            (update_color (if (row_equals (row_of this) (row_of max)) R \\n                            (if (row_equals (row_of this) (row_of min)) Y \\n                                (if (row_equals (row_of this) (row_of min_minus 4)) G \\n                                    F))))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 7 col 55\n\n  (not (column_equals (column_of this) (center)))\n                                        ^\nExpected one of: \n\t* COLUMN_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects adjacent to the central row object to form stripes of different colors: first red, then fuchsia, yellow, green, and finally blue.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (neighbor_of this other) (color_equals (color_of other) C))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (neighbor_of this other) (color_equals (color_of this) R))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (neighbor_of this other) (color_equals (color_of this) F))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (neighbor_of this other) (color_equals (color_of this) Y))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (neighbor_of this other) (color_equals (color_of this) G))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 42\n\n       (filter (neighbor_of this other) (color_equals (color_of other) C))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the first group of Cs to R, the second group to F and the third group to B, except the rows containing continuous blocks of Cs.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) (odd))\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) (even))\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) (\"   }",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 5 col 46\n\n       (column_equals (column_of this) (odd))\n                                        ^\nExpected one of: \n\t* COLUMN_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Update the color of objects based on their rows: objects in the first 2 rows to R, in rows 4-7 to F, in rows 9-17 to B, and objects in the 4th row to Y and 6th row to G.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (width_equals (width_of this) even)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (height_equals (height_of this) odd)\\n                    (width_equals (width_of this) even)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (height_equals (height_of this) even)\\n                    (width_equals (width_of this) even)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (height_equals (height_of this) max)\\n                    (width_equals (width_of this) even)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (height_equals (height_of this) odd)\\n                    (width_equals (width_of this) even)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 9 col 17\n\n                )\n                ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For every horizontal stripe, recolor it with one solid color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter)\\n            (and\\n                (size_equals (height_of this) 1)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'a' in the current parser context, at line 5 col 14\n\n            (and\n             ^\nExpected one of: \n\t* APPLY\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects connected vertically to the central column of color C to a specific sequence of colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (neighbor_of this C)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (size_equals (size_of this) 3) \\n                 (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (size_equals (size_of this) 6) \\n                 (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (size_equals (size_of this) 7) \\n                 (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (size_equals (size_of this) 6) \\n                 (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'C' in the current parser context, at line 5 col 31\n\n            (neighbor_of this C)\n                              ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color the objects in the first row as red, in the second row as green, in the fourth row as yellow, and in the sixth row as fuchsia.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (not (column_equals (column_of this) even))\\n                (not (column_equals (column_of this) odd))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (not (column_equals (column_of this) even))\\n                (not (column_equals (column_of this) odd))\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 32 col 17\n\n                (not (column_equals (column_of this) odd\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all horizontal sections of cells connected by 'C' to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to different colors according to their rows.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) center))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                   (not (column_equals (column_of this) center))\\n                   (row_equals (row_of this) 1)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                   (not (column_equals (column_of this) center))\\n                   (row_equals (row_of this) 5)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                   (not (column_equals (column_of this) center))\\n                   (row_equals (row_of this) 6)))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n                   (not (column_equals (column_of this) center))\\n                   (row_equals (row_of this) 9)))\\n        (apply (update_color B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 11 col 21\n\n                   (row_equals (row_of this) 1)))\n                    ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects connected to the grid-wide horizontal lines to consecutive colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (height_equals (height_of this) max)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '}' in the current parser context, at line 51 col 1\n\n}\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor horizontal rows (except the first and last) to unique colors while preserving the structure of rows with more than one color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0) (not (column_equals (column_of this) (max))))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (row_equals (row_of this) 3) (not (row_equals (row_of this) (max))))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (row_equals (row_of this) 5) (not (row_equals (row_of this) (max))))\\n        (apply (update_color B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 52\n\nlter (column_equals (column_of this) 0) (not (column_equals (column_of this) (ma\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor horizontal lines of objects within each section, while keeping the dividers in the center unchanged.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (width_of this) max)\\n                (not (color_equals (color_of this) C))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (height_of this) max)\\n                (not (color_equals (color_of this) C))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'w' in the current parser context, at line 6 col 31\n\n                (size_equals (width_of this) max)\n                              ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of all objects of size 6 based on their position in the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 6)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (neighbor_of this other)\\n                    (neighbor_of this other)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '}' in the current parser context, at line 51 col 1\n\n}\n^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects next to the vertical line of Cs to fill in the gap, then recolor them according to their initial vertical position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 4)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all horizontal lines of size 6 to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (direction_equals (direction_of this) right)\\n                    (direction_equals (direction_of this) left)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (direction_equals (direction_of this) right)\\n                    (direction_equals (direction_of this) left)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (direction_equals (direction_of this) right)\\n                    (direction_equals (direction_of this) left)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (direction_equals (direction_of this) right)\\n                    (direction_equals (direction_of this) left)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (or\\n                    (direction_equals (direction_of this) right)\\n                    (direction_equals (direction_of this) left)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 8 col 22\n\n                    (direction_equals (direction_of this) rig\n                     ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects one step away from the horizontal line with color C at the halfway point in both the up and down directions, and then recolor them based on their new row position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (or\\n                    (and\\n                        (neighbor_of this other)\\n                        (color_equals (color_of other) O)\\n                    )\\n                    (and\\n                        (neighbor_of this other)\\n                        (or\\n                            (color_equals (color_of other) Y)\\n                            (color_equals (color_of other) F)\\n                            (color_equals (color_of other) G)\\n                            (color_equals (color_of other) B)\\n                        )\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 29\n\n                            (color_equals (color_of other) G)\n                            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend objects of size 6 in each row towards the center column, without overlapping, and recolor them sequentially from top to bottom with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n            )\\n        )\\n        (apply\\n            (move_node down)\\n            (extend_node (direction_of other) false)\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n            )\\n        )\\n        (apply\\n            (move_node down)\\n            (extend_node (direction_of other) false)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n            )\\n        )\\n        (apply\\n            (move_node down)\\n            (extend_node (direction_of other) false)\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 6)\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n            )\\n        )\\n        (apply\\n            (move_node down)\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (column_equals (column_of other) center)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For each row of objects, recolor all objects to a different color in a predefined pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) even)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) odd)))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (row_equals (row_of this) 1) (column_equals (column_of other) min)))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (row_equals (row_of this) 2) (column_equals (column_of other) min)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (row_equals (row_of this) 3) (column_equals (column_of other) min)))\\n        (apply (update_color B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 4 col 59\n\nnd (column_equals (column_of this) even)))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects except the largest object (border) to different colors in predefined regions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (shape_equals (shape_of this) enclosed))\\n                (not (size_equals (size_of this) max))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (shape_equals (shape_of this) enclosed))\\n                (not (size_equals (size_of this) max))\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (shape_equals (shape_of this) enclosed))\\n                (not (size_equals (size_of this) max))\\n                (color_equals (color_of this) B)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 32 col 17\n\n                (color_equals (color_of this) O)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor rows of objects, keeping the columns unchanged.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) C)))\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) O))\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 4 col 54\n\ner (and (color_equals (color_of this) C)))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects in each row with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (row_equals (row_of this) 1) (column_equals (column_of this) 4)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (row_equals (row_of this) 1) (column_equals (column_of this) 5)))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (row_equals (row_of this) 2) (column_equals (column_of this) 10)))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (row_equals (row_of this) 4) (column_equals (column_of this) 11)))\\n        (apply (update_color B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 4 col 23\n\n        (filter (and (row_equals (row_of this) 1) (column_equa\n                      ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Organize the grid by bands of objects and recolor each band a different color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and \\n                (color_equals (color_of this) C)\\n                (not (column_equals (column_of this) center))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    ) \\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and \\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n                (column_equals (column_of other) center)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and \\n                (color_equals (color_of this) O)\\n                (column_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and \\n                (color_equals (color_of this) O)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and \\n                (color_equals (color_of this) O)\\n                (column_equals (column_of this) center)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (column_equals (column_of other) center)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move and recolor all objects to a different region of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply\\n            (move_node left)\\n            (move_node up) \\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply\\n            (move_node down)\\n            (move_node left) \\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply\\n            (move_node left)\\n            (update_color D)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply\\n            (move_node left)\\n            (move_node down) \\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) A))\\n        (apply\\n            (move_node left)\\n            (move_node up) \\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'D' in the current parser context, at line 25 col 27\n\n            (update_color D)\n                          ^\nExpected one of: \n\t* COLOR\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each group of four rows separated by the cyan rows to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (column_equals (column_of this) 0)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (row_equals (row_of other) 3)\\n                    (neighbor_of this other)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (row_equals (row_of other) 3)\\n                    (neighbor_of this other)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (row_equals (row_of other) 7)\\n                    (neighbor_of this other)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 20 col 22\n\n                    (row_equals (row_of other) 3)\n                     ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move and recolor the objects towards the cyan vertical shape.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all vertical groups of cells that are adjacent to the major horizontal bars to specific colors based on their positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (color_equals (color_of other) C)\\n                    (or\\n                        (column_equals (column_of this) (column_of other))\\n                        (column_equals (column_of other) (column_of this))\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color (match_direction(this other)))\\n        )\\n    )\\n)\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 17 col 28\n\n            (update_color (match_direction(this other)))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    }
]