[
    {
        "response": "{\n    \"nl_description\": \"Update the color of objects different from 'X' to 'B', 'Y', and 'R' based on their positions in a grid forming a color pattern on red background\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and (not (color_equals (color_of this) X)) (size_equals (size_of this) 1))\\n        )\\n        (apply\\n            (update_color (if (column_equals (column_of this) even) (if (row_equals (row_of this) min) B Y) R))\\n        )\\n    )\\n)\"\n}\n",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 28\n\n            (update_color (if (column_equals (column_of this) even)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the border of all objects of color X to color B, the left and right sides to color Y, and the top and bottom sides to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (or\\n                    (neighbor_of this X)\\n                    (neighbor_of X this)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'X' in the current parser context, at line 17 col 39\n\n                    (neighbor_of this X)\n                                      ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the border cells of all objects of color X to B, the four corner cells to Y, and the remaining internal cells to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (or\\n                    (or (neighbor_of this north) (neighbor_of this south))\\n                    (or (neighbor_of this east) (neighbor_of this west))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (or\\n                    (and (neighbor_of this north) (neighbor_of this west))\\n                    (and (neighbor_of this north) (neighbor_of this east))\\n                    (and (neighbor_of this south) (neighbor_of this west))\\n                    (and (neighbor_of this south) (neighbor_of this east))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'n' in the current parser context, at line 17 col 43\n\n                  (or (neighbor_of this north) (neighbor_of this south))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the borders of horizontal lines of color X to color B, the interior pixels to color Y, and the center to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 10)\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n            (move_node (direction_of center))\\n            (update_color R)\\n            (move_node (direction_of max))\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 12 col 38\n\n            (move_node (direction_of center))\n                                     ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the boundary of each grid of color X into B, the adjacent cells of color X into Y, and the rest into R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (not (neighbor_of this other))\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the colors of the objects forming a plus pattern: central part to Red, surroundings to Yellow, edges to Blue, leaving overlapped out of the change.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (not (color_equals (color_of other) X))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (not (color_equals (color_of this) R))\\n                (not (color_equals (color_of this) Y))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 32 col 17\n\n                (not (color_equals (color_of this) Y))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the border of X objects to B and interior cells to alternating Y and R colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of (move_node left) this )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 30\n\n                (neighbor_of (move_node left) this )\n                             ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the 'X' objects with a checker pattern of colors B, Y, and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (and (size_equals (width_of this) 1) (size_equals (height_of this) 1))\\n                    (and (size_equals (width_of this) max) (size_equals (height_of this) max))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) Y)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'w' in the current parser context, at line 8 col 40\n\n                    (and (size_equals (width_of this) 1) (size_equals (height_o\n                                       ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the borders of objects of color X to color B, the top and bottom rows to color Y, and the remaining to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n            (move_node up)\\n            (update_color Y)\\n            (move_node max)\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 11 col 24\n\n            (move_node max)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the boundary pixels to B, the upper boundary neighbors to Y, and inner pixels to R, with neighbors of the inner pixels to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) Y)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (neighbor_of this (color_of this))\\n                    (neighbor_of (color_of this) this)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (not\\n                    (neighbor_of this (color_of this))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 29 col 39\n\n                    (neighbor_of this (color_of this))\n                                      ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of color X based on their Y-axis position. If the Y position is 2 or 8, color B. If the Y position is 3 or 7, color Y. Otherwise, color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (fill_rectangle (cond\\n                ((in_column (column_of this) 2 8) B)\\n                ((in_column (column_of this) 3 7) Y)\\n                (else R)\\n            ) true)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 8 col 30\n\n            (fill_rectangle (cond\n                             ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change color of entire objects in grids and also change their neighbours in the listed particular pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (or\\n                    (color_equals (color_of other) Y)\\n                    (color_equals (color_of other) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 26 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the inner 4 cells of the square like pattern to Red, the four corners to Yellow, and the borders to Blue.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (degree_equals (degree_of this) 4)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (not (degree_equals (degree_of this) 4))\\n                (degree_equals (degree_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (not (degree_equals (degree_of this) 4))\\n                (not (degree_equals (degree_of this) 2))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (degree_equals (degree_of this) 2)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each 3x3 block within objects of color X in a pattern alternating between colors Y, R, and B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the colors of 3x3 subgrids of color X to have a border color B, inside corners Y, and center R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (size_equals (size_of this) 9)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n            (update_color_inside_corners Y)\\n            (update_color_center R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '_' in the current parser context, at line 12 col 26\n\n            (update_color_inside_corners Y)\n                         ^\nExpected one of: \n\t* LPAR\n\t* COLOR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects of color X. The top and bottom row replacements should be B on the edges and Y in the middle. The middle row replacements should be Y on the edges and R in the middle.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (or\\n                    (and (height_equals (height_of this) 1) (or (and (column_equals (column_of this) min) (update_color B)) (and (column_equals (column_of this) max) (update_color B))))\\n                    (height_equals (height_of this) max)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and (color_equals (color_of this) Y) (height_equals (height_of this) max))\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 17 col 102\n\nor (and (column_equals (column_of this) min) (update_color B)) (and (column_equa\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor enclosed subblocks within X to specific colors based on their position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (or\\n                    (neighbor_of (column_of this) 0)\\n                    (neighbor_of (column_of this) (column_of other))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (shape_equals (shape_of this) square)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 34\n\n                    (neighbor_of (column_of this) 0)\n                                 ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Transform all objects by applying a specific color pattern with neighboring colors B, Y, and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (color_equals (color_of other) B)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color the corners of objects with boundary color X, blue. Color the edges of these objects yellow. Fill the centers with red.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of other) X))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 29 col 17\n\n                (not (color_equals (color_of other) X))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color the borders to B, the corners to Y and the center to R for the largest objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (add_border B)\\n            (mirror diagonal_left)\\n            (extend_node right false)\\n            (extend_node down false)\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 7 col 21\n\n            (mirror diagonal_left)\n                    ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of the interior objects such that the border objects become B, the top-left interior objects become Y, and the top-right interior objects become R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (and (column_equals (column_of this) 1) (not (color_equals (color_of this) X)))\\n                (and (column_equals (column_of this) 2) (not (color_equals (color_of this) X)))\\n                (and (column_equals (column_of this) 3) (color_equals (color_of this) X))\\n                (and (column_equals (column_of this) 4) (color_equals (color_of this) X))\\n                (and (column_equals (column_of this) 5) (color_equals (color_of this) X))\\n                (and (column_equals (column_of this) 6) (color_equals (color_of this) X))\\n                (and (column_equals (column_of this) 7) (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (and (column_equals (column_of this) 8) (not (color_equals (color_of this) X)))\\n                (and (column_equals (column_of this) 9) (color_equals (color_of this) X))\\n                (and (column_equals (column_of this) 10) (color_equals (color_of this) X))\\n                (and (column_equals (column_of this) 11) (not (color_equals (color_of this) X)))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (and (column_equals (column_of this) 3) \n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all horizontal spans of objects with alternating colors: B, Y, Y, B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (not (neighbor_of this other))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 13 col 9\n\n        (vars (this other))\n        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color the borders of objects, whose color is X, using color B and the inner color using a checkerboard pattern of colors Y and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n            (fill_rectangle (checkerboard(Y R)) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 9 col 30\n\n            (fill_rectangle (checkerboard(Y R)) false)\n                             ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all cells in the grid according to a pattern that depends on their position in relation to other cells. The different cells of color X are recolored distinctively within their own shape.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color (cond (and (width_equals (width_of this) 6) (color_of (other-column 0))) B (and (width_equals (width_of this) 4) (neighbor_of (direction_of this) left)) Y (and (height_equals (height_of this) 3) (neighbor_of (direction_of this) left)) R (true|false)))))\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 5 col 31\n\n        (apply (update_color (cond (and (width_equals (width_of this) \n                              ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of color X to a pattern: borders to B, and inner parts alternating Y and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (fill_rectangle Y false)\\n            (hollow_rectangle B)\\n            (cover_hollow_matrix R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 10 col 14\n\n            (cover_hollow_matrix R)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor specific positions in the 'X' blocks: change edges to 'B', corners to 'B', and inner cells to 'Y' or 'R', forming specific patterns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (width_of this) 2)\\n                (size_equals (height_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'w' in the current parser context, at line 27 col 31\n\n                (size_equals (width_of this) 2)\n                              ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of gray color (X) with alternating B, Y, and R in a specific pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )    \\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and\\n            (color_equals (color_of this) B)\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        ))\\n        (apply\\n            (update_color Y)\\n        )    \\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and\\n            (color_equals (color_of this) Y)\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        ))\\n        (apply\\n            (update_color R)\\n        )    \\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and\\n            (color_equals (color_of this) R)\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        ))\\n        (apply\\n            (update_color Y)\\n        )    \\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and\\n            (color_equals (color_of this) Y)\\n            (neighbor_of this other)\\n            (color_equals (color_of other) X)\\n        ))\\n        (apply\\n            (update_color B)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 14 col 13\n\n            (color_equals (color_of other) X)\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each 'X' of a square pattern with a specific set of colors: corners to B, edges to Y, and center to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) Y) (not (neighbor_of this this))))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the exterior border of all X-colored objects to color B, and the interior to colors Y and R to form a pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 18 col 17\n\n                (color_equals (color_of other) B)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the edges of the largest object to color B, its corners to color Y and its inner part to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (size_equals (size_of this) max)\\n                    (not (size_equals (size_of other) max))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (not (size_equals (size_of this) max))\\n                (size_equals (size_of other) max)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) max)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 23 col 17\n\n                (size_equals (size_of other) max)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all the squares from the left side and the bottom side, to a pattern of colors B, Y, R, Y, B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (or\\n                    (column_equals (column_of this) 0)\\n                    (column_equals (column_of this) 6)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (or\\n                    (column_equals (column_of this) 1)\\n                    (column_equals (column_of this) 7)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (or\\n                    (column_equals (column_of this) 2)\\n                    (column_equals (column_of this) 8)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (or\\n                    (column_equals (column_of this) 3)\\n                    (column_equals (column_of this) 9)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (or\\n                    (column_equals (column_of this) 4)\\n                    (column_equals (column_of this) 10)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)    )\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 77 col 6\n\n)    )\n     ^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the exterior and interior rows of objects with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter \\n            (and\\n                (color_equals (color_of this) X)\\n                (or \\n                    (column_equals (column_of this) 0)\\n                    (column_equals (column_of this) max)\\n                    (row_equals (row_of this) 0)\\n                    (row_equals (row_of this) max)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (and\\n                (color_equals (color_of this) X)\\n                (not \\n                    (or \\n                        (column_equals (column_of this) 0)\\n                        (column_equals (column_of this) max)\\n                        (row_equals (row_of this) 0)\\n                        (row_equals (row_of this) max)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter \\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (and \\n                    (not (color_equals (color_of other) X))\\n                    (color_equals (color_of other) Y)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter \\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (and \\n                    (not (color_equals (color_of other) X))\\n                    (color_equals (color_of other) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 9 col 53\n\n        (column_equals (column_of this) max)\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Fill the exterior of objects of color X with color Y on their sides and color B at their corners, and fill the interior with color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (fill_rectangle R false)\\n            (add_border Y)\\n            (corner (this) B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 10 col 14\n\n            (corner (this) B)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the borders of the objects of color X to color B and the interior parts alternatively between Y and R starting with Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color (if (filter_expr (color_equals (color_of other) B)) Y (if (filter_expr (color_equals (color_of other) Y)) R Y)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 20 col 28\n\n            (update_color (if (filter_expr (color_equals (color_of \n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Fill the corners with color B, the borders with color Y except the corners, and the interior with color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (and\\n                        (column_equals (column_of this) even)\\n                        (row_equals (row_of this) even)\\n                    )\\n                    (and\\n                        (column_equals (column_of this) odd)\\n                        (row_equals (row_of this) odd)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (fill_rectangle B false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (row_equals (row_of this) 0)\\n                    (row_equals (row_of this) max)\\n                    (column_equals (column_of this) 0)\\n                    (column_equals (column_of this) max)\\n                )\\n            )\\n        )\\n        (apply\\n            (fill_rectangle Y false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 10 col 26\n\n                        (row_equals (row_of this) even)\n                         ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the four corners of objects of color X to color B, the adjacent cells of the corners to color Y, and the rest of the inner cells to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (not (color_equals (color_of this) Y))\\n                (not (color_equals (color_of this) B))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) B)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the borders of the largest square object to color B, the corners to color Y, and the rest of its interior to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (size_equals (size_of this) max)\\n            )\\n        )\\n        (apply\\n            (add_border B)\\n            (fill_rectangle R false)\\n            (update_color (img_pts_of this top_left) Y)\\n            (update_color (img_pts_of this top_right) Y)\\n            (update_color (img_pts_of this bottom_left) Y)\\n            (update_color (img_pts_of this bottom_right) Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 13 col 28\n\n            (update_color (img_pts_of this top_left) Y)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each X object based on its position in the grid: corners to B, edges to Y, and center to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (column_equals (column_of this) 0)\\n                    (column_equals (column_of this) 9)\\n                    (or\\n                        (column_equals (column_of this) 5)\\n                        (column_equals (column_of this) 3)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (or\\n                    (and\\n                        (column_equals (column_of this) 1)\\n                        (column_equals (column_of this) 5)\\n                        (column_equals (column_of this) 7)\\n                    )\\n                    (and\\n                        (column_equals (column_of this) 1)\\n                        (column_equals (column_of this) 3)\\n                        (column_equals (column_of this) 7)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (column_equals (column_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 21\n\n                    (or\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the border elements of squares of color X with color B, the top and bottom rows of their inner elements with color Y, and the left and right columns of their inner elements with color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (shape_equals (shape_of this) square)\\n        )\\n        (apply\\n            (add_border B)\\n            (rule\\n                (vars (this))\\n                (filter\\n                    (and\\n                        (not (color_equals (color_of this) B))\\n                        (or\\n                            (column_equals (column_of this) left)\\n                            (column_equals (column_of this) right)\\n                            (and\\n                                (not (column_equals (column_of this) left))\\n                                (not (column_equals (column_of this) right))\\n                                (or\\n                                    (neighbor_of this other)\\n                                    (color_equals (color_of this) X)\\n                                )\\n                            )\\n                        )\\n                    )\\n                )\\n                (apply\\n                    (update_color R)\\n                )\\n            )\\n            (rule\\n                (vars (this))\\n                (filter\\n                    (and\\n                        (not (color_equals (color_of this) B))\\n                        (and\\n                            (not (column_equals (column_of this) left))\\n                            (not (column_equals (column_of this) right))\\n                            (or\\n                                (neighbor_of this other)\\n                                (color_equals (color_of this) X)\\n                            )\\n                        )\\n                    )\\n                )\\n                (apply\\n                    (update_color Y)\\n                )\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 9 col 14\n\n            (rule\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolors all squares. Squares with color X are recolored using a striped pattern with colors B, Y, and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (if\\n                (and (not (color_equals B)) (column_equals even))\\n                (update_color Y)\\n            )\\n            (if\\n                (and (not (color_equals Y)) (column_equals odd))\\n                (update_color R)\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 15 col 14\n\n            (if\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all individual grid cells based on their initial positions relative to larger groups of cells.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node_max up)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) O)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 53 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects with strong square patterns of size 2x2 in the grid. The top-left and bottom-right cells are colored B, while the other cells are colored R or Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 4)\\n                (shape_equals (shape_of this) square)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n            (increase_color_X)\\n            (update_color R 2)\\n            (update_color Y 1)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 12 col 14\n\n            (increase_color_X)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor each row of 4x4 squares from color X to a gradient pattern using colors B, Y, R, and Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            ;; First row pattern: B, Y, Y, B (left-right symmetrical gradient starting with B at the edges and Y in the center)\\n            (if (and (height_equals (height_of this) 3) (width_equals (width_of this) 3))\\n                (do\\n                    (update_color B)\\n                )\\n            )\\n            (if (and (height_equals (height_of this) 4) (width_equals (width_of this) 4))\\n                (do\\n                    (if (or (direction_equals (direction_of this) right) (direction_equals (direction_of this) left))\\n                        (update_color Y)\\n                    )\\n                )\\n            )\\n            (if (and (height_equals (height_of this) 5) (width_equals (width_of this) 5))\\n                (do\\n                    (update_color R)\\n                )\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 7 col 14\n\n            (if (and (height_equals (height_of this) \n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor specific patterns within the objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) Y)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (or\\n                    (and\\n                        (color_equals (color_of (neighbor_of this)) Y)\\n                        (color_equals (color_of (neighbor_of (neighbor_of this))) Y)\\n                    )\\n                    (and\\n                        (color_equals (color_of (neighbor_of this down))) Y\\n                        (color_equals (color_of (neighbor_of (neighbor_of this down))) Y)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 27 col 49\n\n                (color_equals (color_of (neighbor_of this)) Y)\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Transform the columns of X into alternating colored blocks R, Y, and B based on a pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (or\\n                    (and\\n                        (color_equals (color_of other) R)\\n                        (and\\n                            (neighbor_of other this)\\n                            (color_equals (color_of (neighbor_of this other)) R)\\n                        )\\n                    )\\n                    (color_equals (color_of other) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (or\\n                    (and\\n                        (color_equals (color_of other) Y)\\n                        (and\\n                            (neighbor_of other this)\\n                            (color_equals (color_of (neighbor_of this other)) Y)\\n                        )\\n                    )\\n                    (color_equals (color_of other) Y)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Chessboard pattern on all shapes of color X. Inner cells turn R and B in alternating quadrants, boundary cells Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color (color_of this F))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) F)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) Y))\\n        )\\n        (apply\\n            (update_color (if (color_equals (color_of this) B) R B))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'F' in the current parser context, at line 8 col 42\n\n           (update_color (color_of this F))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all squares of size 4, and the squares of size 2 attached to their corners.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (shape_equals (shape_of this) square) (size_equals (size_of this) 4)))\\n        (apply\\n            (update_color B)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (and (shape_equals (shape_of this) square) (size_equals (size_of this) 2) (neighbor_of this other) (size_equals (size_of other) 4)))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 12 col 91\n\n square) (size_equals (size_of this) 2) (neighbor_of this other) (size_equals (s\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor border objects to B, then recolor top and bottom row objects to Y, and middle two rows to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (not (color_equals (color_of this) O))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (neighbor_of this other)\\n                (or\\n                    (column_equals (column_of this) 0)\\n                    (column_equals (column_of this) 9)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (not (color_equals (color_of this) O))\\n                (color_equals (color_of this) B)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (not (color_equals (color_of this) O))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all rows and columns of objects starting with B at the edges, followed by Y, R, R, Y, then ending with B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (column_equals (column_of this) 0)\\n                    (row_equals (row_of this) 0)\\n                    (column_equals (column_of this) (width_of this))\\n                    (row_equals (row_of this) (height_of this))\\n                )\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (column_equals (column_of this) 1)\\n                    (row_equals (row_of this) 1)\\n                    (column_equals (column_of this) ((width_of this) - 1))\\n                    (row_equals (row_of this) ((height_of this) - 1))\\n                )\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (column_equals (column_of this) 2)\\n                    (row_equals (row_of this) 2)\\n                    (column_equals (column_of this) ((width_of this) - 2))\\n                    (row_equals (row_of this) ((height_of this) - 2))\\n                )\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (column_equals (column_of this) 3)\\n                    (row_equals (row_of this) 3)\\n                    (column_equals (column_of this) ((width_of this) - 3))\\n                    (row_equals (row_of this) ((height_of this) - 3))\\n                )\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (column_equals (column_of this) 4)\\n                    (row_equals (row_of this) 4)\\n                    (column_equals (column_of this) ((width_of this) - 4))\\n                    (row_equals (row_of this) ((height_of this) - 4))\\n                )\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (column_equals (column_of this) ((width_of this) - 5))\\n                    (row_equals (row_of this) ((height_of this) - 5))\\n                )\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 8 col 22\n\n                    (row_equals (row_of this) 0)\n                     ^\nExpected one of: \n\t* OP_NOT\n\t* WIDTH_EQ\n\t* SIZE_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* DEGREE_EQ\n\t* NEIGHBOR_OF\n\t* OP_OR\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* SHAPE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the corner pixels B, the edge pixels Y, and the inner pixels R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) O)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (or\\n                (update_color B)\\n                (update_color Y)\\n                (update_color R)\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 17 col 14\n\n            (or\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_NOOP\n\t* TR_UPDATE_COLOR\n\t* TR_MIRROR\n\t* TR_ROTATE_NODE\n\t* TR_INSERT\n\t* TR_MOVE_NODE\n\t* TR_FILL_RECTANGLE\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_ADD_BORDER\n\t* TR_MOVE_NODE_MAX\n\t* TR_EXTEND_NODE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the edge cells of all X objects with B, and recolor the internal cells of X objects to Y or R depending on their initial color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (hollow_rectangle Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) Y)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 34 col 17\n\n                (color_equals (color_of other) Y)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects of color X with a checkerboard pattern of colors R, Y, and B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (column_equals (column_of this) (odd))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (column_equals (column_of this) (even))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 16 col 50\n\n       (column_equals (column_of this) (odd))\n                                        ^\nExpected one of: \n\t* COLUMN_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the border cells to B, the corner cells to R, and the remaining cells within the X object to Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n            )\\n        )\\n        (apply\\n            (add_border B)\\n            (fill_rectangle Y true)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Transform all the objects of color X into a pattern of B, Y, and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (or\\n                    (neighbor_of this (other (color_equals (color_of other) R)))                                                (or\\n                        (neighbor_of this (other (color_equals (color_of other) B)))\\n                        (neighbor_of this (other (color_equals (color_of other) Y)))\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (not\\n                    (or\\n                        (neighbor_of this (other (color_equals (color_of other) R)))\\n                        (or\\n                            (neighbor_of this (other (color_equals (color_of other) B)))\\n                            (neighbor_of this (other (color_equals (color_of other) Y)))\\n                        )\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 39\n\n                    (neighbor_of this (other (color_equals (color_of other) R)\n                                      ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all the objects of color X with a checkerboard pattern using the colors B, Y, and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (width_equals (column_of this) even)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (width_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 16 col 32\n\n                (width_equals (column_of this) even)\n                               ^\nExpected one of: \n\t* WIDTH_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor blocks of color X in a pattern with colors B, Y, and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of other) B))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 27 col 17\n\n                (not (color_equals (color_of other) B))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects of color X: change the external rows to B, the internal rows to Y, and the most internal squares to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of this))\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of this))\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 15 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the border elements of the object of color X to B, and recolor the inner elements of the object to alternate colors Y and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n            (fill_rectangle\\n                (or\\n                    (degree_equals (degree_of this) even)\\n                    (degree_equals (degree_of this) odd)\\n                )\\n                false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 10 col 18\n\n                (or\n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all the objects of color X in a checkerboard pattern with colors B, Y, and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n                (or\\n                    (color_equals (color_of other) O)\\n                    (color_equals (color_of other) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) Y)\\n                (neighbor_of this other)\\n                (or\\n                    (color_equals (color_of other) Y)\\n                    (color_equals (color_of other) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    }
]