(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) R)
                    (color_equals (color_of this) F)
                )
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node down_right)
            (move_node down_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (not(column_equals (column_of this) 1))
            )
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color B)
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max up)
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node right)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) R)))
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (mirror (mirror_axis_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do (rule (vars (this))(filter (not (color_equals (color_of this) R)))(apply (move_node left)))(rule (vars (this))(filter (color_equals (color_of this) R))(apply (rotate_node 180))))

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) R)
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node (direction_of other))
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (neighbor_of this this)
                (not (neighbor_of this this))
            )
        )
        (apply
            (flip diagonal_left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (move_node right)
            (rotate_node 270)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (color_equals (color_of this) R)
                    (color_equals (color_of this) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (mirror (mirror_axis_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) F)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color
                (color_of other)
            )
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 270)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (flip vertical)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (and (size_equals (size_of this) 4) (color_equals (color_of this) A)))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (and (size_equals (size_of this) 4) (color_equals (color_of this) R)))
        (apply (update_color A))
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
            (flip diagonal_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (flip vertical)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (update_color F))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) F))
        (apply (update_color R))
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
            (rotate_node 90)
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (shape_equals (shape_of this) square)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (mirror (mirror_axis_of this))
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (neighbor_of this this)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) R))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) A)
                (or
                    (color_equals (color_of this) B)
                    (color_equals (color_of this) F)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) A)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) F)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (rotate_node 270)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (flip horizontal)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) R))
        )
        (apply
            (rotate_node 180)
        )
    )
)

(do
  (rule
    (vars (this other))
    (filter (and (neighbor_of this other)
    (or (color_equals (color_of other) R) (color_equals (color_of other) F))))
    (apply
        (move_node_max (direction_of other)))))

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max down_right)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node_max down)
        )
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) A))
        (apply
            (move_node_max down)
        )
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) B))
        (apply
            (move_node_max right)
        )
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) F))
        (apply
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node down_right)
            (flip diagonal_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (mirror (mirror_axis_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (not (color_equals (color_of this) (color_of other)))
                    (column_equals (column_of this) (column_of other))
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) R)
        )
        (apply
            (move_node_max (direction_of other))
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter (column_equals (column_of this) 1))
        (apply
            (move_node down_right)
        )
    )
    (rule
        (vars (this other))
        (filter (column_equals (column_of this) 4))
        (apply
            (move_node down_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (mirror (mirror_axis_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (flip diagonal_right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
            (move_node (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (move_node left)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) (color_of other)))
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
            (update_color X)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 270)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
            (move_node left)
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) F))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)