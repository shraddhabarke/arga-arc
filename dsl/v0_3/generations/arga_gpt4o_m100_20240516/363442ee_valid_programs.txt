(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node right)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (not (column_equals (column_of this) 4))
                (or
                    (and
                        (column_equals (column_of this) 1)
                        (or
                            (size_equals (size_of this) 3)
                            (size_equals (size_of this) 9)
                        )
                    )
                    (and
                        (not (column_equals (column_of this) 1))
                        (size_equals (size_of this) 3)
                    )
                )
            )
        )
        (apply
            (move_node down)
            (move_node down)
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this this)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) even)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node_max right)
            (move_node_max down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node_max down)
            (insert 0 bottom source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (not (and (color_equals (color_of this) X) (neighbor_of this this))))
        (apply
            (move_node up)
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (mirror (mirror_axis_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (mirror (mirror_axis_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node_max right)
            (insert 1 (img_pts_of this) target)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
            (move_node right)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node left)
            (insert 0 top_left target)        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (insert 0 (img_pts_of this) target)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (not (column_equals (column_of other) odd))
            )
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node left)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (not (color_equals (color_of this) X))
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (insert 1 bottom_right middle)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max down)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (move_node left)
            (insert 1 (img_pts_of this) target)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node_max up_left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (column_equals (column_of this) (column_of other)))
                (color_equals (color_of other) X)
            )
        )
        (apply
            (mirror (mirror_axis_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of other) 3)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (column_equals (column_of this) (column_of other))
            )
        )
        (apply
            (mirror (mirror_axis_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node left)
            (move_node left)
            (move_node left)
            (move_node left)
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node right)
            (move_node right)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node left)
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node left)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of other this)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node up_right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of other this)
        )
        (apply
            (extend_node up_left false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (column_equals (column_of this) 12))
                (and
                    (neighbor_of this other)
                    (column_equals (column_of other) 12)
                )
            )
        )
        (apply
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node left)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter)
        (apply
            (insert 1 (img_pts_of this) target)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (insert 0 bottom source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max up)
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (insert 1 (img_pts_of this) target)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node left)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (mirror (mirror_axis_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (not (color_equals (color_of this) O))
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node right)
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (mirror (mirror_axis_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (neighbor_of this other) (column_equals (column_of other) 0)))
        (apply (move_node right)))
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (column_equals (column_of this) (column_of other))
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node up)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node_max left)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node left)
            (move_node right)
            (move_node right)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color (color_of this))
        )
    )
)

(do
 (rule
  (vars (this))
  (filter
   (size_equals (size_of this) 3)
  )
  (apply
   (move_node left)
   (update_color (color_of this))
  )
 )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up_left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max up_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) (column_of other))
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (column_equals (column_of other) center)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (not (color_equals (color_of this) X)) (neighbor_of this other)))
        (apply (move_node_max (direction_of other)))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (not (size_equals (size_of this) 3))
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (extend_node down false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node right)
            (move_node right)
        )
    )
)