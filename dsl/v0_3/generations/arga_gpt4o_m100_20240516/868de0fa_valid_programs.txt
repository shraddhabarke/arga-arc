(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of other) odd)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of other) 2)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (and (size_equals (size_of this) max) (shape_equals (shape_of this) square)))
        (apply 
            (add_border A) 
            (add_border R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) 0)
                (or
                    (column_equals (column_of this) 9)
                    (or
                        (column_equals (column_of this) 19)
                        (or
                            (column_equals (column_of this) 10)
                            (column_equals (column_of this) 11)
                        )
                    )
                )
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) min)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) min)
                (neighbor_of this this)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (neighbor_of this other))
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) 3)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) A)
                (neighbor_of other this)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color B)
            (add_border A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) odd)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) even)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (update_color R)
        )    
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (update_color A)
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of other) max)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (color_equals (color_of this) A)
            )
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (not (color_equals (color_of this) B))
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (not (color_equals (color_of other) O))
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (extend_node down false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (size_equals (size_of this) 4)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) A)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (shape_equals (shape_of this) enclosed)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (not (shape_equals (shape_of this) enclosed))
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (size_equals (size_of this) 3)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (noop)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (or
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (update_color R)
            (move_node_max (direction_of other))
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) B)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (not (color_equals (color_of this) B))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of other) O))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of other) B)
                    (color_equals (color_of other) O)
                )
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (or
                    (size_equals (size_of this) 4)
                    (size_equals (size_of this) 5)
                )
                (size_equals (size_of this) 6)
            )
        )
        (apply
            (move_node_max right)
            (update_color A)
        )
    )

    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (neighbor_of this other)
                (not (color_equals (color_of this) B))
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) 4)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) 7)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (not (size_equals (size_of this) 1))
            )
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (move_node right)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 3))
        (apply 
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (shape_equals (shape_of this) enclosed)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (shape_equals (shape_of this) square)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 6)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (size_equals (size_of other) max)
            )
        )
        (apply
            (update_color A)
            (move_node_max (direction_of other))
        )    
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color R)
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 5)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) O)
                    (or
                        (color_equals (color_of this) R)
                        (or
                            (color_equals (color_of this) G)
                            (color_equals (color_of this) W)
                        )
                    )
                )
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color A)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 1))
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (size_equals (size_of this) 1))
                (column_equals (column_of this) 1)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (size_equals (size_of this) 1))
                (column_equals (column_of this) 2)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) square)
                (and
                    (neighbor_of this other)
                    (shape_equals (shape_of other) enclosed)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 9)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 8)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 0)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) max)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (size_equals (size_of other) max)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (size_equals (size_of this) 4)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (extend_node down false)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node down)
            (extend_node down false)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (not
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 1))
        )
        (apply
            (move_node_max (direction_of this))
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (not (color_equals (color_of other) B))
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (not (color_equals (color_of other) B))
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) A)
                (not (color_equals (color_of other) W))
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (degree_equals (degree_of this) 2))
        (apply (update_color A))
    )
    (rule
        (vars (this))
        (filter (degree_equals (degree_of this) 4))
        (apply (update_color R))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 1))
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 4)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 5)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 4)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (add_border R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) odd)
                (degree_equals (degree_of this) min)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) min)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) min)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 4)
                (degree_equals (degree_of this) 2)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max up)
        )
    )
    (rule
        (vars (this))
        (filter
          (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
      (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) 4)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (column_equals (column_of this) even)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (size_equals (size_of this) 1))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (move_node right)
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node up false)
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of other) max)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) A)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (extend_node down false)
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (size_equals (size_of other) 7)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (size_equals (size_of other) 10)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (size_equals (size_of this) 1))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node up)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) R)
                    (color_equals (color_of this) A)
                )
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (or
                    (and (column_equals (column_of this) even) (size_equals (size_of this) 1))
                    (and (column_equals (column_of this) odd) (size_equals (size_of this) 1))
                )
            )
        )
        (apply
            (move_node_max up)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (or
                    (and (column_equals (column_of this) even) (size_equals (size_of this) 2))
                    (and (column_equals (column_of this) odd) (size_equals (size_of this) 2))
                )
            )
        )
        (apply
            (move_node_max up)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max right)
        )
    )
    (rule
        (vars (this))
        (filter
            (width_equals (width_of this) max)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (not (width_equals (width_of this) max))
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) even)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (size_equals (size_of this) even)
                    (neighbor_of this this)
                )
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (not (neighbor_of this other))
            )
        )
        (apply
            (move_node down_left)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (move_node down)
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) R) (color_equals (color_of other) B)))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 3)
                (not (neighbor_of this other))
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 5)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) A))
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 2)
                (or
                    (column_equals (column_of this) 3)
                    (column_equals (column_of this) 4))
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 6)
                (or
                    (column_equals (column_of this) 7)
                    (column_equals (column_of this) 8))
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply 
            (update_color R)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) square)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) even)
                (shape_equals (shape_of this) square)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) odd)
                (shape_equals (shape_of this) square)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this this)
            )
        )
        (apply
            (move_node left)
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this this)
            )
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node down)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (move_node up)
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (not (size_equals (size_of this) 1))
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
  (rule
    (vars (this other))
    (filter
      (neighbor_of this other)
    )
    (apply
      (update_color R)
    )
  )
  (rule
    (vars (this other))
    (filter
      (not (neighbor_of this other))
    )
    (apply
      (update_color A)
    )
  )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) square)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (not (shape_equals (shape_of this) square))
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (degree_equals (degree_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (degree_equals (degree_of this) 2)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (size_equals (size_of this) 1))
        (apply
            (update_color A)
            (extend_node (direction_of other) false)
        )
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 4))
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (hollow_rectangle A)
            (fill_rectangle R false)
        )
    )
)