[
    {
        "response": "{\n    \"nl_description\": \"Change colors to yellow to the objects that have exactly 2 yellow neighbors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (size_equals\\n                    (apply\\n                        neighbor_of this other\\n                    )\\n                    2\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'a' in the current parser context, at line 8 col 22\n\n                    (apply\n                     ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Mirror all objects with respect to the horizontal axis.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (mirror (horizontal))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'h' in the current parser context, at line 6 col 22\n\n            (mirror (horizontal))\n                     ^\nExpected one of: \n\t* MIRROR_AXIS_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Mirror (flip) all objects horizontally.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (mirror vertical)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'v' in the current parser context, at line 6 col 21\n\n            (mirror vertical)\n                    ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend all the objects of height 1 to the maximum height without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (height_equals (height_of this) 1)\\n        )\\n        (apply\\n            (extend_node (direction_up) false)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 8 col 27\n\n            (extend_node (direction_up) false)\n                          ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Fill the hollow rectangles present in the image with color Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_eq (shape_of this) hollow_rectangle)\\n        )\\n        (apply\\n            (fill_rectangle Y false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 's' in the current parser context, at line 5 col 14\n\n            (shape_eq (shape_of this) hollow_rectangl\n             ^\nExpected one of: \n\t* NEIGHBOR_OF\n\t* OP_NOT\n\t* SHAPE_EQ\n\t* OP_AND\n\t* SIZE_EQ\n\t* DEGREE_EQ\n\t* WIDTH_EQ\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* COLUMN_EQ\n\t* OP_OR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change all objects to color Y, which are not at the edge of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (or\\n                (or\\n                    (column_equals (column_of this) min)\\n                    (column_equals (column_of this) max)\\n                )\\n                (or\\n                    (row_equals (row_of this) min)\\n                    (row_equals (row_of this) max)\\n                )\\n            ))\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 7 col 53\n\n        (column_equals (column_of this) min)\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color Y along a diagonal axis.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) Y)\\n        )\\n        (apply\\n            (move_node_max diagonal_right)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 8 col 28\n\n            (move_node_max diagonal_right)\n                           ^\nExpected one of: \n\t* DIRECTION\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects towards the center of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node (direction 0))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 6 col 25\n\n            (move_node (direction 0))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects that are at the edges of the grid one step towards the center.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (or (column_equals (column_of this) 0) (column_equals (column_of this) max))\\n                (or (row_equals (row_of this) 0) (row_equals (row_of this) max))\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of (middle)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 6 col 88\n\nhis) 0) (column_equals (column_of this) max))\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Check if an object has only vertical neighbors, then recolor it to color Y.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (not (neighbor_of this other))\\n                (not (neighbor_of other this))\\n            )\\n        )\\n        (apply\\n            (update_color Y)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (neighbor_of this other))\n                ^\nExpected one of: \n\t* RPAR\n"
    }
]