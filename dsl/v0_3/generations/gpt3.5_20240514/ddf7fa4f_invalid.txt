[
    {
        "response": "{\n    \"nl_description\": \"Extend all the objects of color F and size 1 diagonally left without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) F)\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (extend_node (-135) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '-' in the current parser context, at line 11 col 27\n\n            (extend_node (-135) false)\n                          ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects diagonally down and right, and apply the 'add_border' transform to objects of color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) F)\\n        )\\n        (apply\\n            (add_border A)\\n        )\\n    )\\n    \\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node diagonal_right)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 16 col 24\n\n            (move_node diagonal_right)\n                       ^\nExpected one of: \n\t* DIRECTION\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to color A and extend objects of color B toward the objects of color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter)\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n    \\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) B)\\n            (color_equals (color_of other) F)\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 14 col 13\n\n            (color_equals (color_of other) F)\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to color A if they are positioned at the top row or rightmost column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (column_equals (column_of this) max)\\n                (image_pts_of top)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 6 col 49\n\n        (column_equals (column_of this) max)\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color F along the diagonal left by one step, and then recolor them to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) F)\\n        )\\n        (apply\\n            (move_node (up_left))\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'u' in the current parser context, at line 8 col 25\n\n            (move_node (up_left))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of size 1 to color F, and those of max size to color A.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (size_equals (size_of this) 1)\\n                (size_equals (size_of this) max)\\n            )\\n        )\\n        (apply\\n            (update_color\\n                (if\\n                    (size_equals (size_of this) 1)\\n                    F\\n                    A\\n                )\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 12 col 18\n\n                (if\n                 ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of color F to color A, then extend them horizontally without overlapping until the edge of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) F)\\n        )\\n        (apply\\n            (update_color A)\\n            (extend_node (direction_of source) true)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 's' in the current parser context, at line 9 col 40\n\n            (extend_node (direction_of source) true)\n                                       ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Mirror each object with respect to the vertical axis.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (mirror (vertical))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'v' in the current parser context, at line 6 col 22\n\n            (mirror (vertical))\n                     ^\nExpected one of: \n\t* MIRROR_AXIS_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of color different than O to color F, and extend them until they hit another object without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (update_color F)\\n            (extend_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '_' in the current parser context, at line 9 col 25\n\n            (extend_node_max (direction_of other))\n                        ^\nExpected one of: \n\t* DIRECTION\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects to color A if they are neighbors of an object of color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) A)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) F)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) F)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Fill all the hollow objects with the color A, then extend them until they hit another object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) enclosed)\\n                (color_equals (color_of this) A)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle A false)\\n            (extend_node_max (direction_of other))\\n        )    \\n    )\\n)\"\n}  ",
        "error_type": "parse_error",
        "error_message": "No terminal matches '_' in the current parser context, at line 12 col 25\n\n            (extend_node_max (direction_of other))\n                        ^\nExpected one of: \n\t* DIRECTION\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of objects in the bottom-right corner to color A and extend them to the maximum size without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (column_equals (column_of this) max)\\n                (row_equals (row_of this) max)\\n            )\\n        )\\n        (apply\\n            (update_color A)\\n            (extend_node (direction_of bottom_right) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 6 col 49\n\n        (column_equals (column_of this) max)\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    }
]