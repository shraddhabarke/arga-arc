(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (add_border G)
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (extend_node right false)
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
            (hollow_rectangle Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node_max (direction_of this))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (extend_node left true)
            (extend_node right true)
            (extend_node up true)
            (extend_node down true)
            (add_border G)
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) F))
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter) 
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter) 
        (apply
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (size_equals (size_of this) min)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (neighbor_of this other)
            )
        )
        (apply
            (add_border G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
            (hollow_rectangle Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (move_node up)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (color_equals (color_of this) F)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 8)
        )
        (apply
            (move_node up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 8)
                (or
                    (column_equals (column_of this) even)
                    (column_equals (column_of this) odd)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) F))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) max))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (or
                    (color_equals (color_of other) Y)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (extend_node (direction_of other) true)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (hollow_rectangle Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (extend_node up true)
            (extend_node down true)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (fill_rectangle Y false)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) square)
                (and
                    (neighbor_of this other)
                    (shape_equals (shape_of other) enclosed)
                )
            )
        )
        (apply
            (update_color G)
            (extend_node (direction_of other) true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
            (hollow_rectangle G)
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) F)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (hollow_rectangle Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (size_equals (size_of other) max)
            )
        )
        (apply
            (extend_node right false)
            (extend_node left false)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
        )
    )
)

(do (rule (vars (this)) (filter) (apply (add_border G) (hollow_rectangle Y))))

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node down true)
            (extend_node up true)
            (extend_node left true)
            (extend_node right true)
            (update_color G)
            (hollow_rectangle Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) Y)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
            (hollow_rectangle Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 6)
        )
        (apply
            (extend_node down true)
            (update_color G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (and
                    (neighbor_of this other)
                    (column_equals (column_of other) center)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (add_border G)
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) odd)
                (color_equals (color_of this) C)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
            (fill_rectangle Y false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (add_border G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (extend_node (direction_of other) true)
            (update_color Y)
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (hollow_rectangle Y)
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) F))
        (apply
            (add_border G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (extend_node right false)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (extend_node (direction_of other) true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (extend_node down_right false)
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (extend_node down false)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color G)
        )
    )
)