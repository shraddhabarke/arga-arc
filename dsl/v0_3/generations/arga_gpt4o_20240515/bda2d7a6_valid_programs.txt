(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and 
                (not (color_equals (color_of this) O))
                (and
                    (not (neighbor_of this other))
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and 
                (not (color_equals (color_of this) O))
                (and
                    (not (neighbor_of this other))
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and 
                (not (color_equals (color_of this) O))
                (and
                    (not (neighbor_of this other))
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (shape_equals (shape_of this) enclosed)
            )
        )
        (apply
            (add_border (color_of other))
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border F)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (add_border (color_of other))
            (mirror (mirror_axis_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) G))
        (apply (update_color O))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) O))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) G))
        (apply (update_color R))
    )
)

(do
        (rule
            (vars (this other))
            (filter (and (neighbor_of this other) (or (color_equals (color_of this) (color_of other)) (color_equals (color_of this) O))))
            (apply (move_node_max (direction_of other)) (update_color (color_of other))))
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (size_equals (size_of this) max)
            )
        )
        (apply
            (add_border (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (shape_equals (shape_of this) square)
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (not (shape_equals (shape_of this) square))
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) G)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color X)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (or (color_equals (color_of this) G) (color_equals (color_of this) O)))
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node_max (direction_of this))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) max))
        (apply (add_border X))
    )
)

(do
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) G) (neighbor_of this other)))
        (apply (update_color O))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (mirror (mirror_axis_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (add_border (color_of this))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (color_equals (color_of this) (color_of other))
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of this))
        )   
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) O)
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) A)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) F)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color X)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node up true)
            (extend_node down true)
            (extend_node left true)
            (extend_node right true)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) (color_of other)))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) G))
        (apply (update_color O))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) A))
        (apply (update_color O))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) F))
        (apply (update_color A))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) C))
        (apply (update_color X))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) X))
        (apply (update_color C))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) square)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (flip vertical)
            (flip horizontal)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (neighbor_of this other))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) (color_of this))
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) max)
                (size_equals (size_of other) max)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (add_border (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) max))
        (apply
            (update_color (color_of this))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (size_equals (size_of this) 1)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) (color_of other)))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply (update_color O))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) A))
        (apply (update_color F))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) F))
        (apply (update_color A))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) C))
        (apply (update_color X))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply (update_color C))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (not (neighbor_of this other))
        )
        (apply
            (update_color X)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) O))
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) G))
        (apply (update_color O))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) O))
        (apply (update_color R))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) G)
                (or
                    (color_equals (color_of this) A)
                    (color_equals (color_of this) C)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply (add_border O))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) A))
        (apply (add_border F))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) C))
        (apply (add_border X))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) enclosed)
                (and
                    (size_equals (size_of this) max)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)