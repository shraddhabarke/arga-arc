(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do (rule (vars (this)) (filter (size_equals (size_of this) 4)) (apply (update_color G))) (rule (vars (this)) (filter (size_equals (size_of this) 8)) (apply (update_color Y))) (rule (vars (this)) (filter (size_equals (size_of this) max)) (apply (update_color G))) )

(do
    (rule
        (vars (this))
        (filter (and (column_equals (column_of this) even) (not (column_equals (column_of this) odd))))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (and (column_equals (column_of this) odd) (not (column_equals (column_of this) even))))
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (or
                    (column_equals (column_of this) even)
                    (column_equals (column_of this) odd)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (or
                    (column_equals (column_of this) even)
                    (column_equals (column_of this) odd)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) W)
                (or
                    (column_equals (column_of this) even)
                    (column_equals (column_of this) odd)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (or
                    (column_equals (column_of this) even)
                    (column_equals (column_of this) odd)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (not (neighbor_of this other)) (column_equals (column_of this) center)))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter)
        (apply (update_color Y))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) even)
                (or
                    (column_equals (column_of this) 5)
                    (or
                        (column_equals (column_of this) 10)
                        (or
                            (column_equals (column_of this) 15)
                            (or
                                (column_equals (column_of this) 20)
                                (column_equals (column_of this) 25)
                            )
                        )
                    )
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of other) 25)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) even)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (column_equals (column_of this) even))
                (not (shape_equals (shape_of this) enclosed))
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) W)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (neighbor_of this other))
                (color_equals (color_of other) W)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (color_equals (color_of other) C)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) W)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) W)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) C)))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (or (color_equals (color_of this) O) (color_equals (color_of this) W)))
        (apply (update_color Y))
    )
)

(do (rule (vars (this other)) (filter (and (neighbor_of this other) (and (color_equals (color_of this) C) (color_equals (color_of other) O)))) (apply (update_color Y))) (rule (vars (this)) (filter (and (color_equals (color_of this) G) (color_equals (color_of this) B))) (apply (update_color G))) (rule (vars (this other)) (filter (and (neighbor_of this other) (and (color_equals (color_of this) Y) (color_equals (color_of other) O)))) (apply (update_color Y))) )

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
)

(do
  (rule
    (vars (this))
    (filter)
    (apply
      (update_color Y)
    )
  )
  (rule
    (vars (this))
    (filter
      (column_equals (column_of this) 16)
    )
    (apply
      (update_color G)
    )
  )
  (rule
    (vars (this))
    (filter
      (column_equals (column_of this) 6)
    )
    (apply
      (update_color G)
    )
  )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) odd)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
  (rule
    (vars (this))
    (filter 
       (column_equals (column_of this) even)) 
    (apply
       (update_color G)
    )
  )
   (rule
    (vars (this))
    (filter (and
       (column_equals (column_of this) even)
       (not (color_equals (color_of this) C))))
    (apply
       (update_color Y)
    )
  )
  (rule
    (vars (this))
    (filter
       (and (color_equals (color_of this) O)
       (column_equals (column_of this) odd)))
    (apply
       (update_color Y)
    )
  )
 )

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) odd))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) even))
        (apply (update_color Y))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 4)
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 4)
                (column_equals (column_of this) even)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 5)
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 5)
                (column_equals (column_of this) even)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (column_equals (column_of this) even)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) 0)
                (or
                    (column_equals (column_of this) 5)
                    (or
                        (column_equals (column_of this) 10)
                        (or
                            (column_equals (column_of this) 15)
                            (or
                                (column_equals (column_of this) 20)
                                (column_equals (column_of this) 25)
                            )
                        )
                    )
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of other) center)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of this) G)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) W))
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (or
                    (column_equals (column_of this) even)
                    (column_equals (column_of this) odd)
                )
                (or
                    (column_equals (column_of this) even)
                    (column_equals (column_of this) odd)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (column_equals (column_of this) even)
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) W)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) G))
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (not (color_equals (color_of this) C)))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of other) O) (neighbor_of this other)))
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (noop)
        )
    )
     (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 6)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 20)
                (size_equals (size_of this) 5)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 5)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 11)
                (column_equals (column_of this) even)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 11)
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 11)
        )
        (apply
            (move_node down))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 24)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) 84)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 24)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 84)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) W))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) Y))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (update_color Y))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color Y)
        )
    )
)

(do 
    (rule 
        (vars (this)) 
        (filter) 
        (apply 
            (update_color Y) 
        ) 
    ) 
    (rule 
        (vars (this)) 
        (filter 
            (column_equals (column_of this) even) 
        ) 
        (apply 
            (update_color G) 
        ) 
    ) 
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (shape_equals (shape_of this) square)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) square)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (move_node down)
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (move_node down)
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 5)
                (size_equals (size_of other) 3)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 3))
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (move_node_max up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max down)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (shape_equals (shape_of this) enclosed) (and (column_equals (column_of this) odd) (neighbor_of this other))))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter (and (shape_equals (shape_of this) enclosed) (and (column_equals (column_of this) even) (neighbor_of this other))))
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (color_equals (color_of other) Y)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (or (color_equals (color_of this) C) (color_equals (color_of this) B)))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 5)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (and (color_equals (color_of this) C) (size_equals (size_of this) max))
                (column_equals (column_of this) center)
            )
        )
        (apply
            (update_color Y)
        )
    )
)