[
    "{\n    \"nl_description\": \"Add a blue border around each object, except the objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of color X to form a cross shape with color B, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (extend_node up false)\\n            (extend_node down false)\\n            (extend_node left false)\\n            (extend_node right false)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all cells adjacent to cells of color X to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around all 'X' objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Surround all objects with color X by color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around each black 'X' and all other black cells.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects of color X with a border of color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Surround all objects of color X with a border of color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Fill the grid forming vertical and diagonal stripes of color B originating from objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (extend_node left false)\\n            (extend_node right false)\\n            (extend_node up_left false)\\n            (extend_node down_right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a B colored border around all objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B around all objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n\t\"nl_description\": \"Surround the objects with color X by the border of color B.\",\n\t\"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects that are not of color X to color B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend each 'X' object in all directions while overlapping to form a larger pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (extend_node left true)\\n            (extend_node right true)\\n            (extend_node up true)\\n            (extend_node down true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B to all instances of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add borders of color B around all the objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter \\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects close to objects of color X to color B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around each object of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B to each object, irrespective of its color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Draw a blue border around all objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around all objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Color the border of grid with `B` and fill the border of any `X` with `B`\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    ))\"\n}",
    "{\n    \"nl_description\": \"Change the color of all pixels except X to B and extend the color B around X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to color B, excluding the objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend the borders of all nodes to blue\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all the objects in the grid with color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Replace surrounding cells of each 'X' object with 'B' color, forming a 3x3 block.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (fill_rectangle B false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Fill all rows and columns that contain objects of color X with color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (fill_rectangle B false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a B border to all the objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border to all objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B to all the objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border to the objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around all objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around each object of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B to all objects with color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend the horizontal range of each object, by adding border with color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of color X in all directions, overlapping with other objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (extend_node up true)\\n            (extend_node down true)\\n            (extend_node left true)\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of color X in all directions while leaving a trail with color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (extend_node up true)\\n            (extend_node down true)\\n            (extend_node left true)\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend the object of color B to form a border around the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) B)\\n        )\\n        (apply\\n            (extend_node left false)\\n            (extend_node right false)\\n            (extend_node up false)\\n            (extend_node down false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards all directions until they hit another object, then color them to B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color B)\\n            (extend_node up false)\\n            (extend_node down false)\\n            (extend_node left false)\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the grid to B, leaving the X colored object intact.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not\\n                (color_equals\\n                    (color_of this)\\n                    X\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border to all objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects that neighbor X to color B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a B border around each of the objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all the cells of each 3x3 square containing an object of color X to color B, except the cell that contains X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (insert 1 (img_pts_of this) target)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of other) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B to all objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B to all the objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of color X in all directions. Color the region with B before it.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (extend_node left false)\\n            (extend_node right false)\\n            (extend_node up false)\\n            (extend_node down false)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B around all objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border to all the objects with color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around the entire grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a B border around all objects, maintaining the internal structure.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to color B and extend them while overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n            (extend_node down true)\\n            (extend_node right true)\\n            (extend_node left true)\\n            (extend_node up true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all rows, containing the object of color X, to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the entire grid with color B except for the objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) X)))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the surroundings of all objects of color X to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Color the surroundings of all X objects to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Insert object of color B, in a 3x3 configuration, around the objects of color X, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (insert 1 top_left source)\\n            (insert 1 top source)\\n            (insert 1 top_right source)\\n            (insert 1 left source)\\n            (insert 1 right source)\\n            (insert 1 bottom_left source)\\n            (insert 1 bottom source)\\n            (insert 1 bottom_right source)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B around all objects in the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border to all X objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all cells to color B, except those with color X and their surrounding cells.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around every group of objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B to all objects\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add border of color B to all objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend the objects of color X in all four cardinal directions, and update the newly extended parts to color B, overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (extend_node up true)\\n            (update_color B)\\n            (extend_node down true)\\n            (update_color B)\\n            (extend_node left true)\\n            (update_color B)\\n            (extend_node right true)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a blue border around the entire grid and preserve the original structure of the objects.\",\n    \"code\": \"(do\\n  (rule\\n    (vars (this))\\n    (filter)\\n    (apply\\n      (add_border B)\\n    )\\n  )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border with color B to all objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B to all objects of color X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Add a border of color B around all objects of color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the border cells of the grid to color B while keeping the unchanged internal structure.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n)\"\n}"
]