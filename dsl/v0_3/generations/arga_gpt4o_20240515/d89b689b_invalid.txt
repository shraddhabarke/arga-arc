[
    {
        "response": "{\n    \"nl_description\": \"Move all objects towards each other if they are neighbors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) O))\\n                (not (color_equals (color_of other) O))\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (color_equals (color_of other) O))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 towards the center of the objects of size 4.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (size_equals (size_of other) 4)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (center))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 14 col 25\n\n            (move_node (center))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move non-overlapping objects that are neighbor of an object of the same size to the position of the object of the same size.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) (size_of other))\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (insert (size_of other) (img_pts_of other) source)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 21\n\n            (insert (size_of other) (img_pts_of other) sourc\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 towards the center of the object of size 4, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (size_equals (size_of other) 4)\\n                )\\n            )\\n        )\\n        (apply\\n            (insert (size_of this) center source)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 14 col 21\n\n            (insert (size_of this) center source)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects to the right neighbor of color C, and recolor to right neighbor's color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color (color_of other))\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than O (black), one step up and swap the colors of pairs of adjacent objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (move_node up)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (neighbor_of this other)\\n                (not (color_equals (color_of other) O))\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (not (color_equals (color_of other) O))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 2 to the positions of objects of different color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (not (color_equals (color_of this) (color_of other)))\\n            )\\n        )\\n        (apply\\n            (move_node (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 11 col 25\n\n            (move_node (color_of other))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of configuration on the fifth and sixth row towards the neighboring same size object, adjusting them one step in their respective directions if they are on the border.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) (size_of other))\\n                (and\\n                    (neighbor_of this other)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 9 col 17\n\n                )\n                ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 2 down and recolor them with the color of the neighboring object in the direction of movement.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 2)\\n        )\\n        (apply\\n            (move_node down)\\n            (update_color (color_of (neighbor_of this this)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 9 col 37\n\n            (update_color (color_of (neighbor_of this this)))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\"nl_description\": \"Move all objects one step toward the center object of color C and then recolor them based on a predetermined rule.\",\n\"code\": \"(do\\n  (rule\\n    (vars (this other))\\n    (filter\\n      (and\\n        (neighbor_of this other)\\n        (color_equals (color_of other) C)))\\n    (apply\\n      (move_node (direction_of other))))\\n  (rule\\n    (vars (this))\\n    (filter\\n      (color_equals (color_of this) F))\\n    (apply\\n      (update_color A)))\\n  (rule\\n    (vars (this))\\n    (filter\\n      (color_equals (color_of this) Y))\\n    (apply\\n      (update_color W)))\\n  (rule\\n    (vars (this))\\n    (filter\\n      (color_equals (color_of this) W))\\n    (apply\\n      (update_color B)))\\n  (rule\\n    (vars (this))\\n    (filter\\n      (color_equals (color_of this) R))\\n    (apply\\n      (update_color G)))\\n)}\" }",
        "error_type": "parse_error",
        "error_message": "No terminal matches '}' in the current parser context, at line 34 col 2\n\n)}\n ^\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move and swap the objects along the diagonal, based on their color order vertically.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (neighbor_of this other) (or (color_equals (color_of this) A) (color_equals (color_of this) F) (color_equals (color_of this) Y) (color_equals (color_of this) W))))\\n        (apply\\n            (move_node (match (color_of this) (A down) (F right) (Y left) (W up)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 117\n\nis) A) (color_equals (color_of this) F) (color_equals (color_of this) Y) (color_\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all non-overlapping objects in pairs from the last column to the positions of objects in front of them to make the first column empty, then recolor them.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (neighbor_of this other))\\n                (column_equals (column_of this) '0')\\n            )\\n        )\\n        (apply\\n            (move_node_max right)\\n            (update_color 'O')\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ''' in the current parser context, at line 7 col 49\n\n        (column_equals (column_of this) '0')\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For all 2x2 objects, replace the elements with color of the neighboring objects with maximum size.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 4)\\n                (neighbor_of this other)\\n                (size_equals (size_of other) max)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (size_equals (size_of other) max)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than O and not neighbors of an X, towards the closest X and change their color to color of X.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (not (neighbor_of this other)) \\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects to the center of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node_max (up_right))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'u' in the current parser context, at line 6 col 29\n\n            (move_node_max (up_right))\n                            ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 2 and color C one step down, and then alter their color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (color_equals (color_of this) C)\\n            )\\n        )\\n        (apply\\n            (move_node down)\\n            (update_color (color_of (neighbor_of this)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 12 col 37\n\n            (update_color (color_of (neighbor_of this)))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the vertical center and then recolor them to color O.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node center)\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 8 col 24\n\n            (move_node center)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects toward the position of the object closest to the bottom-right corner\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of (column_equals (column_of other) right)))\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 5 col 26\n\n            (neighbor_of (column_equals (column_of other) right))\n                         ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects along diagonal directions to the center of the board.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node bottom_right)\\n            (move_node top_left)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'b' in the current parser context, at line 6 col 24\n\n            (move_node bottom_right)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all single objects toward the object of color different than O, without hitting anything.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of other) O))\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (color_equals (color_of other) O))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 toward the center, without overlapping, then change their colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node (center))\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 8 col 25\n\n            (move_node (center))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Rearrange the grid by replacing objects near the center of the grid with objects from the edges.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (or (column_equals (column_of this) even) (column_equals (column_of this) odd))))\\n        (apply \\n            (move_node_max (direction_of other)),\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ',' in the current parser context, at line 6 col 49\n\n    (move_node_max (direction_of other)),\n                                        ^\nExpected one of: \n\t* LPAR\n\t* RPAR\n"
    }
]