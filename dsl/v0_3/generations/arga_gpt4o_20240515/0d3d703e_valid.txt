[
    "{\n    \"nl_description\": \"Recolor all columns to specified colors Y, X, F, etc.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) (column_of other))\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor columns of grids with a specific pattern of colors\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns by assigning the colors respectively corresponding to each column in the output grid patterns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns with specific pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) even))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) odd))\\n        (apply\\n            (update_color\\n                (color_of other)\\n            )\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor objects by columns starting with colors Y, X, F, then with different sets for subsequent columns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor objects in each column to sequentially different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to unique colors in a column-wise manner.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color Y)\\n            (update_color X)\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n            (update_color Y)\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n            (update_color W)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color C)\\n            (update_color G)\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns with specific color order.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor columns of objects from top to bottom.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column with a specific color pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each vertical stripe of objects to the new colors observed in the output grid\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to corresponding columns of new colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor columns sequentially.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column of the grids independently\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) odd)\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all the columns of the objects sequentially from left to right, with the specified new colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the left column objects to match the middle column's colors and the middle column objects to match the right column's colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 0)\\n                (column_equals (column_of other) 1)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 1)\\n                (column_equals (column_of other) 2)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor columns sequentially to new colors based on column index.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color F)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color Y)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color W)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color B)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color R)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color C)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color G)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))))\"\n}",
    "{\n    \"nl_description\": \"Recolor each column with a specific target color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Transform the columns to change their colors top to bottom respectively.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each object based on its original color: G to Y, B to X, R to F, C to W, F to R, W to C, Y to G.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Change the color of all objects according to the pattern observed in the provided pairs.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the columns in the grids with new colors: first to last according to the original color order.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects column-wise such that each individual column is recolored to a new color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column using a specific sequence of colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column to a specific set of colors for all objects in the column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Change the color of each column to a specific color according to the column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column of objects with the same colors for each row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to a fixed color depending on their current color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor objects based on their initial color: G to Y, B to X, R to F, R to F, G to Y, C to W, X to B, C to W, Y to G, and W to C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column of the grid to a new set of colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects with colors: [G, B, R] to [Y, X, F], [R, G, C] to [F, Y, W], [X, C, F] to [B, W, R], and [W, Y, R] to [C, G, F] in the respective order.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects with the same pattern as in their respective columns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (column_equals (column_of this) (column_of other)))\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column with different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the first object to Y, second object to X, and third object to F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) 1) (color_equals (color_of this) G)))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) 2) (color_equals (color_of this) B)))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (column_equals (column_of this) 3) (color_equals (color_of this) R)))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column in the grid with specific colors, in the same sequence for each pair.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the columns in order, from the leftmost to the rightmost, with the second row indicating the new colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns, each column should be uniformly recolored to the new colors appearing sequentially in each row of the output grids.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects based on the following mapping: G to Y, B to X, R to F, C to W, Y to G, W to C, X to B, F to R\",\n    \"code\": \"(do (rule (vars (this)) (filter (color_equals (color_of this) G)) (apply (update_color Y))) (rule (vars (this)) (filter (color_equals (color_of this) B)) (apply (update_color X))) (rule (vars (this)) (filter (color_equals (color_of this) R)) (apply (update_color F))) (rule (vars (this)) (filter (color_equals (color_of this) C)) (apply (update_color W))) (rule (vars (this)) (filter (color_equals (color_of this) Y)) (apply (update_color G))) (rule (vars (this)) (filter (color_equals (color_of this) W)) (apply (update_color C))) (rule (vars (this)) (filter (color_equals (color_of this) X)) (apply (update_color B))) (rule (vars (this)) (filter (color_equals (color_of this) F)) (apply (update_color R))))\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns to a predefined color sequence.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns to specific colors: first column to the first new color, second column to the second new color, and third column to the third new color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor objects to the corresponding target color based on their initial color. Specifically, G to Y, B to X, R to F, C to W, F to R, X to B, W to C, and Y to G.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects in each column with a specific sequence of colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n            (update_color F)\\n            (update_color B)\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n            (update_color Y)\\n            (update_color W)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n            (update_color W)\\n            (update_color R)\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the objects in each column to a specific pattern, going from top to bottom.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects with the first column objects recolored to color of Y for G, F for R, B for X, and C for W; the second column objects changed to color of the X for B, Y for G, W for C, and G for Y; the third column objects changed to color of F for R, W for C, R for F, and F for R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects with specific colors based on their original colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to specific colors based on their current color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each object to the color according to the given pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Update the colors of the objects in a vertical stripe pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column with a specific color pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n            (update_color F)\\n            (update_color B)\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n            (update_color Y)\\n            (update_color W)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n            (update_color W)\\n            (update_color R)\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Change the colors of the columns of objects to predetermined colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column with a specific sequence of colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 3)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to new specified colors in a specific pattern: (Y, X, F), (F, Y, W), (B, W, R), (C, G, F)\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns in the grid each with a specific color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the objects with colors in columns to new specified colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects following the order of the top rows of output grids.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) G))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (update_color F))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply (update_color W))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply (update_color B))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) F))\\n        (apply (update_color R))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) Y))\\n        (apply (update_color G))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column of cells with a new distinct color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all vertical columns to specific colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns to a specific sequence of colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor columns one by one with respective colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    ))\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns of objects to new respective colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects with defined color to new respective colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns individually in a sequentially repeating pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 0))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 1))\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 0))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 1))\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 2))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 0))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 1))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 2))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 0))\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 1))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (column_equals (column_of this) 2))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to a fixed new color, one color for each column.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor columns to specific colors based on index.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color Y)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color X)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 2)\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor columns of objects to specific corresponding colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor each column with uniform colors: first column to color Y, second column to color X, third column to color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns independently, to match specified colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color F)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color B)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color C)))\\n    \\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color Y)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color W)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color G)))\\n    \\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color W)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color R)))\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F)))\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all columns to a specific color per column, regardless of the original color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 0))\\n        (apply (update_color Y))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 1))\\n        (apply (update_color X))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 2))\\n        (apply (update_color F))\\n    )\\n)\"\n}"
]