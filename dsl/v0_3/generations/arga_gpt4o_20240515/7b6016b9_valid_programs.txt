(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color R)
        )
    )
)


(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (not (color_equals (color_of this) O))
            )
        )
        (apply
            (move_node_max right)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (update_color G)
        )
    )
   (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of this) false)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
            (apply
                (update_color G)
            )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) G))
        )
        (apply
            (extend_node right true)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter 
            (or 
                (color_equals (color_of this) O) 
                (color_equals (color_of this) Y)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) B)
        )
        (apply
            (hollow_rectangle R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) G))
                (not (color_equals (color_of this) C))
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (and
                    (neighbor_of this other)
                    (and
                        (color_equals (color_of other) G)
                        (size_equals (size_of other) max)
                    )
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (height_equals (height_of this) max)
                (width_equals (width_of this) max)
            )
        )
        (apply
            (add_border R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (not (neighbor_of this other))
            )
        )
        (apply
            (add_border R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (not (color_equals (color_of this) G))
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (extend_node right false)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color R)
        )
    )
)

(do
  (rule
    (vars (this other))
    (filter )
    (apply
     (update_color G) ))
  (rule
    (vars (this other))
    (filter
      (and
        (color_equals (color_of this) O)
        (and
          (neighbor_of this other)
          (color_equals (color_of other) C))))
    (apply
      (update_color R))))

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) max)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (hollow_rectangle R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (color_equals (color_of this) G)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
            (extend_node right false)
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 5)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 6)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 7)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (not
                (or
                    (column_equals (column_of this) 4)
                    (or
                        (column_equals (column_of this) 5)
                        (or
                            (column_equals (column_of this) 6)
                            (column_equals (column_of this) 7)
                        )
                    )
                )
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (column_equals (column_of other) even)
            )
        )
        (apply
            (move_node left)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 1))
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) O))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) Y))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 16))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) B) (color_equals (color_of other) O)))
        (apply (update_color G))
    )
    
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 15)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 15))
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (not (neighbor_of this other)))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (and (neighbor_of this other) (color_equals (color_of other) G)))
        (apply (update_color R))
    )
)

(do
  (rule
    (vars (this))
    (filter
      (not (color_equals (color_of this) O))
    )
    (apply
      (update_color R)
    )
  )
  (rule
    (vars (this))
    (filter
      (color_equals (color_of this) O)
    )
    (apply
      (update_color G)
    )
  )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) O))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule (vars (this)) (filter (not (color_equals (color_of this) C))) (apply (update_color G)))
    (rule (vars (this)) (filter (color_equals (color_of this) C)) (apply (update_color R))))

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (or
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
            (add_border R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) B)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (extend_node (direction_of this) false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 5)
        )
        (apply
            (move_node up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) odd)
        )
        (apply
            (move_node up)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) C)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (neighbor_of this other))
                (and
                    (size_equals (size_of other) max)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (or
                (and
                    (color_equals (color_of this) X)
                    (shape_equals (shape_of this) enclosed)
                )
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do (rule (vars (this)) (filter (not (color_equals (color_of this) C))) (apply (update_color G))) (rule (vars (this)) (filter (and (size_equals (size_of this) max)(not (color_equals (color_of this) C)))) (apply (update_color R))))

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (update_color R)
        )
    )
)

(do (rule (vars (this)) (filter (neighbor_of this other)) (apply (update_color G))) (rule (vars (this other)) (filter (column_equals (column_of this) (column_of other))) (apply (update_color R))))

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (height_equals (height_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (hollow_rectangle R)
        )
    )
)