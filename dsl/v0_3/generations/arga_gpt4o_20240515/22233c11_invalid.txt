[
    {
        "response": "{\n    \"nl_description\": \"Recolor cells to color C that would form a vertical or horizontal line with repeated colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) (color_of other))\\n                    (or\\n                        (and\\n                            (neighbor_of this other)\\n                            (column_equals (column_of this) (column_of other))\\n                        )\\n                        (and\\n                            (neighbor_of this other)\\n                            (height_equals (height_of this) (height_of other))\\n                        )\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 9 col 21\n\n                    (or\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all non-gray colored objects to the top row and left column if they are initially in the second to fifth rows or columns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (or\\n                    (or\\n                        (column_equals (column_of this) 1)\\n                        (column_equals (column_of this) 2)\\n                    )\\n                    (or\\n                        (column_equals (column_of this) 3)\\n                        (column_equals (column_of this) 4)\\n                    )\\n                )\\n                (or\\n                    (or\\n                        (column_equals (row_of this) 1)\\n                        (column_equals (row_of this) 2)\\n                    )\\n                    (or\\n                        (column_equals (row_of this) 3)\\n                        (column_equals (row_of this) 4)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node column)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (or\\n                    (or\\n                        (column_equals (column_of this) 1)\\n                        (column_equals (column_of this) 2)\\n                    )\\n                    (or\\n                        (column_equals (column_of this) 3)\\n                        (column_equals (column_of this) 4)\\n                    )\\n                )\\n                (or\\n                    (or\\n                        (column_equals (row_of this) 1)\\n                        (column_equals (row_of this) 2)\\n                    )\\n                    (or\\n                        (column_equals (row_of this) 3)\\n                        (column_equals (row_of this) 4)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node row)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Add objects of color C at the starting or ending points of the objects in the original grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (or (neighbor_of this other) true))\\n        (apply (insert 0 bottom_right source))\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter (or (neighbor_of this other) true))\\n        (apply (insert 0 top_left source))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 4 col 46\n\n   (filter (or (neighbor_of this other) true))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert a new C object one step left of each object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (insert 0 (left) source)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'l' in the current parser context, at line 6 col 24\n\n            (insert 0 (left) source)\n                       ^\nExpected one of: \n\t* IMAGE_POINTS_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Add a single pixel of color C adjacent to each object of color G.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) G)\\n                (neighbor_of this other)\\n                (color_equals (color_of this) O)\\n             )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of this) O)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all cells in the top, left, right, and bottom edges to color C\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (column_equals (column_of this) 0)\\n                (or\\n                    (row_equals (row_of this) 0)\\n                    (or\\n                        (column_equals (column_of this) 9)\\n                        (row_equals (row_of this) 9)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 8 col 22\n\n                    (row_equals (row_of this) 0)\n                     ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For each G-shaped object, move nodes to their neighbors and change color to C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (and\\n                    (shape_equals (shape_of other) G)\\n                    (not (color_equals (color_of this) G))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'G' in the current parser context, at line 8 col 52\n\n         (shape_equals (shape_of other) G)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* SHAPE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Add a new object of color C adjacent to each existing object with color G.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (insert 0 bottom_right (relative_position this))\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 36\n\n            (insert 0 bottom_right (relative_position this))\n                                   ^\nExpected one of: \n\t* RELATIVE_POSITION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the diagonal neighbors of green objects to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) G)\\n                (or\\n                    (neighbor_of this other)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 9 col 17\n\n                )\n                ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Add color C to all cells that are in the same row or column as a cell of color G, and not a neighbor of a G object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (or\\n                    (column_equals (column_of this) (column_of other))\\n                    (row_equals (row_of this) (row_of other))\\n                )\\n                (and\\n                    (color_equals (color_of other) G)\\n                    (not (neighbor_of this other))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 8 col 22\n\n                    (row_equals (row_of this) (row_of other))\n                     ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than G to the closest side of the grid, and recolor them to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) G))\\n        )\\n        (apply\\n            (move_node_max (if (column_equals (column_of this) odd) left right))\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 29\n\n            (move_node_max (if (column_equals (column_of this) odd) \n                            ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert color C objects at different positions in the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) G)\\n                (or\\n                    (column_equals (column_of this) even)\\n                    (column_equals (column_of this) odd)\\n                )\\n            )\\n        )\\n        (apply\\n            (insert 1 top)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 14 col 26\n\n            (insert 1 top)\n                         ^\nExpected one of: \n\t* RELATIVE_POSITION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects one step toward the center column and recolor them to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node_max center)\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 6 col 28\n\n            (move_node_max center)\n                           ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 one step to the closest border, then recolor them to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node (direction_of (border this)))\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 38\n\n            (move_node (direction_of (border this)))\n                                     ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert color C in the first empty cell above or below each object of color G.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (insert 1 bottom C top)\\n            (insert 1 top C bottom)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'C' in the current parser context, at line 8 col 30\n\n            (insert 1 bottom C top)\n                             ^\nExpected one of: \n\t* RELATIVE_POSITION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color pixel objects of size 1 that are in the same rows and columns as larger objects, to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (or\\n                    (column_equals (column_of this) (column_of other))\\n                    (column_equals (column_of this) (column_of other))\\n                )\\n                (not (size_equals (size_of other) 1))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 17\n\n                (not (size_equals (size_of other) 1))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the first and last columns and rows of cells at distance 2 with color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (and (column_equals (column_of this) 2) (not (color_equals (color_of this) G)))\\n                (column_equals (column_of this) 8)\\n                (column_equals (column_of this) 9)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (column_equals (column_of this) 9)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the closest neighbors of a sized-2 green object to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbors_of this other)\\n                (color_equals (color_of this) G)\\n                (size_equals (size_of this) 2)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'n' in the current parser context, at line 6 col 18\n\n                (neighbors_of this other)\n                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert a copy of the object of size 2, at the position of object of maximum size\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (size_equals (size_of other) max)\\n            )\\n        )\\n        (apply\\n            (insert (this) (img_pts_of this) target)\\n        )\\n    )\\n)\"\n}\n",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 21\n\n            (insert (this) (img_pts_of this) target)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor isolated cells in the grid to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert new objects of color C at specific points on the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (insert 1 top_right)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 6 col 32\n\n            (insert 1 top_right)\n                               ^\nExpected one of: \n\t* RELATIVE_POSITION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Insert objects of color 'C' on grids, at positions where 'G' was present in the input grids.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (insert this top_left source)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 8 col 21\n\n            (insert this top_left source)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the column to the left of all G objects to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n                (column_equals (column_of this) (min))\\n                (column_equals (column_of other) (max))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (column_equals (column_of this) (min))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color G one step left and recolor an object at the same row or column to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (move_node left)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (column_equals (column_of this) (column_of other))\\n                (column_equals (row_of this) (row_of other))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 16 col 33\n\n                (column_equals (row_of this) (row_of other))\n                                ^\nExpected one of: \n\t* COLUMN_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the positions specified in the output grids where the letter C appears.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of this) G)\\n            )\\n        )\\n        (apply\\n            (move_node (up))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of this) G)\\n            )\\n        )\\n        (apply\\n            (move_node (down))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of this) G)\\n            )\\n        )\\n        (apply\\n            (move_node (left))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (size_equals (size_of this) 1))\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'u' in the current parser context, at line 11 col 25\n\n            (move_node (up))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Add new objects of color C at specific locations around the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (insert 1 top)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 6 col 26\n\n            (insert 1 top)\n                         ^\nExpected one of: \n\t* RELATIVE_POSITION\n"
    }
]