(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (move_node_max up)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (neighbor_of this this)
        )
        (apply
            (move_node_max down)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) min)
                (neighbor_of this this)
            )
        )
        (apply
            (move_node_max down)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) (column_of other))
                (and
                    (color_equals (color_of other) X)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (and
                    (neighbor_of this other)
                    (not (column_equals (column_of this) (column_of other)))
                )
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (and
                        (color_equals (color_of other) X)
                        (neighbor_of this other)
                    )
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 2)
                (column_equals (column_of this) 0)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 4)
                (column_equals (column_of this) 4)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 2)
                (column_equals (column_of this) 8)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node left false)
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node right false)
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node right false)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) even)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) even)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) even)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (and
                    (neighbor_of this other)
                    (column_equals (column_of other) even)
                )
            )
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (and
                    (neighbor_of this other)
                    (column_equals (column_of other) center)
                )
            )
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (and
                    (neighbor_of this other)
                    (column_equals (column_of other) odd)
                )
            )
        )
        (apply
            (move_node down_right)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 0)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 8)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (height_equals (height_of other) max)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (height_equals (height_of other) max)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (height_equals (height_of other) max)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node (direction_of this))
            (move_node (direction_of this))
            (move_node (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 1)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 5)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 9)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 9)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 0))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 4))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (or (column_equals (column_of this) 8) (column_equals (column_of this) 9)))
        (apply (update_color G))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color B)
        )
    )    
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color G)
        )
    )    
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 1)
                (color_equals (color_of this) X)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 5)
                (color_equals (color_of this) X)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) 9)
                (color_equals (color_of this) X)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (and (not (color_equals (color_of this) X)) (or (shape_equals (shape_of this) enclosed) (column_equals (column_of this) odd))))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (and (not (color_equals (color_of this) X)) (and (shape_equals (shape_of this) enclosed) (column_equals (column_of this) center))))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (and (not (color_equals (color_of this) X)) (and (shape_equals (shape_of this) enclosed) (column_equals (column_of this) even))))
        (apply (update_color G))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (color_equals (color_of this) X)
                    (color_equals (color_of this) X)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and (size_equals (size_of this) 1) (column_equals (column_of this) 0))
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and (size_equals (size_of this) 1) (column_equals (column_of this) 4))
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and (size_equals (size_of this) 1) (column_equals (column_of this) 9))
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (size_equals (size_of other) 10)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 4)
                (size_equals (size_of other) 10)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 2)
                (size_equals (size_of other) 10)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node down)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node down)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (height_equals (height_of this) 1)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (height_equals (height_of this) 4)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (height_equals (height_of this) 7)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (column_equals (column_of this) even)
                    (height_equals (height_of this) min)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (column_equals (column_of this) even)
                    (height_equals (height_of this) even)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (column_equals (column_of this) even)
                    (height_equals (height_of this) max)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max up)
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max down)
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of this) 4)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of this) 4)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of this) 4)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 2))
        (apply
            (move_node left)
        )
    )
    (rule
        (vars (this))
        (filter (and (size_equals (size_of this) 2) (column_equals (column_of this) 0)))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (and (size_equals (size_of this) 2) (column_equals (column_of this) 4)))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (and (size_equals (size_of this) 2) (column_equals (column_of this) 8)))
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 9)
                (column_equals (column_of this) 1)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 9)
                (column_equals (column_of this) 5)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 9)
                (column_equals (column_of this) 9)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (column_equals (column_of this) 0)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 4)
                (column_equals (column_of this) 4)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 2)
                (column_equals (column_of this) 8)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 3))
        (apply
            (move_node left)
        )
    )
    (rule
        (vars (this))
        (filter (neighbor_of this other))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (neighbor_of this other))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (neighbor_of this other))
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) O))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply (update_color G))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (and (neighbor_of this other) (neighbor_of this other))
                    (and (neighbor_of this other) (neighbor_of this other)
                    ))
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (and (neighbor_of this other) (neighbor_of this other))
                    (and (neighbor_of this other) (neighbor_of this other)
                    ))
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (or
                    (and (neighbor_of this other) (neighbor_of this other))
                    (and (neighbor_of this other) (neighbor_of this other)
                    ))
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 0)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 4)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 8)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 3)
                (not (neighbor_of this other))
            )
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (and
                    (neighbor_of this other)
                    (height_equals (height_of other) max)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (and
                    (neighbor_of this other)
                    (height_equals (height_of other) min)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
)