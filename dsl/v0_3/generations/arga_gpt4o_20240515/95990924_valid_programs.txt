(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (insert 0 top_right source)
            (insert 0 top_left source)
            (insert 0 bottom_left source)
            (insert 0 bottom_right source)
            (update_color B)
            (update_color R)
            (update_color G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) max)
        )
        (apply
            (noop)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) max))
        )
        (apply
            (update_color B)
            (update_color R)
            (update_color G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (insert 0 top_left source)
            (insert 0 bottom_left source)
            (insert 0 bottom_right source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (insert 0 top_left source)
            (insert 1 top_right source)
            (insert 2 bottom_left source)
            (insert 3 bottom_right source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (add_border B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (add_border G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (add_border R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (add_border Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (insert 0 top_left target)
            (insert 0 top_right target)
            (insert 0 bottom_left target)
            (insert 0 bottom_right target)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (insert 1 top_left source)
            (insert 2 top_left source)
            (insert 3 top_left source)
            (insert 4 top_left source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) X)
        )
        (apply
            (insert 100 top_left source)
            (insert 101 top_right source)
            (insert 102 bottom_left source)
            (insert 103 bottom_right source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 2))
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (insert 0 bottom_left source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (move_node_max down)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) X))
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
            (update_color R)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node left)
        )
    )
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node right)
        )
    ))

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (insert 7 top target)
            (insert 8 bottom target)
            (insert 9 left middle)
            (insert 10 right middle)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (or
                    (neighbor_of this other)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (or
                    (neighbor_of this other)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (or
                    (neighbor_of this other)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (or
                    (neighbor_of this other)
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (and
                    (or (size_equals (size_of this) 1) (size_equals (size_of this) 2))
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (insert 1 top_right source)
            (insert 2 bottom_left source)
            (insert 3 bottom_right source)
            (insert 4 top_left source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (insert 1 top_left middle)
            (insert 2 top_right middle)
            (insert 3 bottom_left middle)
            (insert 4 bottom_right middle)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) B)
                    (or
                        (color_equals (color_of this) R)
                        (or
                            (color_equals (color_of this) G)
                            (color_equals (color_of this) Y)
                        )
                    )
                )
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
            (update_color R)
            (update_color G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (neighbor_of this other) 
                (color_equals (color_of other) X)
            )
         )
        (apply
            (move_node_max (direction_of other))
         )
     )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (insert 1 top_left source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (or 
                    (column_equals (column_of this) 3)
                    (column_equals (column_of this) 2)
                )
            )
        )
        (apply
            (move_node down)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) X))
        (apply
            (insert 1 top_left source)
            (insert 2 top_right source)
            (insert 3 bottom_left source)
            (insert 4 bottom_right source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 1))
        (apply
            (insert 2 bottom_left middle)
            (insert 2 bottom_right middle)
            (insert 2 top_left middle)
            (insert 2 top_right middle)
        )
    )
)

(do
  (rule
    (vars (this other))
    (filter
      (and
        (color_equals (color_of this) X)
        (neighbor_of this other)
      )
    )
    (apply
      (insert 1 top_left source)
      (insert 2 top_right source)
      (insert 3 bottom_left source)
      (insert 4 bottom_right source)
    )
  )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (size_equals (size_of this) 4)
            )
        )
        (apply
            (insert 1 top_left target)
            (insert 2 top_right target)
            (insert 3 bottom_left target)
            (insert 4 bottom_right target)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) X))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (insert 1 top_left source)
            (insert 2 bottom_right source)
            (insert 3 bottom_left source)
            (insert 4 top_right source)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max down)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max right)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max up)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
            (apply
                (insert 1 top_left target)
                (update_color B)
                (insert 2 top_right target)
                (update_color R)
                (insert 3 bottom_left target)
                (update_color G)
                (insert 4 bottom_right target)
                (update_color Y)
            )
       )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (insert 0 top_right source)
            (insert 0 bottom_left source)
            (insert 0 bottom_right source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)