(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (or
                    (neighbor_of this other)
                    (column_equals (column_of this) center)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 1)
                (not (color_equals (color_of this) O))
            )
        )
        (apply
            (move_node_max up)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (column_equals (column_of this) 1)
                (not (color_equals (color_of this) O))
            )
        )
        (apply
            (move_node_max down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of other) O))
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (color_equals (color_of other) R)
                    (or (color_equals (color_of other) Y) (or (color_equals (color_of other) G) (color_equals (color_of other) F) ) )
                )
            )
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) min)
                (not (size_equals (size_of this) (size_of other)))
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (mirror (mirror_axis_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) F)
                (or
                    (color_equals (color_of this) G)
                    (or
                        (color_equals (color_of this) W)
                        (or
                            (color_equals (color_of this) C)
                            (color_equals (color_of this) R)
                        )
                    )
                )
            )
        )
        (apply
            (move_node_max (direction_of this))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) F)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (move_node_max up)
            (move_node_max down)
            (move_node_max left)
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (or
                    (color_equals (color_of this) F)
                    (or
                        (color_equals (color_of this) G)
                        (or
                            (color_equals (color_of this) Y)
                            (color_equals (color_of this) C)
                        )
                    )
                )
            )
        )
        (apply
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (and
                    (color_equals (color_of this) Y)
                    (color_equals (color_of other) F)
                )
                (and
                    (color_equals (color_of this) G)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (update_color (color_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (neighbor_of this other)
                (color_equals (color_of this) F)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (color_equals (color_of this) F)
                (or
                    (color_equals (color_of this) R)
                    (or
                        (color_equals (color_of this) G)
                        (or
                            (color_equals (color_of this) Y)
                            (or
                                (color_equals (color_of this) W)
                                (or
                                    (color_equals (color_of this) C)
                                    (color_equals (color_of this) X)
                                )
                            )
                        )
                    )
                )
            )
        )
        (apply
            (move_node_max up)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max left)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (move_node (direction_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) min)
                (size_equals (size_of other) 1)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max up)
            (move_node_max down)
            (move_node_max left)
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (neighbor_of this other) (or (color_equals (color_of other) C) (color_equals (color_of other) A))))
        (apply (move_node (direction_of other)))
    )
    (rule
        (vars (this))
        (filter (or (color_equals (color_of this) C) (color_equals (color_of this) A)))
        (apply (move_node down))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (neighbor_of this other)
                (neighbor_of other this)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) F)
                    (or
                        (color_equals (color_of this) R)
                        (or
                            (color_equals (color_of this) G)
                            (or
                                (color_equals (color_of this) W)
                                (color_equals (color_of this) C)
                            )
                        )
                    )
                )
                (not
                    (and
                        (neighbor_of this other)
                        (color_equals (color_of other) C)
                    )
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
        )    
    )
)

(do (rule (vars (this other)) (filter (and (or (color_equals (color_of this) F) (or (color_equals (color_of this) R) (or (color_equals (color_of this) G) (color_equals (color_of this) C)))) (and (neighbor_of this other) (not (color_equals (color_of other) C))))) (apply (move_node_max (direction_of other)))))

(do (rule (vars (this other)) (filter (and (size_equals (size_of this) 1) (and (neighbor_of this other) (size_equals (size_of other) 2)))) (apply (move_node (direction_of other)))) (rule (vars (this)) (filter (or (or (color_equals (color_of this) R) (color_equals (color_of this) G)) (or (color_equals (color_of this) F) (color_equals (color_of this) W)))) (apply (move_node_max down_right))))

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 8)
                (and
                    (neighbor_of this other)
                    (or
                        (color_equals (color_of other) G)
                        (color_equals (color_of other) R)
                    )
                )
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)