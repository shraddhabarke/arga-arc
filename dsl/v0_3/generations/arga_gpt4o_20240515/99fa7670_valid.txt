[
    "{\n    \"nl_description\": \"Extend all objects toward the right without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects towards the right direction without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects towards the right until the edge of the grid, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects in their respective right direction, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects in a horizontal direction without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects horizontally to the right until they reach the edge of the grid, leaving a trail.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects horizontally to the right, overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the right without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend objects to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects horizontally to the right, if they are neighbors with an object of the same color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of this) (color_of other))\\n            )\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects horizontally to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects that are neighbors toward the right, until they hit another object or the edge of the grid, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects, without overlapping, to the right.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects, except those of color O, toward the right without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the right side of the grid, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects in the right direction without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects rightwards until they hit another object or the grid edge, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the right without overlap.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of size 1 toward the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the right.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the maximum possible extent without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects of size 1 to their right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects toward the right until they hit another object or the grid edge, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects except those colored 'O' to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the right without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all non-black, non-empty objects to the right edge horizontally.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects by filling the right direction until they hit another object or the edge of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all colored objects in the grid to the right without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) O)))\\n        (apply (extend_node right false))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects in the right direction, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of size 1 (dots) right without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the right.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects horizontally to their rightmost limit, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects towards the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects toward the right, overlapping is allowed.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects, leaving a trail, toward the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects horizontally to the right until they hit the edge of the grid, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects towards the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of size 1 to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the right, leaving a trail and without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects horizontally to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the right, until they hit another object, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the right without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects towards the right direction, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects one step to right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of size 1 that are neighbors of larger objects, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the right border of the grid without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects toward the right with overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the right, overlapping with other objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects in the right direction, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects in the right direction, overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects their maximum possible lengths to the right without overlapping with other objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects of size 1 (but not X) to the right, overlapping until the edge of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects until the edge of the grid towards the right direction, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects toward the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend colored objects towards right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) O)))\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the rightmost edge, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to their right neighbor, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the right without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the right until the edge of the grid, overlapping with other objects if necessary.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects toward the right, overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects toward the right direction, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all non-X color objects towards the right until the edge of the grid is reached, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (extend_node right false)\\n        )    \\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend the nodes in the right direction, overlapping with previous nodes.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects in the right direction, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of size 1 towards the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all the objects except the ones of color O to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects horizontally until they hit another object or the edge of the grid, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (apply\\n                (extend_node right false)\\n            )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of size 1 to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects to the right until they hit another object, leaving a trail.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects once towards the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects of size 1 to the right, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all non-black objects toward the right, while leaving a trail.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Extend all objects towards the right, filling until the edge of the grid, without overlapping.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (extend_node right false)\\n        )\\n    )\\n)\"\n}"
]