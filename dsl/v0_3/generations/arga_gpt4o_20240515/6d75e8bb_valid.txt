[
    "{\n    \"nl_description\": \"Recolor all cells in columns where 'C' appears more than twice to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (not (color_equals (color_of this) O))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor inner parts of objects of color C to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (extend_node down false)\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor interior pixels of all shape-enclosed areas to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (fill_rectangle R false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the first two cells of each row on the right side with color R if they are enclosed by cells of color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the cells on the right side of each object to red.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Change color of the rightmost pixels of all objects to R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects of color O that are neighbors of an object of color C, to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the neighbors of an object of size 6 to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of other) 6)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects of color O that are neighbors of objects of color C to color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all pixels that are neighbors of objects of color 'C' to color 'R'\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the interior cells of all C objects to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (hollow_rectangle R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the cells on the border of C-shaped objects to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects of color 'O' that are adjacent to objects of color 'C', to color 'R'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all non-square objects of color C to color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (not (shape_equals (shape_of this) square))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects of color C with neighboring cells of the same color, to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects of color C that are neighbors of other object with a different color to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (and\\n                    (neighbor_of this other)\\n                    (not (color_equals (color_of other) C))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all interior objects of color C to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (not (shape_equals (shape_of this) enclosed))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all enclosed gray objects to red.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the intersections of 'C' objects to 'R'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all cells bordering another color C cell with R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) C)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the cells on the edge of all objects to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (add_border R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the interior cells of each object to red (R), maintaining the outline the same.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (fill_rectangle R false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the hollow cells within objects formed by the color 'C' to the color 'R'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle R false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the internal cells of any 'C' objects of size 12 to color 'R'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 12)\\n                (color_equals (color_of this) C)\\n            )\\n        )\\n        (apply\\n            (fill_rectangle R false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects whose columns are even to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor neighboring cells of color C to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Change the objects' interior colors in the shape to color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the objects having color C, if they are neighbors of another object of the same color, to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all 'O' neighbors of 'C' to 'R'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) C)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) O)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the inside of each object of color C to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (hollow_rectangle R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all inner cells of the objects with color C to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (not (neighbor_of this other))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects of color C that are squares partially or fully to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all the inner pixels of objects of color C to color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (hollow_rectangle R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor interior points of all objects to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (fill_rectangle R false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the central cells of the objects to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the second and third rows from the top of the clusters of C to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (or\\n                    (column_equals (column_of this) even)\\n                    (column_equals (column_of this) odd)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all inner parts of the objects of color C to color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (hollow_rectangle R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all the neighbor cells of color 'C' to color 'R'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects having color C to color R in the region above row 7, inclusive.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects of color C, that are neighbors of an object of color different than C, partially to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (and\\n                    (neighbor_of this other)\\n                    (not (color_equals (color_of other) C))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all 'O' cells to 'R' if they are neighbors of a 'C' cell.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the inner sections of objects of color C to color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the inner parts of objects of color C to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (fill_rectangle R false)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all cells of objects of size 1 with color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (and\\n                    (neighbor_of this other)\\n                    (size_equals (size_of other) max)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the center cells of all objects to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Replace the innermost parts of all objects of color C with color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (fill_rectangle R true)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor the objects of color C containing rows or columns filled of C such that their remaining parts are recolored to R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) C))\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all cells adjacent to empty cells to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) O)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all the cells in the diagonals of any object of color 'C' to color 'R'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all the objects of size 2 to color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 2)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}"
]