(do
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) (color_of other))
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) Y)
                (or
                    (color_equals (color_of this) C)
                    (color_equals (color_of this) F)
                )
            )
        )
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of other) max)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) Y))
        (apply (update_color Y))
    )
    (rule
        (vars (this other))
        (filter (and (not (color_equals (color_of this) Y)) (not (color_equals (color_of other) Y))))
        (apply (update_color W))
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 3)
                (color_equals (color_of this) Y)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter)
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of other) max)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (size_equals (size_of other) min))
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do (rule (vars (this)) (filter) (apply (update_color (color_of this))) ))

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) center))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (not (column_equals (column_of this) center)))
        (apply
            (update_color W)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
            (update_color W)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color W)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color F)
        )
    )
)