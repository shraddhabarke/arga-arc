[
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than R and neighbor to R, toward the object of color R, without overlapping. Recolor objects of column A at the bottom center and top border objects to the color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (column_equals (column_of this) 2)\\n                (and\\n                    (row_equals (row_of this) 17)\\n                    (not (color_equals (color_of this) O))\\n                )\\n                (and\\n                    (row_equals (row_of this) 0)\\n                    (not (color_equals (color_of this) O))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color R one step to the right, and then recolor them to color B. Recolor the top and bottom objects neighboring the objects of color B to colors C and B respectively.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (move_node right)\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n                (or\\n                    (and\\n                        (color_equals (color_of this) O)\\n                        (move_node right)\\n                        (update_color C)\\n                    )\\n                    (and\\n                        (color_equals (color_of this) O)\\n                        (move_node down)\\n                        (update_color B)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 18 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the horizontal path with objects of size 12 up to the first row, and then recolor them to color C. Recolor the vertical path with objects of size 15 to color B and give it an extra column of length 20 with the same color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (width_equals (width_of this) 12)\\n        )\\n        (apply\\n            (move_node up)\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (width_equals (width_of this) 1)\\n                (and\\n                    (height_equals (height_of this) 15)\\n                    (or\\n                        (column_equals (column_of this) 4)\\n                        (column_equals (column_of this) 5)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (extended_node right false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'e' in the current parser context, at line 27 col 14\n\n            (extended_node right false)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Transform the top and bottom cells of each column of R's by updating its color to C, and the remaining cells of each column of R's by updating their color to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (column_equals (column_of this) (column_of other))\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the colors of the cells to C, B, and R to form a pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 1)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (column_equals (column_of this) 12)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of other) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 26 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color R one step down, then change their color based on their new position: objects in the last row to B, objects in the first column to C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (move_node down)\\n            (update_color (if (and (column_equals (column_of this) 1) (color_equals (color_of this) O)) C B))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 9 col 28\n\n            (update_color (if (and (column_equals (column_of this) \n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects located in some of the columns' Middle from the side borders (first or last row) to adjacent cells, recoloring them to the color X\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (and\\n                    (color_equals (color_of this) R)\\n                    (size_equals (size_of this) 12)\\n                )\\n                (size_equals (size_of this) 13)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n            (move_node (column_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 15 col 25\n\n            (move_node (column_of this))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects in the first row and the right objects in the last row to C, and then fill columns between two highest rows with B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (height_equals (height_of this) min)\\n                (or\\n                    (and \\n                        (column_equals (column_of this) 0)\\n                        (row_equals (row_of this) 0)\\n                    )\\n                    (and \\n                        (column_equals (column_of this) max)\\n                        (row_equals (row_of this) max)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (between_rows_equals (row_of this) (min_row_plus_one (row_of first_object_same_color)) (max_row_minus_one (row_of last_object_same_color)))\\n        )\\n        (apply\\n            (fill_rectangle B false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 10 col 26\n\n                        (row_equals (row_of this) 0)\n                         ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects of color B and C next to the rows of red objects until they are of equal length and recolor them;\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) B)\\n        )\\n        (apply\\n            (move_node_max (direction_of other COVID_RED))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) C)\\n        )\\n        (apply\\n            (move_node_max (direction_of other COVID_RED))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'C' in the current parser context, at line 8 col 48\n\n     (move_node_max (direction_of other COVID_RED))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change corner objects to color C. Change bottom row and right column to color B, starting from object in position (10, 2).\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n        )\\n        (apply\\n            (update_color (C))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter \\n            (and \\n                (NEIGHBOR_OF (this)) \\n                (WIDTH_EQ (WIDTH_OF this) 10)\\n            ) \\n        ) \\n        (apply \\n            (update_color (B))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'C' in the current parser context, at line 8 col 28\n\n            (update_color (C))\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend all red objects towards the closest neighboring object with a different color, and then change color of all objects to match the color they border.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (not (color_equals (color_of other) R))\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of other) false)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 3 cells to the maximum possible extent, change color of the corner cells to C and the edge cells to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 3)\\n        )\\n        (apply\\n            (move_node_max (direction_of this))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (or\\n                    (degree_equals (degree_of this) 1)\\n                    (degree_equals (degree_of this) 2)\\n                )\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (degree_equals (degree_of this) max)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor specific parts of each grid. Recolor the bottom part of objects R to B, extend to the right of the last row of each grid, and edges into other colors if they are the boundary.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (extend_node (right) true)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (move_node_max (right))\\n        )\\n   )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 19 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the neighboring cells to the red objects' corners to 'C' and fill the rows below each red object with 'B'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (or\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (not\\n                    (color_equals (color_of (move_node down)) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of this))\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 23 col 45\n\n                (color_equals (color_of (move_node down)) R)\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the lowest object of color R one step down and recolor it to color C. Then add a horizontal border of color B to the rest.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n                (and (height_equals (height_of this) 1) (width_equals (width_of this) 1))\\n            )\\n        )\\n        (apply\\n            (move_node down)\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply (add_border B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (and (height_equals (height_of this) 1) \n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Fill the background of all objects of color R with color B and extend the object of color R touching the borders to C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (fill_rectangle B false)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (or\\n                    (neighbor_of this border)\\n                    (eq (row_of this) 0)\\n                    (eq (row_of this) (grid_height - 1))\\n                    (eq (column_of this) 0)\\n                    (eq (column_of this) (grid_width - 1))\\n                )\\n            )\\n        )\\n        (apply\\n            (extend_node (direction_of border) false)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'b' in the current parser context, at line 17 col 39\n\n                    (neighbor_of this border)\n                                      ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor parts of the objects with color R: the top left parts to color C, the bottom right parts to color B, and the bottom edges to color B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) R))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) B))\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of other) R))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 22 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor parts of red columns and rows to colors C and B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (color_equals (color_of this) R) (color_equals (color_of other) R) (neighbor_of this other)))\\n        (apply (update_color C))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) R) (or (size_equals (size_of this) 4) (size_equals (size_of this) 9))))\\n        (apply (update_color B))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 89\n\ns) R) (color_equals (color_of other) R) (neighbor_of this other)))\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color R toward the edges, and then recolor them to color C if they are on top or bottom edges, and color B otherwise.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (move_node_max down)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (or\\n                    (neighbor_of this (this down))\\n                    (neighbor_of this (this up))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 39\n\n                    (neighbor_of this (this down))\n                                      ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects with color R, if they are in the first row or first column, one step towards the nearest C object, and then recolor 'B' some objects in adjacency with object color R keeping sorted some object R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (or\\n                    (C_eq this row first)\\n                    (C_eq this column first)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other C))\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (and (color_equals (color_of this) B)\\n                    (neighbor_of this other))\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'C' in the current parser context, at line 8 col 22\n\n                    (C_eq this row first)\n                     ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size greater than 1 toward the object of smallest size, recolor the first and last cells of the resulting object to C and the interior cells to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of other) min)\\n                (size_equals (size_of this) (odd))\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) (odd))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 7 col 46\n\n           (size_equals (size_of this) (odd))\n                                        ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For cells in the first or last row/column, or adjacent to them, recolor each of them based on its relative position. If it's in the first row or last column and on either end of the sequence, recolor it C. If it's adjacent to a cell along the boundary, change color to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (and\\n                    (column_equals (column_of this) 0)\\n                    (or\\n                        (color_equals (color_of this) R)\\n                        (column_equals (column_of (or (degree_of this) 12) 1))\\n                    )\\n                )\\n                (and\\n                    (column_equals (column_of this) -1)\\n                    (column_equals (column_of (or (degree_of this) 23) 1))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 0)\\n                (or\\n                    (color_equals (color_of this) R)\\n                    (or\\n                        (color_equals (color_of other) R)\\n                        (column_equals (column_of (or (size_of this) max) 1))\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 51\n\n              (column_equals (column_of (or (degree_of this) 12) 1))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor cells in the first or last row or column adjacent to an object of color R to color C, and recolor cells in the other rows adjacent to an object of color R to color B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 1)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) last)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (column_equals (column_of this) 1))\\n                (not (column_equals (column_of this) last))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move and recolor objects of color different than R with neighbors of color R toward the neighbor. Recolor all objects below the main diagonal to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects except the color R to the nearest object of color R in their direction, then recolor the rows above the bottom-most row with color B, the top-most row with color C, and the right-most column with color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all the objects of color different than R, toward the object of color R if they are neighbors, then recolor the row-wise objects to color B and column-wise objects to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n                (column_equals (column_of this) center)\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n                (column_equals (column_of this) even)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of the object located at the top left corner to C, and the object located at the bottom right corner to B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (or\\n                    (and\\n                        (and\\n                            (color_equals (color_of this) R)\\n                            (position_equals (position_of this) (true, true))\\n                        )\\n                    )\\n                    (and\\n                        (and\\n                            (color_equals (color_of this) R)\\n                            (position_equals (position_of this) (false, false))\\n                        )\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (or\\n                    (and\\n                        (and\\n                            (color_equals (color_of this) R)\\n                            (position_equals (position_of this) (false, true))\\n                        )\\n                    )\\n                    (and\\n                        (and\\n                            (color_equals (color_of this) R)\\n                            (position_equals (position_of this) (true, false))\\n                        )\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'p' in the current parser context, at line 11 col 30\n\n                            (position_equals (position_of this) (true\n                             ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the adjacent objects to R to color B, and the corners of the objects to color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (size_equals (size_of other) 1)\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) R))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 13\n\n            (not (color_equals (color_of this) R))\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor specific edge cells and specific interior cells.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (or\\n                    (neighbor_of this other)\\n                    (column_equals (column_of this) min)\\n                )\\n                (not (color_equals (color_of this) R))\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (or\\n                    (neighbor_of this other)\\n                    (column_equals (column_of this) max)\\n                )\\n                (not (color_equals (color_of this) R))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 8 col 53\n\n        (column_equals (column_of this) min)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the non-border cells adjacent to the R objects to C, and other non-border cells to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color R one step up and then recolor them based on their row.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (move_node up)\\n            (if\\n                (color_equals (row_of this) 0) (update_color C)\\n                (if\\n                    (color_equals (row_of this) 1) (update_color B)\\n                )\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 9 col 14\n\n            (if\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects to the top-down center grid, then apply color C to odd rows and color B to even rows, except for the object at both the intersection of first and last two rows.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node_max right)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node_max middle)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) 15))\\n        (apply\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (row_equals (row_of this) odd))\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (row_equals (row_of this) even))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 13 col 28\n\n            (move_node_max middle)\n                           ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the topmost and rightmost objects to color C, recolor the bottommost objects to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (column_equals (column_of this) \\\"origin\\\")\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) \\\"rightmost\\\")\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (row_equals (row_of this) \\\"bottommost\\\")\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '\"' in the current parser context, at line 7 col 49\n\n        (column_equals (column_of this) \"origin\")\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the first and last objects in the first row and the first and last objects in the last row to color C. Then recolor all objects next to last row to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (or\\n                    (position_equals (position_of this) (0,0))\\n                    (position_equals (position_of this) (0,12))\\n                    (position_equals (position_of this) (17,12))\\n                    (position_equals (position_of this) (17,0))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (position_equals (position_of this) (10,2))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'p' in the current parser context, at line 8 col 22\n\n                    (position_equals (position_of this) (0,0)\n                     ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move square objects up and enclosed objects down. Then, recolor the object of shape square to the color of enclosed objects and vice versa.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) square)\\n        )\\n        (apply\\n            (move_node up)\\n            (update_color (color_of (vars other (shape_equals (shape_of other) enclosed))))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (move_node down)\\n            (update_color (color_of (vars other (shape_equals (shape_of other) square))))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 9 col 37\n\n            (update_color (color_of (vars other (shape_equals (shape_of othe\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color the top leftmost cell of the largest object green, and color the bottom rightmost cell of the largest object blue. Then fill the interior of the largest object with brown.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) max)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of this))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than R or B, toward the object of color R, if they are neighbors of it. Then, recolor these objects to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) R))\\n                (not (color_equals (color_of this) B))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    }
]