[
    {
        "response": "{\n    \"nl_description\": \"Swap objects of colors A and F, while keeping their positions intact.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) A)\\n                (color_equals (color_of this) F)\\n            )\\n        )\\n        (apply\\n            (update_color (if (color_equals (color_of this) A) F A))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 11 col 28\n\n            (update_color (if (color_equals (color_of this) A) F A)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects color-wise in the same pattern without altering their configurations\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter )\\n        (apply\\n            (move_node B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'B' in the current parser context, at line 6 col 24\n\n            (move_node B)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Transpose the grid\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (mirror (mirror_axis_of this) horizontal)\\n            (mirror (mirror_axis_of this) vertical)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'h' in the current parser context, at line 6 col 43\n\n          (mirror (mirror_axis_of this) horizontal)\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Swap the colors A and R in all the objects in the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) A)\\n                (color_equals (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (update_color (if (color_equals (color_of this) A) R A))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 11 col 28\n\n            (update_color (if (color_equals (color_of this) A) R A)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Swap the colors of all objects in the input grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter)\\n        (apply\\n            (move_node (direction_of -this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '-' in the current parser context, at line 6 col 38\n\n            (move_node (direction_of -this))\n                                     ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color F to the mirror positions of objects of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) F)\\n        )\\n        (apply\\n            (move_node (mirror_axis_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 8 col 25\n\n            (move_node (mirror_axis_of other))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Rotate objects located on the bottom edge counterclockwise by 90 degrees, swapping positions along the edges.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (color_equals (color_of this) R) (height_equals (height_of this) max)))\\n        (apply (move_node_max (TR_ROTATE_NODE 270))) \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'T' in the current parser context, at line 5 col 32\n\n        (apply (move_node_max (TR_ROTATE_NODE 270))) \n                               ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Swap the positions of objects of color F and objects of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (and\\n                    (color_equals (color_of this) F)\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) R)\\n                )\\n                (and\\n                    (color_equals (color_of this) R)\\n                    (neighbor_of this other)\\n                    (color_equals (color_of other) F)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 9 col 21\n\n                    (color_equals (color_of other) R)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For objects of size 1, exchange positions of objects of color R and their adjacent objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of other) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color F to the position of their right neighbor without changing the order.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) F)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (move_node right)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) R)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Mirror all objects along the diagonal from the top-right to bottom-left corner.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (mirror (diagonal_right))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 6 col 22\n\n            (mirror (diagonal_right))\n                     ^\nExpected one of: \n\t* MIRROR_AXIS_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Swap the positions of objects colored F and R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (color_equals (color_of this) F)\\n                (color_equals (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of (other)))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 37\n\n            (update_color (color_of (other)))\n                                    ^\nExpected one of: \n\t* VAR\n"
    }
]