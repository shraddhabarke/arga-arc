(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (not (and
                    (neighbor_of this other)
                    (color_equals (color_of other) (color_of this))
                ))
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) (column_of other))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) O)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (and
                    (color_equals (color_of this) B)
                    (or
                        (and (neighbor_of this this) (neighbor_of this this))
                        (and (neighbor_of this this) (neighbor_of this this))
                    )
                )
                (or
                    (and
                        (color_equals (color_of this) G)
                        (or
                            (and (neighbor_of this this) (neighbor_of this this))
                            (and (neighbor_of this this) (neighbor_of this this))
                        )
                    )
                    (and
                        (color_equals (color_of this) R)
                        (or
                            (and (neighbor_of this this) (neighbor_of this this))
                            (and (neighbor_of this this) (neighbor_of this this))
                        )
                    )
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (size_equals (size_of this) 1))
        )
        (apply
            (move_node up_left)
            (update_color O)
            (move_node down_left)
            (update_color O)
            (move_node up_right)
            (update_color O)
            (move_node down_right)
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (mirror (mirror_axis_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (shape_equals (shape_of this) square))
        (apply (add_border O))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (neighbor_of this other)
                (or
                    (and
                        (color_equals (color_of this) O)
                        (neighbor_of this other)
                    )
                    (and
                        (color_equals (color_of other) O)
                        (neighbor_of this other)
                    )
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of other) O))
        (apply (update_color O))
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) G)
                (or
                    (color_equals (color_of this) R)
                    (color_equals (color_of this) B)
                )
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (shape_equals (shape_of this) square)
            )
        )
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) O)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter (not (size_equals (size_of this) 1)))
        (apply (add_border O))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter 
            (shape_equals (shape_of this) enclosed)
        )
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (shape_equals (shape_of other) enclosed)
            )
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (shape_equals (shape_of this) square)
        )
        (apply
            (hollow_rectangle O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (add_border O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node_max (direction_of this))
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color O)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (extend_node up false)
            (extend_node down false)
            (extend_node left false)
            (extend_node right false)
        )
    )
)