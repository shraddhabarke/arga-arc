(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up_left)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) B)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) B)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (move_node_max up_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
            (insert 1 (img_pts_of this) source)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (or
                (and (color_equals (color_of this) B) (neighbor_of this other))
                (color_equals (color_of this) R)
            )
        )
        (apply
            (move_node up_left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (move_node_max up)
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node up_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node_max up_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (move_node_max up_left))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (move_node_max up_left))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (shape_equals (shape_of this) square)
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up_left)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (width_equals (width_of this) 2)
                (height_equals (height_of this) 2)
            )
        )
        (apply
            (move_node up)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max up)
            (move_node_max left)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max down)
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 2)
                (not (shape_equals (shape_of this) enclosed))
            )
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 0)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (move_node up_left))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (move_node down_right))
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (size_equals (size_of this) 2)
                (size_equals (size_of this) 4)
            )
        )
        (apply
            (move_node up_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node left)
            (add_border R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 4)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (move_node up)
            (move_node left)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 4)
                (not (color_equals (color_of this) R))
            )
        )
        (apply
            (move_node down)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up_left)
            (move_node up_right)
            (move_node down_left)
            (move_node down_right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node_max (direction_of this))
            (move_node (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 2)
                (column_equals (column_of this) even)
            )
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 2)
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (size_equals (size_of this) max)
            )
        )
        (apply
            (move_node_max up)
            (move_node_max left)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (size_equals (size_of this) max)
            )
        )
        (apply
            (move_node_max down)
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node left)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node down_left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 4)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color B)
            (extend_node up false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 2)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 2)
                (color_equals (color_of this) B)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node up_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node up_left)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 4)
                (not (color_equals (color_of this) O))
            )
        )
        (apply
            (extend_node up_left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node_max up)
            (update_color B)
        )
    )
)

(do 
    (rule 
        (vars (this)) 
        (filter (size_equals (size_of this) min)) 
        (apply 
            (move_node up) 
            (move_node down) 
            (move_node left) 
            (move_node right) 
            (move_node up_left) 
            (move_node up_right) 
            (move_node down_left) 
            (move_node down_right) 
        ) 
    ) 
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 4))
        (apply (move_node up))
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 2))
        (apply (move_node left))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node up)
            (update_color
                (color_of other)
            )
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node up)
            (update_color
                (color_of other)
            )
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (move_node_max up))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (move_node_max down))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node_max left)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node down_right)
            (move_node up_left)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) B)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (move_node_max (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) (color_of other)))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) min)
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) 4)
                )
            )
        )
        (apply
            (move_node (direction_of this))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 2)
        )
        (apply
            (move_node_max up_left)
        )
    ))

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (move_node up)
            (move_node left)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (move_node left)
        )
    )
)