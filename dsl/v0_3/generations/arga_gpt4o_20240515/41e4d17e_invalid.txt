[
    {
        "response": "{\n    \"nl_description\": \"Move all objects containing color C towards the center and color its internal cells to color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (or\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node center)\\n            (add_border F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 14 col 24\n\n            (move_node center)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects on the boundary and objects that are horizontal neighbors of these boundary objects to color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (or\\n                    (column_equals (column_of other) 0)\\n                    (or\\n                        (neighbor_of (direction_of this right) other)\\n                        (neighbor_of (direction_of this left) other)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 38\n\n                        (neighbor_of (direction_of this right) other)\n                                     ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend objects of size greater than 4 towards the nearest border and color them F without allowing overlap.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) (odd))\\n        )\\n        (apply\\n            (extend_node (down) false)\\n            (update_color F)\\n        )\\n    ))\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 5 col 42\n\n           (size_equals (size_of this) (odd))\n                                        ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the top, bottom and middle rows of every shape to color F\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (or\\n                    (image_points (top))\\n                    (image_points (bottom))\\n                )\\n                (image_points (middle))\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 7 col 22\n\n                    (image_points (top))\n                     ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of all non-B objects that share a border with B objects to F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) B))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) B)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all the objects one step towards the center and recolor them to F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node (down_right))\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 6 col 25\n\n            (move_node (down_right))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Replace columns that contain any object with color F\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color C)\\n            (add_border F)\\n            (mirror (diagonal_right))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 8 col 22\n\n            (mirror (diagonal_right))\n                     ^\nExpected one of: \n\t* MIRROR_AXIS_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all the squares of color C that are not borders to color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (not (or\\n                    (neighbor_of this (neighbor_of this other))\\n                    (neighbor_of this (neighbor_of this other))))))\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 39\n\n                    (neighbor_of this (neighbor_of this other))\n                                      ^\nExpected one of: \n\t* VAR\n"
    }
]