(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) center)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) center)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) center)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) center)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (column_equals (column_of this) center)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) C))
        (apply 
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply 
            (extend_node up false)
            (extend_node down false)
        )
    )
    (rule
        (vars (this))
        (filter (and 
            (color_equals (color_of this) C)
            (not (color_equals (color_of other) C))))
        (apply 
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) F))
        (apply 
            (extend_node up false)
            (extend_node down false)
        )
    )
    (rule
        (vars (this))
        (filter (and 
            (color_equals (color_of this) C)
            (not (color_equals (color_of other) C))))
        (apply 
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) B))
        (apply 
            (extend_node up false)
            (extend_node down false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (height_equals (height_of this) 1)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (height_equals (height_of this) 2)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (height_equals (height_of this) 3)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (height_equals (height_of this) 4)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (height_equals (height_of this) 5)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (column_equals (column_of this) center)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (not (color_equals (color_of this) R))
                    (not (neighbor_of this other))
                )
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (not (color_equals (color_of this) R))
                    (not (neighbor_of this other))
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (not (color_equals (color_of this) R))
                    (not (neighbor_of this other))
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (and
                    (not (color_equals (color_of this) R))
                    (not (neighbor_of this other))
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (neighbor_of this this)
                (color_equals (color_of this) C)
            )
        )
        (apply
            (update_color R)
            (update_color F)
            (update_color B)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) max)
                (height_equals (height_of this) 19)
            )
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (height_equals (height_of this) 4)
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) C))
        (apply
            (extend_node left true)
            (extend_node right true)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) C))
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (hollow_rectangle R)
            (hollow_rectangle F)
            (hollow_rectangle G)
            (hollow_rectangle Y)
            (hollow_rectangle B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
        )
        (apply
            (move_node left)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
        )
        (apply
            (move_node right)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 12)
                (not (color_equals (color_of this) C))
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) C))
        )
        (apply
            (move_node down)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) Y)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) F)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) F)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (extend_node right false)
            (extend_node left false)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (extend_node right false)
            (extend_node left false)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (extend_node right false)
            (extend_node left false)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) Y)
        )
        (apply
            (extend_node right false)
            (extend_node left false)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (extend_node right false)
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (or
                    (height_equals (height_of this) 1)
                    (width_equals (width_of this) 1)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (not (or
                    (height_equals (height_of this) 1)
                    (width_equals (width_of this) 1)
                ))
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (or
                    (column_equals (column_of this) even)
                    (column_equals (column_of this) odd)
                )
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (not (or
                    (height_equals (height_of this) 1)
                    (width_equals (width_of this) 1)
                ))
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) center)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter 
            (or
                (and 
                    (color_equals (color_of this) O)
                    (size_equals  (size_of this) 14)
                )
                (and
                    (color_equals (color_of this) O)
                    (size_equals (size_of this) 7)
                )
            )
        )
        (apply
            (update_color Y)
            (update_color F)
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter 
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) O)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) C)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (and
                    (neighbor_of this other)
                    (not (color_equals (color_of other) C))
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (and
                    (height_equals (height_of this) 1)
                    (not (neighbor_of this other))
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (height_equals (height_of this) 1)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) C)
                (height_equals (height_of this) 1)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
            (update_color F)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and 
                (neighbor_of this other) 
                (color_equals (color_of other) C)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (update_color R))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) Y))
        (apply (move_node left) (move_node left) (move_node left) (move_node left) (move_node left) (move_node left) (move_node left) (update_color Y))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) F))
        (apply (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (update_color F))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) G))
        (apply (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (move_node right) (update_color G))
    )
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) B))
        (apply (move_node right) (move_node right) (move_node right) (move_node right) (update_color B))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and (neighbor_of this other) (color_equals (color_of other) C))
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (neighbor_of this other) (color_equals (color_of other) C))
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (neighbor_of this other) (color_equals (color_of other) C))
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (neighbor_of this other) (color_equals (color_of other) C))
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (neighbor_of this other) (color_equals (color_of other) C))
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) C)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 6))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 6))
        (apply (update_color F))
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 6))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 6))
        (apply (update_color B))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) C))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) F))
        (apply (update_color Y))
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply (update_color R))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of other) center)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of other) center)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of other) center)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of other) center)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (column_equals (column_of other) center)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) W) (neighbor_of this other)))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) Y) (neighbor_of this other)))
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) G) (neighbor_of this other)))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) B) (neighbor_of this other)))
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) C)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do 
    (rule 
        (vars (this)) 
        (filter 
            (and 
                (not 
                    (column_equals (column_of this) center) 
                ) 
                (not 
                    (and 
                        (color_equals (color_of this) C) 
                        (size_equals (size_of this) even) 
                    ) 
                ) 
            ) 
        ) 
        (apply 
            (update_color R) 
        ) 
    ) 
    (rule 
        (vars (this)) 
        (filter 
            (and 
                (not 
                    (color_equals (color_of this) C) 
                ) 
                (size_equals (size_of this) even) 
            ) 
        ) 
        (apply 
            (update_color F) 
        ) 
    ) 
    (rule 
        (vars (this)) 
        (filter 
            (and 
                (not 
                    (color_equals (color_of this) C) 
                ) 
                (size_equals (size_of this) odd) 
            ) 
        ) 
        (apply 
            (update_color B) 
        ) 
    ) 
)