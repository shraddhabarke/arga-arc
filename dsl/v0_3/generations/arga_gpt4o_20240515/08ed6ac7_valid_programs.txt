(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node down)
            (update_color R)
            (move_node down)
            (update_color R)
            (move_node down)
            (update_color G)
            (move_node down)
            (update_color G)
            (move_node down)
            (update_color G)
            (move_node down)
            (update_color Y)
            (move_node down)
            (update_color Y)
            (move_node down)
            (update_color Y)
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) X)
                (neighbor_of this other)
            )         
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) Y)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 7)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 5)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 7)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (size_equals (size_of this) 2)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (size_equals (size_of this) 5)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (size_equals (size_of this) 3)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 9)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 2))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 4))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 8))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (not (column_equals (column_of this) 2)))
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (and (column_equals (column_of this) even) (not (color_equals (color_of this) X))))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (and (column_equals (column_of this) odd) (not (color_equals (color_of this) X))))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (and (column_equals (column_of this) even) (color_equals (color_of this) G)))
        (apply (update_color Y))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (column_equals (column_of this) even)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) B)
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this this)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) X) (column_equals (column_of this) 1))
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) X) (column_equals (column_of this) 2))
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) X) (column_equals (column_of this) 3))
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and (color_equals (color_of this) X) (column_equals (column_of this) 4))
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) Y))
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node down)
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 1)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 2)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 3)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 4)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 5)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 6)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 7)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) 8)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
            (update_color R)
            (update_color G)
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 2)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 3)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (update_color G)
            (move_node right)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) G))
        (apply
            (update_color B)
            (move_node right)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) B))
        (apply
            (update_color Y)
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) X) (column_equals (column_of this) (column_of other))))
        (apply (update_color R))
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) R) (column_equals (column_of this) (column_of other))))
        (apply (update_color G))
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) G) (column_equals (column_of this) (column_of other))))
        (apply (update_color B))
    )
    (rule
        (vars (this other))
        (filter (and (color_equals (color_of this) B) (column_equals (column_of this) (column_of other))))
        (apply (update_color Y))
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 2))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 4))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 6))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 8))
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 1)
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 4)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 7)
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) 8)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node up)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 1))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 2))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 9))
        (apply (update_color Y))
    )
    (rule
        (vars (this))
        (filter (and (not (column_equals (column_of this) 1)) (and (not (column_equals (column_of this) 2)) (not (column_equals (column_of this) 9)))))
        (apply (update_color B))
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node left)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) odd)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (column_equals (column_of this) even)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) X)
                (size_equals (size_of this) 1)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) X)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) Y)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) G)
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) X) (column_equals (column_of this) 2)))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) X) (column_equals (column_of this) 5)))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) X) (column_equals (column_of this) 8)))
        (apply (update_color Y))
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) X) (column_equals (column_of this) 6)))
        (apply (update_color B))
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) even))
        (apply (update_color B))
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) odd))
        (apply (update_color R))
    )
    (rule
        (vars (this))
        (filter (and (column_equals (column_of this) odd) (size_equals (size_of this) max)))
        (apply (update_color G))
    )
    (rule
        (vars (this))
        (filter (and (column_equals (column_of this) even) (size_equals (size_of this) 1)))
        (apply (update_color Y))
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) B)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) (column_of other)))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 3))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 4))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 5))
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 1))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 2))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 3))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (column_equals (column_of this) 4))
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) O)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (color_equals (color_of this) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) X))
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) X) (neighbor_of this other)))
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) X) (neighbor_of this other)))
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (and (color_equals (color_of this) X) (neighbor_of this other)))
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) B)
                (degree_equals (degree_of this) 1)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (degree_equals (degree_of this) 2)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) G)
                (degree_equals (degree_of this) 3)
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (neighbor_of this other))
        (apply
            (update_color R)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) X)
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (column_equals (column_of this) (column_of other))
                    (color_equals (color_of other) X)
                )
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (column_equals (column_of this) (column_of other))
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (column_equals (column_of this) (column_of other))
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) X)
                (and
                    (column_equals (column_of this) (column_of other))
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (update_color Y)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (and
                    (color_equals (color_of this) X)
                    (column_equals (column_of this) 1)
                )
        )
        (apply (update_color R)))
    (rule
        (vars (this))
        (filter (and
                    (color_equals (color_of this) X)
                    (column_equals (column_of this) 4)
                )
        )
        (apply (update_color G)))
    (rule
        (vars (this))
        (filter (and
                    (color_equals (color_of this) X)
                    (column_equals (column_of this) 5)
                )
        )
        (apply (update_color B)))
    (rule
        (vars (this))
        (filter (and
                    (color_equals (color_of this) X)
                    (column_equals (column_of this) 7)
                )
        )
        (apply (update_color Y)))
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) even)
        )
        (apply
            (update_color B)
            (update_color R)
            (update_color G)
            (update_color Y)
        )
    )
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) odd)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (column_equals (column_of this) even)
        )
        (apply
            (update_color B)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) odd)
                (not (color_equals (color_of this) X))
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) odd)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) odd)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (update_color Y)
        )
    )
)