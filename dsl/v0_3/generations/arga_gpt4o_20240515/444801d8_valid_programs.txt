(do
    (rule
        (vars (this other))
        (filter
            (or
                (neighbor_of this other)
                (and
                    (color_equals (color_of other) R)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (extend_node (direction_of other) true)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) (column_of other))
                (size_equals (size_of this) (size_of other))
            )
        )
        (apply
            (move_node up)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 6)
        )
        (apply
            (move_node right)
            (update_color R)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 5)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 5)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 3)
        )
        (apply
            (move_node right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (color_equals (color_of this) F)
            )
        )
        (apply
            (move_node up)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) odd)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (extend_node up false)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) B))
                (and
                    (neighbor_of this other)
                    (or
                        (color_equals (color_of other) R)
                        (or
                            (color_equals (color_of other) F)
                            (color_equals (color_of other) C)
                        )
                    )
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (color_equals (color_of other) R)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (move_node down)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) (color_of other)))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) (color_of other)))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) G)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) (color_of other)))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) B))
                (and
                    (neighbor_of this other)
                    (and
                        (color_equals (color_of other) B)
                        (size_equals (size_of this) max)
                    )
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (shape_equals (shape_of other) enclosed)
            )
        )
        (apply
            (move_node_max right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (update_color (color_of this))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (move_node up)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
            (update_color R)
        )
   )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (update_color (color_of other))
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (color_equals (color_of other) R)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (extend_node (direction_of other) false)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) B))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) F)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max up)
        )    
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (move_node_max up)
            (update_color F)
        )    
    )
    (rule
        (vars (this other))
        (filter
            (not (or
                (color_equals (color_of this) R)
                (color_equals (color_of this) F)
            ))
        )
        (apply
            (move_node_max down)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (move_node right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node up)
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (column_equals (column_of this) center)
        )
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (neighbor_of this other)
            )
        )
        (apply
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 5)
        )
        (apply
            (move_node right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (or
                (color_equals (color_of this) R)
                (color_equals (color_of this) F)
            )
        )
        (apply
            (move_node_max up)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )    
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) G)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color R)
        )    
    )
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) F)
                (neighbor_of this other)
            )
        )
        (apply
            (update_color F)
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter (not (color_equals (color_of this) (color_of other))))
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (or
                    (color_equals (color_of this) R)
                    (color_equals (color_of this) F)
                )
                (neighbor_of this other)
            )
        )
        (apply
            (move_node up)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (or
                    (color_equals (color_of other) R)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (move_node right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) B)
            )
        )
        (apply
            (move_node right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (and (not (color_equals (color_of this) O)) (neighbor_of this other)))
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 2)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node left)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) (color_of other)))
                (and
                    (neighbor_of this other)
                    (size_equals (size_of other) max)
                )
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
            (move_node right)
            (move_node right)
            (move_node down)
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color R)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) B))
                (neighbor_of this other)
            )
        )
        (apply
            (move_node (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) O))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of other) R)
                (size_equals (size_of this) min)
            )
        )
        (apply
            (move_node_max left)
            (update_color (color_of other))
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) center)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )    
    )
    (rule
        (vars (this other))
        (filter
            (and
                (column_equals (column_of this) center)
                (color_equals (color_of other) F)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color F)
        )    
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (not (color_equals (color_of this) B))
                (and
                    (neighbor_of this other)
                    (color_equals (color_of other) B)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 1)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and 
                (size_equals (size_of this) 6)
                (and 
                    (color_equals (color_of this) O) 
                    (neighbor_of this other)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (neighbor_of this other)
                (color_equals (color_of other) R)
            )
        )
        (apply
            (move_node right)
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 5)
                (or
                    (neighbor_of this other)
                    (color_equals (color_of other) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color R)
        )
    )
    (rule
        (vars (this other))
        (filter
            (and
                (size_equals (size_of this) 5)
                (or
                    (neighbor_of this other)
                    (color_equals (color_of other) F)
                )
            )
        )
        (apply
            (move_node_max (direction_of other))
            (update_color F)
        )
    )
)