[
    {
        "response": "{\n    \"nl_description\": \"Move objects of color different than C from the first/last columns and then move them (if adjacent) to the place of the farthest object on the grid. Perform these actions individually for each pair of images.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (and\\n                    (neighbor_of this other)\\n                    (or\\n                        (column_equals (column_of this) 1)\\n                        (column_equals (column_of this) 10)\\n                        (column_equals (column_of other) 1)\\n                        (column_equals (column_of other) 10)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 12 col 25\n\n                        (column_equals (column_of other) 1)\n                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the closest edge of the grid and recolor them to their opposite color on the color wheel.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (size_equals (size_of this) 1))\\n        (apply\\n            (move_node_max (direction_of this))\\n            (update_color (color_of (neighbor_of this))))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 7 col 37\n\n            (update_color (color_of (neighbor_of this))))\n                                    ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects of size 1 to the edges of the grid, then recolor them to the same color as the object that was their neighbor.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of (neighbor_of other this)))\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 42\n\n           (move_node_max (direction_of (neighbor_of other this)))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of color on top to bottom, and objects of color on bottom to top\",\n    \"code\": \"(do    (rule    (vars (this other))    (filter   (and  (c_olorequals(max)[x])   (neighbor_of(x)other)))   (apply       (MOVE UP))     (apply        (move down)    )    ))\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 1 col 57\n\n(vars (this other))    (filter   (and  (c_olorequals(max)[x])   (neighbor_of(x)o\n                                        ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the four corner objects next to the boundary objects while leaving a trail if it hits an obstacle.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (and\\n                        (size_equals (size_of this) 3)\\n                        (color_equals (color_of this) C)\\n                    )\\n                    (and\\n                        (size_equals (size_of this) 3)\\n                        (color_equals (color_of this) A)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (down))\\n            (move_node (left))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 16 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the corners of the grid as near as possible, and swap their colors accordingly: F to top-left, G to bottom-right, R to top-right and W to bottom-left.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node_max (up_left))\\n            (move_node_max (up_right))\\n            (move_node_max (down_left))\\n            (move_node_max (down_right))\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'u' in the current parser context, at line 8 col 29\n\n            (move_node_max (up_left))\n                            ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects on the top left and bottom right corners to their opposite corners.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (column_equals (column_of this) 1)\\n                    (column_equals (column_of this) 10)\\n                )\\n                (or\\n                    (color_equals (color_of this) F)\\n                    (color_equals (color_of this) G)\\n                    (color_equals (color_of this) R)\\n                    (color_equals (color_of this) W)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (and (if(column_equals (column_of this) 1) down) (if(column_equals (column_of this) 10) up)) )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 13 col 21\n\n                    (color_equals (color_of this) R)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the corners of the grid, while retaining their respective relative positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (size_equals (size_of this) 1))\\n        (apply\\n            (move_node top_left)\\n            (move_node bottom_right)\\n            (move_node bottom_left)\\n            (move_node top_right)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 6 col 24\n\n            (move_node top_left)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects at the corners of the grid to their closest boundary point.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (and\\n                    (column_equals (column_of this) 0)\\n                    (or\\n                        (row_equals (row_of this) 0)\\n                        (row_equals (row_of this) max)\\n                    )\\n                )\\n                (and\\n                    (column_equals (column_of this) max)\\n                    (or\\n                        (row_equals (row_of this) 0)\\n                        (row_equals (row_of this) max)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 9 col 26\n\n                        (row_equals (row_of this) 0)\n                         ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of specific colors to the border of the grid, and then update their colors to the color at their new positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (or\\n                    (color_equals (color_of this) F)\\n                    (or\\n                        (color_equals (color_of this) R)\\n                        (color_equals (color_of this) G)\\n                    )\\n                )\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (move_node_max (if (color_equals (color_of other) W) down (if (color_equals (color_of other) F) up left)))\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 17 col 29\n\n            (move_node_max (if (color_equals (color_of other) W) dow\n                            ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the corners of the grid as follows: top-left, top-right, bottom-left, bottom-right\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node top_left)\\n            (move_node top)\\n            (move_node top_right)\\n            (move_node_right)\\n            (move_node bottom_right)\\n            (move_node bottom)\\n            (move_node bottom_left)\\n            (move_node left)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 8 col 24\n\n            (move_node top_left)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects not in the central frame to the edges, and swap their positions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (or (and (column_equals (column_of this) 3)(and (column_equals (column_of this) 4)(or (neighbor_of this other)(neighbor_of other this))))) (column_equals (column_of this) 5))\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n            (move_node_max down)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 5 col 155\n\nf this other)(neighbor_of other this))))) (column_equals (column_of this) 5))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 toward the boundary, changing their color according to the direction they are moved. On top boundary, color with G. On bottom boundary, color with X. On left boundary, color with F. On right boundary, color with R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (or \\n                (and\\n                    (column_equals (column_of this) center)\\n                    (move_node up)\\n                    (update_color G)\\n                )\\n                (and\\n                    (column_equals (column_of this) center)\\n                    (move_node down)\\n                    (update_color X)\\n                )\\n                (and\\n                    (column_equals (column_of this) center)\\n                    (move_node left)\\n                    (update_color F)\\n                )\\n                (and\\n                    (column_equals (column_of this) center)\\n                    (move_node right)\\n                    (update_color R)\\n                )\\n            )\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'o' in the current parser context, at line 8 col 14\n\n            (or \n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects that are neighboring objects of color O to the edge of the grid, if they are not R, G, F, C, Y, or W, and recolor them to align with the respective edge colors X, Y, C, F or edge constraints.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n                (not (or\\n                    (color_equals (color_of this) R)\\n                    (color_equals (color_of this) G)\\n                    (color_equals (color_of this) F)\\n                    (color_equals (color_of this) C)\\n                    (color_equals (color_of this) Y)\\n                    (color_equals (color_of this) W)\\n                ))\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of this))\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 21\n\n                    (color_equals (color_of this) F)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the top left and bottom right objects to the positions of the most left and most right internal objects of the largest size, without overlap.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (or\\n                    (and (neighbor_of this other) (column_equals (column_of other) odd))\\n                    (and (neighbor_of this other) (column_equals (column_of other) even))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 10 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects of color F, G, R to the corners of the grid, and the objects of color X, W, C to the edges of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) F)\\n                (or\\n                    (color_equals (color_of this) G)\\n                    (color_equals (color_of this) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (insert 1 top_left middle)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) X)\\n                (or\\n                    (color_equals (color_of this) W)\\n                    (color_equals (color_of this) C)\\n                )\\n            )\\n        )\\n        (apply\\n            (insert 2 top edge middle)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'e' in the current parser context, at line 29 col 27\n\n            (insert 2 top edge middle)\n                          ^\nExpected one of: \n\t* RELATIVE_POSITION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of color other than C that are neighbors of C to the nearest outer horizontal edge.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (move_node_max (or (or (and (column_equals (column_of this) min) (direction left)) (and (column_equals (column_of this) max) (direction right)))\\n (or (and (row_equals (row_of this) min) (direction up)) (and (row_equals (row_of this) max) (direction down)))))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all border objects to the nearest border positions where they are missing.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"All objects except the rectangles are moved to the edges of the grid in the direction closest to them and recolored.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (shape_equals (shape_of this) enclosed))\\n                (not (shape_equals (shape_of this) square))\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of (mirror_axis_of this)))\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 42\n\n           (move_node_max (direction_of (mirror_axis_of this)))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the closest edge, if their color is different from their neighboring object's color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (not (color_equals (color_of this) (color_of other)))\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all border objects one step inward.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (or\\n                    (column_equals (column_of this) 0)\\n                    (column_equals (column_of this) 9)\\n                )\\n                (or\\n                    (and\\n                        (column_equals (column_of this) 1)\\n                        (row_equals (row_of this) 1)\\n                    )\\n                    (and\\n                        (column_equals (column_of this) 8)\\n                        (row_equals (row_of this) 1)\\n                    )\\n                )\\n                (or\\n                    (and\\n                        (column_equals (column_of this) 1)\\n                        (row_equals (row_of this) 8)\\n                    )\\n                    (and\\n                        (column_equals (column_of this) 8)\\n                        (row_equals (row_of this) 8)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node in)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 13 col 26\n\n                        (row_equals (row_of this) 1)\n                         ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the closest edge.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (size_equals (size_of this) 1))\\n        (apply\\n            (move_node_max (up))\\n            (move_node_max (down))\\n            (move_node_max (left))\\n            (move_node_max (right))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'u' in the current parser context, at line 6 col 29\n\n            (move_node_max (up))\n                            ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of color other than C if they are neighbors of objects of color C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than O to the nearest edge of the grid that does not have any object and then recolor them to form a pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) O)))\\n        (apply\\n            (move_node_max up)\\n            (move_node max down)\\n            (move_node max left)\\n            (move_node max right)\\n            (update_color G) ;; For green color pattern at the bottom left corner in Pair 1 and top left in Pair 3\\n            (update_color W) ;; For white color pattern at the top right corner in Pair 3 and bottom right in Pair 2\\n            (update_color F) ;; For fuchsia color pattern at the bottom left corner in Pair 2\\n            (update_color R) ;; For red color pattern at the bottom right corner in Pair 1\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 7 col 24\n\n            (move_node max down)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the four corners, and move the other objects to the center of grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (column_equals (column_of this) odd)\\n            )\\n        )\\n        (apply\\n            (move_node_max up_left)\\n            (move_node_max up_right)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (size_equals (size_of this) max)\\n        )\\n        (apply\\n            (move_node_max center)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 21 col 28\n\n            (move_node_max center)\n                           ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects at the corners of the grid towards the objects at the nearest sides.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) F)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) G)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) R)\\n                )\\n                (and\\n                    (neighbor_of this other)\\n                    (color_equals (color_of this) W)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 14 col 17\n\n                (and\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects at the corners towards the center row and column respectively, then move them back to the corners switching locations.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (or\\n                    (and (color_equals (color_of this) F) (neighbor_of this this))\\n                    (and (color_equals (color_of this) R) (neighbor_of this this))\\n                )\\n                (or\\n                    (and (color_equals (color_of this) Y) (neighbor_of this this))\\n                    (and (color_equals (color_of this) G) (neighbor_of this this))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node (if (color_equals (color_of this) F) down up))\\n            (move_node (if (color_equals (color_of this) R) up down))\\n            (move_node (if (color_equals (color_of this) Y) right left))\\n            (move_node (if (color_equals (color_of this) G) left right))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 17 col 25\n\n            (move_node (if (color_equals (color_of this) F) down\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Swap all objects of color C with the nearest two corner objects in each grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) C)\\n                (or\\n                    (and (not (color_equals (color_of other) C)) (neighbor_of this other))\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 9 col 17\n\n                )\n                ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the nearest empty cell diagonally adjacent to them.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (size_equals (size_of other) 0)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than 'C', that are neighbors of an object of color 'C', toward the object of color 'C', and then update their colors to their respective neighboring object colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) C))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) C)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color (color_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) C)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of color F, G, R, or Y to the corners.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) F)\\n                (or\\n                    (color_equals (color_of this) G)\\n                    (or\\n                        (color_equals (color_of this) R)\\n                        (color_equals (color_of this) Y)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node top_left)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) F)\\n                (or\\n                    (color_equals (color_of this) G)\\n                    (or\\n                        (color_equals (color_of this) R)\\n                        (color_equals (color_of this) Y)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node top_right)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) F)\\n                (or\\n                    (color_equals (color_of this) G)\\n                    (or\\n                        (color_equals (color_of this) R)\\n                        (color_equals (color_of this) Y)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node bottom_left)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) F)\\n                (or\\n                    (color_equals (color_of this) G)\\n                    (or\\n                        (color_equals (color_of this) R)\\n                        (color_equals (color_of this) Y)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node bottom_right)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 17 col 24\n\n            (move_node top_left)\n                       ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the edges of the grid\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node_max (direction_of right))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 8 col 42\n\n           (move_node_max (direction_of right))\n                                        ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects of size 1 to the corners while keeping their color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (size_equals (size_of this) 1)\\n        )\\n        (apply\\n            (move_node (img_pts_of this))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 25\n\n            (move_node (img_pts_of this))\n                        ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move small objects to corners and recolor corner objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (or\\n                    (and (neighbor_of this other) (size_equals (size_of other) max))\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (column_equals (column_of this) left)\\n                (column_equals (column_of this) right) \\n                (column_equals (column_of this) up)\\n                (column_equals (column_of this) down)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 9 col 17\n\n                )\n                ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects positioned at corners to the diagonally opposite corner.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (and (color_equals (color_of this) F) (neighbor_of this other))\\n                (and (color_equals (color_of this) G) (neighbor_of this other))\\n                (and (color_equals (color_of this) R) (neighbor_of this other))\\n                (and (color_equals (color_of this) W) (neighbor_of this other))\\n            )\\n        )\\n        (apply\\n            (move_node down_right)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (and (color_equals (color_of this) F) (neighbor_of this other))\\n                (and (color_equals (color_of this) G) (neighbor_of this other))\\n                (and (color_equals (color_of this) R) (neighbor_of this other))\\n                (and (color_equals (color_of this) W) (neighbor_of this other))\\n            )\\n        )\\n        (apply\\n            (move_node up_left)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (and (color_equals (color_of this) R) (n\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 1 to the top and place them at the borders.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (size_equals (size_of this) 1))\\n        (apply\\n            (TR_MOVE_NODE_MAX up)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'T' in the current parser context, at line 6 col 14\n\n            (TR_MOVE_NODE_MAX up)\n             ^\nExpected one of: \n\t* TR_FLIP\n\t* TR_ADD_BORDER\n\t* TR_UPDATE_COLOR\n\t* TR_INSERT\n\t* TR_MIRROR\n\t* TR_NOOP\n\t* TR_HOLLOW_RECTANGLE\n\t* TR_EXTEND_NODE\n\t* TR_MOVE_NODE_MAX\n\t* TR_MOVE_NODE\n\t* TR_ROTATE_NODE\n\t* TR_FILL_RECTANGLE\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects on the outermost rows and columns of the grid into the same positions on the opposite sides, and recolor the objects R, G, F, W, and C.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (neighbor_of this other)\\n                (color_equals (color_of this) R)\\n                (color_equals (color_of this) G)\\n                (color_equals (color_of this) F)\\n                (color_equals (color_of this) W)\\n                (color_equals (color_of this) C)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color R)\\n            (update_color G)\\n            (update_color F)\\n            (update_color W)\\n            (update_color C)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of this) G)\n                ^\nExpected one of: \n\t* RPAR\n"
    }
]