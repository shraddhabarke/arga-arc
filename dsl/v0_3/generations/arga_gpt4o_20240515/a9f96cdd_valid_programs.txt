(do
    (rule
        (vars (this other))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node_max left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (size_equals (size_of this) 1))
        (apply
            (move_node up_right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node down)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_right)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_right)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node up)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node up)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node up)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max up_left)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node up_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node down_left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node left)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node down_right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down_right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node up)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (move_node up)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (move_node up)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color (color_of this))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (insert 1 top_left source)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
            (move_node down)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node right)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node right)
            (move_node down)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node right)
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (move_node down)
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (move_node up)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node (direction_of this))
            (update_color G)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node_max right)
            (move_node down)
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max up_left)
            (update_color G)
            (update_color C)
            (update_color F)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
            (update_color C)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (update_color A)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
            (update_color F)
        )
    )
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color G)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node up)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max down)
            (move_node_max left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node_max up)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (move_node_max right)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (move_node_max down)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (move_node down)
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color G)
            (update_color F)
            (update_color C)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) C)
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down_left)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max (direction_of other))
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node left)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node left)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color G)
            (update_color F)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) O)
        )
        (apply
            (update_color F)
            (update_color C)
            (update_color A)
        )
    )
)

(do
    (rule (vars (this)) (filter (color_equals (color_of this) R)) (apply (move_node down) (update_color G)))
    (rule (vars (this)) (filter (color_equals (color_of this) G)) (apply (move_node down) (update_color F)))
    (rule (vars (this)) (filter (color_equals (color_of this) F)) (apply (move_node down) (update_color C)))
    (rule (vars (this)) (filter (color_equals (color_of this) C)) (apply (move_node down) (update_color A)))
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node down_right)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color G)
            (move_node up_left)
            (update_color C)
            (move_node up_left)
            (update_color F)
            (move_node up_left)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node_max up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and (color_equals (color_of this) G) (column_equals (column_of this) 0))
        )
        (apply
            (move_node_max right)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and (color_equals (color_of this) C) (column_equals (column_of this) 1))
        )
        (apply
            (move_node_max down)
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (move_node_max left)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down)
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node right)
            (update_color F)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node down)
            (move_node left)
            (move_node down)
            (update_color G)
            (update_color F)
            (update_color C)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) R)
            )
        )
        (apply
            (move_node down_right)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (move_node left)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) F)
            )
        )
        (apply
            (move_node down)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) C)
            )
        )
        (apply
            (move_node right)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (move_node down)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) O)
            )
        )
        (apply
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) G)
            )
        )
        (apply
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) F)
            )
        )
        (apply
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (and
                (size_equals (size_of this) 1)
                (color_equals (color_of this) C)
            )
        )
        (apply
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (rotate_node 90)
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color A)
        )
    )
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node up)
            (update_color C)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node (direction_of this))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_right)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter (color_equals (color_of this) R))
        (apply
            (move_node (direction_of other))
        )
    )
)

(do 
    (rule 
        (vars (this other)) 
        (filter 
            (color_equals (color_of this) R) 
        ) 
        (apply 
            (move_node down) 
        ) 
    ) 
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_right)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_right)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node down_left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (size_equals (size_of this) 1)
        )
        (apply
            (update_color (color_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of other) R)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (neighbor_of this other)
        )
        (apply
            (move_node_max (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node right)
            (move_node down)
            (update_color G)
            (update_color F)
            (update_color C)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color G)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color F)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color C)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node up_left)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (move_node (direction_of other))
        )
    )
)

(do
    (rule
        (vars (this other))
        (filter
            (and
                (color_equals (color_of this) R)
                (neighbor_of this other)
            )
        )
        (apply
            (move_node right)
        )
    )
)