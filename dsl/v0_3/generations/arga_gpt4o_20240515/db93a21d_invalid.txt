[
    {
        "response": "{\n    \"nl_description\": \"Move objects of color W to form a rectangular structure and recolor objects in the middle to G and surrounding edges to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node_max down)\\n            (move_node_max right)\\n            (update_color W)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (move_node_max up)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) W)\\n                (or\\n                    (neighbor_of this) (other)\\n                    (neighbor_of this) (other)\\n                    (neighbor_of this) (other)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 35 col 38\n\n                    (neighbor_of this) (other)\n                                     ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than O, to the edges and recolor them to different colors based on their final position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (move_node_max right)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (or\\n                    (column_equals (column_of this) max)\\n                    (column_equals (column_of this) 8)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max up)\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) O))\\n        )\\n        (apply\\n            (move_node_max left)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 18 col 53\n\n        (column_equals (column_of this) max)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the colors of all objects to create a pattern of alternating colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (apply\\n                (update_color G)\\n            )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) G)\\n                (color_equals (color_of this) W)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) G))\\n                (not (color_equals (color_of this) W))\\n                (not (color_equals (color_of this) B))\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 27 col 17\n\n                (not (color_equals (color_of this) B))\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the surroundings of objects with color W and of small sizes to different colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) W)\\n                (and\\n                    (neighbor_of this other)\\n                    (or \\n                        (size_equals (size_of this) 2)\\n                        (size_equals (size_of this) 3)\\n                        (size_equals (size_of this) 4)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) G)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 12 col 25\n\n                        (size_equals (size_of this) 4)\n                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n  \"nl_description\": \"Color all connected components of W with different colors in G, B, and G respectively and surrounding areas with G and B regions.\",\n  \"code\": \"(do\\n  (rule\\n    (vars (this))\\n    (filter\\n        (color_equals (color_of this) W)\\n    )\\n    (apply\\n        (update_color G)\\n    )\\n  )\\n  (rule\\n    (vars (this other))\\n    (filter\\n      (and\\n        (color_equals (color_of this) O)\\n        (neighbor_of this other)\\n        (color_equals (color_of other) G)\\n      )\\n    )\\n    (apply\\n        (update_color B)\\n    )\\n  )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 9\n\n        (color_equals (color_of other) G)\n        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the grid cells based on an ordered mapping of their rows and columns. The central region keeps its original colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (or (color_equals (color_of this) W)\\n                (and (column_equals (column_of this) 0)\\n                    (not (color_equals (color_of this) O))))\\n            ))\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (or (color_equals (color_of this) B)\\n                (and (row_equals (row_of this) even)\\n                     (column_equals (column_of this) center)))\\n            ))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and\\n            (or (color_equals (color_of this) G)\\n                (and (column_equals (column_of this) odd)\\n                     (color_equals (color_of this) O)))\\n            ))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 8 col 13\n\n            ))\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 2 towards the objects of color X if they are neighbors, then recolor them based on certain conditions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (not (color_equals (color_of this) G))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Fill all empty cells to the left and right of white objects with green, and cells above and below with blue.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (insert (0) top source)\\n            (insert (0) left source)\\n            (insert (0) right source)\\n            (insert (0) bottom source)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 21\n\n            (insert (0) top source)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Surrounding all instances of two adjacent Ws (i.e. blocks of size 2) by surrounding it with color similar to G color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) W)\\n                (or\\n                    (neighbor_of this (left_of this) W)\\n                    (neighbor_of this (right_of this) W)\\n                )\\n            )\\n        )\\n        (apply\\n            (add_border G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (update_color (color_of (neighbor_of this W)) G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 39\n\n                    (neighbor_of this (left_of this) W)\n                                      ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects based on their position. Recolor to G if in top-left, B if in bottom-right, and leave as is otherwise.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (not (color_equals (color_of this) W))\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (not (color_equals (color_of this) W))\\n                (neighbor_of this this)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (neighbor_of this this)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the leftmost column to G, the second column from the right to G, change the color of row 3 to B. Change W to G wherever present.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) -2)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (height_equals (height_of this) 3)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '-' in the current parser context, at line 14 col 45\n\n        (column_equals (column_of this) -2)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color W toward the direction to form the outlined patterns in the output grids and then update their colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (move_node left)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (move_node up)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (move_node_down right)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '_' in the current parser context, at line 28 col 23\n\n            (move_node_down right)\n                      ^\nExpected one of: \n\t* LPAR\n\t* DIRECTION\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color W to the top-left corner and recolor them based on their initial position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (move_node_max up_left)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (update_color (and (or (color_equals (color_of this) W))  G))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'a' in the current parser context, at line 17 col 28\n\n            (update_color (and (or (color_equals (color_of this) W)\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the objects of color O, surrounding the objects of color W, with appropriate colors, and move some objects where needed.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) W)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (height_equals (height_of this) 3)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (width_equals (width_of this) 2)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) W)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Extend all objects from the periphery toward the center, and recolor them to different colors: objects in the corners to G, objects in the middle to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter (and (neighbor_of this other) (and (or (or (color_equals (color_of this) W) (color_equals (color_of this) W)) (or (color_equals (color_of this) W) (color_equals (color_of this) W))) (or (or (neighbor_of this other) (or (neighbor_of this other) (neighbor_of this other))) (or (neighbor_of this other) (neighbor_of this other))))))\\n        (apply\\n            (extend_node (direction_of other) true)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (size_equals (size_of this) min))\\n        (apply\\n            (extend_node (down_left) true)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'd' in the current parser context, at line 14 col 27\n\n            (extend_node (down_left) true)\n                          ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to color G and move all objects to the top left while shrinking the blue ones into B\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (degree_equals (degree_of this) even)\\n                (and\\n                    (neighbor_of this other)\\n                )\\n            )\\n        )\\n        (apply\\n            (move_node_max up_left)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) B)\\n        )\\n        (apply\\n            (shrink Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 16 col 17\n\n                )\n                ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Color objects using a gradient approach with colors G, B, and R contiguously for varying size clusters.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (size_equals (size_of this) 7)\\n            )\\n           (apply\\n               (update_color G)\\n           )\\n        )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (size_equals (size_of this) 2)\\n            )\\n           (apply\\n               (update_color G)\\n           )\\n      )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (size_equals (size_of this) 4)\\n            )\\n           (apply\\n               (update_color G)\\n           )\\n      )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (size_equals (size_of this) 3)\\n            )\\n           (apply\\n               (update_color B)\\n           )\\n      )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (size_equals (size_of this) 6)\\n            )\\n           (apply\\n               (update_color B)\\n           )\\n      )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (and\\n                (size_equals (size_of this) 10)\\n            )\\n           (apply\\n               (update_color G)\\n           )\\n      )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'a' in the current parser context, at line 5 col 14\n\n            (and\n             ^\nExpected one of: \n\t* APPLY\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects based on their initial color: O to G, W to G, and create new B objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) O))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) W))\\n        (apply (update_color G))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (insert (0) top source)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 16 col 21\n\n            (insert (0) top source)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the top and bottom edges to color G, and the left and right edges to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter \\n            (or \\n                (column_equals (column_of this) 0)\\n                (or \\n                    (column_equals (column_of this) max)\\n                    (or \\n                        (column_equals (column_of this) min)\\n                        (size_equals (size_of this) max)\\n                    )\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter \\n            (or \\n                (row_equals (row_of this) 0)\\n                (row_equals (row_of this) max)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 8 col 53\n\n        (column_equals (column_of this) max)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to color B and then move them to the left or top depending on their starting positions, form central rows of green.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node left)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (column_equals (column_of this) \\\"odd\\\"))\\n        (apply\\n            (move_node up)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '\"' in the current parser context, at line 18 col 49\n\n(filter (column_equals (column_of this) \"odd\"))\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Add a border color around each object, and change the color of the border based on the size of the object.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (size_equals (size_of this) 4)\\n        (apply\\n            (add_border G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (size_equals (size_of this) 5)\\n        (apply\\n            (add_border B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n            (size_equals (size_of this) 6)\\n        (apply\\n            (add_border R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 's' in the current parser context, at line 5 col 14\n\n            (size_equals (size_of this) 4)\n             ^\nExpected one of: \n\t* APPLY\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor some groups of objects vertically aligned to specific patterns, including 'G' and 'B', based on their proximity to other groups containing 'W'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of other) W)\\n                (or\\n                    (neighbor_of (color_of this) G)\\n                    (neighbor_of (color_of this) B)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 34\n\n                    (neighbor_of (color_of this) G)\n                                 ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move specific objects, change their colors, and add borders to create more structured patterns.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this)\\n        (filter\\n            (and\\n                (color_equals (color_of this) W)\\n                (size_equals (size_of this) max)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n            (add_border G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 4 col 9\n\n        (filter\n        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color W diagonally downward, then recolor them to G for those touching the edge, and to B for others.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (move_node down_right)\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) B)\\n                (or\\n                    (neighbor_of this edge_top)\\n                    (neighbor_of this edge_bottom)\\n                    (neighbor_of this edge_left)\\n                    (neighbor_of this edge_right)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'e' in the current parser context, at line 18 col 39\n\n                    (neighbor_of this edge_top)\n                                      ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects of color 'O' to 'G', objects of color 'W' to 'B', and objects of color 'W' with top left and bottom right positions to 'G'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) W)\\n                (or\\n                    (image_points_of this) top_left\\n                    (image_points_of this) bottom_right\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 26 col 22\n\n                    (image_points_of this) top_left\n                     ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the cells around each object to create a border with new colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (add_border G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) W))\\n                (not (color_equals (color_of this) G))\\n            )\\n        )\\n        (apply\\n            (move_node_max (right))\\n            (move_node_max (left))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 20 col 29\n\n            (move_node_max (right))\n                            ^\nExpected one of: \n\t* DIRECTION_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects of color W to their respective colors based on their sizes and locations.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (update_color (if (size_equals (size_of this) 4) G (if (neighbor_of this other) (if (color_equals (color_of other) O) B Y))))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 28\n\n            (update_color (if (size_equals (size_of this) 4) G (if \n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects to G if they are not W and surrounded by empty cells; recolor all remaining objects to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) W))\\n                (not (neighbor_of this G))\\n                (not (neighbor_of this B))\\n                (not (neighbor_of this W))\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'G' in the current parser context, at line 7 col 40\n\n                (not (neighbor_of this G))\n                                       ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all regions of contiguous color cells to different colors in a sequence.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) W)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\\n}\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) G)\n                ^\nExpected one of: \n\t* RPAR\n"
    }
]