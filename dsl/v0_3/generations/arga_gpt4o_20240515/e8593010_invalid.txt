[
    {
        "response": "{\n    \"nl_description\": \"Move all objects of size 2 one step toward nearest neighbor object with different color, and then recolor them to the same color as their new neighbors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 2)\\n                (neighbor_of this other)\\n                (not (color_equals (color_of this) (color_of other)))\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (not (color_equals (color_of this) (colo\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the first and last columns separately. The first column color sequence is repeated in output, starting from B, G, R. The last column color sequence is constructed based on the first column, with the last element repeated.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) 0)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color G)\\n            (move_node down)\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (column_equals (column_of this) last)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color (color_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) last)\\n        )\\n        (apply\\n            (update_color G)\\n            (move_node up)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'l' in the current parser context, at line 29 col 49\n\n        (column_equals (column_of this) last)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor nodes adjacent to O nodes to G, B, or R in a set pattern.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) O)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (neighbor_of this other)\\n            (and\\n                (color_equals (color_of this) X)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 13\n\n            (and\n            ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"For each defined pair with \u2018O\u2019 objects, apply a consistent color of either G or R to specific cells in patterns, with strategic placement of alternating colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 7 col 13\n\n            )\n            ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor isolated objects and all border neighbors with specific colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of this) O)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) R)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 1)\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move objects with color 'O' or 'G' into objects with color 'R' and change their color to 'R'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (or\\n                    (color_equals (color_of this) O)\\n                    (color_equals (color_of this) G)\\n                )\\n                (color_equals (color_of other) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of this) G)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor every O object according to their position: top-left quadrant to B, top-right quadrant to G, bottom-left quadrant to R, and bottom-right quadrant to G\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color (G if (and (> (column_of this) (1/2 * width) (> (row_of this) (1/2 * height))) else (B if (<= (column_of this) (1/2 * width) (> (row_of this) (1/2 * height)) else (R if (and (<= (column_of this) (1/2 * width) (<= (row_of this) (1/2 * height))) else G)))))))))\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'G' in the current parser context, at line 8 col 28\n\n            (update_color (G if (and (> (column_of this) (1/2 * wid\n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move and recolor objects X based on specific color rules.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (color_equals (color_of this) X))\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) B) (neighbor_of this other) (or (color_equals (color_of other) R) (color_equals (color_of other) O))))\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (and (color_equals (color_of this) G) (neighbor_of this other) (color_equals (color_of other) R)))\\n        (apply\\n            (move_node_max (direction_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 11 col 80\n\nor_of this) B) (neighbor_of this other) (or (color_equals (color_of other) R) (c\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects to R if they start with O and are surrounded by X or O. Then, recolor interior objects to B if they are surrounded by X or O. Finally, color the borders of the overall blocks with G.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (or\\n                    (color_equals (color_of other) O)\\n                    (color_equals (color_of other) X)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (or\\n                    (color_equals (color_of other) X)\\n                    (color_equals (color_of other) O)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) X)\\n        )\\n        (apply\\n            (add_border G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (or\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Assign color G to objects at the top and bottom rows, color R to the objects at the left and bottom edges, and color B to the objects near to them.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (and\\n                    (size_equals (width_of this) 10)\\n                    (or\\n                        (column_equals (column_of this) 0)\\n                        (column_equals (column_of this) 1)\\n                    )\\n                )\\n                (height_equals (height_of this) 10)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (column_equals (column_of this) 0)\\n                (height_equals (height_of this) 10)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (or\\n                    (neighbor_of this other)\\n                    (move_node_max (direction_of other))\\n                )\\n                (or\\n                    (color_equals (color_of other) G)\\n                    (color_equals (color_of other) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'w' in the current parser context, at line 7 col 35\n\n                    (size_equals (width_of this) 10)\n                                  ^\nExpected one of: \n\t* SIZE_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of border objects. For top-left part of the grid use the color R, for bottom row use the color G, for left column use the color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (and\\n                        (and\\n                            (not (color_equals (color_of this) X))\\n                            (not (color_equals (color_of this) O))\\n                        )\\n                        (and\\n                            (not (color_equals (color_of this) O))\\n                            (not (color_equals (color_of this) X))\\n                        )\\n                    )\\n                    (filter)\\n                )\\n                (and\\n                    (not (color_equals (color_of this) X))\\n                    (not (color_equals (color_of this) O))\\n                )\\n            )\\n        )\\n        (apply\\n            (extend_node down_left false)\\n            (extend_node down_right false)\\n        )    \\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'f' in the current parser context, at line 17 col 22\n\n                    (filter)\n                     ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects to different colors: objects in the first row that are O to G, O objects in the last row to R, O objects in the first column to B, O objects in the last column to R, and fill remaining O objects with colors if they are in the middle of the grid\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (column_equals (column_of this) 0)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (column_equals (column_of this) 9)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (row_equals (row_of this) 0)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (row_equals (row_of this) 9)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this this))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'r' in the current parser context, at line 31 col 18\n\n                (row_equals (row_of this) 0)\n                 ^\nExpected one of: \n\t* SHAPE_EQ\n\t* OP_OR\n\t* SIZE_EQ\n\t* NEIGHBOR_OF\n\t* WIDTH_EQ\n\t* COLUMN_EQ\n\t* OP_AND\n\t* HEIGHT_EQ\n\t* COLOR_EQ\n\t* OP_NOT\n\t* DEGREE_EQ\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the topmost and lowest object in each column to R, the leftmost and rightmost object in each row to G, and other objects in the middle to B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (or\\n                    (or\\n                        (and\\n                            (neighbor_of this this)\\n                            (column_equals (column_of this) left)\\n                        )\\n                        (column_equals (column_of this) right)\\n                    )\\n                    (or\\n                        (and\\n                            (neighbor_of this this)\\n                            (row_equals (row_of this) top)\\n                        )\\n                        (row_equals (row_of this) bottom)\\n                    )\\n                )\\n                (not (color_equals (color_of this) X))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n            (move_node_max up)\\n            (move_node_max down)\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) G)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'l' in the current parser context, at line 10 col 61\n\n        (column_equals (column_of this) left)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than X one step toward the nearest object of color X, and then update their colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 21 col 17\n\n                (color_equals (color_of other) G)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Change the color of the objects to new color in a different corner directions.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter \\n                (and (color_equals (color_of this) O)(and(shape_equals (shape_of this) enclosed))))\\n        (apply\\n           (update_color R)\\n        )\\n    )\\n\\n    (rule\\n        (vars (this))\\n        (filter \\n                (and (color_equals (color_of this) O)(not (shape_equals (shape_of this) enclosed))))\\n        (apply\\n           (update_color G)\\n        )\\n    )\\n\\n    (rule\\n        (vars (this))\\n        (filter \\n                (color_equals (color_of this) B))\\n        (apply\\n           (update_color Y)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches ')' in the current parser context, at line 5 col 97\n\nd(shape_equals (shape_of this) enclosed))))\n                                        ^\nExpected one of: \n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color different than X one step toward their neighbor with the same color and if found, recolor them to the color of the neighbor.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of this) (color_of other))\\n            )\\n        )\\n        (apply\\n            (move_node (direction_of other))\\n            (update_color (color_of other))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of this) (color_of \n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the bottom objects to R, middle objects to B, and top objects to G based on their vertical position.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (neighbor_of this (1 1)))\\n                (not (neighbor_of this (1 9)))\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (neighbor_of this (10 1)))\\n                (not (neighbor_of this (10 9)))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (neighbor_of this (1 1)))\\n                (not (neighbor_of this (10 1)))\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 6 col 40\n\n                (not (neighbor_of this (1 1)))\n                                       ^\nExpected one of: \n\t* VAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects of color O to G, B, or R based on their position and their neighbors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) G)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 20 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the non-grey objects that are adjacent to grey objects, and border other non-grey objects with red, green, blue, and yellow colors based on the initial color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) X))\\n                (neighbor_of this other)\\n                (color_equals (color_of other) X)\\n            )\\n        )\\n        (apply\\n            (update_color\\n                (or\\n                    (and (color_equals (color_of this) O) G)\\n                    (and (color_equals (color_of this) B) R)\\n                    (and (color_equals (color_of this) R) B)\\n                    G\\n                )\\n            )\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (add_border R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (color_equals (color_of other) X)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor groups of Os to different colors (depending on their position), and groups of objects neighboring the Os, extending the pattern recursively.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (or\\n                    (column_equals (column_of this) 1)\\n                    (column_equals (column_of this) 2)\\n                    (column_equals (column_of this) 3)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (or\\n                    (column_equals (column_of this) 4)\\n                    (column_equals (column_of this) 5)\\n                    (column_equals (column_of this) 6)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (or\\n                    (column_equals (column_of this) 7)\\n                    (column_equals (column_of this) 8)\\n                    (column_equals (column_of this) 9)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 10 col 21\n\n                    (column_equals (column_of this) 3)\n                    ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor objects based on a specific pattern: objects initially colored 'O' are recolored based on their position in the grid to 'R', 'B', or 'G'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of this) O)\\n        )\\n        (apply\\n            (update_color (if \\n                (column_equals (column_of this) even)\\n                R\\n                (if \\n                    (neighbor_of this other)\\n                    G\\n                    B\\n                )\\n            ))\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'i' in the current parser context, at line 8 col 28\n\n            (update_color (if \n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move the objects of color O and recolor them along with their neighboring objects to different colors.\",\n    \"code\": \"(do \\n    (rule \\n        (vars (this other)) \\n        (filter \\n            (or \\n                (color_equals (color_of this) O) \\n                (and \\n                    (neighbor_of this other) \\n                    (color_equals (color_of other) O) \\n                ) \\n            ) \\n        ) \\n        (apply \\n            (update_color (color_equals (color_of this) O)? G : R) \\n        ) \\n    ) \\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'c' in the current parser context, at line 14 col 28\n\n            (update_color (color_equals (color_of this) O)? G : R) \n                           ^\nExpected one of: \n\t* COLOR_OF\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Move all objects of color O toward the leftmost column such that they maintain their neighbors otherwise move them to the rightmost column. Recolor all objects to color R, G, B as per the columns they align with.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (column_equals (column_of other) 0)\\n            )\\n        )\\n        (apply\\n            (move_node left)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (column_equals (column_of other) max)\\n            )\\n        )\\n        (apply\\n            (move_node right)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) 0)\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) max)\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (column_equals (column_of this) middle)\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 'm' in the current parser context, at line 19 col 50\n\n       (column_equals (column_of other) max)\n                                        ^\nExpected one of: \n\t* LPAR\n\t* COLUMN\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all 'O' objects to a unique color if they are neighboring 'X' objects. The new color depends on their position: top-left 'O's become G, top-middle 'O's become B, top-right and left-corner 'O's become R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color G)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of other) X)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color R)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    }
]