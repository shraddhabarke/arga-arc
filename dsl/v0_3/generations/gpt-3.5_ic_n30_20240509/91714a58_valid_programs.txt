(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (size_equals (size_of this) 2)
                (and
                    (neighbor_of this x)
                    (color_equals (color_of x) X)
                )
            )
        )
        (apply
            (extend_node (direction_of x) false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) F)
        )
        (apply
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this x)
                    (color_equals (color_of x) A)
                )
            )
        )
        (apply
            (extend_node (direction_of x) false)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (extend_node up true)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (update_color O)
            (move_node left)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) R)
        )
        (apply
            (update_color O)
        )
    )
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) G)
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (rotate_node 90)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) B)
        )
        (apply
            (update_color O)
            (extend_node left false)
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (not (or (color_equals (color_of this) A) (color_equals (color_of this) G)))
                (and
                    (neighbor_of this x)
                    (or (color_equals (color_of x) A) (color_equals (color_of x) G))
                )
            )
        )
        (apply
            (move_node_max (direction_of x))
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (not (color_equals (color_of this) O))
        )
        (apply
            (move_node right)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter)
        (apply
            (move_node_max (direction_of this))
        )    
    )
)

(do
    (rule
        (vars (this))
        (filter
            (color_equals (color_of this) A)
        )
        (apply
            (move_node_max down)
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (color_equals (color_of this) G)
                (and
                    (neighbor_of this x)
                    (color_equals (color_of x) R)
                )
            )
        )
        (apply
            (extend_node (direction_of x) false)
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (color_equals (color_of this) R)
                (and
                    (neighbor_of this x)
                    (color_equals (color_of x) G)
                )
            )
        )
        (apply
            (extend_node (direction_of x) false)
            (rotate_node 180)
            (update_color B)
        )
    )
)

(do
    (rule
        (vars (this))
        (filter
            (height_equals (height_of this) odd)
        )
        (apply
            (move_node down)
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (size_equals (size_of this) max)
                (or
                    (and (neighbor_of this x) (color_equals (color_of x) G))
                    (and (neighbor_of this x) (color_equals (color_of x) Y))
                )
            )
        )
        (apply
            (extend_node (direction_of x) false)
            (update_color A)
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter)
        (apply
            (extend_node (direction_of x) false)
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (not (color_equals (color_of this) G))
                (and
                    (neighbor_of this x)
                    (color_equals (color_of x) G)
                )
            )
        )
        (apply
            (move_node_max (direction_of x))
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (not (color_equals (color_of this) G))
                (and
                    (neighbor_of this x)
                    (color_equals (color_of x) G)
                )
            )
        )
        (apply
            (move_node_max (direction_of x))
            (update_color G)
        )    
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (not (color_equals (color_of this) W))
                (and
                    (neighbor_of this x)
                    (color_equals (color_of x) W)
                )
            )
        )
        (apply
            (move_node_max (direction_of x))
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (color_equals (color_of this) B)
                (and
                    (neighbor_of this x)
                    (color_equals (color_of x) R)
                )
            )
        )
        (apply
            (move_node_max (direction_of x))
        )
    )
)

(do
    (rule
        (vars (this x))
        (filter
            (and
                (color_equals (color_of this) A)
                (and
                    (neighbor_of this x)
                    (size_equals (size_of x) max)
                )
            )
        )
        (apply
            (move_node_max (direction_of x))
        )    
    )
)