{
    "completions": [
        {
            "nl_description": "Recolor objects of color X that are not on the edge to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (not (or\n                    (or (column_equals (column_of this) 0) (column_equals (column_of this) 9))\n                    (or (column_equals (column_of this) 10) (column_equals (column_of this) 11))\n                ))\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of size 3 that are surrounded by other objects to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 3)\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects enclosed by X to color R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (shape_equals (shape_of this) enclosed)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects of color X that are neighbors of the objects having a border of X except itself.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (neighbor_of this other)\n                    (not (color_equals (color_of other) X))\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the rightmost three columns to R if they are surrounded by X on all sides except for one.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor inner objects of square shape to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (shape_equals (shape_of this) enclosed)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inner cells of each 5x5 square to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (width_equals (width_of this) 5)\n                (and\n                    (height_equals (height_of this) 5)\n                    (neighbor_of this other)\n                )\n            )\n        )\n        (apply\n            (fill_rectangle R false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of size 3 to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 3)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all inner cells of objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (neighbor_of this this)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the interior part of the rectangles of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (shape_equals (shape_of this) enclosed)\n            )\n        )\n        (apply\n            (fill_rectangle R false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inner cells of objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor inner objects within X shapes to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (and\n                    (not (color_equals (color_of this) X))\n                    (not (color_equals (color_of this) O))\n                )\n                (size_equals (size_of this) 1)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all the neighboring 'X' objects in a square shape to 'R'.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (shape_equals (shape_of this) square)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the middle columns of all objects of color X to color R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects that are neighbors of objects with color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the neighboring objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the region of size 3x3 inside objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (size_equals (size_of this) 25)\n            )\n        )\n        (apply\n            (fill_rectangle R false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects that are neighbors of objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all internal parts of the objects with color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all the objects surrounded by the largest object to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (and\n                    (color_equals (color_of other) X)\n                    (size_equals (size_of other) max)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects adjacent to the object of color X, moving only towards the X boundary, to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (move_node (direction_of other))\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects that are 3 cells wide to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (width_equals (width_of this) 3)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inner 3x3 square of an enclosed 5x5 square object to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (size_equals (size_of this) 5)\n                (shape_equals (shape_of this) enclosed)\n            )\n        )\n        (apply\n            (fill_rectangle R false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the 3x3 parts within larger shapes to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (size_equals (size_of this) 9)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the neighbors of the center columns of color X to color R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (column_equals (column_of this) center)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects with size of 3 and those with height of 3 to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or\n                (size_equals (size_of this) 3)\n                (height_equals (height_of this) 3)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor a 3x3 square within objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (size_equals (size_of this) 3)\n                (color_equals (color_of this) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all the objects enclosed within the largest object to color R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (shape_equals (shape_of this) enclosed)\n                (size_equals (size_of other) max)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Update the color of objects adjacent to 'X' to 'R' while preserving the boundaries of 'X'.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all the objects that are adjacent to objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of size 3 to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 3)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects of color X to R if they are neighboring the object of maximum size.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (neighbor_of this other)\n                    (size_equals (size_of other) max)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all the inner regions of the 'X' objects to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (shape_equals (shape_of this) enclosed)\n                (color_equals (color_of this) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the interior pixels of all 'X' objects, except their borders, to color 'R'.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the innermost rows and columns of the objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (or\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inner 3x3 regions of size 5 enclosed areas to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (shape_equals (shape_of this) enclosed)\n                (size_equals (size_of this) 5)\n            )\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all the objects of size 3 that are adjacent to objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 3)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inner objects in squares of color X to color R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of other) X)\n                (and\n                    (color_equals (color_of this) X)\n                    (neighbor_of this other)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of size 3 to R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 3)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the middle inner rows of all objects to red.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (size_equals (size_of this) max)\n                (not (or\n                    (column_equals (column_of this) 0)\n                    (column_equals (column_of this) 4)\n                ))\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the middle column of each X row or rectangle to R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all the horizontal neighbors of objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (and\n                    (color_equals (color_of other) X)\n                    (column_equals (column_of this) (column_of other))\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the middle column of the objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (column_equals (column_of this) odd)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects surrounded by other objects of the same type to color R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) (color_of other))\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of width 3 to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (width_equals (width_of this) 3)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of size 3 to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 3)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all enclosed objects of size 3 to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (size_equals (size_of this) 3)\n                (shape_equals (shape_of this) enclosed)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the second and fourth rows in objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (or\n                    (and (column_equals (column_of this) 1) (column_equals (column_of this) 2))\n                    (and (column_equals (column_of this) 3) (column_equals (column_of this) 4))\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all inner objects enclosed by larger objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of other) X)\n                (shape_equals (shape_of other) enclosed)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects of size 3 that are within the larger objects of color X, to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 3)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Color the inner 3x3 sections of all objects with color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or\n                (and\n                    (height_equals (height_of this) 5)\n                    (width_equals (width_of this) 5)\n                )\n                (and\n                    (height_equals (height_of this) 7)\n                    (width_equals (width_of this) 7)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the third row and fourth column of object X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (or\n                    (column_equals (column_of this) 3)\n                    (column_equals (column_of this) 4)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor diagonal neighbors of any object of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (or\n                    (neighbor_of this other)\n                    (neighbor_of other this)\n                )\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the innermost pixels of all grid spanning objects to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (shape_equals (shape_of this) enclosed)\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the internal objects within the object of maximum size to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (size_equals (size_of other) max)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all inner pixels of objects with color X to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of the middle parts of objects to R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the second row of 'X' objects to 'R', except for the edges, and the fourth column of 'X' objects to 'R' in the middle rows.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and \n                    (column_equals (column_of this) 4)\n                    (or\n                        (height_equals (height_of this) 4)\n                        (height_equals (height_of this) 5)\n                    )\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor interior part of object X that has thickness of 3, with color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inside rows of the objects of color X, except the edges, with the color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) O)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the middle horizontal segment of the X objects to R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (height_equals (height_of this) max)\n                    (size_equals (size_of this) 3)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the middle three cells of non-edge horizontal rows in a color X object to R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (height_equals (height_of this) 3)\n                    (column_equals (column_of this) center)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the second column from the left and the second column from the right of all objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color to R for all objects enclosed horizontally, and vertically aligned with objects already having color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (shape_equals (shape_of this) enclosed)\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the interior pixels of the column objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor a row inside objects of size 7 to R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 7)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the interior of the enclosed objects to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (shape_equals (shape_of this) enclosed)\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the center 3x3 cells of all X-blocks to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (height_equals (height_of this) 5)\n                (width_equals (width_of this) 5)\n            )\n        )\n        (apply\n            (move_node (direction_of this))\n            (fill_rectangle R false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects that are neighbors of the object of color X",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor internal columns of objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inner part of objects of color X to R.",
            "code": "(do \n    (rule \n        (vars (this other)) \n        (filter \n            (and \n                (color_equals (color_of this) X) \n                (and \n                    (neighbor_of this other) \n                    (color_equals (color_of other) X) \n                ) \n            ) \n        ) \n        (apply \n            (update_color R) \n        ) \n    ) \n)"
        },
        {
            "nl_description": "Recolor the interior pixels of all enclosed shapes to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (shape_equals (shape_of this) enclosed)\n        )\n        (apply\n            (fill_rectangle R false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the middle rows of 'X' objects of size greater than 2 to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (size_equals (size_of this) max)\n                (neighbor_of this this)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the middle 5 columns of all objects of color X to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the second and third columns from the center of the largest object to color R if they are next to a column of color X",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (column_equals (column_of this) (column_of other))\n                (and\n                    (color_equals (color_of other) X)\n                    (and\n                        (or\n                            (column_equals (column_of this) even)\n                            (column_equals (column_of this) odd)\n                        )\n                        (size_equals (size_of other) max)\n                    )\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color X to color R, except their border.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all 3x3 squares located within larger grids to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 9)\n                (and\n                    (neighbor_of this other)\n                    (size_equals (size_of other) max)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the interior pixels of the largest 'X' objects to 'R'.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (size_equals (size_of this) max)\n                (color_equals (color_of this) X)\n            )\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inner portion of all square shapes except borders to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (shape_equals (shape_of this) square)\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the enclosed areas within X with color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) O)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the center three cells of each object to red (R).",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the 3x3 area within the object with color X, excluding its borders, to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (fill_rectangle R false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the rows within objects of color X, including the border, to color R, but leave the borders unchanged.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the row segments of objects that are not on the border to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (neighbor_of this other))\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the middle three cells of each horizontal line of size greater than 3 to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) max)\n        )\n        (apply\n            (update_color R)\n            (update_color (color_of this)) ;; Maintaining original color for other cells in the line\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the interior objects that are bound by X to color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (shape_equals (shape_of this) enclosed)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor inner most elements of enclosed shapes to red",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (shape_equals (shape_of this) enclosed)\n                (shape_equals (shape_of other) enclosed)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the interiors of the objects of color X to color R, except for their borders.",
            "code": "(do (rule (vars (this)) (filter (color_equals (color_of this) X)) (apply (hollow_rectangle R))))"
        },
        {
            "nl_description": "Recolor the second, third, and fourth vertical lines from the middle of each X object to red.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (or\n                    (neighbor_of this other)\n                    (and\n                        (neighbor_of other this)\n                        (color_equals (color_of other) X)\n                    )\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the innermost 3x3 region of each object of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the neighbors of X with R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects adjacent to an object in the same row but separated by a single column with the color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 1)\n                (and\n                    (neighbor_of this other)\n                    (and\n                        (not (neighbor_of this other))\n                        (column_equals (column_of other) (column_of this))\n                    )\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the second-to-last row of all enclosed shapes to red.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (shape_equals (shape_of this) enclosed)\n        )\n        (apply\n            (move_node up)\n            (move_node up)\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all central objects in rows of 3 to R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 3)\n                (and\n                    (neighbor_of this other)\n                    (size_equals (size_of other) 5)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color to R of the internal objects with neighbors with different color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 1)\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color to R for the objects of shape 'square' that are primarily made of color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (shape_equals (shape_of this) square)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the three center pixels in vertical and horizontal lines within the X objects to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (or\n                    (and\n                        (column_equals (column_of this) odd)\n                        (or\n                            (and\n                                (column_equals (column_of this) 2)\n                                (size_equals (size_of this) 3)\n                            )\n                            (column_equals (column_of this) 4)\n                        )\n                    )\n                    (and\n                        (column_equals (column_of this) 4)\n                        (or\n                            (and\n                                (size_equals (size_of this) 3)\n                                (column_equals (column_of this) 2)\n                            )\n                            (and\n                                (size_equals (size_of this) 5)\n                                (column_equals (column_of this) 6)\n                            )\n                        )\n                    )\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the third column from the left to the third column from the right in all rows of any objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (column_equals (column_of this) 3)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the internal cells of objects with color R if they are not on the edge.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (not (neighbor_of this other))\n                    (color_equals (color_of other) O)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the central objects of each cluster to color R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and \n                (not (neighbor_of this other))\n                (width_equals (width_of this) 5)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the inner part of the horizontal lines of size 5 with color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 5)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color to R for all internal cells of objects of color X, except for their border cells.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (or\n                    (not (neighbor_of this other))\n                    (not (color_equals (color_of other) X))\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the three vertical middle cells of any 3x3 area to R, while leaving the middle row unchanged.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (not (column_equals (column_of this) even))\n                    (not (column_equals (column_of this) odd))\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects which are 1-cell wide and 3-cells long (vertically or horizontally) to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or\n                (and\n                    (width_equals (width_of this) 1)\n                    (height_equals (height_of this) 3)\n                )\n                (and\n                    (width_equals (width_of this) 3)\n                    (height_equals (height_of this) 1)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Update the color to R for the objects that are adjacent to an object of size 11.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (size_equals (size_of other) 11)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the central region of objects to color R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) X)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) O)\n                )\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor interior pixels of objects of color X to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (hollow_rectangle R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the middle column to color R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) center)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        }
    ]
}