{
    "completions": [
        {
            "nl_description": "Move all the cyan objects one step up.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1 from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except for those containing the letter 'X'.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid by changing their color to O.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects from the grid except for those of color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1 and color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (size_equals (size_of this) 1)\n                (color_equals (color_of this) C)\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1 from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all adjacent objects of the same color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of this) (color_of other))\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are not neighbors to any other object.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (not (neighbor_of this other))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except for the largest one.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (size_equals (size_of this) max))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those colored X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color C to the nearest border.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node_max left)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are 'C'.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color X, Y or F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or\n                (color_equals (color_of this) X)\n                (or\n                    (color_equals (color_of this) Y)\n                    (color_equals (color_of this) F)\n                )\n            )\n        )\n        (apply\n            (noop)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (not\n                (or\n                    (color_equals (color_of this) X)\n                    (or\n                        (color_equals (color_of this) Y)\n                        (color_equals (color_of this) F)\n                    )\n                )\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are not neighbors of any other object.",
            "code": "(do (rule (vars (this other)) (filter (not (neighbor_of this other))) (apply (noop))))"
        },
        {
            "nl_description": "Remove all objects of color C",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are not of color X and neighbor to an object of color X.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (neighbor_of this other)\n            )\n        )\n        (apply (update_color O))\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (noop)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node_max left)\n            (move_node_max right)\n            (move_node_max up)\n            (move_node_max down)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color C one step up.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove objects if they are neighbors of the object of a particular color. In this case, the color is C.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of other) C)\n                (neighbor_of this other))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (extend_node up false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are not connected to other objects of the same color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (neighbor_of this other))\n                (color_equals (color_of this) (color_of other))\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove the objects colored C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node_max up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color C to the nearest position of the same color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node_max right)\n            (move_node_max left)\n            (move_node_max up)\n            (move_node_max down)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of fuchsia color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects which have a neighbor of the same color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (neighbor_of this other)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Filter color C objects and move them up.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not \n                (color_equals (color_of this) X)\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects from the grid except those whose color is not equal to O.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) O))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are neither of color C nor color F nor color X nor color Y.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (not (color_equals (color_of this) C))\n                (and\n                    (not (color_equals (color_of this) F))\n                    (and\n                        (not (color_equals (color_of this) X))\n                        (not (color_equals (color_of this) Y))\n                    )\n                )\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those with color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move each 'C' object to be replaced within the grid with 'O'.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color different than X and F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (not (color_equals (color_of this) F))\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (noop)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are not of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) C))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of size 1 step up.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color other than O to the top row.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) O))\n        )\n        (apply\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "For all objects, move vertically if they are next to an object of the same color, and then recolor whole grid to 'O'.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of this) (color_of other))\n            )\n        )\n        (apply\n            (move_node up)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are entirely composed of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects having color 'C' from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that have the color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that contain the color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that touch another object.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (neighbor_of this other)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects with color different than X or F",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (not (color_equals (color_of this) F))\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color different than X and F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (not (color_equals (color_of this) F))\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects neighboring to C or X.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (or\n                (neighbor_of this other)\n                (or\n                    (color_equals (color_of other) C)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all cyan objects to their background color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except the objects of the initial row.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (column_equals (column_of this) (column_of this)))\n        )\n        (apply\n            (noop)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects from the grid except for those of color Y and F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not\n                (or\n                    (color_equals (color_of this) Y)\n                    (color_equals (color_of this) F)\n                )\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color different than O to the position where the object with color O is located if they are neighbors of it.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) O))\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) O)\n                )\n            )\n        )\n        (apply\n            (move_node (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C if they are not neighbors of color X.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) C)\n                (not\n                    (neighbor_of this other)\n                )\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove objects that are not blue (C) or cyan (F).",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not\n                (or\n                    (color_equals (color_of this) C)\n                    (color_equals (color_of this) F)\n                )\n            )\n        )\n        (apply\n            (move_node_max (direction_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all connected clusters of objects of a given color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply\n            (noop)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply\n            (noop)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply\n            (noop)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply\n            (noop)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except objects of color X and F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (or (color_equals (color_of this) X) (color_equals (color_of this) F)))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove blue (C) objects from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all cyan objects to an unoccupied position above where they are and remove all objects if unoccupied.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of size 1 up one step.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects not of size 1 unaffected by the filter",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (size_equals (size_of this) 1))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects with color C through brightness enhancement.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color O))\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except the object of color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those that are `X` or `Y`, and objects that neighbor them.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (or\n                (color_equals (color_of this) X)\n                (and\n                    (neighbor_of this other)\n                    (not (or\n                        (color_equals (color_of this) X)\n                        (color_equals (color_of this) Y)\n                    ))\n                )\n            )\n        )\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all the objects of size 1.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (noop)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects, but only when not neighboring with other objects",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (not (neighbor_of this other))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move objects of color C whose sizes are greater than 1 to the edge of the grid and remove all other objects.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (color_equals (color_of this) C)\n                (not (size_equals (size_of this) 1))\n            )\n        )\n        (apply\n            (move_node_max (direction_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those labeled with 'X' or 'F'.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or\n                (color_equals (color_of this) X)\n                (color_equals (color_of this) F)\n            )\n        )\n        (apply\n            (noop)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of size 1.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (size_equals (size_of this) 1))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color Y",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) Y))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all cyan objects to the left away from other objects.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) C)\n                (not (neighbor_of this other))\n            )\n        )\n        (apply\n            (move_node left)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all gray objects to the top of the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node_max up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove objects of size 1 from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are neighbors to at least one other object of the same color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (neighbor_of this other)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove any object that is not enclosed.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (not (shape_equals (shape_of this) enclosed))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) C))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color C to the left until they hit another object or the edge of the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (move_node_max left)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color different than O to the edges while ensuring no overlaps.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) O))\n        )\n        (apply\n            (move_node_max right)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are not of color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color different than C and F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (or (color_equals (color_of this) C) (color_equals (color_of this) F)))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all C colored cells, leaving the other cells intact.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove the objects from columns 1 and 9 by recoloring them to O.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or\n                (column_equals (column_of this) 1)\n                (column_equals (column_of this) 9)\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) C))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that do not overlap with other objects.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (not (neighbor_of this other))\n        )\n        (apply\n            (noop)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color different than C, toward the object of color C, if they are neighbors of it.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) C))\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) C)\n                )\n            )\n        )\n        (apply\n            (move_node_max (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects from position (1, 1) through (n, 1) except the object of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (or\n                (color_equals (color_of this) C)\n                (or\n                    (column_equals (column_of this) 1)\n                    (color_equals (color_of this) O)\n                )\n            ))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except for the ones of color X and F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or\n                (color_equals (color_of this) X)\n                (color_equals (color_of this) F)\n            )\n        )\n        (apply\n            (noop)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (not\n                (or\n                    (color_equals (color_of this) X)\n                    (color_equals (color_of this) F)\n                )\n            )\n        )\n        (apply\n            (move_node_max up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove objects of color C and X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or (color_equals (color_of this) C) (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (noop)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects towards the leftmost object in the same row and recolor them to the color O.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) O))\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) O)\n                )\n            )\n        )\n        (apply\n            (move_node_max (direction_of other))\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all cyan objects",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except the color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects that are not blue.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n           (not (color_equals (color_of this) C))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove the objects of color C",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects, except those of color C, one step to the top.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) C))\n        )\n        (apply\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Delete all objects by setting their color to background color 'O'.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects connected to 'C' from the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) C)\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )    \n    )\n)"
        },
        {
            "nl_description": "Remove all objects from the grid except those with color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects colored C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color O.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) O))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those with color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (not (color_equals (color_of this) X)))\n        (apply (update_color O))\n    )\n)"
        },
        {
            "nl_description": "Move all objects one step up.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (move_node up)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) C))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of size 1.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 1)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects completely from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move objects of color C towards objects of color different than O.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) C)\n                (not (color_equals (color_of other) O))\n            )\n        )\n        (apply\n            (move_node (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except the objects of size 1 and color F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not\n                (or\n                    (size_equals (size_of this) 1)\n                    (color_equals (color_of this) F)\n                )\n            )\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects of color C from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Remove all objects except those of color X and color Y from the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (or\n                (color_equals (color_of this) X)\n                (color_equals (color_of this) Y)\n            ))\n        )\n        (apply\n            (update_color O)\n        )\n    )\n)"
        }
    ]
}