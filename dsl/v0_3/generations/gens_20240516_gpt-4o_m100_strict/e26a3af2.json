{
    "completions": [
        {
            "nl_description": "Change the color of all the objects to be like the color of the largest object in the grid",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (and (size_equals (size_of this) (size_of other)) (size_equals (size_of other) max)))\n        (apply (update_color (color_of other)))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their respective row color majority.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color of the first object in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their most frequently occurring color in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their dominant color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color B, G, C, R, or A to the most frequent color B.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (or\n                (color_equals (color_of this) B)\n                (or\n                    (color_equals (color_of this) G)\n                    (or\n                        (color_equals (color_of this) C)\n                        (or\n                            (color_equals (color_of this) R)\n                            (color_equals (color_of this) A)\n                        )\n                    )\n                )\n            )\n        )\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the same colors as their initial color if their initial color is C, keeping other colors unchanged.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n        )\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Merge all objects of the same color into one larger object of that color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Move and recolor all objects to match the dominant color in each row.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their dominant color",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to a uniform color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the same color as their first element.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all non-Y objects to their respective first color in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (not (color_equals (color_of this) Y))\n        )\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the same color as the background.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter)\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects in the grid to the color of the largest object in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (size_equals (size_of this) max)\n        )\n        (apply\n            (update_color (color_of this))\n        )\n    )\n    (rule\n        (vars (this other))\n        (filter)\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the grid to the majority color in their respective row.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (neighbor_of this other))\n        (apply (update_color (color_of other)))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the grid to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the same color as the object with maximum size in each input grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (size_equals (size_of other) max)\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their first color found in the input grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to match the most frequent color in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (color_equals (color_of other) R)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to match the color of the surrounding objects, resulting in uniformly colored areas.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter)\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color of the majority object in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects to match their initial color",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects to match the color of the largest object in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (neighbor_of this other)\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects to align uniformly with their color group.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) B))\n        (apply (move_node_max left))\n    )\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) C))\n        (apply (move_node_max left))\n    )\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) G))\n        (apply (move_node_max left))\n    )\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) R))\n        (apply (move_node_max up))\n    )\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) A))\n        (apply (move_node_max down))\n    )\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) F))\n        (apply (move_node_max right))\n    )\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) W))\n        (apply (move_node_max up))\n    )\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) Y))\n        (apply (move_node_max down))\n    )\n    (rule\n        (vars (this other))\n        (filter (color_equals (color_of this) X))\n        (apply (move_node_max down))\n    )\n)"
        },
        {
            "nl_description": "Move all objects except those of color X to color R",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (not (color_equals (color_of this) X)))\n        (apply (update_color R))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color of the first object in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (neighbor_of this other))\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their respective majority color in their row.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (neighbor_of this other))\n        (apply (update_color (color_of other)))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the most frequent color in the grid",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color they appear most frequently in.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color different than R, toward any object of color R, if they are neighbors of it.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) R))\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) R)\n                )\n            )\n        )\n        (apply\n            (move_node_max (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to match their background color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their majority color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to a single color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their predominant color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Merge all objects of same color into one object",
            "code": "(do (rule (vars (this other)) (filter (and (color_equals (color_of this) (color_of other)) (neighbor_of this other))) (apply (move_node_max (direction_of other)))))"
        },
        {
            "nl_description": "Recolor all objects in the grid to the color B.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all cells in the grid to their original color if they are not already colored R.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) R))\n        )\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the entire grid to match the color of the most frequent object in the grid",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter)\n        (apply\n            (update_color C)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects except those colored B and C to B.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (not (color_equals (color_of this) B))\n                (not (color_equals (color_of this) C))\n            )\n        )\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color corresponding to the background.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this other))\n        (filter\n            (color_equals (color_of this) R)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all the rows to the color of the first object in each row.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the grid that are not color C to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) C))\n        )\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects with the same color as their neighbors",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (neighbor_of this other)\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to match the most frequent color in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all objects to their background color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color O)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects to the most frequent color in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to match the most dominant color in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects to match the color of the largest object.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (size_equals (size_of other) max)\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor every object to color B regardless of their initial color or type.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the grid to the object color of majority.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color of the most frequent object in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects except for the color C to B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) C))\n        )\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change boundary cells of all objects to the most frequent color in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (add_border R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the most frequent color in the corresponding row of the output grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all blue objects to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) B)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects to the nearest object of color R.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (color_equals (color_of other) R)\n        )\n        (apply\n            (move_node_max (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their predominant color",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their primary color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to match the most frequent color in the input grid, with ties broken by selection of the widest object.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the entire grid uniformly to the color of the dominant object.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor specific objects to match the color of their neighbors of a similar size",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (and (neighbor_of this other) (size_equals (size_of this) (size_of other))))\n        (apply (update_color (color_of other)))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color of the first character in the object's row",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the same color as the most frequent object color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color of the surrounding larger object in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (neighbor_of this other)\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their most common color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (and (not (color_equals (color_of this) O)) (not (color_equals (color_of this) X))))\n        (apply (update_color (color_of this)))\n    )\n)"
        },
        {
            "nl_description": "Recolor the entire grid so that each object has a uniform color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color that appears most frequently.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color C)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color of the object with the maximum size.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (size_equals (size_of other) max)\n            )\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to match the color of the most commonly occurring objects in the grid (majority color).",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color matching the majority color of all objects.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Normalize the color of all objects in the grid",
            "code": "(do\n  (rule\n    (vars (this))\n    (filter)\n    (apply \n      (update_color (color_of this))\n    )\n  )\n)"
        },
        {
            "nl_description": "Recolor everything to its own color",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects to match the color of the first object of each row.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (column_equals (column_of other) 1)\n            )\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the grid to their majority color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their dominant color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color R and its neighbors to R",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (or\n                (color_equals (color_of this) R)\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their background color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the grid to their surrounding dominant color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (neighbor_of this other))\n        (apply (update_color (color_of other)))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to have a consistent color for each already existing color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color R))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects with color C to color C and then recolor all remaining objects to their original colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects to be consistent with the majority color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n            (apply\n                (update_color R)\n            )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the color of the background (B).",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all colors to match the most frequent color in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their most dominant color in the grid, and if the object's dominant color is not present in its surroundings, recolor it to the most dominant color in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (not (neighbor_of this other))\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects containing color X to a regular color, with no other transformation.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects that are not C or B to the color B",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (and\n                (not (color_equals (color_of this) C))\n                (not (color_equals (color_of this) B))\n            )\n        )\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each cell on the grid to the most frequent color in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the grid to B.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of specific objects: B, C, G, R to a uniform color (B, C, G or R respectively) in all grids.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color R))\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects to match the top-left object's color in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) (color_of other))\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color B)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their dominant color",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the same color as their neighboring object, unifying the grid visually.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (neighbor_of this other))\n        (apply (update_color (color_of other)))\n    )\n)"
        }
    ]
}