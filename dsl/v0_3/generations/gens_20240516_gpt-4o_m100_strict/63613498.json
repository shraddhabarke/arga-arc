{
    "completions": [
        {
            "nl_description": "Change the color of all objects of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects adjacent to X to also be X",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor objects that are color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all F objects to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of objects of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects of color F to X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all instances of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all the objects of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects of size 2 to X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects with color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change color to X for all objects that overlap with another X-colored object.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of other) X)\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color X)\n        )    \n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all F objects to X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of object F to X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all F colored objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the object F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all regions of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color F towards the object of color X, if they are neighbors of it.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) F)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (move_node (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Transform all objects of color F into color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all blue objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) B)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of F objects to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all occurrences of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color F toward the object of color X, if they are neighbors of it.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) F)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (move_node_max (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter \n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color different than X to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change color of F objects to X.",
            "code": "(do (rule (vars (this)) (filter (color_equals (color_of this) F)) (apply (update_color X))))"
        },
        {
            "nl_description": "Change the color of all objects to X except those that already have the color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (not (color_equals (color_of this) X))\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color different than X one step toward the object of color X, without overlapping.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (move_node (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Move all objects of color F towards the object of color X, if they are neighbors of it.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (color_equals (color_of this) F)\n                (and\n                    (neighbor_of this other)\n                    (color_equals (color_of other) X)\n                )\n            )\n        )\n        (apply\n            (move_node_max (direction_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of F objects to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of size 2 to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change color of all objects of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor objects of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor objects of color F to color X.",
            "code": "(do (rule (vars (this)) (filter (color_equals (color_of this) F)) (apply (update_color X))))"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Extend all objects of size 2 toward the object of width maximum, without overlapping.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) 2)\n                (and\n                    (neighbor_of this other)\n                    (width_equals (width_of other) max)\n                )\n            )\n        )\n        (apply\n            (extend_node (direction_of other) false)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the object of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects of color F to X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects to color X that are of color F",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of the color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects that neighbor an X to X.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (neighbor_of this other)\n                (color_equals (color_of other) X)\n            )\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Convert all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change all objects of color F to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Extend all objects of color F to the right, recoloring the extended parts to color X, without overlapping.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (extend_node right false)\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of size 2 to color X.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor objects of size 2 to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to color X if they have the same size as 2 or more neighbor objects.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (size_equals (size_of this) (size_of other))\n                (neighbor_of this other)\n            )\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects of color F to color X",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n)"
        }
    ]
}