{
    "completions": [
        {
            "nl_description": "Recolor all columns while preserving each column's color pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Transform the columns to change their colors top to bottom respectively.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column in the grid with specific colors, in the same sequence for each pair.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns from top to bottom with the corresponding colors of the first row.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each object to a new specified color based on its initial color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their respective positions in the predefined color sequence: first column to Yellow, second column to Grey, and third column to Fuchsia.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column with a specific color pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to some specific color according to their initial color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their respective specific output colors based on their input color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    ) )"
        },
        {
            "nl_description": "Recolor each column with a specific color pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n            (update_color F)\n            (update_color B)\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n            (update_color Y)\n            (update_color W)\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n            (update_color W)\n            (update_color R)\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns of objects based on their initial color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor columns to new specified colors",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all the columns of the objects sequentially from left to right, with the specified new colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to follow the same pattern as the corresponding columns",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) even))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) odd))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column with a specific target color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to a specific pattern of colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all objects in the grid to form the new color pattern.",
            "code": "(do \n    (rule (vars (this)) \n        (filter) \n        (apply \n            (update_color Y) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color X) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color F) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color F) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color Y) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color W) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color B) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color W) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color R) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color C) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color G) \n        )\n    )\n    (rule (vars (this)) \n        (filter)\n        (apply \n            (update_color F) \n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each object based on its original color: G to Y, B to X, R to F, C to W, F to R, W to C, Y to G.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n)"
        },
        {
            "nl_description": "Recolor all rows to the respective colors in the output grids.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor columns to the colors of the top row.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (move_node up)\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the first column to color Y, the second column to color X, and the third column to color F for all grids.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor objects to the corresponding target color based on their initial color. Specifically, G to Y, B to X, R to F, C to W, F to R, X to B, W to C, and Y to G.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns in the grids according to a predefined pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor the columns in the grids with new colors: first to last according to the original color order.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor columns of objects from top to bottom.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns of the grids according to their columns.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to new specified colors following the pattern in each column.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n            (update_color X)\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n            (update_color Y)\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n            (update_color W)\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n            (update_color W)\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to a new set of colors maintaining their column positions",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor objects in each column to sequentially different colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column of objects with different colors according to a predefined pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns to colors Y, X, F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the colors in each column in the specified sequence.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects according to a fixed pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns of objects to new colors, column-wise.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column to a new color.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor columns from left to right, with specific colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor each object to the color according to the given pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects based on the following mapping: G to Y, B to X, R to F, C to W, Y to G, W to C, X to B, F to R",
            "code": "(do (rule (vars (this)) (filter (color_equals (color_of this) G)) (apply (update_color Y))) (rule (vars (this)) (filter (color_equals (color_of this) B)) (apply (update_color X))) (rule (vars (this)) (filter (color_equals (color_of this) R)) (apply (update_color F))) (rule (vars (this)) (filter (color_equals (color_of this) C)) (apply (update_color W))) (rule (vars (this)) (filter (color_equals (color_of this) Y)) (apply (update_color G))) (rule (vars (this)) (filter (color_equals (color_of this) W)) (apply (update_color C))) (rule (vars (this)) (filter (color_equals (color_of this) X)) (apply (update_color B))) (rule (vars (this)) (filter (color_equals (color_of this) F)) (apply (update_color R))))"
        },
        {
            "nl_description": "Recolor all objects to a specific set of target colors, consistently changing each color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) G)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) B)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) R)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) F)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) W)\n        )\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) Y)\n        )\n        (apply\n            (update_color G)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column with uniform colors: first column to color Y, second column to color X, third column to color F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor each column with a specific sequence of colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to a fixed new color, one color for each column.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column with new specified colors in the same column order for each grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in the grid to specified new colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns with specific color order.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects, changing each color to a specific new one.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y)))\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X)))\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F)))\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W)))\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R)))\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B)))\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C)))\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G)))\n)"
        },
        {
            "nl_description": "Recolor all objects with specific colors based on their original colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects as per the given mapping.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns to a predefined color sequence.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this other))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this other))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Sequentially update the colors of all objects in the grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column with a specific set of colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Change the color of every column preserving the pattern across all rows.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor each column using a specific sequence of colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to new specified colors in a specific pattern: (Y, X, F), (F, Y, W), (B, W, R), (C, G, F)",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply\n            (update_color R)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the columns in order, from the leftmost to the rightmost, with the second row indicating the new colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor columns sequentially.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column to a specific set of colors for all objects in the column.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to different colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n)"
        },
        {
            "nl_description": "Change the color of each column to a specific color according to the column.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor columns of objects to specific corresponding colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor objects based on their initial color: G to Y, B to X, R to F, R to F, G to Y, C to W, X to B, C to W, Y to G, and W to C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to a fixed color depending on their current color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n)"
        },
        {
            "nl_description": "Update the colors of the objects in a vertical stripe pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns of objects with different colors from top to bottom.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in each column to specific target colors for that column.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor each column with different colors in the same order for all objects.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor the objects with colors in columns to new specified colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to the specified color repeatedly for each input grid.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column with different specified colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) even))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) odd))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns to a specific sequence of colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column to a different set of colors, where the first column is recolored to Y, F, B, and C; the second column is recolored to X, Y, W, and G; the third column is recolored to F, W, R, and F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects in each column with a specific sequence of colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n            (update_color F)\n            (update_color B)\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n            (update_color Y)\n            (update_color W)\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n            (update_color W)\n            (update_color R)\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor columns of grids with a specific pattern of colors",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor each column of objects with the same colors for each row.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns to specified colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor columns to specific colors based on index.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to specific new colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects with their corresponding colors in each column, where each object takes the color of the new corresponding color in that column.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor the left column objects to match the middle column's colors and the middle column objects to match the right column's colors.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (column_equals (column_of this) 0)\n                (column_equals (column_of other) 1)\n            )\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n    (rule\n        (vars (this other))\n        (filter\n            (and\n                (column_equals (column_of this) 1)\n                (column_equals (column_of other) 2)\n            )\n        )\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor columns sequentially to new colors based on column index.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G)))\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))))"
        },
        {
            "nl_description": "Recolor all columns to the first color in sequence Y, X, F for the first column; F, Y, W for the second column; B, W, R for the third column; and C, G, F for the fourth column.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 3))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 4))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 5))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 6))\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 7))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 8))\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 9))\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 10))\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 11))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns by assigning the colors respectively corresponding to each column in the output grid patterns.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor objects by columns starting with colors Y, X, F, then with different sets for subsequent columns.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color G))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns of objects to new respective colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor columns one by one with respective colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    ))"
        },
        {
            "nl_description": "Recolor all objects in a row-wise pattern to the specified color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects with the same pattern as in their respective columns.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter (column_equals (column_of this) (column_of other)))\n        (apply\n            (update_color (color_of other))\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column of the grids independently",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (column_equals (column_of this) even)\n        )\n        (apply\n            (update_color (color_of this))\n        )\n    )\n    (rule\n        (vars (this other))\n        (filter\n            (column_equals (column_of this) odd)\n        )\n        (apply\n            (update_color (color_of this))\n        )\n    )\n)"
        },
        {
            "nl_description": "Change the color of all columns in the grid.",
            "code": "(do\n    (rule\n        (vars (this other))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this other))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this other))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to their corresponding positions' new colors based on a fixed mapping.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) G)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) B)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) R)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) C)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) X)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (color_equals (color_of this) Y)\n        )\n        (apply\n            (update_color G)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns with specific pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) even))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) odd))\n        (apply\n            (update_color\n                (color_of other)\n            )\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column to a different set of colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply (update_color F))\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects column-wise such that each individual column is recolored to a new color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column of cells with a new distinct color.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all columns individually in a sequentially repeating pattern.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 0))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 1))\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 0))\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 1))\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 2))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 0))\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 1))\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 2))\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 0))\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 1))\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 2))\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor each column sequentially with colors: first to Y, X, F; second to F, Y, W; third to B, W, R; fourth to C, G, F.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 3)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 4)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 5)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 6)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 7)\n        )\n        (apply\n            (update_color B)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 8)\n        )\n        (apply\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 9)\n        )\n        (apply\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 10)\n        )\n        (apply\n            (update_color C)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 11)\n        )\n        (apply\n            (update_color G)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter\n            (column_equals (column_of this) 12)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects to unique colors in a column-wise manner.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n            (update_color X)\n            (update_color F)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color F)\n            (update_color Y)\n            (update_color W)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color B)\n            (update_color W)\n            (update_color R)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color C)\n            (update_color G)\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all objects with specific color mappings",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) Y))\n        (apply (update_color G))\n    )\n)"
        },
        {
            "nl_description": "Change the colors of the columns of objects to predetermined colors.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 0)\n        )\n        (apply\n            (update_color Y)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 1)\n        )\n        (apply\n            (update_color X)\n        )\n    )\n    (rule\n        (vars (this))\n        (filter \n            (column_equals (column_of this) 2)\n        )\n        (apply\n            (update_color F)\n        )\n    )\n)"
        },
        {
            "nl_description": "Recolor all G to Y, all B to X, all R to F, all C to W, all F to R, all X to B, and all W to C.",
            "code": "(do\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) G))\n        (apply (update_color Y))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) B))\n        (apply (update_color X))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) R))\n        (apply (update_color F))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) C))\n        (apply (update_color W))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) F))\n        (apply (update_color R))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) X))\n        (apply (update_color B))\n    )\n    (rule\n        (vars (this))\n        (filter (color_equals (color_of this) W))\n        (apply (update_color C))\n    )\n)"
        }
    ]
}