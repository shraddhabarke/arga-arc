[
    {
        "response": "{\n    \"nl_description\": \"Move all objects to the position of the top-left 'B' object in their respective grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (color_equals (color_of other) B)\\n        )\\n        (apply\\n            (insert this (img_pts_of other) target)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches 't' in the current parser context, at line 8 col 21\n\n            (insert this (img_pts_of other) target)\n                    ^\nExpected one of: \n\t* OBJECT_ID\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all cells containing the letter 'O' with the color 'B', except those that are on the border of the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (not (or\\n                    (column_equals (column_of this) 0)\\n                    (column_equals (column_of this) -1)\\n                    (neighbor_of this other)\\n                ))\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '-' in the current parser context, at line 9 col 53\n\n        (column_equals (column_of this) -1)\n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all cells with color B in the input grid that were originally O.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (color_equals (color_of other) B)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor the inputs cells that are not empty and not border cells to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (not (color_equals (color_of this) O))\\n                (not (or (column_equals (column_of this) 0) (or (column_equals (column_of this) -1) (or (column_equals (column_of this) 1) (or (and (column_equals (column_of this) 13) (and (column_equals (column_of this) 14) (column_equals (column_of this) 15)))))))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '-' in the current parser context, at line 7 col 97\n\n 0) (or (column_equals (column_of this) -1) (or (column_equals (column_of this) \n                                        ^\nExpected one of: \n\t* COLUMN\n\t* LPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all empty cells (O) to color B, but only if they are neighbors to at least one non-empty cell.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (not (color_equals (color_of other) O))\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 8 col 17\n\n                (neighbor_of this other)\n                ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all non-border cells to color B\",\n    \"code\": \"(do (rule (vars (this)) (filter (and (not (and (column_equals (column_of this) 0) (column_equals (column_of this) 13))) (not (and (column_equals (column_of this) 0) (column_equals (column_of this) 0))) (not (and (column_equals (column_of this) 13) (column_equals (column_of this) 13))) (not (and (column_equals (column_of this) 13) (column_equals (column_of this) 0))) (not (column_equals (column_of this) 0)) (not (and (column_equals (column_of this) 1) (row_equals (row_of this) 0))) (not (row_equals (row_of this) 0)) (not (row_equals (row_of this) 8)) (not (row_equals (row_of this) 11)))) (apply (update_color B))))\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 1 col 203\n\n0) (column_equals (column_of this) 0))) (not (and (column_equals (column_of this\n                                        ^\nExpected one of: \n\t* RPAR\n"
    },
    {
        "response": "{\n    \"nl_description\": \"Recolor all objects to color B except for objects of color X, and recolor cells of color O adjacent to B to color B.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) X))\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) O)\\n                (neighbor_of this other)\\n                (color_equals (color_of other) B)\\n            )\\n        )\\n        (apply\\n            (update_color B)\\n        )\\n    )\\n)\"\n}",
        "error_type": "parse_error",
        "error_message": "No terminal matches '(' in the current parser context, at line 17 col 17\n\n                (color_equals (color_of other) B)\n                ^\nExpected one of: \n\t* RPAR\n"
    }
]