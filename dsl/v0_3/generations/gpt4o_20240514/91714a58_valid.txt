[
    "{\n    \"nl_description\": \"Remove all objects except those of color R and F\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (or\\n                (color_equals (color_of this) R)\\n                (color_equals (color_of this) F)\\n            )\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Keep only rows containing objects with color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the vertically aligned group of objects of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects from the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except one specified object color R\",\n    \"code\": \"(do\\n\\t(rule\\n\\t\\t(vars (this))\\n\\t\\t(filter\\n\\t\\t\\t(not (color_equals (color_of this) R))\\n\\t\\t)\\n\\t\\t(apply\\n\\t\\t\\t(update_color O)\\n\\t\\t)\\n\\t)\\n)\"\n}",
    "{\n    \"nl_description\": \"Keep only the objects of rows containing object of color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (noop)\\n        )    \\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the ones of size 3 and recolor the remaining objects to their original colors.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (size_equals (size_of this) 3))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects of color different than 'R' to color 'O'.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not\\n                (color_equals (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Clear all objects except those with fuchsia color\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) F))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those of color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except objects of color F.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) F))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Transform all objects to empty spaces\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the largest size objects containing color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not\\n                (and\\n                    (color_equals (color_of this) R)\\n                    (size_equals (size_of this) max)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except for those of size 8.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (size_equals (size_of this) 8))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those with color R and those with objects of color F, and keep only the objects of color F within the remaining objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (and\\n                    (color_equals (color_of this) F)\\n                    (neighbor_of this other)\\n                )\\n                (color_equals (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (update_color F)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Retain only the objects of color R and remove all other objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects in the grids except for objects of size 3 and color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (size_equals (size_of this) 3)\\n                (color_equals (color_of this) R)\\n            )\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not\\n                (and\\n                    (size_equals (size_of this) 3)\\n                    (color_equals (color_of this) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the ones with R color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects from the grid, except for the object of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the horizontal bar of objects of color R of size 6.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (not\\n                (and\\n                    (color_equals (color_of this) R)\\n                    (size_equals (size_of this) 6)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those that overlap with a specific area.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter (and (size_equals (size_of this) 3) (shape_equals (shape_of this) enclosed)))\\n        (apply (noop))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (not (and (size_equals (size_of this) 3) (shape_equals (shape_of this) enclosed))))\\n        (apply (update_color O))\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the ones with color R, keeping R objects unchanged.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects, except objects of size 3.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (size_equals (size_of this) 3))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the object composed of red pixels.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects that are not of size 3 and color red.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not\\n                (and\\n                    (size_equals (size_of this) 3)\\n                    (color_equals (color_of this) R)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the ones that have color R, and also the objects that are neighbors of such objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (color_equals (color_of this) R)\\n                (neighbor_of this other)\\n            )\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects from the grid, except for the objects of size 9.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (size_equals (size_of this) 9))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except for the ones of shape enclosed, and of size minimum\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (shape_equals (shape_of this) square)\\n                (size_equals (size_of this) min)\\n            )\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those with color R, and retain only those R objects with more than one cell.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (size_equals (size_of this) 1)\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Move all objects of color R, and then set their colors, if they are R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Recolor all objects to the background color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the objects made up of color R\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (color_equals (color_of this) R)\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the horizontal line of objects of color R of size 6 and the vertical line of objects of color F of size 9.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (size_equals (size_of this) 6)\\n            )\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) F)\\n                (size_equals (size_of this) 9)\\n            )\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects from the grid.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter)\\n        (apply\\n            (move_node_max up)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Clear all objects except lines of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those of size 3.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (size_equals (size_of this) 3))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Erase all objects except for vertical bars of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (and\\n                (color_equals (color_of this) R)\\n                (width_equals (width_of this) 1)\\n            )\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (and\\n                (color_equals (color_of this) R)\\n                (width_equals (width_of this) 1)\\n            ))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the objects of color R of size 6. Do nothing to those objects.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not\\n                (and\\n                    (color_equals (color_of this) R)\\n                    (size_equals (size_of this) 6)\\n                )\\n            )\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those shaped as a horizontal line.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (shape_equals (shape_of this) enclosed)\\n        )\\n        (apply\\n            (noop)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except those of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except objects of color R.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this))\\n        (filter\\n            (not (color_equals (color_of this) R))\\n        )\\n        (apply\\n            (update_color O)\\n        )\\n    )\\n)\"\n}",
    "{\n    \"nl_description\": \"Remove all objects except the object with color R and the objects having three neighbors with the same color.\",\n    \"code\": \"(do\\n    (rule\\n        (vars (this other))\\n        (filter\\n            (or\\n                (color_equals (color_of this) R)\\n                (and\\n                    (neighbor_of this other)\\n                    (and\\n                        (color_equals (color_of other) (color_of this))\\n                        (degree_equals (degree_of this) 3)\\n                    )\\n                )\\n            )\\n        )\\n        (apply (noop))\\n    )\\n    (rule\\n        (vars (this))\\n        (filter (not (color_equals (color_of this) R)))\\n        (apply (update_color O))\\n    )\\n)\"\n}"
]