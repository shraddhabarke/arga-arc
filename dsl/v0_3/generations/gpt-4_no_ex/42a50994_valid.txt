(do
 (rule (filter (filter_by_color C)) (apply (extend_node D false)))
 (rule (filter (filter_by_color F)) (apply (extend_node D false)))
 (rule (filter (filter_by_color X)) (apply (extend_node D false)))
 (rule (filter (filter_by_color Y)) (apply (extend_node D false)))
)


(do
 (rule (filter (filter_by_color C)) (apply (move_node_max U)))
 (rule (filter (filter_by_color F)) (apply (move_node_max U)))
 (rule (filter (filter_by_color X)) (apply (move_node_max U)))
 (rule (filter (filter_by_color Y)) (apply (move_node_max U)))
)


(do
 (rule (filter (filter_by_color C))
       (apply (update_color O)))
 (rule (filter (filter_by_color F))
       (apply (update_color O)))
 (rule (filter (filter_by_color X))
       (apply (update_color O)))
 (rule (filter (filter_by_color Y))
       (apply (update_color O)))
)


(do
 (rule (filter (filter_by_neighbor_color C)) (apply (update_color O)))
 (rule (filter (filter_by_neighbor_color F)) (apply (update_color O)))
 (rule (filter (filter_by_neighbor_color X)) (apply (update_color O)))
 (rule (filter (filter_by_neighbor_color Y)) (apply (update_color O))))


(do
 (rule (filter (filter_by_color C)) (apply (update_color O)))
 (rule (filter (filter_by_color F)) (apply (update_color O)))
 (rule (filter (filter_by_color X)) (apply (update_color O)))
 (rule (filter (filter_by_color Y)) (apply (update_color O)))
)


(do
 (rule (filter (filter_by_color C)) (apply (move_node U)))
 (rule (filter (filter_by_color F)) (apply (move_node U)))
 (rule (filter (filter_by_color X)) (apply (move_node U)))
 (rule (filter (filter_by_color Y)) (apply (move_node U)))
)


(do
  (rule
    (filter (filter_by_color C))
    (apply (update_color O)))
  (rule
    (filter (filter_by_color F))
    (apply (update_color O)))
  (rule
    (filter (filter_by_color X))
    (apply (update_color O)))
  (rule
    (filter (filter_by_color Y))
    (apply (noop)))
)
