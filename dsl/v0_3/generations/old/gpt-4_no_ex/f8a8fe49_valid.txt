(do
  (rule (filter (filter_by_color R)) 
        (apply (update_color X)))
  (rule (filter (filter_by_color X)) 
        (apply (update_color R)))
)


(do
 (rule (filter (filter_by_color R))
       (apply (add_border X)))
 (rule (filter (filter_by_color X))
       (apply (noop)))
)


(do
 (rule (filter (filter_by_color R)) (apply (mirror var)))
 (rule (filter (filter_by_color X)) (apply (mirror var)))
)


(do
  (rule
    (filter
      (filter_by_color O))
    (apply
      (noop)))
  (rule
    (filter
      (filter_by_color R))
    (apply
      (noop)))
  (rule
    (filter
      (filter_by_color X))
    (apply
      (mirror var)
      (insert var top target)))
)


(do
 (rule (filter (filter_by_color R))
       (apply (extend_node U false)
              (extend_node D false)))
 (rule (filter (filter_by_color X))
       (apply (update_color O)))
)


(do
  (rule (filter (filter_by_color R))
        (apply (noop)))
  (rule (filter (filter_by_color X))
        (apply (mirror var)))
)


(do
  (rule
    (filter
      (filter_by_color O)
    )
    (apply
      (noop)
    )
  )
  (rule
    (filter
      (and
        (filter_by_color R)
        (filter_by_neighbor_color X)
      )
    )
    (apply
      (update_color X)
    )
  )
)


(do
    (rule (filter (filter_by_color R)) (apply (fill_rectangle R true)))
    (rule (filter (filter_by_color X)) (apply (extend_node U true) (extend_node D true) (extend_node L true) (extend_node R true)))
)


(do
    (rule 
        (filter (filter_by_color R)) 
        (apply 
            (update_color X)))
    (rule 
        (filter 
            (and 
                (filter_by_color O)
                (filter_by_neighbor_color R)))
        (apply 
            (update_color X)))
)
