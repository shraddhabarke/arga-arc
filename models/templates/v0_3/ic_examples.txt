## DEMONSTRATION TASK 1

### INPUT
PAIR 1
INPUT GRID:
O O O O O O O O
O O O O O R O O
O R O O O R O R
O R R O O R O O
O O O O O O O O
O R R O O O O O
O R R O R R O O
O O O O O O O O
OUTPUT GRID:
O O O O O O O O
O O O O O Y O O
O Y O O O Y O Y
O Y Y O O Y O O
O O O O O O O O
O Y Y O O O O O
O Y Y O Y Y O O
O O O O O O O O

PAIR 2
INPUT GRID:
O O O O O O O O O O
O O O O R O O O O O
O G O O R O O W O O
O O G O O O W W O O
O O G O O O O O O O
O O O O X O O O O O
O O O O O O F F F O
O B O O O O O O O O
O B B B B O O C C O
O O O O O O O C O O
OUTPUT GRID:
O O O O O O O O O O
O O O O Y O O O O O
O Y O O Y O O Y O O
O O Y O O O Y Y O O
O O Y O O O O O O O
O O O O Y O O O O O
O O O O O O Y Y Y O
O Y O O O O O O O O
O Y Y Y Y O O Y Y O
O O O O O O O Y O O

### EXPECTED OUTPUT
{
    "nl_description": "Recolor all objects to color Y",
    "code": "(do\n    (rule\n        (vars (this))\n        (filter)\n        (apply\n            (update_color Y)\n        )\n    )\n)"
}


## DEMONSTRATION TASK 2

### INPUT
PAIR 1
INPUT GRID:
O O O O O O O O
O F F O O O R O
O F F O O O O O
O O O O O O O O
O O O O O O O O
O O O O O O O O
O O A O O X X O
O O O O O O O O
OUTPUT GRID:
O O O O O O O O
O F F R R R R O
O F F O O O O O
O O A O O O O O
O O A O O O O O
O O A O O O O O
O O A O O X X O
O O O O O O O O

PAIR 2
INPUT GRID:
O O O O O O O O O O
O O O Y O G G G G O
O O F O O G G G G O
O O O O O O O O O O
O O O O O O O O O O
O O O O O O O O O O
O C C C O O O O O O
O C C C O O O O A O
O C C C O O O X O O
O O O O O O O O O O
OUTPUT GRID:
O O O O O O O O O O
O O O Y O G G G G O
O O F Y O G G G G O
O O F Y O O O O O O
O O F Y O O O O O O
O O F Y O O O O O O
O C C C O O O O O O
O C C C A A A A A O
O C C C X X X X O O
O O O O O O O O O O

### EXPECTED OUTPUT
{
    "nl_description": "Extend all the objects of size 1 toward the object of maximum size, without overlapping.",
    "code": "(do\n    (rule\n        (vars (this big))\n        (filter\n            (and\n                (size_equals (size_of this) 1)\n                (and\n                    (neighbor_of this big)\n                    (size_equals (size_of big) max)\n                )\n            )\n        )\n        (apply\n            (extend_node (direction_of big) false)\n        )    \n    )\n)"
}


## DEMONSTRATION TASK 3

### INPUT
PAIR 1
INPUT GRID:
O O O O O O O O O O
O O O O O O O G O O
O O G O O O O G O O
O O G G O O O G G O
O O O O O O O O O O
O G G O O O O O O O
O G G O O G G G O O
O O O O O O O O O O
O O G G O O O G O O
O O O O O O O O O O
OUTPUT GRID:
O O O O O O O O O O
O O B O O O O G O O
O O B B O O O G O O
O O O O O O O G G O
O O O O O O O O O O
O G G O O B B B O O
O G G O O O O O O O
O O O O O O O O O O
O O G G O O O G O O
O O O O O O O O O O

PAIR 2
INPUT GRID:
O O O O O O O O O O O O O O O O
O O O O O O O O O O O O O G O O
O B B O O O O O O C C C O G G O
O O O O O F O O O O O O O O O O
O O O O O F O O O O R R O O O O
O O O O O F O O O O R R O O O O
O O O O O O O O W O O O O O O O
O O O A O O O W W O O O X O O O
O O O A A O O W W O O O X X X O
O O O O O O O O O O O O O O O O
O O O O O O O O O O Y Y O O O O
O O O O B O O O O O O O O O O O
O Y O O B O O O G O O O O F F O
O Y O O O O O O G O O O O F F O
O Y Y Y O O O O G O O O O O O O
O O O O O O O O O O O O O O O O
OUTPUT GRID:
O O O O O O O O O O O O O B O O
O O O O O O O O O B B B O B B O
O B B O O B O O O O O O O O O O
O O O O O B O O O O O O O O O O
O O O O O B O O O O R R O O O O
O O O O O O O O O O R R O O O O
O O O B O O O O W O O O O O O O
O O O B B O O W W O O O X O O O
O O O O O O O W W O O O X X X O
O O O O O O O O O O O O O O O O
O O O O O O O O O O Y Y O O O O
O O O O B O O O B O O O O O O O
O Y O O B O O O B O O O O F F O
O Y O O O O O O B O O O O F F O
O Y Y Y O O O O O O O O O O O O
O O O O O O O O O O O O O O O O

### EXPECTED OUTPUT
{
    "nl_description": "Move all objects of size 3 one step up, and then recolor them to color B.",
    "code": "(do\n    (rule\n        (vars (this))\n        (filter\n            (size_equals (size_of this) 3)\n        )\n        (apply\n            (move_node up)\n            (update_color B)\n        )\n    )\n)"
}


## DEMONSTRATION TASK 4

### INPUT
PAIR 1
INPUT GRID:
O O O O R O O O A O
O B O O O O B O O O
O O O O O O O O O O
O O O O X X X O O O
O O O O X X X O O F
W O O O O O O O O O
O O F O O O Y O O O
O O O O O O O O O O
O O O O G O O O W O
O O O O O O O O O O
OUTPUT GRID:
O O O O O O O O A O
O B O O O O O O O O
O O O O R O B O O O
O O O O X X X O O O
O O O O X X X F O O
W O O O G O Y O O O
O O F O O O O O O O
O O O O O O O O O O
O O O O O O O O W O
O O O O O O O O O O

PAIR 2
INPUT GRID:
O O O F O O O R O O O O
O O O O O O O O O Y O O
O O O O O B O O O O O O
O O R O O O O O G O O O
B O O O O G O O O O O A
O O O O O O R O O O W O
O O O O O O O O C O O O
G O X X O O O O O O O R
O O X X O O O O O O Y O
O O X X O O A O O O O O
O F X X O O O O O O O O
O O O O O Y O O O O O O
OUTPUT GRID:
O O O O O O O R O O O O
O O O O O O O O O Y O O
O O O O O B O O O O O O
O O O O O O O O G O O O
B O O O O G O O O O O A
O O O O O O R O O O W O
O O R F O O O O C O O O
O G X X R O O O O O O O
O O X X Y O O O O O O O
O O X X A O O O O O O O
O F X X O O O O O O O O
O O O O O Y O O O O O O

PAIR 3
INPUT GRID:
O G O O O O O O
O O O A O O A O
W O O O W O O O
O O O O O O O B
O R O X O F O O
O O O O O O O O
O G O O F O O G
O O B O O A O O
OUTPUT GRID:
O G O O O O O O
O O O O O O A O
W O O O W O O O
O O O A O O O B
O O R X F O O O
O O O O O O O O
O G O O F O O G
O O B O O A O O

### EXPECTED OUTPUT
{
    "nl_description": "Move all objects of color different than X, toward the object of color X, if they are neighbors of it.",
    "code": "(do\n    (rule\n        (vars (this gr))\n        (filter\n            (and\n                (not (color_equals (color_of this) X))\n                (and\n                    (neighbor_of this gr)\n                    (color_equals (color_of gr) X)\n                )\n            )\n        )\n        (apply\n            (move_node_max (direction_of gr))\n        )\n    )\n)"
}


