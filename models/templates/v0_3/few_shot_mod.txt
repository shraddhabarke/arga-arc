Given the following input-output grids, your task is to come up with a program in the following JSON format. 
The program should consist of a sequence of filter-transformation pairs that satisfy these transformations 
with as few rules as possible. Each rule should be chosen from a provided DSL. DO NOT GET BIASED BY FEW-SHOT EXAMPLES.

INPUT-GRID:
X X X B G O
O B G O X X
B G X O B G
O O O X G B
X O B G O O
X B G B G O

OUTPUT-GRID:
Y Y Y B G O
O B G O X X
B G X O B G
O O O X G B
X O B G O O
X B G B G O

INPUT-GRID:
O O O B G X O
O O O O X X O
B G O O B G O
O O O O G B O
O O B G O X O
O B O B G O O
O O X X X O O

OUTPUT-GRID:
O O O B G Y O
O O O O Y Y O
B G O O B G O
O O O O G B O
O O B G O X O
O B O B G O O
O O Y Y Y O O

PROGRAM:
```
(do
    (rule
        (filter
            (and
                (filter_by_color X)
                (filter_by_size 3)
            )
        )
        (apply
            (update_color Y)
        )
    )
)
```

INPUT-GRID:
X O O O G Y O
O O O O X X O
O G G B O G O
O O O X G O O
O B B G O X O
O O O O G O O
O O G Y O O X

OUTPUT-GRID:
X O O R G Y O
O O O O X X O
O G G O O G O
O R R X G O O
O O O G O Y O
O O O O G O O
O O G Y O O X

INPUT-GRID:
O O O
B X X
O G O

OUTPUT-GRID:
R O O
O X X
O G O

PROGRAM:
```
(do
    (rule
        (filter
            (filter_by_color B)
        )
        (apply
            [(move_node_max UP), (update_color R)]
        )
    )
)
```